{"version":3,"file":"static/js/6732.2ee08b83.chunk.js","mappings":"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","sources":["components/modal/ApproveRejectModal.js","components/reuseableComponents/CustomCards.js","components/payrollAdmin/payrollSetting/salaryComponent/EarningsTable.js","components/payrollAdmin/payrollSetting/salaryComponent/DeductionsTable.js","components/payrollAdmin/payrollSetting/salaryComponent/SalaryComponent.js","components/payrollAdmin/payrollSetting/salaryComponent/EarningRulesTable.js","components/payrollAdmin/payrollSetting/salaryComponent/EarningRulesFormula.js","components/commanComponent/CustomAlert.js","components/payrollAdmin/payrollSetting/salaryComponent/EarningRules.js","components/payrollAdmin/earningDeductionTypes/earningDeductionType/ViewsEarningTypes.js","components/payrollAdmin/payrollSetting/salaryComponent/AddUpdateEarnings.js","components/payrollAdmin/payrollSetting/paySchedule/AddUpdatePaySchedule.js","components/payrollAdmin/payrollSetting/paySchedule/PaySchedule.js","components/payrollAdmin/payrollSetting/salaryComponent/AddPostTaxDeduction.js","components/payrollAdmin/payrollSetting/salaryComponent/AddPreTaxDeduction.js","components/payrollAdmin/payrollSetting/taxSlab/TaxSlab.js","components/payrollAdmin/payrollSetting/taxSlab/AddUpdateTaxSlab.js","components/payrollAdmin/payrollSetting/PayrollSetting.js"],"sourcesContent":["import React from 'react'\r\nimport Lottieplayer from '../commanComponent/Lottieplayer'\r\nimport backup from '../../../src/images/Backup.json'\r\nimport { CustomButton } from '../globalComponents'\r\nimport PropTypes from 'prop-types'\r\nimport { useCustomTranslation } from '../../translation'\r\n\r\n/**\r\n * ApproveRejectModal component.\r\n * @param {string} [title=\"Are You Sure?\"] - Title of the modal (optional, defaults to \"Are You Sure?\")\r\n * @param {string} [desc] - Description text (optional).\r\n * @param {function} onApproveReject - Callback function for handling approve/reject actions (required).\r\n * @param {boolean} isShow - Boolean flag to show or hide the modal (required).\r\n * @param {boolean} [btnRightLoading=false] - Boolean flag to show loading state for the right button (optional).\r\n * @param {string} [btnTextLeft=\"Cancel\"] - Custom text for the left button (optional).\r\n * @param {string} [btnTextRight=\"Confirm\"] - Custom text for the right button (optional).\r\n * @returns {void}\r\n */\r\nconst ApproveRejectModal = (\r\n  {  \r\n    title ,               \r\n    desc = \"\",                           \r\n    onApproveReject,                      \r\n    isShow,                               \r\n    btnLeftLoading = false,               \r\n    btnRightLoading = false,              \r\n    btnTextLeft ,               \r\n    btnTextRight     \r\n}\r\n) => {\r\n    const {t} =useCustomTranslation()\r\n    return (\r\n        <>\r\n            <div className=\"modal fade attendanceViewodal\" id=\"sureMdl\" style={{ display: isShow ? \"unset !important\" : \"none !important\", opacity: isShow ? \"unset\" : \"0\" }}>\r\n                <div className=\"modal-dialog modal-dialog-centered\">\r\n                    <div className=\"modal-content rounded-1 border-0\">\r\n                        <div className=\"modal-body \">\r\n                            <div className=\"text-center suremodalCon\">\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <Lottieplayer lottieUrl={backup} Lottiestyle={{ width: \"90px\", height: \"90px\" }} />\r\n                                </div>\r\n                                <h6 className=\"fw-semibold mb-2\">{title?title:t(\"alerts.deletePopup.title\")}</h6>\r\n                                <p className=\"mb-5 px-4 text-center\">{desc ? desc : \"\"}\r\n                                </p>\r\n                                <div className=\"d-flex justify-content-center gap-3\">\r\n                                    <CustomButton\r\n                                        classNames={\"btn btn-danger\"}\r\n                                        isLoading={btnLeftLoading}\r\n                                        text={btnTextLeft?btnTextLeft:t(\"btns.reject\") }\r\n                                        handleClick={() => onApproveReject(false)}\r\n                                    />\r\n                                    <CustomButton\r\n                                        classNames={\"btn btn-success\"}\r\n                                        isLoading={btnRightLoading}\r\n                                        text={btnTextRight?btnTextRight:t(\"btns.confirm\")}\r\n                                        handleClick={() => onApproveReject(true)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isShow && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n// Add PropTypes validation\r\nApproveRejectModal.propTypes = {\r\n    title: PropTypes.string,                     \r\n    desc: PropTypes.string,                       \r\n    onApproveReject: PropTypes.func.isRequired,   \r\n    isShow: PropTypes.bool.isRequired,            \r\n    btnRightLoading: PropTypes.bool,                         \r\n    btnTextLeft: PropTypes.string,                \r\n    btnTextRight: PropTypes.string,   \r\n};\r\n\r\nexport default ApproveRejectModal\r\n","import React from 'react'\r\n\r\n\r\nconst CustomCards = ({cardData}) => {\r\n\r\n    const renderedCards = () => {\r\n        return (\r\n            cardData && cardData?.length>0 && cardData.map((card)=>(\r\n                <div className=\"col-md-2 px-md-2 mb-3\"\r\n                key={card?.id}\r\n                onClick={()=> card?.onClickFunc(card?.id)}\r\n                >\r\n                <span\r\n                    className=\"totalBx h-100\"\r\n                >\r\n                    <figure>\r\n                        <img src={card?.imgUrl} alt=\"\" width={50} />\r\n                    </figure>\r\n                    <h3 className=\"fw-bolder my-0\">{card?.name}</h3>\r\n                    <img\r\n                        src=\"images/firstlineBlue.svg\"\r\n                        className=\"cornerLine\"\r\n                        alt=\"\"\r\n                        width={95}\r\n                    />\r\n                </span>\r\n            </div>\r\n             ) ) \r\n           \r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"cardBox leaveAppli h-100 mb-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 selectModal position-relative z-1\">\r\n                        <div className=\"row px-md-1 \">\r\n                            {renderedCards()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomCards\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { getBadgeColor } from '../../../../utils/common';\r\n\r\nconst EarningsTable = (props) => {\r\n    const { currentPage, setCurrentPage, earningData,handleToggleModals } = props\r\n\r\n    const earningField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'payslip_name', label: 'Payslip Name' },\r\n        { key: 'name', label: 'Name' },\r\n        { key: 'value', label: 'Value' },\r\n        { key: 'value_in', label: 'Calculation Type' },\r\n        { key: 'is_active', label: 'Status' },\r\n        { key: 'action', label: 'Action' }\r\n    ];\r\n    const earningScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        is_active: item => (\r\n            <span\r\n                className={`badge ${item.is_active ? getBadgeColor(\"active\") : getBadgeColor(\"inactive\")}`}\r\n            >\r\n                {item.is_active ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n        ),\r\n\r\n\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                        onClick={() =>handleToggleModals(\"add_earnings\",item)}\r\n                        >Update</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }), [earningData, currentPage]);\r\n    return (\r\n        <div>\r\n            <CustomTable\r\n                data={earningData?.data}\r\n                fields={earningField}\r\n                // isLoading={}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={earningData?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={earningScopedSlots}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EarningsTable\r\n","import React, { useMemo } from 'react'\r\nimport { getBadgeColor } from '../../../../utils/common';\r\nimport { CustomTable } from '../../../reuseableComponents';\r\n\r\nconst DeductionsTable = (props) => {\r\n    const { currentPage, setCurrentPage, deductionsData,handleToggleModals } = props\r\n\r\n\r\n    const deductionField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'payslip_name', label: 'Payslip Name' },\r\n        { key: 'name', label: 'Name' },\r\n        { key: 'value', label: 'Value' },\r\n        { key: 'value_in', label: 'Calculation Type' },\r\n        { key: 'is_active', label: 'Status' },\r\n        { key: 'action', label: 'Action' }\r\n    ];\r\n    const deductionScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        include_in_ctc: item => (\r\n            <span\r\n                className={`badge ${item.include_in_ctc ? getBadgeColor(\"active\") : getBadgeColor(\"inactive\")}`}\r\n            >\r\n                {item.include_in_ctc ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n        ),\r\n        is_active: item => (\r\n            <span\r\n                className={`badge ${item.is_active ? getBadgeColor(\"active\") : getBadgeColor(\"inactive\")}`}\r\n            >\r\n                {item.is_active ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n        ),\r\n\r\n\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                        onClick={() => handleToggleModals(\"deduction\",item)}\r\n                        >Update</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }), [deductionsData, currentPage]);\r\n    return (\r\n        <>\r\n            <CustomTable\r\n                data={deductionsData?.data}\r\n                fields={deductionField}\r\n                // isLoading={}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={deductionsData?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={deductionScopedSlots}\r\n            />\r\n            {/* <div className=\"requestdata\">\r\n                <div class=\"d-flex align-items-center mb-4\">\r\n                    <span class=\"fw-bold fs-6 text-black\">Deductions</span>\r\n                    <ul class=\"nav nav-tabs leaveTabs ms-3\">\r\n                        <li class=\"nav-item\">\r\n                            <button class=\"nav-link active\" data-bs-toggle=\"tab\" data-bs-target=\"#pending\"\r\n                                // onClick={() => onHandleAppliedStatus(\"attendance_correction\", \"pending\")}\r\n                                type=\"button\">\r\n                                    Pre-Tax Deduction\r\n                              \r\n                            </button>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#pending\"\r\n                                type=\"button\"\r\n                                // onClick={() => onHandleAppliedStatus(\"attendance_correction\", \"approve\")}\r\n                            >\r\n                             Post-Tax Deduction   \r\n                            </button>\r\n                        </li>\r\n                    \r\n                    </ul>\r\n                </div>\r\n                <div className=\"tab-content\">\r\n                    <div className=\"tab-pane fade active show\" id=\"pending\">\r\n\r\n                        <CustomTable\r\n                            data={deductionsData?.data}\r\n                            fields={deductionField}\r\n                            // isLoading={}\r\n                            pagination={true}\r\n                            currentPage={currentPage}\r\n                            setCurrentPage={setCurrentPage}\r\n                            totalPages={deductionsData?.totalPages}\r\n                            // tableName={\"\"}\r\n                            // onSearch={handleSearch}\r\n                            isHeader={false}\r\n                            tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                            scopedSlots={deductionScopedSlots}\r\n                        />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeductionsTable\r\n\r\n","import React from 'react'\r\nimport { CustomTabs } from '../../../reuseableComponents';\r\nimport EarningsTable from './EarningsTable';\r\nimport DeductionsTable from './DeductionsTable';\r\n\r\nconst SalaryComponent = (props) => {\r\n    const {handleToggleModals,earningData,deductionsData}=props\r\n    const tableTabsRequest = [\r\n        { name: \"Earnings\", onClickFun: (id) => getSalaryData(id), id: \"earnings\" },\r\n        { name: \"Deductions\", onClickFun: (id) => getSalaryData(id), id: \"deductions\" },\r\n    ];\r\n    const getSalaryData = (id) => {\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"cardBox myRequest mb-3 employeeHistory\">\r\n                <div className=\"cardHead  justify-content-between\">\r\n                    <div className='d-flex'>\r\n                        <img src=\"/images/myrequest-icon.svg\" alt=\"\" width=\"35\" />\r\n                        <h3 className=\"ms-2 mt-2\">Salary Component</h3>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"dropdown payrollSetting\">\r\n                            <button\r\n                                className=\"btn btn-primary\"\r\n                                type=\"button\"\r\n                                data-bs-toggle=\"dropdown\"\r\n                                aria-expanded=\"true\"\r\n                            >\r\n                                Add Component\r\n                            </button>\r\n                            <ul\r\n                                className=\"dropdown-menu dropdownLeft\"\r\n                                data-popper-placement=\"top-end\"\r\n                      \r\n                            >\r\n                                <li className=\"dropdown-item\"\r\n                                onClick={()=>handleToggleModals(\"add_earnings\")}\r\n                                >\r\n                                    <span>Add Earnings</span>\r\n                                </li>\r\n                                <li className=\"dropdown-item\"\r\n                                onClick={()=>handleToggleModals(\"deduction\")}\r\n                                >\r\n                                    <span>Deduction</span>\r\n                                </li>\r\n                                {/* <li className=\"dropdown-item\"\r\n                                onClick={()=>handleToggleModals(\"post_tax_deduction\")}\r\n                                >\r\n                                    <span>Post-Tax Deduction</span>\r\n                                </li> */}\r\n                                {/* <li className=\"dropdown-item\"\r\n                                onClick={()=>handleToggleModals(\"pre_tax_deduction\")}\r\n                                >\r\n                                    <span>Pre-Tax Deduction</span>\r\n                                </li> */}\r\n                            </ul>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <CustomTabs tabs={tableTabsRequest} type=\"employeeHistory\" />\r\n                <div className=\"tab-content mykpiMain\">\r\n                    <div className=\"tab-pane fade active show\" id=\"earnings\">\r\n                        <EarningsTable\r\n                        earningData={earningData}\r\n                        handleToggleModals={handleToggleModals}\r\n                        />\r\n                    </div>\r\n                    <div className=\"tab-pane fade\" id=\"deductions\">\r\n                        <DeductionsTable\r\n                        deductionsData={deductionsData}\r\n                        handleToggleModals={handleToggleModals}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalaryComponent\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { Icon } from '../../../commanComponent';\r\n\r\nconst EarningRulesTable = ({ earningRuleData, deleteEarningRule,editEarningRule, rules}) => {\r\n\r\n    const earningRuleField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'from', label: 'From' },\r\n        { key: 'to', label: 'to' },\r\n        { key: \"amount\", label: \"Amount/Formula\" },\r\n        { key: 'action', label: 'Action' }\r\n    ];\r\n    const earningRuleScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        action: (item, index) => (\r\n            <div >\r\n                {rules && rules.length >0 &&<span\r\n                    onClick={() => editEarningRule(item,index)}\r\n                    className='border text-white bg-primary p-2 rounded' \r\n                    \r\n                    style={{ cursor: \"pointer\" }}>\r\n\r\n                    <Icon className={\"fa fa-edit\"} />\r\n                </span>}\r\n                <span\r\n                    onClick={() => deleteEarningRule(index)}\r\n                    className='border text-white bg-danger p-2 rounded' style={{ cursor: \"pointer\" }}>\r\n\r\n                    <Icon className={\"fa fa-trash\"} />\r\n                </span>\r\n\r\n            </div>\r\n        )\r\n    }), [earningRuleData]);\r\n    return (\r\n        <div>\r\n            {/* <CustomStrong text={\"Earning Rules\"} className=\"text-primary\" /> */}\r\n            <CustomTable\r\n                data={earningRuleData}\r\n                fields={earningRuleField}\r\n                totalPages={earningRuleData?.totalPages}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\", border: \"1px solid #F5F5F5\" }}\r\n                scopedSlots={earningRuleScopedSlots}\r\n            />\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EarningRulesTable\r\n","import React, { useState } from 'react'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CustomError, Label, Textarea } from '../../../commanComponent'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { CustomButton } from '../../../globalComponents'\r\n\r\nconst EarningRulesFormula = (props) => {\r\n        const dispatch = useDispatch()\r\n         const { \r\n            getAllEarningTypeRes,\r\n          } = useSelector(state => state.payroll)\r\n        const { toggleEarningRulesFormula, allLeaveConstantData, setEarningRulesData } = props\r\n        const { t } = useCustomTranslation()\r\n        const [earningRules, setEarningRules] = useState({\r\n            brackets: '',\r\n            earningType: '',\r\n            operators: ''\r\n        })\r\n        const [validDescription, setValidDescription] = useState('')\r\n        const [isFillDesc, setIsFillDesc] = useState(false)\r\n    \r\n        const handleFromChange = (e, fieldName) => {\r\n            const name = fieldName\r\n            const value = e;\r\n    \r\n            setEarningRules(prevState => {\r\n                const updatedState = {\r\n                    ...prevState,\r\n                    [name]: value,\r\n                };\r\n                return updatedState;\r\n            });\r\n            setIsFillDesc(false)\r\n        };\r\n        const onAddFormulaField = () => {\r\n            const { brackets, earningType, operators } = earningRules\r\n            let addFormulaFields =\r\n                (brackets?.value || '') +\r\n                (earningType?.value || '') +\r\n                (operators?.value || '');\r\n    \r\n            setValidDescription((prev) => prev + addFormulaFields);\r\n            setEarningRules({\r\n                brackets: '',\r\n                earningType: '',\r\n                operators: ''\r\n            })\r\n        }\r\n    \r\n        const checkEarningRulesFormula = () => {\r\n            if (validDescription) {\r\n                setIsFillDesc(false)\r\n                const payload = {\r\n                    formula: validDescription\r\n                }\r\n                // dispatch(leaveAction.checkLeaveEarningRulesRequest(payload))\r\n            } else {\r\n                setIsFillDesc(true)\r\n            }\r\n        }\r\n        const saveEarningRules = () => {\r\n            setEarningRulesData((pre) => ({\r\n                ...pre,\r\n                [\"amount\"]: validDescription\r\n            }))\r\n        }\r\n\r\n    \r\n  return (\r\n    <div className='border p-2' style={{ backgroundColor: \"#DCDCDC\" }}>\r\n            <div className='p-3' style={{ backgroundColor: \"white\" }}>\r\n                <div className=\"header ps-2 d-flex justify-content-between\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{t(\"headings.amountFormula\")}</h5>\r\n                    <button type=\"button\" className=\"btn-close\" onClick={() => toggleEarningRulesFormula()}></button>\r\n                </div>\r\n                <hr className='m-1' />\r\n                <div className=\"body mt-2\">\r\n                    <div className=\"formPanel\">\r\n                        <div className='row'>\r\n                            <div className=\"col-md-3 form-group mb-3\">\r\n                                <Label text={t(\"labels.brackets\")}\r\n                                />\r\n                                <CustomSelect\r\n                                    data={allLeaveConstantData && allLeaveConstantData?.brackets}\r\n                                    placeholder={t(\"placeholders.select\")}\r\n                                    value={earningRules?.brackets || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"brackets\")}\r\n                                    name=\"brackets\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-3 form-group mb-3\">\r\n                                <Label text={t(\"labels.earningType\")}\r\n                                />\r\n                                <CustomSelect\r\n                                    data={getAllEarningTypeRes && getAllEarningTypeRes?.data ||[]}\r\n                                    placeholder={t(\"placeholders.earningType\")}\r\n                                    value={earningRules?.earningType || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"earningType\")}\r\n                                    name=\"earningType\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-3 form-group mb-3\">\r\n                                <Label text={t(\"labels.operators\")}\r\n                                />\r\n                                <CustomSelect\r\n                                    data={allLeaveConstantData && allLeaveConstantData?.operators}\r\n                                    placeholder={t(\"placeholders.select\")}\r\n                                    value={earningRules?.operators || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"operators\")}\r\n                                    name=\"operators\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-3 form-group mb-3\">\r\n                                <CustomButton\r\n                                    text={t(\"btns.add\")}\r\n                                    classNames={\"btn btn-org-gradient  mt-4\"}\r\n                                    handleClick={() => onAddFormulaField()}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className=\"col-md-9 form-group mb-3\">\r\n                                <Textarea\r\n                                    value={validDescription}\r\n                                    placeholder={t(\"placeholders.leaveExpression\")}\r\n                                    onChange={(e) => setValidDescription(e.target.value)}\r\n                                />\r\n                                {isFillDesc && (\r\n                                    <CustomError text={\"Place add formula to validate\"} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className=\"col-md-9  mb-3 d-flex justify-content-end\" >\r\n                                <CustomButton\r\n                                    text={t(\"btns.validate\")}\r\n                                    classNames={\"btn btn-success gradientBg \"}\r\n                                    // handleClick={() => checkEarningRulesFormula()}\r\n                                    // isLoading={checkLeaveEarningRulesPending}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={t(\"btns.save\")}\r\n                            classNames={\"btn btn-primary mt-2\"}\r\n                            handleClick={() => saveEarningRules()}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default EarningRulesFormula\r\n","import React from 'react'\r\n\r\nconst CustomAlert = (props) => {\r\n    const {alertLabel,text,className='',style ={}}=props\r\n    return (\r\n        <div className={`alert ${className ||\"alert-warning\"}`} style={style||{}} role=\"alert\">\r\n            <strong>{alertLabel}</strong>{text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomAlert\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { CustomStrong, Input } from '../../../commanComponent'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport EarningRulesTable from './EarningRulesTable'\r\nimport EarningRulesFormula from './EarningRulesFormula'\r\nimport CustomAlert from '../../../commanComponent/CustomAlert'\r\n\r\nconst EarningRules = (props) => {\r\n    const { allLeaveConstantData, setRules, rules } = props\r\n    const { t } = useCustomTranslation()\r\n    const [errors, setErrors] = useState('')\r\n    const [isOpenERF, setIsOpenERF] = useState('')\r\n    const [earningRuleData, setEarningRuleData] = useState([])\r\n    const [selectedIndex, setSelectedIndex] = useState('')\r\n    const [earningRules, setEarningRules] = useState({\r\n        from: \"\",\r\n        to: '',\r\n        amount: \"\"\r\n    })\r\n\r\n\r\n    const handleFromChange = (e, fieldName, index) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n\r\n        setEarningRules(prevState => {\r\n            let updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n\r\n        // Clear error for the specific field being changed\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n\r\n    };\r\n    const deleteEarningRule = (index) => {\r\n        const earningData = earningRuleData?.filter((_, ind) => ind !== index)\r\n        setEarningRuleData(earningData)\r\n\r\n    }\r\n    const editEarningRule = (item,index) => {\r\n        setEarningRules({\r\n            from: item?.from,\r\n            to: item?.to,\r\n            amount: item?.amount\r\n        })\r\n        setSelectedIndex(index)\r\n    }\r\n    const submitEarningRules = () => {\r\n        if (selectedIndex !== '') {\r\n            const updatedRuleData = earningRuleData.map((rule, index) => {\r\n                if (index === selectedIndex) {\r\n                    return {\r\n                        ...rule,\r\n                        from: earningRules?.from,\r\n                        to: earningRules?.to,\r\n                        amount: earningRules?.amount,\r\n                    };\r\n                }\r\n                return rule;\r\n            });\r\n    \r\n            setEarningRuleData(updatedRuleData);\r\n            setRules(updatedRuleData);\r\n            setSelectedIndex('')\r\n        } else {\r\n            setEarningRuleData([...earningRuleData, earningRules])\r\n            setRules([...earningRuleData, earningRules])\r\n        }\r\n        resetEarningRulesFields()\r\n\r\n    }\r\n    const toggleEarningRulesFormula = () => {\r\n        setIsOpenERF(!isOpenERF)\r\n\r\n    }\r\n\r\n    const resetEarningRulesFields = () => {\r\n        setEarningRules({\r\n            from: \"\",\r\n            to: '',\r\n            amount: \"\"\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        if (rules) {\r\n            setEarningRuleData(rules)\r\n        }\r\n    }, [rules])\r\n    return (\r\n        <>\r\n            {earningRuleData && earningRuleData.length > 0 && <EarningRulesTable\r\n                earningRuleData={earningRuleData}\r\n                deleteEarningRule={deleteEarningRule}\r\n                rules={rules}\r\n                editEarningRule={editEarningRule}\r\n            />}\r\n\r\n            <div className=\"col-md-12 row\">\r\n                <div className=\"form-group mb-2\">\r\n                    <CustomStrong\r\n                        className={\"text-primary\"}\r\n                        text={t(\"labels.rules\")}\r\n                        required={true}\r\n                    />\r\n                    <div className=\"col-md-12 mt-2\">\r\n                        <div className=\"form-group mb-2 d-flex justify-content-between gap-3\">\r\n                            <span className='rupee-sign' >&#8377;</span>\r\n\r\n                            <Input\r\n                                type=\"number\"\r\n                                placeholder={t(\"placeholders.startSalary\")}\r\n                                value={earningRules?.from}\r\n                                name=\"from\"\r\n                                onChange={(e) => handleFromChange(e)}\r\n                            />\r\n                            <span className='mt-2' style={{ fontSize: \"16px\" }} >To</span>\r\n                            <Input\r\n                                type=\"number\"\r\n                                placeholder={t(\"placeholders.endSalary\")}\r\n                                value={earningRules?.to}\r\n                                name=\"to\"\r\n                                onChange={(e) => handleFromChange(e)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-12 row\">\r\n                <div className=\"form-group mb-2\">\r\n\r\n                    <div className=\"col-md-12 mt-2\">\r\n                        <div className=\"form-group mb-2 d-flex justify-content-start gap-3\">\r\n                            <span className='rupee-sign' >&#8377;</span>\r\n\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder={t(\"placeholders.amountFormula\")}\r\n                                value={earningRules?.amount}\r\n                                name=\"amount\"\r\n                                onChange={(e) => handleFromChange(e)}\r\n                                style={{ width: \"43%\" }}\r\n                            />\r\n                            <CustomButton\r\n                                text={t(\"btns.createFormula\")}\r\n                                classNames={\"btn btn-primary\"}\r\n                                handleClick={() => toggleEarningRulesFormula()}\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOpenERF && <EarningRulesFormula\r\n                allLeaveConstantData={allLeaveConstantData}\r\n                toggleEarningRulesFormula={toggleEarningRulesFormula}\r\n                setEarningRulesData={setEarningRules}\r\n\r\n            />}\r\n            <CustomAlert alertLabel={\"Note: \"} text={t(\"paragraph.addEarningRules\")} />\r\n            <hr />\r\n            <div className='d-flex justify-content-end'>\r\n                <CustomButton\r\n                    text={selectedIndex !=='' ?t(\"btns.update\"):t(\"btns.addRules\")}\r\n                    classNames={\"btn btn-success\"}\r\n                    styles={{ minWidth: \"0px\" }}\r\n                    handleClick={() => submitEarningRules()}\r\n                />\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default EarningRules\r\n","import React from 'react'\r\nimport { CustCheckbox, CustomRadio, CustomStrong, Input } from '../../../commanComponent'\r\nimport { yesNoFlexOptions, yesNoOptions } from '../../../../utils/Constants.config'\r\nimport { useCustomTranslation } from '../../../../translation'\r\n\r\nconst ViewsEarningTypes = ({earningTypeData}) => {\r\n    const {t}=useCustomTranslation()\r\n    return (\r\n        <div>\r\n            <div className=\"row reviewsComment\">\r\n                <div className=\"col-md-12\" >\r\n                    <div className=\"form-group mb-2\">\r\n                        <CustomStrong\r\n                            text={t(\"labels.earningTypeName\")}\r\n                            required={true}\r\n                        />\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder={t(\"placeholders.earningTypeName\")}\r\n                            value={earningTypeData?.earning_type_name}\r\n                            name=\"earningTypeName\"\r\n                            isDisabled={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group mb-2\">\r\n                        <CustomStrong\r\n                            text={t(\"labels.calculationType\")}\r\n                            required={true}\r\n                        />\r\n                        <CustomRadio\r\n                            data={yesNoOptions}\r\n                            name=\"calculationType\"\r\n                            selectedValue={earningTypeData?.calculation_type}\r\n                            isDisabled={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group mb-2\">\r\n                        <CustomStrong\r\n                            text={\"Calculate on pro-rata basis.\"}\r\n                        />\r\n                        <p>\r\n                            ( Pay will be adjusted based on employee working days.)</p>\r\n                        <CustomRadio\r\n                            data={yesNoFlexOptions}\r\n                            name=\"isProRata\"\r\n                            selectedValue={earningTypeData?.is_pro_rata}\r\n                            isDisabled={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group mb-2\">\r\n                        <CustomStrong\r\n                            text={\"Include this as a Flexible Benefit Plan component.\"}\r\n                        />\r\n                        <p>\r\n                            ( FBP allows your employees to personalise their salary structure by choosing how much they want to receive under each FBP component.)</p>\r\n                        <CustomRadio\r\n                            data={yesNoFlexOptions}\r\n                            name=\"canIncludeAsFbp\"\r\n                            selectedValue={earningTypeData?.can_include_as_fbp}\r\n                            isDisabled={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group mb-2\">\r\n                        <CustomStrong\r\n                            text={\"Consider for EPF Contribution.\"}\r\n                        />\r\n                        <CustomRadio\r\n                            data={yesNoFlexOptions}\r\n                            name=\"isIncludedInEpf\"\r\n                            selectedValue={earningTypeData?.is_included_in_epf}\r\n                            isDisabled={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group mb-2\">\r\n                        <CustomStrong\r\n                            text={\"Consider for ESI Contribution.\"}\r\n                        />\r\n                        <CustomRadio\r\n                            data={yesNoFlexOptions}\r\n                            name=\"isIncludedInEsi\"\r\n                            selectedValue={earningTypeData?.is_included_in_esi}\r\n                            isDisabled={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group mb-2\">\r\n                        <CustomStrong\r\n                            text={\"Show this component in payslip\"}\r\n                        />\r\n                        <CustomRadio\r\n                            data={yesNoFlexOptions}\r\n                            name=\"showInPayslip\"\r\n                            selectedValue={earningTypeData?.show_in_payslip}\r\n                            isDisabled={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12 d-flex\">\r\n                    <div className=\"form-group mb-3\">\r\n                        <CustCheckbox\r\n                            key={\"isActive\"}\r\n                            id={`isActive`}\r\n                            checked={earningTypeData?.is_active}\r\n                            name={\"isActive\"}\r\n                        />\r\n\r\n                    </div>\r\n                    <div className=\"form-group mb-3\">\r\n                        <CustomStrong text={t(\"labels.isActive\")} className=\"text-primary\" />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewsEarningTypes\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustCheckbox, CustomRadio, CustomStrong, Icon, Input, Label } from '../../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { calculationTypeOptions } from '../../../../utils/Constants.config'\r\nimport EarningRules from './EarningRules'\r\nimport { CustomTabs } from '../../../reuseableComponents'\r\nimport ViewsEarningTypes from '../../earningDeductionTypes/earningDeductionType/ViewsEarningTypes'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport { payrollActions } from '../../../../core/resource/actions'\r\nconst AddUpdateEarnings = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const dispatch = useDispatch()\r\n    const { getEarningTypeByIdRes,addEarningsPending,updateEarningsPending } = useSelector(state => state.payroll)\r\n    const {\r\n        earningDeductionSelectedData,\r\n        openModel,\r\n        handleOpenClose,\r\n        allEarningTypeData,\r\n        addEarnings,\r\n        allLeaveConstantData,\r\n        getEarningTypeById,\r\n        isOpenModalType,\r\n        addDeductions,\r\n        updateEarnings,\r\n        updateDeductions,\r\n        earningTypeByIdData,\r\n        allDeductionTypeData\r\n    } = props\r\n    const [errors, setErrors] = useState({})\r\n    const [createUpdateEarningsFormData, setCreateUpdateEarningsFormData] = useState({\r\n        earningType: null,\r\n        nameInPayslip: '',\r\n        calculationType: '',\r\n        calculationTypeValue: '',\r\n        // earningName: '',\r\n        variablePay: false,\r\n        includedCTC: false,\r\n        taxableComp: false,\r\n        isActive: true\r\n    })\r\n    const [rules, setRules] = useState([])\r\n\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e?.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n        setCreateUpdateEarningsFormData(prevState => {\r\n            let updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            if (name === \"earningType\") {\r\n                getEarningTypeById(e?._id)\r\n            }\r\n\r\n            if (name === \"calculationType\") {\r\n                updatedState = {\r\n                    ...updatedState,\r\n                    calculationTypeValue: '', \r\n                };\r\n            }\r\n\r\n            return updatedState;\r\n        });\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitCreateUpdateEarnings = async () => {\r\n        let payload = {\r\n            payslip_name: createUpdateEarningsFormData?.nameInPayslip,\r\n            // name: createUpdateEarningsFormData?.earningName,\r\n            [isOpenModalType === \"earnings\" ? \"earning_type\" : \"deduction_type\"]:\r\n            createUpdateEarningsFormData?.earningType?._id,\r\n            value: createUpdateEarningsFormData?.calculationTypeValue,\r\n            value_in: createUpdateEarningsFormData?.calculationType,\r\n            is_optional: false,\r\n            max_allowance: createUpdateEarningsFormData?.maxAllowance,\r\n            include_in_ctc: createUpdateEarningsFormData?.includedCTC,\r\n            rules: rules,\r\n            is_variable_pay: createUpdateEarningsFormData?.variablePay,\r\n            is_taxable: createUpdateEarningsFormData?.taxableComp,\r\n            is_active: createUpdateEarningsFormData?.isActive\r\n        }\r\n        if(earningDeductionSelectedData){\r\n            payload[\"_id\"]=earningDeductionSelectedData?._id\r\n            isOpenModalType == \"earnings\" ? updateEarnings(payload) : updateDeductions(payload)\r\n        }else{\r\n            \r\n            isOpenModalType == \"earnings\" ? addEarnings(payload) : addDeductions(payload)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetForm()\r\n        })\r\n    }, [openModel])\r\n\r\n    useEffect(() => {\r\n        if (earningDeductionSelectedData) {\r\n            setCreateUpdateEarningsFormData({\r\n                earningType: { label: earningDeductionSelectedData?.earning_type_name, value: earningDeductionSelectedData?.earning_type },\r\n                nameInPayslip: earningDeductionSelectedData?.payslip_name,\r\n                calculationType: earningDeductionSelectedData?.value_in,\r\n                calculationTypeValue: earningDeductionSelectedData?.value,\r\n                // earningName: earningDeductionSelectedData?.name,\r\n                variablePay: earningDeductionSelectedData?.is_variable_pay,\r\n                includedCTC: earningDeductionSelectedData?.include_in_ctc,\r\n                taxableComp: earningDeductionSelectedData?.is_taxable,\r\n                isActive: earningDeductionSelectedData?.is_active,\r\n\r\n            })\r\n            setRules(earningDeductionSelectedData?.rules)\r\n        }\r\n    }, [earningDeductionSelectedData])\r\n\r\n    const resetForm = () => {\r\n        setCreateUpdateEarningsFormData({\r\n            earningType: null,\r\n            nameInPayslip: '',\r\n            calculationType: '',\r\n            calculationTypeValue: '',\r\n            // earningName: '',\r\n            variablePay: \"\",\r\n            includedCTC: false,\r\n            taxableComp: false,\r\n            isActive: true\r\n        })\r\n        setErrors({})\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_EARNING_TYPE_BY_ID_STORE\"))\r\n    }\r\n\r\n    const earningTabs = [\r\n        { name: \"Earnings\", onClickFun: (id) => onTabChange(id), id: \"add_earnings\" },\r\n        { name: \"Earning Rules\", onClickFun: (id) => onTabChange(id), id: \"earning_rules\" },\r\n        { name: \"Other Configurations\", onClickFun: (id) => onTabChange(id), id: \"other_configurations\" },\r\n    ];\r\n\r\n    const deductionTabs = [\r\n        { name: \"Deduction\", onClickFun: (id) => onTabChange(id), id: \"deduction\" },\r\n        { name: \"Deduction Rules\", onClickFun: (id) => onTabChange(id), id: \"deduction_rules\" },\r\n        { name: \"Other Configurations\", onClickFun: (id) => onTabChange(id), id: \"other_configurations\" },\r\n    ];\r\n    const onTabChange = () => {\r\n\r\n    }\r\n    const checkCalculationType = () => {\r\n        switch (createUpdateEarningsFormData?.calculationType) {\r\n            case \"percentage\":\r\n                return {\r\n                    label: t(\"labels.percentage\"),\r\n                    placeholder: t(\"placeholders.percentage\")\r\n                };\r\n            default:\r\n                return {\r\n                    label: t(\"labels.amount\"),\r\n                    placeholder: t(\"placeholders.amount\")\r\n                };\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">\r\n                        {earningDeductionSelectedData ? \"Update\" : \"Add\"} {isOpenModalType == \"earnings\" ? \"Earnings\" : \"Deduction\"}</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose(\"add_earnings\")}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"offcanvas-body myRequest \">\r\n                    <CustomTabs tabs={isOpenModalType == \"earnings\" ? earningTabs : deductionTabs} type=\"earnings\" />\r\n                    <div className=\"tab-content \">\r\n                        <div className=\"tab-pane fade active show\" id={isOpenModalType == \"earnings\" ? `add_earnings` : 'deduction'}>\r\n                            <div className=\"formPanel\">\r\n                                <div className='row mb-3 pb-2' style={{ borderBottom: \"1px #C4C1BF solid\" }}>\r\n                                    <div className=\"col-md-6\" >\r\n                                        <div className=\"form-group mb-2\">\r\n                                            <Label text={isOpenModalType == \"earnings\" ?t(\"labels.earningType\"):t(\"labels.deductionType\")} required={true} />\r\n                                            <CustomSelect\r\n                                                data={isOpenModalType == \"earnings\" ?allEarningTypeData:allDeductionTypeData}\r\n                                                placeholder={isOpenModalType == \"earnings\" ?t(\"placeholders.earningType\"):t(\"placeholders.deductionType\")}\r\n                                                value={createUpdateEarningsFormData?.earningType || ''}\r\n                                                handleChange={(selectedOption) => handleFromChange(selectedOption, \"earningType\")}\r\n                                                name=\"earningType\"\r\n                                            />\r\n                                            {errors?.earningType && (\r\n                                                <CustomError text={errors.earningType} />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {/* <div className=\"col-md-6\">\r\n                                        <div className=\"form-group mb-2\">\r\n                                            <Label text={t(\"labels.name\")} required={true} />\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                placeholder={t(\"placeholders.name\")}\r\n                                                value={createUpdateEarningsFormData?.earningName}\r\n                                                name=\"earningName\"\r\n                                                onChange={(e) => handleFromChange(e)}\r\n                                            />\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group mb-2\">\r\n                                            <Label text={t(\"labels.nameInPayslip\")} required={true} />\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                placeholder={t(\"placeholders.nameInPayslip\")}\r\n                                                value={createUpdateEarningsFormData?.nameInPayslip}\r\n                                                name=\"nameInPayslip\"\r\n                                                onChange={(e) => handleFromChange(e)}\r\n                                            />\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group mb-2\">\r\n                                            <Label text={t(\"labels.calculationType\")} required={true} />\r\n                                            <CustomRadio\r\n                                                data={ calculationTypeOptions}\r\n                                                name=\"calculationType\"\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                selectedValue={createUpdateEarningsFormData?.calculationType}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    {createUpdateEarningsFormData?.calculationType !== \"\" &&\r\n                                        createUpdateEarningsFormData?.calculationType !== \"slab_wise\"\r\n                                        && <div className=\"col-md-6\">\r\n                                            <div className=\"form-group mb-2\">\r\n                                                <Label\r\n                                                    text={checkCalculationType()?.label}\r\n                                                />\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    placeholder={checkCalculationType()?.placeholder}\r\n                                                    value={createUpdateEarningsFormData?.calculationTypeValue}\r\n                                                    name=\"calculationTypeValue\"\r\n                                                    onChange={(e) => handleFromChange(e)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>}\r\n                                    {/* <div className=\"col-md-12 row\">\r\n                                        <div className=\"form-group mb-2\">\r\n                                            <CustomStrong\r\n                                                className={\"text-primary\"}\r\n                                                text={t(\"labels.monthlySalary\")}\r\n                                                required={true}\r\n                                            />\r\n                                            <div className=\"col-md-12 mt-2\">\r\n                                                <div className=\"form-group mb-2 d-flex justify-content-between gap-3\">\r\n                                                    <span className='rupee-sign' >&#8377;</span>\r\n\r\n                                                    <Input\r\n                                                        type=\"number\"\r\n                                                        placeholder={t(\"placeholders.startSalary\")}\r\n                                                        value={createUpdateEarningsFormData?.startSalary}\r\n                                                        name=\"startSalary\"\r\n                                                        onChange={(e) => handleFromChange(e)}\r\n                                                    />\r\n                                                    <span className='mt-2' style={{ fontSize: \"16px\" }} >To</span>\r\n                                                    <Input\r\n                                                        type=\"number\"\r\n                                                        placeholder={t(\"placeholders.endSalary\")}\r\n                                                        value={createUpdateEarningsFormData?.endSalary}\r\n                                                        name=\"endSalary\"\r\n                                                        onChange={(e) => handleFromChange(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                    <div className=\"col-md-12 row\">\r\n                                        <div className=\"form-group mb-2\">\r\n                                            <CustomStrong\r\n                                                className={\"text-primary\"}\r\n                                                text={t(\"labels.maxAllowance\")}\r\n                                                required={true}\r\n                                            />\r\n                                            <div className=\"col-md-6 mt-2\">\r\n                                                <div className=\"form-group mb-2 d-flex justify-content-between gap-3\">\r\n                                                    <span className='rupee-sign' >&#8377;</span>\r\n\r\n                                                    <Input\r\n                                                        type=\"number\"\r\n                                                        placeholder={t(\"placeholders.maxAllowance\")}\r\n                                                        value={createUpdateEarningsFormData?.maxAllowance}\r\n                                                        name=\"maxAllowance\"\r\n                                                        onChange={(e) => handleFromChange(e)}\r\n                                                    />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-md-12 d-flex\">\r\n                                        <div className=\"form-group \">\r\n                                            <CustCheckbox\r\n                                                key={\"includedCTC\"}\r\n                                                id={`includedCTC`}\r\n                                                checked={createUpdateEarningsFormData?.includedCTC}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"includedCTC\"}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"form-group \">\r\n                                            <CustomStrong text={t(\"labels.includedCTC\")} className=\"text-primary\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 d-flex\">\r\n                                        <div className=\"form-group \">\r\n                                            <CustCheckbox\r\n                                                key={\"variablePay\"}\r\n                                                id={`variablePay`}\r\n                                                checked={createUpdateEarningsFormData?.variablePay}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"variablePay\"}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"form-group \">\r\n                                            <CustomStrong text={t(\"labels.variablePay\")} className=\"text-primary\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-12 d-flex\">\r\n                                        <div className=\"form-group \">\r\n                                            <CustCheckbox\r\n                                                key={\"taxableComp\"}\r\n                                                id={`taxableComp`}\r\n                                                checked={createUpdateEarningsFormData?.taxableComp}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"taxableComp\"}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"form-group \">\r\n                                            <CustomStrong text={t(\"labels.taxableComp\")} className=\"text-primary\" />\r\n                                            <p className='text-secondary'>{t(\"paragraph.taxableCompDesc\")}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 d-flex\">\r\n                                        <div className=\"form-group \">\r\n                                            <CustCheckbox\r\n                                                key={\"isActive\"}\r\n                                                id={`isActive`}\r\n                                                checked={createUpdateEarningsFormData?.isActive}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"isActive\"}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <CustomStrong text={t(\"labels.isActive\")} className=\"text-primary\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tab-pane fade\" id={isOpenModalType == \"earnings\" ? \"earning_rules\" : \"deduction_rules\"}>\r\n                            <EarningRules\r\n                                allLeaveConstantData={allLeaveConstantData}\r\n                                setRules={setRules}\r\n                                rules={rules}\r\n                            />\r\n                        </div>\r\n                        <div className=\"tab-pane fade\" id=\"other_configurations\">\r\n                            {earningTypeByIdData &&earningTypeByIdData?.length> 0 &&  <ViewsEarningTypes\r\n                                earningTypeData={earningTypeByIdData[0]}\r\n                            />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={earningDeductionSelectedData ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitCreateUpdateEarnings()}\r\n                        // isLoading={earningDeductionSelectedData ? updateEarningsPending : addEarningsPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddUpdateEarnings\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustCheckbox, CustomStrong, CustRadio, Input, Label } from '../../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { commonActions } from '../../../../core/resource/actions'\r\n\r\nconst AddUpdatePaySchedule = (props) => {\r\n    const {\r\n        isOpenModal,\r\n        selectedPayScheduleData,\r\n        handleToggleModals,\r\n        appConstantData,\r\n        handleAddPayScheduleData,\r\n        handleUpdatePaySchedule\r\n    } = props\r\n\r\n    const { t } = useCustomTranslation()\r\n\r\n    const [payScheduleFormData, setPayScheduleFormData] = useState({\r\n        payScheduleType: 'monthly',\r\n        payOn: \"last_working_day\",\r\n        payDay:'',\r\n        payPeriodStartDate:''\r\n    })\r\n\r\n    const [errors, setErrors] = useState('')\r\n    const {addPaySchedulePending,updatePaySchedulePending}=useSelector(state=>state.payroll)\r\n\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n        setPayScheduleFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: value,\r\n            };\r\n            if(value ===\"monthly\"){\r\n                updatedState[\"noOfWorkingDays\"]=''\r\n            }  if(value ===\"last_working_day\"){\r\n                updatedState[\"payDay\"]=''\r\n            }\r\n            return updatedState;\r\n        });\r\n\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n\r\n    const submitAddUpdatePaySchedule = () => {\r\n        const payload ={\r\n            pay_schedule_type:payScheduleFormData?.payScheduleType,\r\n            no_of_working_days:payScheduleFormData?.noOfWorkingDays?.value,\r\n            pay_on:payScheduleFormData?.payOn,\r\n            pay_day:payScheduleFormData?.payDay?.value ||'',\r\n            // pay_date:payScheduleFormData?.payDay?.value ||'',\r\n            pay_period_start_date:payScheduleFormData?.payPeriodStartDate,\r\n        }\r\n        if(selectedPayScheduleData){\r\n            payload[\"_id\"]= selectedPayScheduleData?.[0]?._id||''\r\n            handleUpdatePaySchedule(payload)\r\n        }else{\r\n            handleAddPayScheduleData(payload)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        if(selectedPayScheduleData&& selectedPayScheduleData?.length>0){\r\n            const selectData =selectedPayScheduleData[0]\r\n            setPayScheduleFormData({\r\n                payScheduleType: selectData?.pay_schedule_type,\r\n                noOfWorkingDays:{label:selectData?.no_of_working_days,value:selectData?.no_of_working_days},\r\n                payOn:  selectData?.pay_on,\r\n                payDay:{label:selectData?.pay_day,value:selectData?.pay_day},\r\n                payPeriodStartDate:selectData?.pay_period_start_date\r\n            })\r\n        }\r\n\r\n    },[selectedPayScheduleData])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${isOpenModal ? 'show' : ''}`} tabIndex={-1}\r\n                style={{\r\n                    visibility: isOpenModal ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\"> {selectedPayScheduleData ? \"Update\" : \"\"} Pay Schedule</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleToggleModals(\"pay_schedule\")}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"formPanel\">\r\n\r\n                        <div>\r\n                            <CustomStrong\r\n                                text={\" Calculate monthly salary based on\"}\r\n                                required={true}\r\n                                tooltipText={t(\"tooltips.calculateMonthlySalary\")}\r\n                                className={\"text-primary\"}\r\n                            />\r\n                            <div >\r\n                                <div>\r\n                                    <CustRadio\r\n                                        htmlFor=\"monthly\"\r\n                                        text=\"Actual days in a month\"\r\n                                        name=\"payScheduleType\"\r\n                                        value=\"monthly\"\r\n                                        checked={payScheduleFormData?.payScheduleType === 'monthly'}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        radioClass={\"mt-2\"}\r\n                                    />\r\n\r\n                                </div>\r\n                                <div className='d-flex'>\r\n                                    <CustRadio\r\n                                        htmlFor=\"workingDays\"\r\n                                        text=\"Organisation working days\"\r\n                                        name=\"payScheduleType\"\r\n                                        value=\"working_days\"\r\n                                        checked={payScheduleFormData?.payScheduleType === 'working_days'}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        radioClass={\"mt-2\"}\r\n                                    />\r\n                                    <div className='ms-2 me-2' style={{ width: \"113px\" }}>\r\n                                        <CustomSelect\r\n                                            data={appConstantData?.workingDays}\r\n                                            placeholder={t(\"placeholders.select\")}\r\n                                            value={payScheduleFormData?.noOfWorkingDays}\r\n                                            handleChange={(selectedOption) => handleFromChange(selectedOption, \"noOfWorkingDays\")}\r\n                                            isDisabled={payScheduleFormData?.payScheduleType === 'monthly'}\r\n                                        />\r\n                                    </div>\r\n                                    <label className='mt-2'>\r\n                                        days per month\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='mt-3'>\r\n                            <CustomStrong\r\n                                text={\" Pay On\"}\r\n                                required={true}\r\n                                className={\"text-primary\"}\r\n                            />\r\n                            <div>\r\n                                <CustRadio\r\n                                    htmlFor=\"lastWorkingDay\"\r\n                                    text=\"the last working day of\"\r\n                                    name=\"payOn\"\r\n                                    value=\"last_working_day\"\r\n                                    checked={payScheduleFormData?.payOn === 'last_working_day'}\r\n                                    handleChange={(e) => handleFromChange(e)}\r\n                                    radioClass={\"mt-2\"}\r\n                                />\r\n\r\n                            </div>\r\n                            <div className='d-flex'>\r\n                                <CustRadio\r\n                                    htmlFor=\"payMonth\"\r\n                                    text=\"day\"\r\n                                    name=\"payOn\"\r\n                                    value=\"day_of_month\"\r\n                                    checked={payScheduleFormData?.payOn === 'day_of_month'}\r\n                                    handleChange={(e) => handleFromChange(e)}\r\n                                    radioClass={\"mt-2\"}\r\n                                />\r\n                                <div className='ms-2 me-2' style={{ width: \"113px\" }}>\r\n\r\n                                    <CustomSelect\r\n                                        data={appConstantData?.monthDays}\r\n                                        placeholder={t(\"placeholders.select\")}\r\n                                        value={payScheduleFormData?.payDay}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"payDay\")}\r\n                                        isDisabled={payScheduleFormData?.payOn === 'last_working_day'}\r\n                                    />\r\n                                </div>\r\n                                <label className='mt-2'>\r\n                                    of every month\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div class=\"alert alert-secondary mt-4\" role=\"alert\">\r\n                            Note: When payday falls on a non-working day or a holiday, employees will get paid on the previous working day.\r\n                        </div> */}\r\n\r\n                        <div className=\"row mt-3\">\r\n\r\n                            <div className=\"col-md-6 row\">\r\n                                <div className='col-md-12'>\r\n                                    <div className=\"form-group mb-2\">\r\n                                        <CustomStrong\r\n                                            text={\"Start your first payroll from\"}\r\n                                            required={true}\r\n                                            className={\"text-primary \"} />\r\n                                        <Input\r\n                                            type=\"month\"\r\n                                            value={payScheduleFormData?.payPeriodStartDate}\r\n                                            name=\"payPeriodStartDate\"\r\n                                            className=\"mt-2\"\r\n                                            onChange={(e) => handleFromChange(e)}\r\n                                        />\r\n                                        {errors?.name && (\r\n                                            <CustomError text={errors.name} />\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={selectedPayScheduleData ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitAddUpdatePaySchedule()}\r\n                        isLoading={selectedPayScheduleData ? updatePaySchedulePending : addPaySchedulePending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOpenModal && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddUpdatePaySchedule\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { useCustomTranslation } from '../../../../translation';\r\nimport { CustomButton } from '../../../globalComponents';\r\nimport { CustomStrong, Icon, Label } from '../../../commanComponent';\r\nimport { CustomTable } from '../../../reuseableComponents';\r\nimport AddUpdatePaySchedule from './AddUpdatePaySchedule';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { commonActions } from '../../../../core/resource/actions';\r\nimport { dateFormate } from '../../../../utils/common';\r\n\r\nconst PaySchedule = (props) => {\r\n    const { appConstantData, upcomingPayrollData, handleToggleModals } = props\r\n    const { t } = useCustomTranslation()\r\n    const dispatch = useDispatch()\r\n    const { upcomingPayrollsPending } = useSelector(state => state.payroll)\r\n\r\n    const [payScheduleData, setPayScheduleData] = useState('')\r\n    useEffect(() => {\r\n        if (upcomingPayrollData && upcomingPayrollData?.length > 0) {\r\n            setPayScheduleData(upcomingPayrollData[0])\r\n        }\r\n    }, [upcomingPayrollData])\r\n\r\n    const arrearsEmployeeFields = [\r\n        { key: 'pay_period_formatted', label: 'PAY PERIOD' },\r\n        { key: 'pay_date_formatted', label: 'PAY DATE' },\r\n\r\n    ];\r\n    const arrearsEmployeeScopedSlots = useMemo(() => ({\r\n\r\n        // pay_period_formatted: item => (\r\n        //     <span\r\n        //         className={`badge ${getBadgeColor(item.is_active ? \"Active\" : \"Inactive\")}`}\r\n        //     >\r\n        //         {item.is_active ? \"Active\" : \"Inactive\"}\r\n        //     </span>\r\n        // ),\r\n\r\n    }), [upcomingPayrollData]);\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=' p-3'>\r\n                <div className=\"d-flex mb-2 paySchedule\">\r\n                    <h3 className='me-1'\r\n                        style={{ fontSize: \"18px\", fontWeight: 600 }}\r\n                    >\r\n                        This Organization's payroll runs on this schedule\r\n                    </h3>\r\n                    <div\r\n                        onClick={() => handleToggleModals(\"pay_schedule\", upcomingPayrollData)}\r\n                        className='editIconBg'\r\n                        > {upcomingPayrollData\r\n                            ?\r\n                            <Icon className={\"bi bi-pencil text-white\"} />\r\n                            :\r\n                            <Icon className={\"bi bi-plus-lg\"} />\r\n                            }\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <Label text={t(\"labels.payFrequency\")} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <CustomStrong text={payScheduleData?.pay_schedule_type || \"-\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <Label text={t(\"labels.workingDays\")} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <CustomStrong text={\"Tue,Wed,Thu,Fri\"} />\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <Label text={t(\"labels.payDay\")} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <CustomStrong text={payScheduleData?.pay_day || \"-\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <Label text={t(\"labels.firstPayPeriod\")} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <CustomStrong\r\n                                text={payScheduleData ? dateFormate(payScheduleData?.pay_period_start_date, \"DD/MM/YYYY\") : \"-\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <Label text={t(\"labels.firstPayDate\")} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <CustomStrong\r\n                                text={payScheduleData?.pay_date ? dateFormate(payScheduleData?.pay_date, \"DD/MM/YYYY\") : \"-\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 form-group mb-3\">\r\n                        <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Upcoming Payroll</h3>\r\n                        <CustomTable\r\n                            data={payScheduleData?.upcoming_pay_periods}\r\n                            fields={arrearsEmployeeFields}\r\n                            isLoading={upcomingPayrollsPending}\r\n                            pagination={true}\r\n                            // currentPage={currentPage}\r\n                            // setCurrentPage={setCurrentPage}\r\n                            // totalPages={depList?.totalPages}\r\n                            // tableName={\"\"}\r\n                            // onSearch={handleSearch}\r\n                            isHeader={false}\r\n                            tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                            scopedSlots={arrearsEmployeeScopedSlots}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaySchedule\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustCheckbox, CustomRadio, Icon, Input, Label } from '../../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { deductionFrequency } from '../../../../utils/Constants.config'\r\n\r\nconst AddPostTaxDeduction = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        openModel,\r\n        handleOpenClose,\r\n\r\n    } = props\r\n    const [errors, setErrors] = useState({})\r\n    const [postTaxDeductionFormData, setPostTaxDeductionFormData] = useState({\r\n\r\n        nameInPayslip: '',\r\n        deductionFrequency: '',\r\n        is_active: true\r\n    })\r\n\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n\r\n        setPostTaxDeductionFormData(prevState => {\r\n            let updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n\r\n        // Clear error for the specific field being changed\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitPostTaxDeduction = async () => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetForm()\r\n        })\r\n    }, [openModel])\r\n\r\n\r\n\r\n    const resetForm = () => {\r\n        setPostTaxDeductionFormData({\r\n            nameInPayslip: '',\r\n            deductionFrequency: '',\r\n            is_active: true\r\n        })\r\n        setErrors({})\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n            tabIndex={-1}\r\n            style={{\r\n                visibility: openModel ? 'visible' : 'hidden',\r\n                width: \"600px\"\r\n            }}\r\n            id=\"interviewDetail\"\r\n        >\r\n            <div className=\"offcanvas-header\">\r\n                <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">Post Tax Deduction</h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                    onClick={\r\n                        () => handleOpenClose(\"post_tax_deduction\")\r\n                    }\r\n                />\r\n            </div>\r\n\r\n            <div className=\"offcanvas-body myRequest \">\r\n                <div className=\"formPanel\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.nameInPayslip\")} required={true} />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.nameInPayslip\")}\r\n                                    value={postTaxDeductionFormData?.nameInPayslip}\r\n                                    name=\"nameInPayslip\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.deductionFrequency\")} required={true} />\r\n                                <CustomRadio\r\n                                    data={deductionFrequency}\r\n                                    name=\"calculationType\"\r\n                                    handleChange={handleFromChange}\r\n                                    selectedValue={postTaxDeductionFormData?.deductionFrequency}\r\n                                // radioStylxe={{ display: \"flex\" }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.isActive\")} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <CustCheckbox\r\n                                    key={\"is_active\"}\r\n                                    id={`is_active`}\r\n                                    // label={\"Active\"}\r\n                                    checked={postTaxDeductionFormData?.is_active}\r\n                                    handleChange={(e) => handleFromChange(e)}\r\n                                    name={\"is_active\"}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12 mt-3\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <div class=\"alert alert-warning\" role=\"alert\">\r\n                                    <b>Note:</b>{t(\"paragraph.postTaxDeduction\")}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"offcanvas-footer\">\r\n                <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                    <CustomButton\r\n                        text={t(\"btns.submit\")}\r\n                        classNames={\"btn btn-org-gradient\"}\r\n                        handleClick={() => submitPostTaxDeduction()}\r\n                    // isLoading={selectedDeductionData ? updateDeductionPending : createDeductionPending}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPostTaxDeduction\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { CustCheckbox, CustomRadio, CustomStrong, Icon, Input, Label } from '../../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { deductionFrequency } from '../../../../utils/Constants.config'\r\n\r\nconst AddPreTaxDeduction = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        openModel,\r\n        handleOpenClose,\r\n        deductionWithData,\r\n        deductionPlanData\r\n    } = props\r\n    const [errors, setErrors] = useState({})\r\n    const [preTaxDeductionFormData, setPreTaxDeductionFormData] = useState({\r\n\r\n        nameInPayslip: '',\r\n        deductionFrequency: '',\r\n        is_active: true\r\n    })\r\n\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n\r\n        setPreTaxDeductionFormData(prevState => {\r\n            let updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n\r\n        // Clear error for the specific field being changed\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitPreTaxDeduction = async () => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetForm()\r\n        })\r\n    }, [openModel])\r\n\r\n\r\n\r\n    const resetForm = () => {\r\n        setPreTaxDeductionFormData({\r\n            nameInPayslip: '',\r\n            deductionFrequency: '',\r\n            is_active: true\r\n        })\r\n        setErrors({})\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n            tabIndex={-1}\r\n            style={{\r\n                visibility: openModel ? 'visible' : 'hidden',\r\n                width: \"600px\"\r\n            }}\r\n            id=\"interviewDetail\"\r\n        >\r\n            <div className=\"offcanvas-header\">\r\n                <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">Pre Tax Deduction</h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                    onClick={\r\n                        () => handleOpenClose(\"pre_tax_deduction\")\r\n                    }\r\n                />\r\n            </div>\r\n\r\n            <div className=\"offcanvas-body myRequest \">\r\n                <div className=\"formPanel\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\" >\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.deductionPlan\")} required={true} />\r\n                                <CustomSelect\r\n                                    data={deductionPlanData}\r\n                                    placeholder={t(\"placeholders.deductionPlan\")}\r\n                                    value={preTaxDeductionFormData?.deductionPlan || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"deductionPlan\")}\r\n                                    name=\"deductionPlan\"\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12\" >\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.deductionWith\")} required={true} />\r\n                                <CustomSelect\r\n                                    data={deductionWithData}\r\n                                    placeholder={t(\"placeholders.deductionWith\")}\r\n                                    value={preTaxDeductionFormData?.deductionWith || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"deductionWith\")}\r\n                                    name=\"deductionWith\"\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.nameInPayslip\")} required={true} />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.nameInPayslip\")}\r\n                                    value={preTaxDeductionFormData?.nameInPayslip}\r\n                                    name=\"nameInPayslip\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.nameInPayslip && (\r\n                                    <CustomError text={errors.nameInPayslip} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12 mt-3 d-flex\">\r\n                            <div className=\"form-group\">\r\n                                <CustCheckbox\r\n                                    key={\"employerContributionCTC\"}\r\n                                    id={`employerContributionCTC`}\r\n                                    checked={preTaxDeductionFormData?.employerContributionCTC}\r\n                                    handleChange={(e) => handleFromChange(e)}\r\n                                    name={\"employerContributionCTC\"}\r\n                                />\r\n\r\n                            </div>\r\n                            <div className=\"form-group \">\r\n                                <CustomStrong text={t(\"labels.employerContributionCTC\")} className=\"text-primary\"/>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-md-12 mt-3 d-flex\">\r\n                            <div className=\"form-group\">\r\n                                <CustCheckbox\r\n                                    key={\"calculateProRataBasis\"}\r\n                                    id={`calculateProRataBasis`}\r\n                                    checked={preTaxDeductionFormData?.calculateProRataBasis}\r\n                                    handleChange={(e) => handleFromChange(e)}\r\n                                    name={\"calculateProRataBasis\"}\r\n                                />\r\n\r\n                            </div>\r\n                            <div className=\"form-group \">\r\n                                <CustomStrong text={t(\"labels.calculateProRataBasis\")} className=\"text-primary\"/>\r\n                                <p className='text-secondary'>Pay will be adjusted based on employee working days.</p>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12 d-flex\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <CustCheckbox\r\n                                    key={\"is_active\"}\r\n                                    id={`is_active`}\r\n                                    checked={preTaxDeductionFormData?.is_active}\r\n                                    handleChange={(e) => handleFromChange(e)}\r\n                                    name={\"is_active\"}\r\n                                />\r\n\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <CustomStrong text={t(\"labels.isActive\")}  className=\"text-primary\"/>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"offcanvas-footer\">\r\n                <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                    <CustomButton\r\n                        text={t(\"btns.submit\")}\r\n                        classNames={\"btn btn-org-gradient\"}\r\n                        handleClick={() => submitPreTaxDeduction()}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPreTaxDeduction\r\n","import React, { useMemo } from 'react'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { useSelector } from 'react-redux'\r\nimport { Icon } from '../../../commanComponent'\r\n\r\nconst TaxSlab = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const { handleToggleModals, taxSlabData, currentPage, setCurrentPage, toggleDeleteTaxSlabModal } = props\r\n    const { getTaxSlabPending } = useSelector(state => state.payroll)\r\n    const taxSlabFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'type', label: 'Slab Type' },\r\n        { key: 'start', label: 'Start' },\r\n        { key: 'end', label: 'End' },\r\n        { key: 'tex_percent', label: 'Tax Percent' },\r\n        { key: 'action', label: 'Action' },\r\n\r\n    ];\r\n    const taxSlabScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => handleToggleModals(\"tax_slab\", item)}\r\n                        >\r\n                            <Icon className={\"fa fa-edit\"} /> Update</span>\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => toggleDeleteTaxSlabModal(item?._id)}\r\n                        >\r\n                            <Icon className={\"fa fa-trash\"} /> Delete</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n\r\n    }), []);\r\n    return (\r\n        <div>\r\n            <div className=\"cardHead  justify-content-between\">\r\n                <div className='d-flex'>\r\n                    <img src=\"/images/myrequest-icon.svg\" alt=\"\" width=\"35\" />\r\n                    <h3 className=\"ms-2 mt-2\">Tax Slab</h3>\r\n                </div>\r\n                <div>\r\n                    <CustomButton\r\n                        text={t(\"btns.addTaxSlab\")}\r\n                        classNames=\"btn btn-primary\"\r\n                        handleClick={() => handleToggleModals(\"tax_slab\")}\r\n                    />\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <CustomTable\r\n                data={taxSlabData?.data}\r\n                fields={taxSlabFields}\r\n                isLoading={getTaxSlabPending}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={(pageNo) => setCurrentPage(pageNo, \"tax_slab\")}\r\n                totalPages={taxSlabData?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={taxSlabScopedSlots}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaxSlab\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { CustCheckbox, Input, Label } from '../../../commanComponent'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport { taxSlabSchema } from '../../../../utils/ValidationSchema'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst AddUpdateTaxSlab = (props) => {\r\n    const {\r\n        isOpenModal,\r\n        handleToggleModals,\r\n        selectedTaxSlabData,\r\n        filteredDropdownData,\r\n        handleAddUpdateTaxSlab\r\n    } = props\r\n    const { updateTaxSlabPending, addTaxSlabPending } = useSelector(state => state.payroll)\r\n    const { t } = useCustomTranslation()\r\n    const [errors, setErrors] = useState('')\r\n    const [taxSlabFormData, setTaxSlabFormData] = useState({\r\n        slabType: null,\r\n        start: '',\r\n        end: '',\r\n        taxPercent: '',\r\n        includeCess: false,\r\n        cessPercent: '',\r\n        standardDeduction: false,\r\n        standardDeductionValue: '',\r\n        taxRelaxation: '',\r\n        constantDifference: '',\r\n        rebateAllowed: false,\r\n        rebateRules: false,\r\n        isActive: true\r\n\r\n    })\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n\r\n        setTaxSlabFormData(prevState => {\r\n            let updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n\r\n            return updatedState;\r\n        });\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    }\r\n\r\n\r\n    const submitAddUpdateTaxSlab = async () => {\r\n        const validationResponse = await validateSchema(taxSlabSchema, taxSlabFormData);\r\n        if (validationResponse.isValid) {\r\n            const {\r\n                slabType,\r\n                start,\r\n                end,\r\n                taxPercent,\r\n                includeCess,\r\n                cessPercent,\r\n                standardDeduction,\r\n                standardDeductionValue,\r\n                taxRelaxation,\r\n                constantDifference,\r\n                rebateAllowed,\r\n                rebateRules,\r\n                isActive,\r\n\r\n            } = taxSlabFormData\r\n            let payload = {\r\n                type: slabType?.label|| \"\",\r\n                start,\r\n                end,\r\n                tex_percent: taxPercent,\r\n                is_include_cess: includeCess,\r\n                cess_percent: cessPercent || 0,\r\n                is_standard_deduction: standardDeduction,\r\n                standard_deduction_value: standardDeductionValue || 0,\r\n                tex_relaxation: taxRelaxation,\r\n                constant_difference: constantDifference,\r\n                is_rebate_allowed: rebateAllowed,\r\n                rebate_rules: rebateRules || {},\r\n                is_active: isActive,\r\n            }\r\n            if (selectedTaxSlabData) {\r\n                payload[\"_id\"] = selectedTaxSlabData?._id;\r\n                handleAddUpdateTaxSlab(payload)\r\n            } else {\r\n\r\n                handleAddUpdateTaxSlab(payload)\r\n            }\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (selectedTaxSlabData) {\r\n            setTaxSlabFormData({\r\n                slabType: { label: selectedTaxSlabData?.type, value: selectedTaxSlabData?.type },\r\n                start: selectedTaxSlabData?.start,\r\n                end: selectedTaxSlabData?.end,\r\n                taxPercent: selectedTaxSlabData?.tex_percent,\r\n                includeCess: selectedTaxSlabData?.is_include_cess,\r\n                cessPercent: selectedTaxSlabData?.cess_percent,\r\n                standardDeduction: selectedTaxSlabData?.is_standard_deduction,\r\n                standardDeductionValue: selectedTaxSlabData?.standard_deduction_value,\r\n                taxRelaxation: selectedTaxSlabData?.tex_relaxation,\r\n                constantDifference: selectedTaxSlabData?.constant_difference,\r\n                rebateAllowed: selectedTaxSlabData?.is_rebate_allowed,\r\n                rebateRules: selectedTaxSlabData?.rebate_rules,\r\n                isActive: selectedTaxSlabData?.is_active,\r\n            })\r\n        }\r\n    }, [selectedTaxSlabData])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${isOpenModal ? 'show' : ''}`} tabIndex={-1}\r\n                style={{\r\n                    visibility: isOpenModal ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\"> {selectedTaxSlabData ? \"Update\" : \"Add\"} Tax Slab</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleToggleModals(\"tax_slab\")}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.slabType\")} required={true} />\r\n                                <CustomSelect\r\n                                    data={filteredDropdownData?.tax_slab}\r\n                                    placeholder={t(\"placeholders.slabType\")}\r\n                                    value={taxSlabFormData?.slabType || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"slabType\")}\r\n                                    name=\"slabType\"\r\n                                />\r\n                                {errors?.slabType && (\r\n                                    <CustomError text={errors.slabType} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.startAmount\")} required={true} />\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.taxSlabStartAmount\")}\r\n                                    value={taxSlabFormData?.start === 0 ? '0' : taxSlabFormData?.start}\r\n                                    name=\"start\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.start && (\r\n                                    <CustomError text={errors.start} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.endAmount\")} required={true} />\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.taxSlabEndAmount\")}\r\n                                    value={taxSlabFormData?.end === 0 ? '0' : taxSlabFormData?.end}\r\n                                    name=\"end\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.end && (\r\n                                    <CustomError text={errors.end} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.taxPercent\")} required={true} />\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.taxPercent\")}\r\n                                    value={taxSlabFormData?.taxPercent === 0 ? '0' : taxSlabFormData?.taxPercent}\r\n                                    name=\"taxPercent\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.taxPercent && (\r\n                                    <CustomError text={errors.taxPercent} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 \">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.taxRelaxation\")} required={true} />\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.taxRelaxation\")}\r\n                                    value={taxSlabFormData?.taxRelaxation === 0 ? \"0\" : taxSlabFormData?.taxRelaxation}\r\n                                    name=\"taxRelaxation\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.taxRelaxation && (\r\n                                    <CustomError text={errors.taxRelaxation} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 \">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.constantDifference\")} required={true} />\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.constantDifference\")}\r\n                                    value={taxSlabFormData?.constantDifference === 0 ? '0' : taxSlabFormData?.constantDifference}\r\n                                    name=\"constantDifference\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.constantDifference && (\r\n                                    <CustomError text={errors.constantDifference} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12 row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.includeCess\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"includeCess\"}\r\n                                        id={`includeCess`}\r\n                                        // label={\"Active\"}\r\n                                        checked={taxSlabFormData?.includeCess}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"includeCess\"}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        {taxSlabFormData?.includeCess && <div className=\"col-md-12 row\">\r\n                            <div className=\"col-md-6 row\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.cessPercent\")} required={true} />\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.cessPercent\")}\r\n                                        value={taxSlabFormData?.cessPercent === 0 ? '0' : taxSlabFormData?.cessPercent}\r\n                                        name=\"cessPercent\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.cessPercent && (\r\n                                        <CustomError text={errors.cessPercent} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n\r\n                        <div className=\"col-md-12 row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.standardDeduction\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"standardDeduction\"}\r\n                                        id={`standardDeduction`}\r\n                                        // label={\"Active\"}\r\n                                        checked={taxSlabFormData?.standardDeduction}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"standardDeduction\"}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {taxSlabFormData?.standardDeduction && <div className=\"col-md-12 row\">\r\n                            <div className=\"col-md-6 row\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.standardDeductionAmount\")} required={true} />\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.standardDeduction\")}\r\n                                        value={taxSlabFormData?.standardDeductionValue === 0 ? \"0\" : taxSlabFormData?.standardDeductionValue}\r\n                                        name=\"standardDeductionValue\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {/* {errors?.standardDeductionValue && (\r\n                                        <CustomError text={errors.standardDeductionValue} />\r\n                                    )} */}\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        <div className=\"col-md-12 row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.rebateAllowed\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"rebateAllowed\"}\r\n                                        id={`rebateAllowed`}\r\n                                        // label={\"Active\"}\r\n                                        checked={taxSlabFormData?.rebateAllowed}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"rebateAllowed\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12 row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.isActive\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"isActive\"}\r\n                                        id={`isActive`}\r\n                                        // label={\"Active\"}\r\n                                        checked={taxSlabFormData?.isActive}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"isActive\"}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={selectedTaxSlabData ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitAddUpdateTaxSlab()}\r\n                            isLoading={selectedTaxSlabData ? updateTaxSlabPending : addTaxSlabPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOpenModal && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddUpdateTaxSlab\r\n","import React, { useEffect, useState } from 'react'\r\nimport CustomCards from '../../reuseableComponents/CustomCards'\r\nimport SalaryComponent from './salaryComponent/SalaryComponent'\r\nimport AddUpdateEarnings from './salaryComponent/AddUpdateEarnings'\r\nimport PaySchedule from './paySchedule/PaySchedule'\r\nimport AddPostTaxDeduction from './salaryComponent/AddPostTaxDeduction'\r\nimport AddPreTaxDeduction from './salaryComponent/AddPreTaxDeduction'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { commonActions, dropdownMasterActions, leaveAction, payrollActions } from '../../../core/resource/actions'\r\nimport AddUpdatePaySchedule from './paySchedule/AddUpdatePaySchedule'\r\nimport TaxSlab from './taxSlab/TaxSlab'\r\nimport AddUpdateTaxSlab from './taxSlab/AddUpdateTaxSlab'\r\nimport { pagination } from '../../../utils/Constants.config'\r\nimport ApproveRejectModal from '../../modal/ApproveRejectModal'\r\nimport { useCustomTranslation } from '../../../translation'\r\n\r\nconst PayrollSetting = () => {\r\n  const [activeCard, setActiveCard] = useState('salary_component')\r\n  const { t } = useCustomTranslation()\r\n  const dispatch = useDispatch()\r\n  const {\r\n    addEarningsPending,\r\n    addEarningsRes,\r\n    addEarningsError,\r\n\r\n    updateEarningsPending,\r\n    updateEarningsRes,\r\n    updateEarningsError,\r\n\r\n    getEarningsPending,\r\n    getEarningsRes,\r\n    getEarningsError,\r\n\r\n    addDeductionsPending,\r\n    addDeductionsRes,\r\n    addDeductionsError,\r\n\r\n    updateDeductionsPending,\r\n    updateDeductionsRes,\r\n    updateDeductionsError,\r\n\r\n    getDeductionsPending,\r\n    getDeductionsRes,\r\n    getDeductionsError,\r\n\r\n    getAllEarningTypePending,\r\n    getAllEarningTypeRes,\r\n    getAllEarningTypeError,\r\n\r\n    getAllDeductionTypePending,\r\n    getAllDeductionTypeRes,\r\n    getAllDeductionTypeError,\r\n\r\n    getEarningTypeByIdPending,\r\n    getEarningTypeByIdRes,\r\n    getEarningTypeByIdError,\r\n\r\n    addPaySchedulePending,\r\n    addPayScheduleRes,\r\n    addPayScheduleError,\r\n\r\n    updatePaySchedulePending,\r\n    updatePayScheduleRes,\r\n    updatePayScheduleError,\r\n\r\n    upcomingPayrollsPending,\r\n    upcomingPayrollsRes,\r\n    upcomingPayrollsError,\r\n\r\n    addTaxSlabPending,\r\n    addTaxSlabRes,\r\n    addTaxSlabError,\r\n\r\n    updateTaxSlabPending,\r\n    updateTaxSlabRes,\r\n    updateTaxSlabError,\r\n\r\n    getTaxSlabPending,\r\n    getTaxSlabRes,\r\n    getTaxSlabError,\r\n\r\n    deleteTaxSlabPending,\r\n    deleteTaxSlabRes,\r\n    deleteTaxSlabError,\r\n\r\n  } = useSelector(state => state.payroll)\r\n\r\n  const {\r\n    getLeaveConstantDataPending,\r\n    getLeaveConstantDataRes,\r\n    getLeaveConstantDataError,\r\n  } = useSelector(state => state.leave)\r\n\r\n  const {\r\n    getAppConstantDataPending,\r\n    getAppConstantDataRes,\r\n    getAppConstantDataError,\r\n  } = useSelector(state => state.common)\r\n  const {\r\n    getFilteredDropdownDataError,\r\n    getFilteredDropdownDataRes,\r\n    getFilteredDropdownDataPending\r\n  } = useSelector(state => state.dropdownMaster)\r\n\r\n  const [isOpenAddUpEarningModal, setIsOpenAddUpEarningModal] = useState(false)\r\n  const [isOpenAddPostTaxDeductionModal, setIsOpenAddPostTaxDeductionModal] = useState(false)\r\n  const [isOpenAddPreTaxDeductionModal, setIsOpenAddPreTaxDeductionModal] = useState(false)\r\n  const [currentPage, setCurrentPage] = useState({\r\n    taxSlabCurrPage: 1,\r\n\r\n  })\r\n  const [allDeductionTypeData, setAllDeductionTypeData] = useState('')\r\n  const [allEarningTypeData, setAllEarningTypeData] = useState('')\r\n  const [earningTypeByIdData, setEarningTypeByIdData] = useState('')\r\n  const [allLeaveConstantData, setAllLeaveConstantData] = useState('')\r\n  const [earningData, setEarningData] = useState('')\r\n  const [isOpenModalType, setIsOpenModalType] = useState('earnings')\r\n  const [deductionsData, setDeductionsData] = useState('earnings')\r\n  const [earningDeductionSelectedData, setEarningDeductionSelectedData] = useState('')\r\n  const [appConstantData, setAppConstantData] = useState('')\r\n  const [upcomingPayrollData, setUpcomingPayrollData] = useState('')\r\n  const [isOpenPayScheduleModal, setIsOpenPayScheduleModal] = useState(false)\r\n  const [isOpenTaxSlabModal, setIsOpenTaxSlabModal] = useState(false)\r\n  const [taxSlabData, setTaxSlabData] = useState('')\r\n  const [selectedPayScheduleData, setSelectedPayScheduleData] = useState('')\r\n  const [selectedTaxSlabData, setSelectedTaxSlabData] = useState('')\r\n  const [filteredDropdownData, setFilteredDropdownData] = useState({})\r\n  const [deleteTaxSlabId, setDeleteTaxSlabId] = useState('')\r\n  const [isShowDeleteTaxSlabModal, setIsShowDeleteTaxSlabModal] = useState(false)\r\n\r\n  const payrollSettingCard = [\r\n    {\r\n      name: \"Salary Component\",\r\n      imgUrl: \"images/applyleavesIcon.svg\",\r\n      onClickFunc: (id) => handleActiveTab(id),\r\n      id: \"salary_component\"\r\n    },\r\n    {\r\n      name: \"Pay Schedule\",\r\n      imgUrl: \"images/bonus-icon.svg\",\r\n      onClickFunc: (id) => handleActiveTab(id),\r\n      id: \"pay_schedule\"\r\n    },\r\n    {\r\n      name: \"IT Declaration\",\r\n      imgUrl: \"images/attendancelogIcon.svg\",\r\n      onClickFunc: (id) => handleActiveTab(id),\r\n      id: \"it_declaration\"\r\n    },\r\n    {\r\n      name: \"Tax Slab\",\r\n      imgUrl: \"images/attendancelogIcon.svg\",\r\n      onClickFunc: (id) => handleActiveTab(id),\r\n      id: \"tax_slab\"\r\n    },\r\n  ]\r\n  const handleActiveTab = (type) => {\r\n    if (type === \"pay_schedule\") {\r\n      upcomingPayrollsData()\r\n    } else if (type === \"tax_slab\") {\r\n      handleTaxSlabData()\r\n    }\r\n    setActiveCard(type)\r\n    setCurrentPage({\r\n      taxSlabCurrPage: 1,\r\n\r\n    })\r\n  }\r\n\r\n  const handleToggleModals = (type, data) => {\r\n    if (type === \"add_earnings\") {\r\n      if (data) {\r\n        setEarningDeductionSelectedData(data)\r\n      } else {\r\n        setEarningDeductionSelectedData('')\r\n      }\r\n      setIsOpenAddUpEarningModal(!isOpenAddUpEarningModal)\r\n      setIsOpenModalType(\"earnings\")\r\n    }\r\n    else if (type === \"deduction\") {\r\n      if (data) {\r\n        setEarningDeductionSelectedData(data)\r\n      }\r\n      else {\r\n        setEarningDeductionSelectedData('')\r\n      }\r\n      setIsOpenAddUpEarningModal(!isOpenAddUpEarningModal)\r\n      setIsOpenModalType(\"deduction\")\r\n    }\r\n    else if (type === \"post_tax_deduction\") {\r\n      setIsOpenAddPostTaxDeductionModal(!isOpenAddPostTaxDeductionModal)\r\n    }\r\n    else if (type === \"pre_tax_deduction\") {\r\n      setIsOpenAddPreTaxDeductionModal(!isOpenAddPreTaxDeductionModal)\r\n    }\r\n    else if (type === \"pay_schedule\") {\r\n      if (data) {\r\n        setSelectedPayScheduleData(data)\r\n      }\r\n      else {\r\n        setSelectedPayScheduleData('')\r\n      }\r\n      setIsOpenPayScheduleModal(!isOpenPayScheduleModal)\r\n    }\r\n    else if (type === \"tax_slab\") {\r\n      if (data) {\r\n        setSelectedTaxSlabData(data)\r\n      }\r\n      else {\r\n        setSelectedTaxSlabData('')\r\n      }\r\n      setIsOpenTaxSlabModal(!isOpenTaxSlabModal)\r\n    }\r\n  }\r\n\r\n  const handlePageChange = (pageNo, type) => {\r\n    console.log(pageNo, type, \"pageNo,type------\")\r\n    if (type === \"tax_slab\") {\r\n      setCurrentPage(pre => ({\r\n        ...pre,\r\n        taxSlabCurrPage: pageNo\r\n      }))\r\n      handleTaxSlabData(pageNo)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  /* Add Earning  */\r\n  const addEarnings = (payload) => {\r\n    dispatch(payrollActions.addEarningsRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!addEarningsPending) {\r\n      if (addEarningsError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_EARNING_STORE\"))\r\n        return;\r\n      }\r\n      if (addEarningsRes) {\r\n        if (addEarningsRes?.code === 200) {\r\n          getEarnings()\r\n          handleToggleModals(\"add_earnings\")\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_EARNING_STORE\"))\r\n\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    addEarningsRes,\r\n    addEarningsError,\r\n    addEarningsPending\r\n  ]);\r\n\r\n  /* Update Earning  */\r\n  const updateEarnings = (payload) => {\r\n    dispatch(payrollActions.updateEarningsRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!updateEarningsPending) {\r\n      if (updateEarningsError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_EARNING_STORE\"))\r\n        return;\r\n      }\r\n      if (updateEarningsRes) {\r\n        if (updateEarningsRes?.code === 200) {\r\n          getEarnings()\r\n          setEarningDeductionSelectedData('')\r\n          handleToggleModals(\"add_earnings\")\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_EARNING_STORE\"))\r\n\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    updateEarningsRes,\r\n    updateEarningsError,\r\n    updateEarningsPending\r\n  ]);\r\n\r\n\r\n\r\n\r\n  /* update Deduction Types */\r\n  const updateDeductions = (payload) => {\r\n    dispatch(payrollActions.updateDeductionsRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!updateDeductionsPending) {\r\n      if (updateDeductionsError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_DEDUCTIONS_STORE\"))\r\n        return;\r\n      }\r\n      if (updateDeductionsRes) {\r\n        if (updateDeductionsRes?.code === 200) {\r\n          handleToggleModals(\"deduction\")\r\n          setEarningDeductionSelectedData('')\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_DEDUCTIONS_STORE\"))\r\n\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    updateDeductionsRes,\r\n    updateDeductionsError,\r\n    updateDeductionsPending\r\n  ]);\r\n\r\n  /* Add Deduction Types */\r\n  const addDeductions = (payload) => {\r\n    dispatch(payrollActions.addDeductionsRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!addDeductionsPending) {\r\n      if (addDeductionsError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_DEDUCTIONS_STORE\"))\r\n        return;\r\n      }\r\n      if (addDeductionsRes) {\r\n        if (addDeductionsRes?.code === 200) {\r\n          handleToggleModals(\"deduction\")\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_DEDUCTIONS_STORE\"))\r\n\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    addDeductionsRes,\r\n    addDeductionsError,\r\n    addDeductionsPending\r\n  ]);\r\n\r\n  useEffect(() => {\r\n\r\n    getLeaveConstantData()\r\n    getAllEarningType()\r\n    getEarnings()\r\n    getDeductions()\r\n    getAllDeductionType()\r\n    getDropdownFilteredData()\r\n  }, [])\r\n\r\n\r\n  /* Get Leave Constant Data */\r\n  const getLeaveConstantData = (params) => {\r\n    dispatch(leaveAction.getLeaveConstantDataRequest(params));\r\n  }\r\n  useEffect(() => {\r\n    if (!getLeaveConstantDataPending) {\r\n      if (getLeaveConstantDataError) {\r\n        return;\r\n      }\r\n      if (getLeaveConstantDataRes) {\r\n        if (getLeaveConstantDataRes?.code === 200) {\r\n          const getLeaveConstantData = getLeaveConstantDataRes?.data\r\n          setAllLeaveConstantData(getLeaveConstantData)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getLeaveConstantDataRes,\r\n    getLeaveConstantDataError,\r\n    getLeaveConstantDataPending\r\n  ]);\r\n\r\n  /* Get All Earning Type Data */\r\n  const getAllEarningType = () => {\r\n    dispatch(payrollActions.getAllEarningTypeRequest());\r\n  }\r\n  useEffect(() => {\r\n    if (!getAllEarningTypePending) {\r\n      if (getAllEarningTypeError) {\r\n        return;\r\n      }\r\n      if (getAllEarningTypeRes) {\r\n        if (getAllEarningTypeRes?.code === 200) {\r\n          const getAllEarningTypeResData = getAllEarningTypeRes?.data\r\n          setAllEarningTypeData(getAllEarningTypeResData)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllEarningTypeRes,\r\n    getAllEarningTypeError,\r\n    getAllEarningTypePending\r\n  ]);\r\n\r\n  /* Get All Deduction Type Data */\r\n  const getAllDeductionType = () => {\r\n    dispatch(payrollActions.getAllDeductionTypeRequest());\r\n  }\r\n  useEffect(() => {\r\n    if (!getAllDeductionTypePending) {\r\n      if (getAllDeductionTypeError) {\r\n        return;\r\n      }\r\n      if (getAllDeductionTypeRes) {\r\n        if (getAllDeductionTypeRes?.code === 200) {\r\n          const getAllDeductionTypeResData = getAllDeductionTypeRes?.data\r\n          setAllDeductionTypeData(getAllDeductionTypeResData)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllDeductionTypeRes,\r\n    getAllDeductionTypeError,\r\n    getAllDeductionTypePending\r\n  ]);\r\n\r\n\r\n  /* Get All Earning Type Data */\r\n  const getEarningTypeById = (id) => {\r\n    dispatch(payrollActions.getEarningTypeByIdRequest({\r\n      id\r\n    }));\r\n  }\r\n  useEffect(() => {\r\n    if (!getEarningTypeByIdPending) {\r\n      if (getEarningTypeByIdError) {\r\n        return;\r\n      }\r\n      if (getEarningTypeByIdRes) {\r\n        if (getEarningTypeByIdRes?.code === 200) {\r\n          const getEarningTypeByIdResData = getEarningTypeByIdRes?.data\r\n          setEarningTypeByIdData(getEarningTypeByIdResData)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllEarningTypeRes,\r\n    getEarningTypeByIdError,\r\n    getEarningTypeByIdPending\r\n  ]);\r\n\r\n\r\n  /* Get All Earning Type Data */\r\n  const getEarnings = (id) => {\r\n    dispatch(payrollActions.getEarningsRequest());\r\n  }\r\n  useEffect(() => {\r\n    if (!getEarningsPending) {\r\n      if (getEarningsError) {\r\n        return;\r\n      }\r\n      if (getEarningsRes) {\r\n        if (getEarningsRes?.code === 200) {\r\n          const getEarningsResData = getEarningsRes?.data\r\n          setEarningData(getEarningsResData)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllEarningTypeRes,\r\n    getEarningsError,\r\n    getEarningsPending\r\n  ]);\r\n\r\n\r\n  /* Get Deductions Data */\r\n  const getDeductions = (id) => {\r\n    dispatch(payrollActions.getDeductionsRequest());\r\n  }\r\n  useEffect(() => {\r\n    if (!getDeductionsPending) {\r\n      if (getDeductionsError) {\r\n        return;\r\n      }\r\n      if (getDeductionsRes) {\r\n        if (getDeductionsRes?.code === 200) {\r\n          const getDeductionsResData = getDeductionsRes?.data\r\n          setDeductionsData(getDeductionsResData)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getDeductionsRes,\r\n    getDeductionsError,\r\n    getDeductionsPending\r\n  ]);\r\n\r\n  /*Get App Constant Data */\r\n  useEffect(() => {\r\n    getAppConstantData()\r\n  }, [])\r\n  const getAppConstantData = () => {\r\n    dispatch(commonActions.getAppConstantDataRequest())\r\n  }\r\n  useEffect(() => {\r\n    if (!getAppConstantDataPending) {\r\n      if (getAppConstantDataError) {\r\n        return;\r\n      }\r\n      if (getAppConstantDataRes) {\r\n        if (getAppConstantDataRes?.code === 200) {\r\n          setAppConstantData(getAppConstantDataRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAppConstantDataRes,\r\n    getAppConstantDataError,\r\n    getAppConstantDataPending\r\n  ]);\r\n\r\n  /* Add Pay Schedule  */\r\n\r\n  const handleAddPayScheduleData = (payload) => {\r\n    dispatch(payrollActions.addPayScheduleRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!addPaySchedulePending) {\r\n      if (addPayScheduleError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_PAY_SCHEDULE_STORE\"))\r\n        return;\r\n      }\r\n      if (addPayScheduleRes) {\r\n        if (addPayScheduleRes?.code === 200) {\r\n          handleToggleModals(\"pay_schedule\")\r\n          upcomingPayrollsData()\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_PAY_SCHEDULE_STORE\"))\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    addPayScheduleRes,\r\n    addPayScheduleError,\r\n    addPaySchedulePending\r\n  ]);\r\n\r\n  /* Update Pay Schedule  */\r\n  const handleUpdatePaySchedule = (payload) => {\r\n    dispatch(payrollActions.updatePayScheduleRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!updatePaySchedulePending) {\r\n      if (updatePayScheduleError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_PAY_SCHEDULE_STORE\"))\r\n        return;\r\n      }\r\n      if (updatePayScheduleRes) {\r\n        if (updatePayScheduleRes?.code === 200) {\r\n          handleToggleModals(\"pay_schedule\")\r\n          upcomingPayrollsData()\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_PAY_SCHEDULE_STORE\"))\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    updatePayScheduleRes,\r\n    updatePayScheduleError,\r\n    updatePaySchedulePending\r\n  ]);\r\n\r\n\r\n  /* Update Pay Schedule  */\r\n  const upcomingPayrollsData = () => {\r\n    dispatch(payrollActions.upcomingPayrollsRequest())\r\n  }\r\n  useEffect(() => {\r\n    if (!upcomingPayrollsPending) {\r\n      if (upcomingPayrollsError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPCOMING_PAY_ROLL_STORE\"))\r\n        return;\r\n      }\r\n      if (upcomingPayrollsRes) {\r\n        if (upcomingPayrollsRes?.code === 200) {\r\n          setUpcomingPayrollData(upcomingPayrollsRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    upcomingPayrollsRes,\r\n    upcomingPayrollsError,\r\n    upcomingPayrollsPending\r\n  ]);\r\n\r\n  /* Add Tax Slab   */\r\n  const handleAddUpdateTaxSlab = (payload) => {\r\n    if (selectedTaxSlabData) {\r\n      dispatch(payrollActions.updateTaxSlabRequest(payload))\r\n    } else {\r\n      dispatch(payrollActions.addTaxSlabRequest(payload))\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (!addTaxSlabPending) {\r\n      if (addTaxSlabError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_TAX_SLAB_STORE\"))\r\n        return;\r\n      }\r\n      if (addTaxSlabRes) {\r\n        if (addTaxSlabRes?.code === 200) {\r\n          // setUpcomingPayrollData(addTaxSlabRes?.data)\r\n          handleToggleModals(\"tax_slab\")\r\n          handleTaxSlabData()\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_TAX_SLAB_STORE\"))\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    addTaxSlabRes,\r\n    addTaxSlabError,\r\n    addTaxSlabPending\r\n  ]);\r\n\r\n  /* Add Tax Slab   */\r\n\r\n  useEffect(() => {\r\n    if (!updateTaxSlabPending) {\r\n      if (updateTaxSlabError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_TAX_SLAB_STORE\"))\r\n        return;\r\n      }\r\n      if (updateTaxSlabRes) {\r\n        if (updateTaxSlabRes?.code === 200) {\r\n          handleToggleModals(\"tax_slab\")\r\n          handleTaxSlabData()\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_TAX_SLAB_STORE\"))\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    updateTaxSlabRes,\r\n    updateTaxSlabError,\r\n    updateTaxSlabPending\r\n  ]);\r\n\r\n  /* Get Tax Slab Data   */\r\n  const handleTaxSlabData = (pageNo) => {\r\n    const payload = {\r\n      page: pageNo || currentPage?.taxSlabCurrPage,\r\n      limit: pagination?.limit\r\n\r\n    }\r\n    dispatch(payrollActions.getTaxSlabRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!getTaxSlabPending) {\r\n      if (getTaxSlabError) {\r\n        return;\r\n      }\r\n      if (getTaxSlabRes) {\r\n        if (getTaxSlabRes?.code === 200) {\r\n          setTaxSlabData(getTaxSlabRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getTaxSlabRes,\r\n    getTaxSlabError,\r\n    getTaxSlabPending\r\n  ]);\r\n\r\n  //dropdown master filter \r\n  const getDropdownFilteredData = () => {\r\n    const category = ['tax_slab']\r\n    let params = { category: '' }\r\n    category.forEach((item) => {\r\n      params.category = item\r\n      dispatch(dropdownMasterActions.getFilteredDropdownDataRequest(params))\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getFilteredDropdownDataPending) {\r\n      if (getFilteredDropdownDataError) {\r\n        return;\r\n      }\r\n      if (getFilteredDropdownDataRes) {\r\n        if (getFilteredDropdownDataRes?.code === 200) {\r\n          const dropdownFilterData = getFilteredDropdownDataRes?.data\r\n          let categoryName = dropdownFilterData?.category\r\n          setFilteredDropdownData(prevState => ({\r\n            ...prevState,\r\n            [categoryName]: dropdownFilterData?.data || []\r\n          }));\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getFilteredDropdownDataRes,\r\n    getFilteredDropdownDataError,\r\n    getFilteredDropdownDataPending\r\n  ]);\r\n\r\n\r\n  /* Delete Tax Slab  */\r\n  const onDeleteCancelTaxSlab = (type) => {\r\n    if (type) {\r\n      const params = {\r\n        _id: deleteTaxSlabId\r\n      }\r\n      dispatch(payrollActions?.deleteTaxSlabRequest(params))\r\n    } else {\r\n      toggleDeleteTaxSlabModal()\r\n    }\r\n  }\r\n  const toggleDeleteTaxSlabModal = (id) => {\r\n    if (id) {\r\n      setDeleteTaxSlabId(id)\r\n    }\r\n    setIsShowDeleteTaxSlabModal(!isShowDeleteTaxSlabModal)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!deleteTaxSlabPending) {\r\n      if (deleteTaxSlabError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_DELETE_TAX_SLAB_STORE\"))\r\n        return;\r\n      }\r\n      if (deleteTaxSlabRes) {\r\n        if (deleteTaxSlabRes?.code === 200) {\r\n          toggleDeleteTaxSlabModal()\r\n          handleTaxSlabData()\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_DELETE_TAX_SLAB_STORE\"))\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    deleteTaxSlabRes,\r\n    deleteTaxSlabError,\r\n    deleteTaxSlabPending\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <CustomCards cardData={payrollSettingCard} />\r\n      {activeCard === \"salary_component\" &&\r\n        <div>\r\n          <SalaryComponent\r\n            handleToggleModals={handleToggleModals}\r\n            earningData={earningData}\r\n            deductionsData={deductionsData}\r\n\r\n          />\r\n        </div>\r\n      }\r\n      {activeCard === \"pay_schedule\" &&\r\n        <div className=\"cardBox myRequest mb-3 employeeHistory\">\r\n          <PaySchedule\r\n            appConstantData={appConstantData}\r\n            upcomingPayrollData={upcomingPayrollData}\r\n            handleToggleModals={handleToggleModals}\r\n          />\r\n        </div>\r\n      }\r\n      {activeCard === \"tax_slab\" &&\r\n        <div className=\"cardBox myRequest mb-3 employeeHistory\">\r\n          <TaxSlab\r\n            handleToggleModals={handleToggleModals}\r\n            taxSlabData={taxSlabData}\r\n            setCurrentPage={handlePageChange}\r\n            toggleDeleteTaxSlabModal={toggleDeleteTaxSlabModal}\r\n          />\r\n        </div>\r\n      }\r\n\r\n      {/* Payroll Setting Modals */}\r\n\r\n      {isOpenAddUpEarningModal && <AddUpdateEarnings\r\n        openModel={isOpenAddUpEarningModal}\r\n        handleOpenClose={handleToggleModals}\r\n        addEarnings={addEarnings}\r\n        allLeaveConstantData={allLeaveConstantData}\r\n        allEarningTypeData={allEarningTypeData}\r\n        allDeductionTypeData={allDeductionTypeData}\r\n        getEarningTypeById={getEarningTypeById}\r\n        isOpenModalType={isOpenModalType}\r\n        addDeductions={addDeductions}\r\n        earningDeductionSelectedData={earningDeductionSelectedData}\r\n        updateEarnings={updateEarnings}\r\n        updateDeductions={updateDeductions}\r\n        earningTypeByIdData={earningTypeByIdData}\r\n      />}\r\n\r\n\r\n      {isOpenAddPreTaxDeductionModal && <AddPreTaxDeduction\r\n        openModel={isOpenAddPreTaxDeductionModal}\r\n        handleOpenClose={handleToggleModals}\r\n      />}\r\n      {isOpenAddPostTaxDeductionModal && <AddPostTaxDeduction\r\n        openModel={isOpenAddPostTaxDeductionModal}\r\n        handleOpenClose={handleToggleModals}\r\n      />}\r\n\r\n      {isOpenPayScheduleModal && <AddUpdatePaySchedule\r\n        isOpenModal={isOpenPayScheduleModal}\r\n        handleToggleModals={handleToggleModals}\r\n        appConstantData={appConstantData}\r\n        selectedPayScheduleData={selectedPayScheduleData}\r\n        handleAddPayScheduleData={handleAddPayScheduleData}\r\n        handleUpdatePaySchedule={handleUpdatePaySchedule}\r\n      />}\r\n\r\n      {isOpenTaxSlabModal && <AddUpdateTaxSlab\r\n        isOpenModal={isOpenTaxSlabModal}\r\n        handleToggleModals={handleToggleModals}\r\n        selectedPayScheduleData={selectedPayScheduleData}\r\n        selectedTaxSlabData={selectedTaxSlabData}\r\n        handleAddUpdateTaxSlab={handleAddUpdateTaxSlab}\r\n        filteredDropdownData={filteredDropdownData}\r\n\r\n      />}\r\n\r\n      {isShowDeleteTaxSlabModal && (\r\n        <ApproveRejectModal\r\n          onApproveReject={onDeleteCancelTaxSlab}\r\n          isShow={isShowDeleteTaxSlabModal}\r\n          desc={t(\"alerts.deletePopup.desc\").replace('$1', \"Tax Slab\")}\r\n          btnRightLoading={deleteTaxSlabPending}\r\n          btnTextRight={t(\"btns.delete\")}\r\n          btnTextLeft={t(\"btns.cancel\")}\r\n        />)\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PayrollSetting\r\n"],"names":["_ref","title","desc","onApproveReject","isShow","btnLeftLoading","btnRightLoading","btnTextLeft","btnTextRight","t","useCustomTranslation","_jsxs","_Fragment","children","_jsx","className","id","style","display","opacity","Lottieplayer","lottieUrl","backup","Lottiestyle","width","height","CustomButton","classNames","isLoading","text","handleClick","cardData","length","map","card","onClick","onClickFunc","src","imgUrl","alt","name","props","currentPage","setCurrentPage","earningData","handleToggleModals","earningScopedSlots","useMemo","sn","_","index","is_active","item","getBadgeColor","action","type","CustomTable","data","fields","key","label","pagination","totalPages","isHeader","tableStyle","padding","boxShadow","scopedSlots","deductionsData","deductionScopedSlots","include_in_ctc","tableTabsRequest","onClickFun","getSalaryData","CustomTabs","tabs","EarningsTable","DeductionsTable","earningRuleData","deleteEarningRule","editEarningRule","rules","earningRuleScopedSlots","cursor","Icon","border","useDispatch","getAllEarningTypeRes","useSelector","state","payroll","toggleEarningRulesFormula","allLeaveConstantData","setEarningRulesData","earningRules","setEarningRules","useState","brackets","earningType","operators","validDescription","setValidDescription","isFillDesc","setIsFillDesc","handleFromChange","e","fieldName","value","prevState","backgroundColor","Label","CustomSelect","placeholder","handleChange","selectedOption","onAddFormulaField","addFormulaFields","prev","Textarea","onChange","target","CustomError","pre","alertLabel","role","setRules","errors","setErrors","isOpenERF","setIsOpenERF","setEarningRuleData","selectedIndex","setSelectedIndex","from","to","amount","_e$target","checked","prevErrors","undefined","resetEarningRulesFields","useEffect","EarningRulesTable","filter","ind","CustomStrong","required","Input","fontSize","EarningRulesFormula","CustomAlert","styles","minWidth","submitEarningRules","updatedRuleData","rule","earningTypeData","earning_type_name","isDisabled","CustomRadio","yesNoOptions","selectedValue","calculation_type","yesNoFlexOptions","is_pro_rata","can_include_as_fbp","is_included_in_epf","is_included_in_esi","show_in_payslip","CustCheckbox","_checkCalculationType","_checkCalculationType2","dispatch","getEarningTypeByIdRes","addEarningsPending","updateEarningsPending","earningDeductionSelectedData","openModel","handleOpenClose","allEarningTypeData","addEarnings","getEarningTypeById","isOpenModalType","addDeductions","updateEarnings","updateDeductions","earningTypeByIdData","allDeductionTypeData","createUpdateEarningsFormData","setCreateUpdateEarningsFormData","nameInPayslip","calculationType","calculationTypeValue","variablePay","includedCTC","taxableComp","isActive","updatedState","_id","resetForm","earning_type","payslip_name","value_in","is_variable_pay","is_taxable","payrollActions","handleClearPayrollStore","earningTabs","onTabChange","deductionTabs","checkCalculationType","tabIndex","visibility","borderBottom","calculationTypeOptions","maxAllowance","EarningRules","ViewsEarningTypes","async","_createUpdateEarnings","payload","is_optional","max_allowance","submitCreateUpdateEarnings","isOpenModal","selectedPayScheduleData","appConstantData","handleAddPayScheduleData","handleUpdatePaySchedule","payScheduleFormData","setPayScheduleFormData","payScheduleType","payOn","payDay","payPeriodStartDate","addPaySchedulePending","updatePaySchedulePending","selectData","pay_schedule_type","noOfWorkingDays","no_of_working_days","pay_on","pay_day","pay_period_start_date","tooltipText","CustRadio","htmlFor","radioClass","workingDays","monthDays","submitAddUpdatePaySchedule","_payScheduleFormData$","_payScheduleFormData$2","_selectedPayScheduleD","upcomingPayrollData","upcomingPayrollsPending","payScheduleData","setPayScheduleData","arrearsEmployeeScopedSlots","fontWeight","dateFormate","pay_date","upcoming_pay_periods","postTaxDeductionFormData","setPostTaxDeductionFormData","deductionFrequency","class","submitPostTaxDeduction","deductionWithData","deductionPlanData","preTaxDeductionFormData","setPreTaxDeductionFormData","deductionPlan","deductionWith","employerContributionCTC","calculateProRataBasis","submitPreTaxDeduction","taxSlabData","toggleDeleteTaxSlabModal","getTaxSlabPending","taxSlabScopedSlots","pageNo","selectedTaxSlabData","filteredDropdownData","handleAddUpdateTaxSlab","updateTaxSlabPending","addTaxSlabPending","taxSlabFormData","setTaxSlabFormData","slabType","start","end","taxPercent","includeCess","cessPercent","standardDeduction","standardDeductionValue","taxRelaxation","constantDifference","rebateAllowed","rebateRules","tex_percent","is_include_cess","cess_percent","is_standard_deduction","standard_deduction_value","tex_relaxation","constant_difference","is_rebate_allowed","rebate_rules","tax_slab","validationResponse","validateSchema","taxSlabSchema","isValid","submitAddUpdateTaxSlab","PayrollSetting","activeCard","setActiveCard","addEarningsRes","addEarningsError","updateEarningsRes","updateEarningsError","getEarningsPending","getEarningsRes","getEarningsError","addDeductionsPending","addDeductionsRes","addDeductionsError","updateDeductionsPending","updateDeductionsRes","updateDeductionsError","getDeductionsPending","getDeductionsRes","getDeductionsError","getAllEarningTypePending","getAllEarningTypeError","getAllDeductionTypePending","getAllDeductionTypeRes","getAllDeductionTypeError","getEarningTypeByIdPending","getEarningTypeByIdError","addPayScheduleRes","addPayScheduleError","updatePayScheduleRes","updatePayScheduleError","upcomingPayrollsRes","upcomingPayrollsError","addTaxSlabRes","addTaxSlabError","updateTaxSlabRes","updateTaxSlabError","getTaxSlabRes","getTaxSlabError","deleteTaxSlabPending","deleteTaxSlabRes","deleteTaxSlabError","getLeaveConstantDataPending","getLeaveConstantDataRes","getLeaveConstantDataError","leave","getAppConstantDataPending","getAppConstantDataRes","getAppConstantDataError","common","getFilteredDropdownDataError","getFilteredDropdownDataRes","getFilteredDropdownDataPending","dropdownMaster","isOpenAddUpEarningModal","setIsOpenAddUpEarningModal","isOpenAddPostTaxDeductionModal","setIsOpenAddPostTaxDeductionModal","isOpenAddPreTaxDeductionModal","setIsOpenAddPreTaxDeductionModal","taxSlabCurrPage","setAllDeductionTypeData","setAllEarningTypeData","setEarningTypeByIdData","setAllLeaveConstantData","setEarningData","setIsOpenModalType","setDeductionsData","setEarningDeductionSelectedData","setAppConstantData","setUpcomingPayrollData","isOpenPayScheduleModal","setIsOpenPayScheduleModal","isOpenTaxSlabModal","setIsOpenTaxSlabModal","setTaxSlabData","setSelectedPayScheduleData","setSelectedTaxSlabData","setFilteredDropdownData","deleteTaxSlabId","setDeleteTaxSlabId","isShowDeleteTaxSlabModal","setIsShowDeleteTaxSlabModal","payrollSettingCard","handleActiveTab","upcomingPayrollsData","handleTaxSlabData","code","getEarnings","getLeaveConstantData","getAllEarningType","getDeductions","getAllDeductionType","getDropdownFilteredData","params","leaveAction","getLeaveConstantDataRequest","getAllEarningTypeRequest","getAllEarningTypeResData","getAllDeductionTypeRequest","getAllDeductionTypeResData","getEarningTypeByIdResData","getEarningsRequest","getEarningsResData","getDeductionsRequest","getDeductionsResData","getAppConstantData","commonActions","getAppConstantDataRequest","upcomingPayrollsRequest","page","limit","getTaxSlabRequest","category","forEach","dropdownMasterActions","getFilteredDropdownDataRequest","dropdownFilterData","categoryName","CustomCards","SalaryComponent","PaySchedule","TaxSlab","handlePageChange","console","log","AddUpdateEarnings","addEarningsRequest","getEarningTypeByIdRequest","addDeductionsRequest","updateEarningsRequest","updateDeductionsRequest","AddPreTaxDeduction","AddPostTaxDeduction","AddUpdatePaySchedule","addPayScheduleRequest","updatePayScheduleRequest","AddUpdateTaxSlab","updateTaxSlabRequest","addTaxSlabRequest","ApproveRejectModal","deleteTaxSlabRequest","replace"],"sourceRoot":""}