{"version":3,"file":"static/js/3430.f759eba9.chunk.js","mappings":"2JAEA,MA2BA,EA3BiBA,KAETC,EAAAA,EAAAA,KAAA,OAAAC,UACIC,EAAAA,EAAAA,MAAA,OACIC,QAAQ,MACRC,GAAG,UACHC,EAAG,EACHC,EAAG,EACHC,QAAQ,cACRC,SAAS,WACTC,UAAU,qBACVC,MAAO,CACHC,OAAQ,OACRC,MAAO,OACPC,OAAQ,WACVZ,SAAA,EAEFD,EAAAA,EAAAA,KAAA,UAAQI,GAAG,SAASU,QAAQ,KAAKC,KAAK,UAAUC,GAAI,IAAKC,GAAI,IAAKC,EAAG,OACrElB,EAAAA,EAAAA,KAAA,QACIe,KAAK,UACLI,EAAE,wO,8MCPtB,MAqaA,EAra4BC,IACxB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,+BACFC,EAA8B,2BAC9BC,EAA0B,6BAC1BC,EAA4B,kBAE5BC,EAAiB,cACjBC,EAAa,gBACbC,EAAe,sBAEfC,EAAqB,kBACrBC,EAAiB,oBACjBC,IAEAC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,OAEzB,iCACFC,EAAgC,6BAChCC,EAA4B,+BAC5BC,IAEAL,EAAAA,EAAAA,KAAYC,GAASA,EAAMK,iBAEzB,EAAEC,IAAMC,EAAAA,EAAAA,MACR,qBAAEC,IAAyBT,EAAAA,EAAAA,KAAYC,GAASA,EAAMS,YACrDC,EAA0BC,IAA+BC,EAAAA,EAAAA,UAAS,KAClEC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAwBC,IAA6BJ,EAAAA,EAAAA,UAAS,KAC9DK,EAA4BC,IAAiCN,EAAAA,EAAAA,UAAS,OAI7EO,EAAAA,EAAAA,YAAU,KACFX,IACAY,EAAkCZ,GAClCa,EAAoC,CAAEC,aAAkC,OAApBd,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBc,eAC9E,GACD,CAACd,KAEJW,EAAAA,EAAAA,YAAU,KACFX,GAAwBS,IACxBM,IACAT,EAAY,IAChB,GACD,CAACN,EAAsBS,IAG1B,MAAMG,EAAqCI,IAElB,OAAJA,QAAI,IAAJA,GAAAA,EAAMC,IACD,OAAJD,QAAI,IAAJA,GAAAA,EAAMF,aACR,OAAJE,QAAI,IAAJA,GAAAA,EAAME,MAEjB,EAwBCL,EAAuCM,IACzCzC,EAAS0C,EAAAA,GAAqBC,iCAAiCF,GAAS,GAI5ER,EAAAA,EAAAA,YAAU,KACN,IAAKjB,EAAkC,CACnC,GAAIE,EACA,OAEJ,GAAID,GAC2C,OAAX,OAA5BA,QAA4B,IAA5BA,OAA4B,EAA5BA,EAA8B2B,MAAc,CAC5C,IAAIC,GAAcC,EAAAA,EAAAA,IAAiD,OAA5B7B,QAA4B,IAA5BA,OAA4B,EAA5BA,EAA8BqB,MACrEN,EAA8Ba,GAC9Bf,EAAsD,OAA5Bb,QAA4B,IAA5BA,OAA4B,EAA5BA,EAA8BqB,KAE5D,CAER,IACD,CACCrB,EACAC,EACAF,IAKJ,MAAM+B,EAAuBA,CAACC,EAAGC,EAAYC,EAAeC,KAAgB,IAADC,EAAAC,EACvE,MAAMC,EAAOH,IAAsB,QAAZC,EAAIJ,EAAEO,cAAM,IAAAH,OAAA,EAARA,EAAUE,MAC/BE,EAAgB,QAAXH,EAAGL,EAAEO,cAAM,IAAAF,OAAA,EAARA,EAAUG,MAExB/B,GAA6BgC,IACzB,MAAMC,EAAc,IAAID,GAClBE,EAAe,IAAKD,EAAYT,IAChCW,EAAmB,IAAID,EAAaE,2BACpCC,EAAkB,IACjBF,EAAiBV,GACpB,CAACI,GAAOE,GAOZ,OAJAI,EAAiBV,GAAiBY,EAClCH,EAAaE,0BAA4BD,EACzCF,EAAYT,GAAcU,EAEnBD,CAAW,GACpB,EAmHAK,EAAsBA,KACxB,IAAIC,EAAW,GACXC,EAAU,CAAE,OAA8B,OAApB3C,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBkB,OAAQ,gBAAuC,OAApBlB,QAAoB,IAApBA,OAAoB,EAApBA,EAAsB4C,iBAiBjG,OAhBwB,OAAxB1C,QAAwB,IAAxBA,GAAAA,EAA0B2C,KAAI,CAACC,EAAWC,KAAW,IAADC,EAChDL,EAAsB,aAAa,OAATG,QAAS,IAATA,OAAS,EAATA,EAAW7B,IAC5B,OAAT6B,QAAS,IAATA,GAAoC,QAA3BE,EAATF,EAAWP,iCAAyB,IAAAS,GAApCA,EAAsCH,KAAKI,IACvCN,EAAU,IACHA,EACH,cAA4B,OAAZM,QAAY,IAAZA,OAAY,EAAZA,EAAcC,eAAgB,GAC9C,kBAAgC,OAAZD,QAAY,IAAZA,OAAY,EAAZA,EAAchC,MAAO,GACzC,eAA6B,OAAZgC,QAAY,IAAZA,OAAY,EAAZA,EAAcE,gBAAiB,GAChD,2BAAyC,OAAZF,QAAY,IAAZA,OAAY,EAAZA,EAAcG,4BAA6B,GACxE,eAA6B,OAAZH,QAAY,IAAZA,OAAY,EAAZA,EAAcI,gBAAiB,GAChD,sBAAoC,OAAZJ,QAAY,IAAZA,OAAY,EAAZA,EAAcK,uBAAwB,IAG1D,OAARZ,QAAQ,IAARA,GAAAA,EAAUa,KAAKZ,EAAQ,GACzB,IAECD,CAAQ,GAWnB/B,EAAAA,EAAAA,YAAU,KACN,IAAK1B,EAAmB,CACpB,GAAIE,EAEA,YADAT,EAAS8E,EAAAA,GAAWC,oBAAoB,mCAGxCvE,GAC4B,OAAX,OAAbA,QAAa,IAAbA,OAAa,EAAbA,EAAeoC,QACf5C,EAAS8E,EAAAA,GAAWC,oBAAoB,mCACxC/C,EAA8B,MAC9B9B,EAAS,YAGrB,IACD,CACCM,EACAC,EACAF,IAIJ,MAAM8B,EAAqBA,KACvB,MAAMI,EAAU,CACZL,aAAkC,OAApBd,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBc,aACpC4C,YAAiC,OAApB1D,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBiB,IACnC0C,aAAwC,OAA1BlD,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4ByB,OAE9CxD,EAAS8E,EAAAA,GAAWI,sBAAsBzC,GAAS,EAyBvD,OAvBAR,EAAAA,EAAAA,YAAU,KACN,IAAKvB,EAAuB,CACxB,GAAIE,EAEA,OAGsC,IAADuE,EAAAC,EAAAC,EAAAC,EADzC,GAAI3E,EACA,GAAgC,OAAX,OAAjBA,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBiC,MACnBnB,EAA6C,OAAjBd,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB2B,MAC/CV,EAA6B,OAAjBjB,QAAiB,IAAjBA,GAAuB,QAANwE,EAAjBxE,EAAmB2B,YAAI,IAAA6C,GAAK,QAALC,EAAvBD,EAA0B,UAAE,IAAAC,GAA2B,QAA3BC,EAA5BD,EAA8BvB,iCAAyB,IAAAwB,GAAK,QAALC,EAAvDD,EAA0D,UAAE,IAAAC,OAA3C,EAAjBA,EAA8D3D,SAItF,IACD,CACChB,EACAC,EACAF,KAOA7B,EAAAA,EAAAA,MAAA,OAAKO,UAAU,UAASR,SAAA,EACpBC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,cAAaR,SAAA,EACxBD,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAC4G,EAAAA,GAAI,CAACC,GAAI,WAAW5G,UACjBD,EAAAA,EAAAA,KAACD,EAAAA,EAAQ,SAGjBC,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,MAAAC,SAAK,sBAObC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,sBAAqBR,SAAA,EAChCD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,WAAUR,UACrBD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,GAAER,UACbC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,WACKD,EAAAA,EAAAA,KAAA,UAAAC,SAA6B,OAApB0C,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBmE,iBAIlD9G,EAAAA,EAAAA,KAAA,OAAKS,UAAU,WAAUR,UACrBD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,GAAER,UACbC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,SACGD,EAAAA,EAAAA,KAAA,UAAAC,SAA6B,OAApB0C,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBgC,eAIhD3E,EAAAA,EAAAA,KAAA,OAAKS,UAAU,WAAUR,UACrBD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,GAAER,UACbC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,UACID,EAAAA,EAAAA,KAAA,UAAAC,SAA6B,OAApB0C,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBoE,gBAIjD/G,EAAAA,EAAAA,KAAA,OAAKS,UAAU,WAAUR,UACrBD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,GAAER,UACbC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,aACOD,EAAAA,EAAAA,KAAA,UAAAC,SAA6B,OAApB0C,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBqE,sBAMxD9G,EAAAA,EAAAA,MAAA,OAAKO,UAAU,yDAAwDR,SAAA,EACnED,EAAAA,EAAAA,KAAA,QAAMS,UAAU,UAASR,SAAC,cAC1BD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,QAAOR,UAClBD,EAAAA,EAAAA,KAACiH,EAAAA,EAAY,CACTtD,KAAMT,EACNgE,YAAa,eACbrC,MAAOzB,GAA8B,GACrC+D,aAAeC,GAAmB/D,EAA8B+D,GAChEzC,KAAK,wBAIjB3E,EAAAA,EAAAA,KAAA,OAAKS,UAAU,UAASR,SAEnB8B,GAAwB7B,EAAAA,EAAAA,MAAA,QAAAD,SAAA,EAAMD,EAAAA,EAAAA,KAACqH,EAAAA,EAAa,CAACC,OAAQvF,EAAuBwF,KAAK,OAAO,QACrFrH,EAAAA,EAAAA,MAAAsH,EAAAA,SAAA,CAAAvH,SAAA,EA7PgB,OAAxB4C,QAAwB,IAAxBA,OAAwB,EAAxBA,EAA0B4E,QAAS,EAA4B,OAAxB5E,QAAwB,IAAxBA,OAAwB,EAAxBA,EAA0B2C,KAAI,CAACkC,EAAehC,KAAK,IAAAiC,EAAA,OACtFzH,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,0CAAyCR,SAAA,CACnD,KACDD,EAAAA,EAAAA,KAAA,QAAAC,SAAoB,OAAbyH,QAAa,IAAbA,OAAa,EAAbA,EAAeE,iBAAuB,KAC7C1H,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAoB,OAAbyH,QAAa,IAAbA,OAAa,EAAbA,EAAeG,oBAAoB,WAE9C7H,EAAAA,EAAAA,KAAA,MAAIS,UAAU,gBAAeR,SACX,OAAbyH,QAAa,IAAbA,GAAwC,QAA3BC,EAAbD,EAAexC,iCAAyB,IAAAyC,OAA3B,EAAbA,EAA0CnC,KAAI,CAACsC,EAAcC,KAC1D/H,EAAAA,EAAAA,KAAA,MAAAC,UACIC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACID,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,kBACRD,EAAAA,EAAAA,KAAA,KAAAC,SACiB,OAAZ6H,QAAY,IAAZA,OAAY,EAAZA,EAAc7B,wBAEnB/F,EAAAA,EAAAA,MAAA,OAAKO,UAAU,sCAAqCR,SAAA,EAChDC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,oBACcD,EAAAA,EAAAA,KAAA,KAAAC,SAAgB,OAAZ6H,QAAY,IAAZA,OAAY,EAAZA,EAAc/B,gCAEtC7F,EAAAA,EAAAA,MAAA,QAAMO,UAAU,eAAcR,SAAA,EAC1BC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,cACQD,EAAAA,EAAAA,KAAA,KAAAC,SAAgB,OAAZ6H,QAAY,IAAZA,OAAY,EAAZA,EAAc9B,mBAEW,uBAAtB,OAApBrD,QAAoB,IAApBA,OAAoB,EAApBA,EAAsB4C,mBAA2CrF,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,eACzDD,EAAAA,EAAAA,KAAA,KAAAC,SAAgB,OAAZ6H,QAAY,IAAZA,OAAY,EAAZA,EAAcE,sBAIE,uBAAtB,OAApBrF,QAAoB,IAApBA,OAAoB,EAApBA,EAAsB4C,kBACnBrF,EAAAA,EAAAA,MAAAsH,EAAAA,SAAA,CAAAvH,SAAA,EACID,EAAAA,EAAAA,KAAA,QAAMS,UAAU,QAAOR,SAAC,yBACxBD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,QAAOR,UAClBD,EAAAA,EAAAA,KAACiI,EAAAA,GAAK,CACFC,KAAK,SACLhB,YAAa,gBACbrC,MAAOiD,EAA4B,cACnCnD,KAAK,gBACLwD,SAAW9D,GAAMD,EAAqBC,EAAGqB,EAAOqC,WAI5D7H,EAAAA,EAAAA,MAAAsH,EAAAA,SAAA,CAAAvH,SAAA,EACID,EAAAA,EAAAA,KAAA,QAAMS,UAAU,QAAOR,SAAC,2BACxBD,EAAAA,EAAAA,KAAA,MAAIS,UAAU,gBAAeR,SACxB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGuF,KAAK4C,IAClB,MAAMC,EAAU,UAAU3C,KAASqC,KAAgBK,IAEnD,OACIpI,EAAAA,EAAAA,KAAA,MAAAC,UACIC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,YAAWR,SAAA,EACtBD,EAAAA,EAAAA,KAAA,SACIkI,KAAK,QACL9H,GAAIiI,EAEJ1D,KAAM,iBAAiBe,KAASqC,IAChCtH,UAAU,SACVoE,MAAOuD,EACPE,QAASR,EAA4B,eAAKM,EAC1CD,SAAW9D,GAAMD,EAAqBC,EAAGqB,EAAOqC,EAAc,oBAMlE7H,EAAAA,EAAAA,MAAA,SAAOqI,QAASF,EAAQpI,SAAA,CACnBmI,EAAO,KAACpI,EAAAA,EAAAA,KAAA,KAAGS,UAAU,0BAjBzB2H,EAoBJ,aA3DxBL,SARXrC,EA8EJ,KAGD3D,IAAyB/B,EAAAA,EAAAA,KAAA,QAAMS,UAAU,gCAA+BR,UACrED,EAAAA,EAAAA,KAACwI,EAAAA,EAAe,CAACC,KAAM,2BA6KvBvI,EAAAA,EAAAA,MAAA,OAAKO,UAAU,kBAAiBR,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,SAAOqI,QAAQ,GAAG9H,UAAU,gCAA+BR,SAAA,CAAC,WAC/C,QAGbD,EAAAA,EAAAA,KAAC0I,EAAAA,GAAQ,CACLxB,YAAa,iBACbiB,SAAW9D,GAAMpB,EAAYoB,EAAEO,OAAOC,OACtCF,KAAM,SACNE,MAAO7B,aAU3BhD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,sDAAqDR,UAChED,EAAAA,EAAAA,KAAC2I,EAAAA,GAAY,CACTF,KAAMhG,EAAE,eACRmG,WAAY,uBACZC,YAAaA,IA5LJC,MAKrB,MAAMC,EAAmB3D,IACnBtB,EAAU,CACZuC,aAAiC,OAApB1D,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBiB,MAAO,GAC1CH,cAAkC,OAApBd,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBc,eAAgB,GAEpD6C,cAAwC,OAA1BlD,QAA0B,IAA1BA,OAA0B,EAA1BA,EAA4ByB,QAAS,GACnD7B,SAAUA,GAAY,GACtB8C,cAAeiD,GAAoB,IAEvC1H,EAAS8E,EAAAA,GAAW6C,kBAAkBlF,GAAS,EA8KhBgF,GAEnBG,aArJLpG,IAAoD,OAAxBA,QAAwB,IAAxBA,OAAwB,EAAxBA,EAA0B4E,QAAS,IAA6B,OAAxB5E,QAAwB,IAAxBA,OAAwB,EAAxBA,EAA0BqG,OAAMC,IAAK,IAAAC,EAAA,OACvG,OAALD,QAAK,IAALA,GAAgC,QAA3BC,EAALD,EAAOjE,iCAAyB,IAAAkE,OAA3B,EAALA,EAAkCF,OAAMG,GACb,MAApB,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKvD,gBAA+C,QAApB,OAAHuD,QAAG,IAAHA,OAAG,EAAHA,EAAKvD,qBAAiDwD,KAApB,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKvD,gBACpE,YAwJC,C,2GC3ad,MAgFA,EAhF0B1E,IACtB,MAAM,YAAEmI,EAAW,eAAEC,EAAc,aAAEC,EAAY,kBAAEC,EAAiB,wBAACC,GAA2BvI,EAc1FwI,GAA4BC,EAAAA,EAAAA,UAAQ,MACtCC,GAAIA,CAACC,EAAGrE,KACJ1F,EAAAA,EAAAA,KAAA,QAAAC,SAAOyF,EAAQ,IAEnBsE,eAAgBA,CAACC,EAAMvE,KACnB1F,EAAAA,EAAAA,KAAA,QACIS,UAAW,IAAGyJ,EAAAA,EAAAA,IAAmB,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMD,kCAAkC/J,SAEhE,OAAJgK,QAAI,IAAJA,OAAI,EAAJA,EAAMD,iBAGfG,aAAcF,IACVjK,EAAAA,EAAAA,KAAA,QAAAC,SAAW,OAAJgK,QAAI,IAAJA,GAAAA,EAAME,cAAcC,EAAAA,EAAAA,IAAgB,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAME,cAAe,MAEhEnD,SAAUiD,IACNjK,EAAAA,EAAAA,KAAA,QAAAC,SAAW,OAAJgK,QAAI,IAAJA,GAAAA,EAAMjD,SAAW,MAAO,OAGnCqD,OAAQJ,IACJ/J,EAAAA,EAAAA,MAAA,OAAKO,UAAU,sBAAqBR,SAAA,EAChCD,EAAAA,EAAAA,KAAA,UAAQkI,KAAK,SAASzH,UAAU,4BAC5B,iBAAe,WAAW,gBAAc,QAAOR,UAC/CD,EAAAA,EAAAA,KAAA,KAAGS,UAAU,iCAEjBP,EAAAA,EAAAA,MAAA,MAAIO,UAAU,gBAAeR,SAAA,EACzBD,EAAAA,EAAAA,KAAA,MAAAC,UACID,EAAAA,EAAAA,KAAA,QACIS,UAAU,gBACZ6J,QAASA,IAAMZ,EAAkBO,GAAMhK,SACxC,oBAILD,EAAAA,EAAAA,KAAA,MAAAC,UACID,EAAAA,EAAAA,KAAA,QACIS,UAAU,gBACZ6J,QAASA,IAAMX,EAAwBM,GAAMhK,SAC9C,mCAOjB,CAACwJ,IACL,OACIzJ,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,OAAKS,UAAU,wCAAuCR,UAClDD,EAAAA,EAAAA,KAACuK,EAAAA,GAAW,CACR5G,KAAM8F,GAAgB,GACtBe,OA9DY,CACxB,CAAEC,IAAK,KAAMC,MAAO,OACpB,CAAED,IAAK,SAAUC,MAAO,UACxB,CAAED,IAAK,OAAQC,MAAO,YACtB,CAAED,IAAK,eAAgBC,MAAO,gBAI9B,CAAED,IAAK,WAAYC,MAAO,gBAC1B,CAAED,IAAK,iBAAkBC,MAAO,kBAChC,CAAED,IAAK,SAAUC,MAAO,WAsDZC,YAAY,EACZpB,YAAaA,EACbC,eAAgBA,EAChBoB,WAAwB,OAAZnB,QAAY,IAAZA,OAAY,EAAZA,EAAcmB,WAC1BC,UAAU,EACVC,WAAY,CAAEC,QAAS,MAAOC,UAAW,QACzCC,YAAarB,OAGnB,EChCd,EA7CuBxI,IACnB,MAAM,YAAEmI,EAAW,eAAEC,EAAc,uBAAE0B,GAA2B9J,EAW1D+J,GAA2BtB,EAAAA,EAAAA,UAAQ,MACrCC,GAAIA,CAACC,EAAGrE,KACJ1F,EAAAA,EAAAA,KAAA,QAAAC,SAAOyF,EAAQ,IAEnByE,aAAcF,IACZjK,EAAAA,EAAAA,KAAA,QAAAC,SAAW,OAAJgK,QAAI,IAAJA,GAAAA,EAAME,cAAcC,EAAAA,EAAAA,IAAgB,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAME,cAAe,MAEhEiB,eAAgBnB,IAAI,IAAAoB,EAAA,OAClBrL,EAAAA,EAAAA,KAAA,QAAAC,UAAW,OAAJgK,QAAI,IAAJA,GAAoB,QAAhBoB,EAAJpB,EAAMmB,sBAAc,IAAAC,OAAhB,EAAJA,EAAsBC,QAAQ,KAAK,KAAW,KAGrD,CAACJ,IACP,OACElL,EAAAA,EAAAA,KAAA,OAAAC,UACGD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,4BAA2BR,UAC1CD,EAAAA,EAAAA,KAACuK,EAAAA,GAAW,CACC5G,KAAMuH,GAA0B,GAChCV,OA1BW,CACvB,CAAEC,IAAK,KAAMC,MAAO,OACpB,CAAED,IAAK,gBAAiBC,MAAO,UAC/B,CAAED,IAAK,gBAAiBC,MAAO,YAC/B,CAAED,IAAK,eAAgBC,MAAO,gBAG9B,CAAED,IAAK,iBAAkBC,MAAO,0BAqBpBC,YAAY,EACZpB,YAAaA,EACbC,eAAgBA,EAChBoB,WAAkC,OAAtBM,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwBN,WACpCC,UAAU,EACVC,WAAY,CAAEC,QAAS,MAAOC,UAAW,QACzCC,YAAaE,OAIvB,E,oEC1CV,MA+FA,EA/F2B/J,IACvB,MAAM,UAAEmK,EAAS,gBAAEC,EAAe,iBAAEC,EAAgB,cAACC,GAAkBtK,EASjEuK,GAAwB9B,EAAAA,EAAAA,UAAQ,MAClCC,GAAIA,CAACC,EAAGrE,KACJ1F,EAAAA,EAAAA,KAAA,QAAAC,SAAOyF,EAAQ,OAGnB,CAACgG,IACL,OACIxL,EAAAA,EAAAA,MAAAsH,EAAAA,SAAA,CAAAvH,SAAA,EACIC,EAAAA,EAAAA,MAAA,OAAKO,UAAW,6BAA4B8K,EAAY,OAAS,IAC7DK,UAAW,EACXlL,MAAO,CACHmL,WAAYN,EAAY,UAAY,SACpC3K,MAAO,SAEXR,GAAG,kBAAiBH,SAAA,EAEpBC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,mBAAkBR,SAAA,EAC7BD,EAAAA,EAAAA,KAAA,MAAIS,UAAU,6CAA4CR,SACrD,yBAELD,EAAAA,EAAAA,KAAA,UAAQkI,KAAK,SACTzH,UAAU,YACV,kBAAgB,YAChB,aAAW,QACX6J,QAASA,IAAMkB,UAKvBtL,EAAAA,EAAAA,MAAA,OAAKO,UAAU,sBAAqBR,SAAA,EAChCD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,WAAUR,UACrBD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,GAAER,UACbC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,WACKD,EAAAA,EAAAA,KAAA,UAAAC,SAAyB,OAAhBwL,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB3E,iBAI9C9G,EAAAA,EAAAA,KAAA,OAAKS,UAAU,WAAUR,UACrBD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,GAAER,UACbC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,SACGD,EAAAA,EAAAA,KAAA,UAAAC,SAAyB,OAAhBwL,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB9G,eAK5C3E,EAAAA,EAAAA,KAAA,OAAKS,UAAU,WAAUR,UACrBD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,GAAER,UACbC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,aACOD,EAAAA,EAAAA,KAAA,UAAAC,SAAyB,OAAhBwL,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBzE,sBAMpDhH,EAAAA,EAAAA,KAAA,OAAKS,UAAU,MAAKR,UACpBD,EAAAA,EAAAA,KAACuK,EAAAA,GAAW,CACR5G,KAAM+H,GAAiB,GACvBlB,OAhEQ,CACpB,CAAEC,IAAK,KAAMC,MAAO,OACpB,CAAED,IAAK,QAASC,MAAO,SACvB,CAAED,IAAK,iBAAkBC,MAAO,kBAChC,CAAED,IAAK,WAAYC,MAAO,aA8DdC,YAAY,EAIZE,UAAU,EACVC,WAAY,CAAEC,QAAS,MAAOC,UAAW,QACzCC,YAAaU,OAIjB3L,EAAAA,EAAAA,KAAA,OAAKS,UAAU,mBAAkBR,UAC7BD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,6DAUtB8K,IAAavL,EAAAA,EAAAA,KAAA,OAAKS,UAAU,+BAC9B,E,4CCxFX,MAAMqL,EAAkB,CACpBC,cAAe,SAGbC,EAAgB,CAClB,CAAEZ,eAAgB,GAClB,CAAEA,eAAgB,GAClB,CAAEA,eAAgB,GAClB,CAAEA,eAAgB,GAClB,CAAEA,eAAgB,GAClB,CAAEA,eAAgB,GAClB,CAAEA,eAAgB,GAClB,CAAEA,eAAgB,GAClB,CAAEA,eAAgB,GAClB,CAAEA,eAAgB,GAClB,CAAEA,eAAgB,GAClB,CAAEA,eAAgB,IAuDtB,EArDuBa,KAEnB,MAAMC,EAAU,CACZC,MAAO,CACHjE,KAAM,UAEVkE,MAAO,CACH3D,KAAM,iBAEV4D,SAAU,CACN5D,KAAM,iCAEV6D,MAAO,CACHC,WAAY,CACR,UAAW,WAAY,QAAS,QAAS,MAAO,OAChD,OAAQ,SAAU,YAAa,UAAW,WAAY,YAE1DC,WAAW,GAEfC,MAAO,CACHC,IAAK,EACLN,MAAO,CACH3D,KAAM,gBAGdkE,QAAS,CACLC,aAAc,yDACdC,YAAa,0HAEbC,aAAc,WACdC,QAAQ,EACRC,SAAS,GAEbC,YAAa,CACTC,OAAQ,CAAC,GAEbC,OAAQ,CAAC,CACLxI,MAAqB,OAAfmH,QAAe,IAAfA,OAAe,EAAfA,EAAiBC,gBAAiB,gBACxCpI,MAAmB,OAAbqI,QAAa,IAAbA,OAAa,EAAbA,EAAexG,KAAK4H,GAAQA,EAAIhC,mBAAmB,MAGnE,OACEpL,EAAAA,EAAAA,KAAA,OAAAC,UAEQD,EAAAA,EAAAA,KAACqN,IAAe,CACZC,WAAYC,EACZrB,QAASA,KAGf,ECwTV,EA3UesB,KACX,MAAM,EAAE/K,IAAMC,EAAAA,EAAAA,KACRrB,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEX,wBACFiM,EAAuB,0BACvBC,EAAyB,4BACzBC,IACAzL,EAAAA,EAAAA,KAAYC,GAASA,EAAMK,iBACzB,oBACFoL,EAAmB,sBACnBC,EAAqB,wBACrBC,EAAuB,6BAEvBC,EAA4B,yBAC5BC,EAAwB,2BACxBC,IAEA/L,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,OAEzB,oBAAE8L,IAAwBhM,EAAAA,EAAAA,KAAYC,GAASA,EAAMS,YACpDuL,EAAuBC,IAA4BrL,EAAAA,EAAAA,UAAS,KAC5DsL,EAAuBC,IAA4BvL,EAAAA,EAAAA,UAAS,KAC5DwL,EAAqBC,IAA0BzL,EAAAA,EAAAA,UAAS,KACxD0L,EAAyBC,IAA8B3L,EAAAA,EAAAA,WAAS,IAChE0I,EAAkBkD,IAAuB5L,EAAAA,EAAAA,UAAS,KAClDmI,EAAwB0D,IAA6B7L,EAAAA,EAAAA,UAAS,IAE/D8L,EAAmB,CACrB,CAAElK,KAAM,UAAWmK,WAAa1O,GAAO2O,EAAqB3O,GAAKA,GAAI,UACrE,CAAEuE,KAAM,uBAAwBmK,WAAa1O,GAAO2O,EAAqB3O,GAAKA,GAAI,kBAEhF2O,EAAuBA,QAU7BzL,EAAAA,EAAAA,YAAU,KACN0L,IACAC,GAAoB,GAErB,IAGH,MAAMD,EAA2BA,KAC7B3N,EAAS0C,EAAAA,GAAqBmL,8BAA8B,GAEhE5L,EAAAA,EAAAA,YAAU,KACN,IAAKqK,EAA6B,CAC9B,GAAID,EACA,OAEJ,GAAID,GACsC,OAAX,OAAvBA,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBxJ,MAAc,CACvC,MAAMkL,GAAYC,EAAAA,EAAAA,IAAkD,OAAvB3B,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyB9J,MACtE2K,EAAyBa,GACzBf,EAAgD,OAAvBX,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyB9J,KACtD,CAER,IACD,CACC8J,EACAC,EACAC,KAGJrK,EAAAA,EAAAA,YAAU,KACH+K,GACCgB,GACJ,GACF,CAAChB,IAGH,MAAMY,EAAqBA,KACvB,GAAIf,EAAqB,CACrB,MAAMpK,EAAU,CACZwL,YAAgC,OAAnBpB,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqB9N,IAEtCiB,EAAS8E,EAAAA,GAAWoJ,wBAAwBzL,GAChD,IAGJR,EAAAA,EAAAA,YAAU,KACN,IAAKwK,EAAyB,CAC1B,GAAID,EACA,OAEJ,GAAID,GACkC,OAAX,OAAnBA,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqB3J,MAAc,CACnC,MAAMuL,EAAqC,OAAnB5B,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBjK,KAC7C6K,EAAuBgB,EAC3B,CAER,IACD,CACC5B,EACAC,EACAC,IAGJ,MAAMnE,EAA2BhG,IAEzBgL,EADAhL,GAGoB,IAExB+K,GAA4BD,EAAwB,EAGlDY,EAA4BA,KAC9B,MAAMvL,EAAS,CACXL,aAAkC,OAArB4K,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBxJ,OAExCxD,EAAS8E,EAAAA,GAAWsJ,6BAA6B3L,GAAS,EAwB9D,OArBAR,EAAAA,EAAAA,YAAU,KACN,IAAKyK,EAA8B,CAC/B,GAAIE,EACA,OAEJ,GAAID,GACuC,OAAX,OAAxBA,QAAwB,IAAxBA,OAAwB,EAAxBA,EAA0B/J,MAAc,CACxC,MAAMiH,EAAiD,OAAxB8C,QAAwB,IAAxBA,OAAwB,EAAxBA,EAA0BrK,KACzDiL,EAA0B1D,EAC9B,CAER,IACD,CACC8C,EACAC,EACAF,KAOA7N,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACID,EAAAA,EAAAA,KAAA,OAAK0P,MAAM,aAAYzP,UACnBD,EAAAA,EAAAA,KAACiH,EAAAA,EAAY,CACTtD,KAAMwK,EACNjH,YAAazE,EAAE,8BACfoC,MAAOwJ,GAAyB,GAChClH,aAAeC,GAAmBkH,EAAyBlH,GAC3DzC,KAAK,qBAGbzE,EAAAA,EAAAA,MAAA,OAAKO,UAAU,yBAAwBR,SAAA,EACnCD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,sDAAqDR,UAChEC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,4BAA2BR,SAAA,EACtCD,EAAAA,EAAAA,KAAA,OACI2P,IAAI,yBACJC,IAAI,GACJhP,MAAO,GACPH,UAAU,kBAEdT,EAAAA,EAAAA,KAAA,OAAKS,UAAU,GAAER,UACbD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,0BAKhBC,EAAAA,EAAAA,MAAA,QAAMO,UAAU,cAAaR,SAAA,CAAC,2BACD,KACzBD,EAAAA,EAAAA,KAAA,UAAQS,UAAU,uBAAsBR,SAAC,cAE7CD,EAAAA,EAAAA,KAAA,OAAKI,GAAG,aAAaM,MAAO,CAAEC,OAAQ,KAAMV,UACxCD,EAAAA,EAAAA,KAACiM,EAAc,UAGvBjM,EAAAA,EAAAA,KAAA,OAAKS,UAAU,qBAAoBR,UAC/BC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,yBAAwBR,SAAA,EACnCC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,0CAAyCR,SAAA,EACpDC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACID,EAAAA,EAAAA,KAAA,OACI2P,IAAI,8BACJC,IAAI,GACJhP,MAAO,GACPH,UAAU,SACX,IAAI,sBAGXP,EAAAA,EAAAA,MAAA,OAAKO,UAAU,eAAcR,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAKO,UAAU,WAAUR,SAAA,EACrBC,EAAAA,EAAAA,MAAA,SAAOO,UAAU,6BAA6B8H,QAAQ,SAAQtI,SAAA,CAAC,wBACrC,KACtBD,EAAAA,EAAAA,KAAA,OACI2P,IAAI,yBACJjP,MAAO,CAAEmP,QAAS,QAClBjP,MAAO,GACPD,OAAQ,GACRF,UAAU,OACVmP,IAAI,SAGZ5P,EAAAA,EAAAA,KAAA,SACII,GAAG,SACH8H,KAAK,OACL4H,OAAO,UACPC,SAAS,+BAGjB7P,EAAAA,EAAAA,MAAA,OAAKO,UAAU,0BAAyBR,SAAA,EACpCD,EAAAA,EAAAA,KAAA,UACIS,UAAU,uBACVyH,KAAK,SACL,iBAAe,WACf,gBAAc,OAAMjI,SACvB,oBAGDC,EAAAA,EAAAA,MAAA,MACIO,UAAU,6BACV,wBAAsB,UACtBC,MAAO,CACHsP,SAAU,WACVC,MAAO,oBACPC,OAAQ,EACRC,UAAW,gCACblQ,SAAA,EAEFC,EAAAA,EAAAA,MAAA,MAAIO,UAAU,cAAaR,SAAA,EACvBD,EAAAA,EAAAA,KAAA,KAAGS,UAAU,gBAAgB2P,KAAK,IAAGnQ,SAAC,wCAGtCC,EAAAA,EAAAA,MAAA,MAAIO,UAAU,mBAAkBR,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,MAAAC,UACID,EAAAA,EAAAA,KAAA,KAAGS,UAAU,gBAAgB2P,KAAK,sBAAqBnQ,SAAC,YAI5DD,EAAAA,EAAAA,KAAA,MAAAC,UACID,EAAAA,EAAAA,KAAA,KAAGS,UAAU,gBAAgB2P,KAAK,sBAAqBnQ,SAAC,iBAMpEC,EAAAA,EAAAA,MAAA,MAAIO,UAAU,eAAcR,SAAA,EACxBD,EAAAA,EAAAA,KAAA,KAAGS,UAAU,gBAAgB2P,KAAK,IAAGnQ,SAAC,2BAGtCC,EAAAA,EAAAA,MAAA,MAAIO,UAAU,mBAAkBR,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,MAAAC,UACID,EAAAA,EAAAA,KAAA,KAAGS,UAAU,gBAAgB2P,KAAK,sBAAqBnQ,SAAC,YAI5DD,EAAAA,EAAAA,KAAA,MAAAC,UACID,EAAAA,EAAAA,KAAA,KAAGS,UAAU,gBAAgB2P,KAAK,sBAAqBnQ,SAAC,iBAMpEC,EAAAA,EAAAA,MAAA,MAAIO,UAAU,eAAcR,SAAA,EACxBD,EAAAA,EAAAA,KAAA,KAAGS,UAAU,gBAAgB2P,KAAK,IAAGnQ,SAAC,qCAGtCC,EAAAA,EAAAA,MAAA,MAAIO,UAAU,mBAAkBR,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,MAAAC,UACID,EAAAA,EAAAA,KAAA,KAAGS,UAAU,gBAAgB2P,KAAK,sBAAqBnQ,SAAC,YAI5DD,EAAAA,EAAAA,KAAA,MAAAC,UACID,EAAAA,EAAAA,KAAA,KAAGS,UAAU,gBAAgB2P,KAAK,sBAAqBnQ,SAAC,6BAUpFD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,6BAA4BR,UACvCD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,mBAAkBR,UAC7BC,EAAAA,EAAAA,MAAA,UACIO,UAAU,6BACV,aAAW,uBAAsBR,SAAA,EAEjCD,EAAAA,EAAAA,KAAA,UAAQqQ,SAAS,GAAEpQ,SAAC,mBACpBD,EAAAA,EAAAA,KAAA,UAAQ6E,MAAO,EAAE5E,SAAC,SAClBD,EAAAA,EAAAA,KAAA,UAAQ6E,MAAO,EAAE5E,SAAC,gBAClBD,EAAAA,EAAAA,KAAA,UAAQ6E,MAAO,EAAE5E,SAAC,2BAClBD,EAAAA,EAAAA,KAAA,UAAQ6E,MAAO,EAAE5E,SAAC,2BAClBD,EAAAA,EAAAA,KAAA,UAAQ6E,MAAO,EAAE5E,SAAC,2BAClBD,EAAAA,EAAAA,KAAA,UAAQ6E,MAAO,EAAE5E,SAAC,2BAClBD,EAAAA,EAAAA,KAAA,UAAQ6E,MAAO,EAAE5E,SAAC,gBAClBD,EAAAA,EAAAA,KAAA,UAAQ6E,MAAO,EAAE5E,SAAC,6BAI9BD,EAAAA,EAAAA,KAACsQ,EAAAA,GAAU,CAACC,KAAM1B,EAAkB3G,KAAK,cAEzChI,EAAAA,EAAAA,MAAA,OAAKO,UAAU,cAAaR,SAAA,EACxBD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,4BAA4BL,GAAG,SAAQH,UAClDD,EAAAA,EAAAA,KAACwQ,EAAgB,CACb/G,aAAc8E,EACd7E,kBA/QD/F,IAEvBtC,EAASoP,EAAAA,GAAgB9N,qBAAqBgB,IAE9CpC,EAAS,kBAAkB,EA4QHoI,wBAAyBA,OAGjC3J,EAAAA,EAAAA,KAAA,OAAKS,UAAU,gBAAgBL,GAAG,gBAAeH,UAC7CD,EAAAA,EAAAA,KAAC0Q,EAAa,CACVxF,uBAAwBA,SAKnCuD,IAA2BzO,EAAAA,EAAAA,KAAC2Q,EAAiB,CAC1CpF,UAAWkD,EACXjD,gBAAiB7B,EACjB8B,iBAAkBA,WAM5B,C","sources":["components/commanComponent/BackIcon.js","components/performanceManagement/pmsEmployee/myTeam/GiveEmployeeRating.js","components/performanceManagement/pmsEmployee/myTeam/ManagerTeamTable.js","components/performanceManagement/pmsEmployee/myTeam/RatingWiseEmp.js","components/performanceManagement/pmsEmployee/myTeam/ViewMonthlyRating.js","components/performanceManagement/pmsEmployee/myTeam/KraRatingChart.js","components/performanceManagement/pmsEmployee/myTeam/MyTeam.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst BackIcon = () => {\r\n    return (\r\n        <div >\r\n            <svg\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                x={0}\r\n                y={0}\r\n                viewBox=\"0 0 512 512\"\r\n                xmlSpace=\"preserve\"\r\n                className=\"icon icon-xlg me-2\"\r\n                style={{\r\n                    height: \"23px\",\r\n                    width: \"23px\",\r\n                    cursor: \"pointer\",\r\n                }}\r\n            >\r\n                <circle id=\"Oval-3\" opacity=\".1\" fill=\"#2B76D2\" cx={256} cy={256} r={256} />\r\n                <path\r\n                    fill=\"#2B76D2\"\r\n                    d=\"M277.3 362.7c-5.3 0-10.6-2-14.7-5.9l-85.3-81.5c-4.1-3.9-6.5-9.3-6.6-15-.1-5.7 2-11.1 5.9-15.2l85.3-89.1c8.1-8.5 21.7-8.8 30.2-.7 8.5 8.1 8.8 21.6.7 30.2l-70.6 73.7 69.9 66.8c8.5 8.1 8.8 21.6.7 30.1-4.2 4.4-9.8 6.6-15.5 6.6z\"\r\n                />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackIcon\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { CustomButton, CustomSpinner } from '../../../globalComponents'\r\nimport BackIcon from '../../../commanComponent/BackIcon'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { financialYearActions, pmsActions } from '../../../../core/resource/actions'\r\nimport { Input, Textarea } from '../../../commanComponent'\r\nimport BlankTableError from '../../../commanComponent/BlankTableError'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport moment from 'moment'\r\nimport { filterCurrentFYMonth } from '../../../../utils/common'\r\n\r\n\r\nconst GiveEmployeeRating = (props) => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const {\r\n        getKraDetailsByEmployeePending,\r\n        getKraDetailsByEmployeeRes,\r\n        getKraDetailsByEmployeeError,\r\n\r\n        giveRatingPending,\r\n        giveRatingRes,\r\n        giveRatingError,\r\n\r\n        getGivenRatingPending,\r\n        getGivenRatingRes,\r\n        getGivenRatingError,\r\n\r\n    } = useSelector(state => state.pms)\r\n\r\n    const {\r\n        getFinancialYearWiseMonthPending,\r\n        getFinancialYearWiseMonthRes,\r\n        getFinancialYearWiseMonthError,\r\n\r\n    } = useSelector(state => state.financialYear)\r\n\r\n    const { t } = useCustomTranslation()\r\n    const { selectedEmployeeData } = useSelector(state => state.employee)\r\n    const [kraDetailsByEmployeeData, setKraDetailsByEmployeeData] = useState('')\r\n    const [feedback, setFeedback] = useState('')\r\n    const [financialYearMonthData, setFinancialYearMonthData] = useState('')\r\n    const [selectedFinancialYearMonth, setSelectedFinancialYearMonth] = useState(null)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedEmployeeData) {\r\n            handleGetKraDetailsByEmployeeData(selectedEmployeeData)\r\n            handleGetFinancialYearWiseMonthData({ financial_id: selectedEmployeeData?.financial_id })\r\n        }\r\n    }, [selectedEmployeeData])\r\n\r\n    useEffect(() => {\r\n        if (selectedEmployeeData && selectedFinancialYearMonth) {\r\n            getGivenRatingData()\r\n            setFeedback('')\r\n        }\r\n    }, [selectedEmployeeData, selectedFinancialYearMonth])\r\n\r\n\r\n    const handleGetKraDetailsByEmployeeData = (data) => {\r\n        const payload = {\r\n            employee_id: data?._id,\r\n            financial_id: data?.financial_id,\r\n            kra_id: data?.kra_id,\r\n\r\n        }\r\n        // dispatch(pmsActions.getKraDetailsByEmployeeRequest(payload));\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     if (!getKraDetailsByEmployeePending) {\r\n    //         if (getKraDetailsByEmployeeError) {\r\n    //             return;\r\n    //         }\r\n    //         if (getKraDetailsByEmployeeRes) {\r\n    //             if (getKraDetailsByEmployeeRes?.code === 200) {\r\n    //                 if (getKraDetailsByEmployeeRes?.data) {\r\n    //                     setKraDetailsByEmployeeData(getKraDetailsByEmployeeRes?.data)\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // }, [\r\n    //     getKraDetailsByEmployeeRes,\r\n    //     getKraDetailsByEmployeeError,\r\n    //     getKraDetailsByEmployeePending\r\n    // ]);\r\n\r\n    /* -----------Get financial year wise month data----------- */\r\n    const handleGetFinancialYearWiseMonthData = (payload) => {\r\n        dispatch(financialYearActions.getFinancialYearWiseMonthRequest(payload))\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getFinancialYearWiseMonthPending) {\r\n            if (getFinancialYearWiseMonthError) {\r\n                return;\r\n            }\r\n            if (getFinancialYearWiseMonthRes) {\r\n                if (getFinancialYearWiseMonthRes?.code === 200) {\r\n                    let filterMonth = filterCurrentFYMonth(getFinancialYearWiseMonthRes?.data)\r\n                    setSelectedFinancialYearMonth(filterMonth)\r\n                    setFinancialYearMonthData(getFinancialYearWiseMonthRes?.data)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getFinancialYearWiseMonthRes,\r\n        getFinancialYearWiseMonthError,\r\n        getFinancialYearWiseMonthPending\r\n    ]);\r\n\r\n\r\n\r\n    const handleSubParamChange = (e, paramIndex, subParamIndex, customName) => {\r\n        const name = customName || e.target?.name;\r\n        const value = e.target?.value;\r\n\r\n        setKraDetailsByEmployeeData((prevData) => {\r\n            const updatedData = [...prevData];\r\n            const updatedParam = { ...updatedData[paramIndex] };\r\n            const updatedSubParams = [...updatedParam.kra_sub_parameter_details];\r\n            const updatedSubParam = {\r\n                ...updatedSubParams[subParamIndex],\r\n                [name]: value,\r\n            };\r\n\r\n            updatedSubParams[subParamIndex] = updatedSubParam;\r\n            updatedParam.kra_sub_parameter_details = updatedSubParams;\r\n            updatedData[paramIndex] = updatedParam;\r\n\r\n            return updatedData;\r\n        });\r\n    };\r\n\r\n\r\n    const renderedKraDetailsByEmployeeData = () => {\r\n        return (\r\n            kraDetailsByEmployeeData?.length > 0 ? kraDetailsByEmployeeData?.map((parameterItem, index) => (\r\n                <div key={index}>\r\n                    <div className=\"updation d-flex justify-content-between\">\r\n                        {\" \"}\r\n                        <span>{parameterItem?.parameter_name}</span>{\" \"}\r\n                        <span>{parameterItem?.parameter_weightage}%</span>\r\n                    </div>\r\n                    <ul className=\"SubcatagoryUl\">\r\n                        {parameterItem?.kra_sub_parameter_details?.map((subParameter, subParaIndex) => (\r\n                            <li key={subParaIndex}>\r\n                                <div>\r\n                                    <strong>Sub Category</strong>\r\n                                    <p>\r\n                                        {subParameter?.measurement_criteria}\r\n                                    </p>\r\n                                    <div className=\"d-flex justify-content-between mb-3\">\r\n                                        <span>\r\n                                            KPI Description <b>{subParameter?.key_performance_indicator}</b>\r\n                                        </span>\r\n                                        <span className='d-flex gap-4'>\r\n                                            <span>\r\n                                                Weightage <b>{subParameter?.kpi_weightage}</b>\r\n                                            </span>\r\n                                            {selectedEmployeeData?.kra_rating_type === \"target_achivement\" && <span>\r\n                                                KPI Target <b>{subParameter?.kpi_target}</b>\r\n                                            </span>}\r\n                                        </span>\r\n                                    </div>\r\n                                    {selectedEmployeeData?.kra_rating_type === \"target_achivement\" ?\r\n                                        <>\r\n                                            <span className=\" mb-2\">Achivement (Remark)</span>\r\n                                            <div className='col-3'>\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    placeholder={\"Enter hare...\"}\r\n                                                    value={subParameter[\"rating_remark\"]}\r\n                                                    name=\"rating_remark\"\r\n                                                    onChange={(e) => handleSubParamChange(e, index, subParaIndex)}\r\n                                                />\r\n                                            </div>\r\n                                        </> :\r\n                                        <>\r\n                                            <span className=\" mb-2\">Select Rating(Remark)</span>\r\n                                            <ul className=\"typeCheckList\">\r\n                                                {[1, 2, 3, 4, 5].map((rating) => {\r\n                                                    const inputId = `rating-${index}-${subParaIndex}-${rating}`;\r\n                                                    const inputName = `rating-${index}-${\"rating_remark\"}`;\r\n                                                    return (\r\n                                                        <li key={rating}>\r\n                                                            <div className=\"typeCheck\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    id={inputId}\r\n                                                                    // name={`rating_remark`} \r\n                                                                    name={`rating_remark_${index}_${subParaIndex}`}\r\n                                                                    className=\"d-none\"\r\n                                                                    value={rating}\r\n                                                                    checked={subParameter[\"rating_remark\"] == rating}\r\n                                                                    onChange={(e) => handleSubParamChange(e, index, subParaIndex, \"rating_remark\")}\r\n                                                                // onChange={(e) => {\r\n                                                                //     const isSameRatingSelected = subParameter?.rating_remark === rating;\r\n                                                                //     handleSubParamChange(e,index, subParaIndex, isSameRatingSelected ? null : rating);\r\n                                                                // }}\r\n                                                                />\r\n                                                                <label htmlFor={inputId}>\r\n                                                                    {rating} <i className=\"bi bi-check-lg\" />\r\n                                                                </label>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    );\r\n                                                })}\r\n\r\n                                            </ul>\r\n                                        </>}\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n\r\n                    </ul>\r\n                </div>\r\n            )) :\r\n                (\r\n                    !getGivenRatingPending && <span className='d-flex justify-content-center'>\r\n                        <BlankTableError text={\"KPI Data Not Found!\"} />\r\n                    </span>\r\n                )\r\n        )\r\n\r\n\r\n    }\r\n\r\n    const submitRatingData = () => {\r\n        // if (!isAllRatingsFilled()) {\r\n        //     alert(\"Please fill in all KPI ratings before submitting.\");\r\n        //     return;\r\n        // }\r\n        const ratingRemarkData = setRatingRemarkData()\r\n        const payload = {\r\n            employee_id: selectedEmployeeData?._id || '',\r\n            financial_id: selectedEmployeeData?.financial_id || '',\r\n            // kra_id: selectedEmployeeData?.kra_id||'',\r\n            rating_month: selectedFinancialYearMonth?.value || '',\r\n            feedback: feedback || '',\r\n            rating_remark: ratingRemarkData || [],\r\n        }\r\n        dispatch(pmsActions.giveRatingRequest(payload))\r\n        // console.log(payload, \"payload----------\")\r\n\r\n    }\r\n    const setRatingRemarkData = () => {\r\n        let tempData = []\r\n        let tempObj = { \"kra_id\": selectedEmployeeData?.kra_id, \"kra_rating_type\": selectedEmployeeData?.kra_rating_type }\r\n        kraDetailsByEmployeeData?.map((paramItem, index) => {\r\n            tempObj[\"parameter_id\"] = paramItem?._id\r\n            paramItem?.kra_sub_parameter_details?.map((subParamItem) => {\r\n                tempObj = {\r\n                    ...tempObj,\r\n                    \"parameter_id\": subParamItem?.parameter_id || '',\r\n                    \"sub_parameter_id\": subParamItem?._id || '',\r\n                    \"rating_remark\": subParamItem?.rating_remark || '',\r\n                    \"key_performance_indicator\": subParamItem?.key_performance_indicator || '',\r\n                    \"kpi_weightage\": subParamItem?.kpi_weightage || '',\r\n                    \"measurement_criteria\": subParamItem?.measurement_criteria || '',\r\n                    // \"target_achivement\": subParamItem?.target_achivement || ''\r\n                }\r\n                tempData?.push(tempObj)\r\n            })\r\n        })\r\n        return tempData\r\n    }\r\n\r\n    const isAllRatingsFilled = () => {\r\n        return kraDetailsByEmployeeData && kraDetailsByEmployeeData?.length > 0 && kraDetailsByEmployeeData?.every(param =>\r\n            param?.kra_sub_parameter_details?.every(sub =>\r\n                sub?.rating_remark !== '' && sub?.rating_remark !== null && sub?.rating_remark !== undefined\r\n            )\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!giveRatingPending) {\r\n            if (giveRatingError) {\r\n                dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_GIVE_RATING_STORE\"))\r\n                return;\r\n            }\r\n            if (giveRatingRes) {\r\n                if (giveRatingRes?.code === 200) {\r\n                    dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_GIVE_RATING_STORE\"))\r\n                    setSelectedFinancialYearMonth(null)\r\n                    navigate(\"/my-team\")\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        giveRatingRes,\r\n        giveRatingError,\r\n        giveRatingPending\r\n    ]);\r\n\r\n\r\n    const getGivenRatingData = () => {\r\n        const payload = {\r\n            financial_id: selectedEmployeeData?.financial_id,\r\n            employee_id: selectedEmployeeData?._id,\r\n            rating_month: selectedFinancialYearMonth?.value\r\n        }\r\n        dispatch(pmsActions.getGivenRatingRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!getGivenRatingPending) {\r\n            if (getGivenRatingError) {\r\n\r\n                return;\r\n            }\r\n            if (getGivenRatingRes) {\r\n                if (getGivenRatingRes?.code === 200) {\r\n                    setKraDetailsByEmployeeData(getGivenRatingRes?.data)\r\n                    setFeedback(getGivenRatingRes?.data?.[0]?.kra_sub_parameter_details?.[0]?.feedback)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getGivenRatingRes,\r\n        getGivenRatingError,\r\n        getGivenRatingPending\r\n    ]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='cardBox'>\r\n            <div className='d-flex mb-3'>\r\n                <div >\r\n                    <Link to={\"/my-team\"}>\r\n                        <BackIcon />\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <h5 >\r\n                        Give Rating\r\n                    </h5>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"row typerating mb-3\">\r\n                <div className=\"col-md-3\">\r\n                    <div className=\"\">\r\n                        <span>\r\n                            Emp ID <strong>{selectedEmployeeData?.emp_id}</strong>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <div className=\"\">\r\n                        <span>\r\n                            Name <strong>{selectedEmployeeData?.name}</strong>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <div className=\"\">\r\n                        <span>\r\n                            Email <strong>{selectedEmployeeData?.email}</strong>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <div className=\"\">\r\n                        <span>\r\n                            KRA Name <strong>{selectedEmployeeData?.kra_name}</strong>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <span className=\"fw-bold\">KPI List</span>\r\n                <div className=\" w-25\">\r\n                    <CustomSelect\r\n                        data={financialYearMonthData}\r\n                        placeholder={\"Select Month\"}\r\n                        value={selectedFinancialYearMonth || ''}\r\n                        handleChange={(selectedOption) => setSelectedFinancialYearMonth(selectedOption)}\r\n                        name=\"financialYear\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"kpiList\">\r\n\r\n                {getGivenRatingPending ? <span><CustomSpinner isShow={getGivenRatingPending} size=\"xl\" /> </span> :\r\n                    <>\r\n                    {renderedKraDetailsByEmployeeData()}\r\n\r\n                        <div className=\"form-group mb-3\">\r\n                            <label htmlFor=\"\" className=\"text-primary fw-semibold mb-2\">\r\n                                Feedback{\" \"}\r\n                            </label>\r\n\r\n                            <Textarea\r\n                                placeholder={\"Enter Feedback\"}\r\n                                onChange={(e) => setFeedback(e.target.value)}\r\n                                name={\"reason\"}\r\n                                value={feedback}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                <CustomButton\r\n                    text={t(\"btns.submit\")}\r\n                    classNames={\"btn btn-org-gradient\"}\r\n                    handleClick={() => submitRatingData()}\r\n                    // isLoading={ addPositionPending}\r\n                    isDisabled={!isAllRatingsFilled()}\r\n                />\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiveEmployeeRating\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents';\r\nimport { Icon } from '../../../commanComponent';\r\nimport { dateFormate, setStatusColor } from '../../../../utils/common';\r\n\r\nconst ManagerTeamTable = (props) => {\r\n    const { currentPage, setCurrentPage, employeeData ,navigateEmpRating,toggleViewMonthlyRating} = props\r\n\r\n    const ratingDurationField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'emp_id', label: 'Emp Id' },\r\n        { key: 'name', label: 'Emp Name' },\r\n        { key: 'joining_date', label: 'Joining Date' },\r\n        // { key: 'department', label: 'Department' },\r\n        // { key: 'designation', label: 'Designation' },\r\n        // { key: 'location', label: 'Location' },\r\n        { key: 'kra_name', label: 'KRA Assigned' },\r\n        { key: 'account_status', label: 'Account Status' },\r\n        { key: 'action', label: 'Action' }\r\n    ];\r\n    const ratingDurationScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        account_status: (item, index) => (\r\n            <span\r\n                className={`${setStatusColor(item?.account_status)} text-capitalize`}\r\n            >\r\n                {item?.account_status}\r\n            </span>\r\n        ),\r\n        joining_date:(item)=>(\r\n            <span>{item?.joining_date ?dateFormate(item?.joining_date) :\"-\"}</span>\r\n        ),\r\n        kra_name:(item)=>(\r\n            <span>{item?.kra_name ? \"Yes\" :\"No\"}</span>\r\n        ),\r\n\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                        <span\r\n                            className=\"dropdown-item\"\r\n                          onClick={() => navigateEmpRating(item)}\r\n                        >\r\n                            Start Rating\r\n                        </span>\r\n                    </li>\r\n                    <li>\r\n                        <span\r\n                            className=\"dropdown-item\"\r\n                          onClick={() => toggleViewMonthlyRating(item)}\r\n                        >\r\n                            View Monthly Rating\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }), [employeeData]);\r\n    return (\r\n        <div>\r\n            <div className=\"table-responsive tableDiv text-nowrap\">\r\n                <CustomTable\r\n                    data={employeeData || []}\r\n                    fields={ratingDurationField}\r\n                    // isLoading={isLoading}\r\n                    pagination={true}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    totalPages={employeeData?.totalPages}\r\n                    isHeader={false}\r\n                    tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                    scopedSlots={ratingDurationScopedSlots}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManagerTeamTable\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { dateFormate } from '../../../../utils/common';\r\n\r\nconst RatingWiseEmp = (props) => {\r\n    const { currentPage, setCurrentPage, ratingWiseEmployeeData } = props\r\n\r\n    const ratingWiseEmpField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'employee_code', label: 'Emp Id' },\r\n        { key: 'employee_name', label: 'Emp Name' },\r\n        { key: 'joining_date', label: 'Joining Date' },\r\n        // { key: 'department', label: 'Department' },\r\n        // { key: 'designation', label: 'Designation' },\r\n        { key: 'average_rating', label: 'Yearly Average Rating' },\r\n    ];\r\n    const ratingWiseEmpScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        joining_date:(item)=>(\r\n          <span>{item?.joining_date ?dateFormate(item?.joining_date) :\"-\"}</span>\r\n      ),\r\n      average_rating:(item)=>(\r\n        <span>{item?.average_rating?.toFixed(2) ||\"-\"}</span>\r\n    ),\r\n\r\n    }), [ratingWiseEmployeeData]);\r\n  return (\r\n    <div>\r\n       <div className=\"table-responsive tableDiv\">\r\n       <CustomTable\r\n                    data={ratingWiseEmployeeData || []}\r\n                    fields={ratingWiseEmpField}\r\n                    // isLoading={isLoading}\r\n                    pagination={true}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    totalPages={ratingWiseEmployeeData?.totalPages}\r\n                    isHeader={false}\r\n                    tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                    scopedSlots={ratingWiseEmpScopedSlots}\r\n                />\r\n\r\n       </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RatingWiseEmp\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents';\r\n\r\nconst ViewMonthlyRating = (props) => {\r\n    const { openModel, handleOpenClose, selectedEmployee,empRatingData } = props\r\n\r\n    const ratingDataField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'month', label: 'Month' },\r\n        { key: 'average_rating', label: 'Average Rating' },\r\n        { key: 'feedback', label: 'Feedback' },\r\n\r\n    ];\r\n    const ratingDataScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        \r\n    }), [empRatingData]);\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">\r\n                        {\"View Monthly Rating\"}\r\n                    </h5>\r\n                    <button type=\"button\"\r\n                        className=\"btn-close\"\r\n                        data-bs-dismiss=\"offcanvas\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose()}\r\n                    />\r\n                </div>\r\n\r\n\r\n                <div className=\"row typerating mt-3\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"\">\r\n                            <span>\r\n                                Emp ID <strong>{selectedEmployee?.emp_id}</strong>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"\">\r\n                            <span>\r\n                                Name <strong>{selectedEmployee?.name}</strong>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"\">\r\n                            <span>\r\n                                KRA Name <strong>{selectedEmployee?.kra_name}</strong>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className='m-2'>\r\n                <CustomTable\r\n                    data={empRatingData || []}\r\n                    fields={ratingDataField}\r\n                    // isLoading={isLoading}\r\n                    pagination={true}\r\n                    // currentPage={currentPage}\r\n                    // setCurrentPage={setCurrentPage}\r\n                    // totalPages={empRatingData?.totalPages}\r\n                    isHeader={false}\r\n                    tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                    scopedSlots={ratingDataScopedSlots}\r\n                />\r\n                </div>\r\n\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        {/* <CustomButton\r\n                       text={t(\"btns.submit\")}\r\n                       classNames={\"btn btn-org-gradient\"}\r\n                       handleClick={() => submitKRA()}\r\n                   // isLoading={ addPositionPending}\r\n                   /> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViewMonthlyRating\r\n","\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst kpiRemarkStatus = {\r\n    current_month: 'April'\r\n};\r\n\r\nconst averageRating = [\r\n    { average_rating: 3 },\r\n    { average_rating: 4 },\r\n    { average_rating: 2 },\r\n    { average_rating: 5 },\r\n    { average_rating: 4 },\r\n    { average_rating: 3 },\r\n    { average_rating: 4 },\r\n    { average_rating: 5 },\r\n    { average_rating: 3 },\r\n    { average_rating: 4 },\r\n    { average_rating: 5 },\r\n    { average_rating: 4 }\r\n];\r\nconst KraRatingChart = () => {\r\n\r\n    const options = {\r\n        chart: {\r\n            type: 'column'\r\n        },\r\n        title: {\r\n            text: ` Month Rating`\r\n        },\r\n        subtitle: {\r\n            text: 'PERFORMANCE MANAGEMENT SYSTEM'\r\n        },\r\n        xAxis: {\r\n            categories: [\r\n                'January', 'February', 'March', 'April', 'May', 'June',\r\n                'July', 'August', 'September', 'October', 'November', 'December'\r\n            ],\r\n            crosshair: true\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: 'RATING WISE'\r\n            }\r\n        },\r\n        tooltip: {\r\n            headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n            pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n                '<td style=\"padding:0\"><b>{point.y:.1f}</b></td></tr>',\r\n            footerFormat: '</table>',\r\n            shared: true,\r\n            useHTML: true\r\n        },\r\n        plotOptions: {\r\n            column: {}\r\n        },\r\n        series: [{\r\n            name: kpiRemarkStatus?.current_month || 'Current Month',\r\n            data: averageRating?.map((val) => val.average_rating) || []\r\n        }]\r\n    };\r\n  return (\r\n    <div>\r\n     \r\n            <HighchartsReact\r\n                highcharts={Highcharts}\r\n                options={options}\r\n            />\r\n \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default KraRatingChart\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustomTabs } from '../../../reuseableComponents';\r\nimport ManagerTeamTable from './ManagerTeamTable';\r\nimport RatingWiseEmp from './RatingWiseEmp';\r\nimport GiveEmployeeRating from './GiveEmployeeRating';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CustomSelect from '../../../commanComponent/CustomSelect';\r\nimport { employeeActions, financialYearActions, pmsActions } from '../../../../core/resource/actions';\r\nimport { useCustomTranslation } from '../../../../translation';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ViewMonthlyRating from './ViewMonthlyRating';\r\nimport KraRatingChart from './KraRatingChart';\r\nimport { filterCurrentFinancialYear } from '../../../../utils/common';\r\n\r\n\r\nconst employeeRatingsData = [\r\n    {\r\n        empId: \"QD1893\",\r\n        empName: \"Nikita Prajapat\",\r\n        department: \"HZL CVT Operation\",\r\n        designation: \"Subject Matter Expert\",\r\n        joiningDate: \"10 Nov 2021\",\r\n        reportingManager: \"Shushant Banga\",\r\n        yearlyAverageRating: 3.75,\r\n    },\r\n    {\r\n        empId: \"QD1893\",\r\n        empName: \"Nikita Prajapat\",\r\n        department: \"HR- (HRBP)\",\r\n        designation: \"HR Executive\",\r\n        joiningDate: \"10 Nov 2021\",\r\n        reportingManager: \"Sanjeev Poonia\",\r\n        yearlyAverageRating: 3.75,\r\n    },\r\n    {\r\n        empId: \"QD1893\",\r\n        empName: \"Nikita Prajapat\",\r\n        department: \"HZL CVT Operation\",\r\n        designation: \"Subject Matter Expert\",\r\n        joiningDate: \"10 Nov 2021\",\r\n        reportingManager: \"Akhil Kumawat\",\r\n        yearlyAverageRating: 3.75,\r\n    },\r\n    {\r\n        empId: \"QD1893\",\r\n        empName: \"Nikita Prajapat\",\r\n        department: \"HZL CVT Operation\",\r\n        designation: \"HR Executive\",\r\n        joiningDate: \"10 Nov 2021\",\r\n        reportingManager: \"Rahul Pratap Swami\",\r\n        yearlyAverageRating: 3.75,\r\n    },\r\n];\r\n\r\nconst MyTeam = () => {\r\n    const { t } = useCustomTranslation()\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const {\r\n        getFinancialYearListRes,\r\n        getFinancialYearListError,\r\n        getFinancialYearListPending\r\n    } = useSelector(state => state.financialYear)\r\n    const {\r\n        getEmployeeByKraRes,\r\n        getEmployeeByKraError,\r\n        getEmployeeByKraPending,\r\n\r\n        getRatingWiseEmployeePending,\r\n        getRatingWiseEmployeeRes,\r\n        getRatingWiseEmployeeError,\r\n\r\n    } = useSelector(state => state.pms)\r\n\r\n    const { employeeDetailsData } = useSelector(state => state.employee)\r\n    const [financialYearListData, setFinancialYearListData] = useState('')\r\n    const [selectedFinancialYear, setSelectedFinancialYear] = useState('')\r\n    const [allEmployeeListData, setAllEmployeeListData] = useState('')\r\n    const [isShowViewMonthlyRaging, setIsShowViewMonthlyRaging] = useState(false)\r\n    const [selectedEmployee, setSelectedEmployee] = useState('')\r\n    const [ratingWiseEmployeeData, setRatingWiseEmployeeData] = useState('')\r\n\r\n    const tableTabsRequest = [\r\n        { name: \"My Team\", onClickFun: (id) => getManagerRatingData(id), id: \"myTeam\" },\r\n        { name: \"Rating Wise Employee\", onClickFun: (id) => getManagerRatingData(id), id: \"ratingWiseEmp\" },\r\n    ];\r\n    const getManagerRatingData = () => {\r\n\r\n    }\r\n    const navigateEmpRating = (data) => {\r\n\r\n        dispatch(employeeActions.selectedEmployeeData(data))\r\n\r\n        navigate('employee-rating')\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFinancialYearListData()\r\n        getAllEmployeeData()\r\n        \r\n    }, [])\r\n\r\n    /* List of Financial Year */\r\n    const getFinancialYearListData = () => {\r\n        dispatch(financialYearActions.getFinancialYearListRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getFinancialYearListPending) {\r\n            if (getFinancialYearListError) {\r\n                return;\r\n            }\r\n            if (getFinancialYearListRes) {\r\n                if (getFinancialYearListRes?.code === 200) {\r\n                    const currentFY = filterCurrentFinancialYear(getFinancialYearListRes?.data)\r\n                    setSelectedFinancialYear(currentFY)\r\n                    setFinancialYearListData(getFinancialYearListRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getFinancialYearListRes,\r\n        getFinancialYearListError,\r\n        getFinancialYearListPending\r\n    ]);\r\n\r\n    useEffect(()=>{\r\n        if(selectedFinancialYear){\r\n            getRatingWiseEmployeeData()\r\n        }\r\n    },[selectedFinancialYear])\r\n\r\n    /* Get All Employee Data for reporting manager */\r\n    const getAllEmployeeData = () => {\r\n        if (employeeDetailsData) {\r\n            const payload = {\r\n                reported_to: employeeDetailsData?.id\r\n            }\r\n            dispatch(pmsActions.getEmployeeByKraRequest(payload));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getEmployeeByKraPending) {\r\n            if (getEmployeeByKraError) {\r\n                return;\r\n            }\r\n            if (getEmployeeByKraRes) {\r\n                if (getEmployeeByKraRes?.code === 200) {\r\n                    const allEmployeeList = getEmployeeByKraRes?.data\r\n                    setAllEmployeeListData(allEmployeeList)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getEmployeeByKraRes,\r\n        getEmployeeByKraError,\r\n        getEmployeeByKraPending\r\n    ]);\r\n\r\n    const toggleViewMonthlyRating = (data) => {\r\n        if (data) {\r\n            setSelectedEmployee(data)\r\n        } else {\r\n            setSelectedEmployee('')\r\n        }\r\n        setIsShowViewMonthlyRaging(!isShowViewMonthlyRaging)\r\n    }\r\n\r\n    const getRatingWiseEmployeeData = () => {\r\n        const payload ={\r\n            financial_id:selectedFinancialYear?.value\r\n        }\r\n        dispatch(pmsActions.getRatingWiseEmployeeRequest(payload))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getRatingWiseEmployeePending) {\r\n            if (getRatingWiseEmployeeError) {\r\n                return;\r\n            }\r\n            if (getRatingWiseEmployeeRes) {\r\n                if (getRatingWiseEmployeeRes?.code === 200) {\r\n                    const ratingWiseEmployeeData = getRatingWiseEmployeeRes?.data\r\n                    setRatingWiseEmployeeData(ratingWiseEmployeeData)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getRatingWiseEmployeeRes,\r\n        getRatingWiseEmployeeError,\r\n        getRatingWiseEmployeePending\r\n    ]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div class=\" w-25 mb-3\">\r\n                <CustomSelect\r\n                    data={financialYearListData}\r\n                    placeholder={t(\"placeholders.financialYear\")}\r\n                    value={selectedFinancialYear || ''}\r\n                    handleChange={(selectedOption) => setSelectedFinancialYear(selectedOption)}\r\n                    name=\"financialYear\"\r\n                />\r\n            </div>\r\n            <div className=\"cardBox myRequest mb-3\">\r\n                <div className=\"cardHead justify-content-between align-items-center\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <img\r\n                            src=\"images/team-rating.svg\"\r\n                            alt=\"\"\r\n                            width={40}\r\n                            className=\"me-2 fw-bold\"\r\n                        />\r\n                        <div className=\"\">\r\n                            <h3> Team Ratings</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <span className=\"totalRating\">\r\n                    Total / Rating not given{\" \"}\r\n                    <strong className=\"text-primary fw-bold\">48 /2</strong>\r\n                </span>\r\n                <div id=\"ratingTeam\" style={{ height: 400 }} >\r\n                    <KraRatingChart />\r\n                </div>\r\n            </div>\r\n            <div className=\"ticketScoreSection\">\r\n                <div className=\"cardBox myRequest mb-3\">\r\n                    <div className=\"cardHead d-flex justify-content-between\">\r\n                        <h3>\r\n                            <img\r\n                                src=\"images/other-attendance.svg\"\r\n                                alt=\"\"\r\n                                width={40}\r\n                                className=\"me-2\"\r\n                            />{\" \"}\r\n                            Manager Ratings\r\n                        </h3>\r\n                        <div className=\"d-flex gap-3\">\r\n                            <div className=\"uploader\">\r\n                                <label className=\"btn btn-primary gradientBg\" htmlFor=\"upload\">\r\n                                    Upload for PMS Rating{\" \"}\r\n                                    <img\r\n                                        src=\"images/upload-Icon.svg\"\r\n                                        style={{ display: \"none\" }}\r\n                                        width={15}\r\n                                        height={15}\r\n                                        className=\"ms-2\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                </label>\r\n                                <input\r\n                                    id=\"upload\"\r\n                                    type=\"file\"\r\n                                    accept=\"image/*\"\r\n                                    onchange=\"handleFileUpload(this)\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"dropdown filterDropdown\">\r\n                                <button\r\n                                    className=\"btn btn-org-gradient\"\r\n                                    type=\"button\"\r\n                                    data-bs-toggle=\"dropdown\"\r\n                                    aria-expanded=\"true\"\r\n                                >\r\n                                    Download Excel\r\n                                </button>\r\n                                <ul\r\n                                    className=\"dropdown-menu dropdownLeft\"\r\n                                    data-popper-placement=\"top-end\"\r\n                                    style={{\r\n                                        position: \"absolute\",\r\n                                        inset: \"auto 0px 0px auto\",\r\n                                        margin: 0,\r\n                                        transform: \"translate3d(0px, -56px, 0px)\"\r\n                                    }}\r\n                                >\r\n                                    <li className=\"subdropdown\">\r\n                                        <a className=\"dropdown-item\" href=\"#\">\r\n                                            Generate KRA yearly Average Rating\r\n                                        </a>\r\n                                        <ul className=\"submenu-dropdown\">\r\n                                            <li>\r\n                                                <a className=\"dropdown-item\" href=\"javascript:void(0);\">\r\n                                                    Team\r\n                                                </a>\r\n                                            </li>\r\n                                            <li>\r\n                                                <a className=\"dropdown-item\" href=\"javascript:void(0);\">\r\n                                                    All\r\n                                                </a>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>\r\n                                    <li className=\"subdropdown \">\r\n                                        <a className=\"dropdown-item\" href=\"#\">\r\n                                            Generate KRA Raw Dump\r\n                                        </a>\r\n                                        <ul className=\"submenu-dropdown\">\r\n                                            <li>\r\n                                                <a className=\"dropdown-item\" href=\"javascript:void(0);\">\r\n                                                    Team\r\n                                                </a>\r\n                                            </li>\r\n                                            <li>\r\n                                                <a className=\"dropdown-item\" href=\"javascript:void(0);\">\r\n                                                    All\r\n                                                </a>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>\r\n                                    <li className=\"subdropdown \">\r\n                                        <a className=\"dropdown-item\" href=\"#\">\r\n                                            PMS Rating Assign or Not Assign\r\n                                        </a>\r\n                                        <ul className=\"submenu-dropdown\">\r\n                                            <li>\r\n                                                <a className=\"dropdown-item\" href=\"javascript:void(0);\">\r\n                                                    Team\r\n                                                </a>\r\n                                            </li>\r\n                                            <li>\r\n                                                <a className=\"dropdown-item\" href=\"javascript:void(0);\">\r\n                                                    All\r\n                                                </a>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='d-flex justify-content-end'>\r\n                        <div className=\" selectDate w-25\">\r\n                            <select\r\n                                className=\"form-select form-select-sm\"\r\n                                aria-label=\"Small select example\"\r\n                            >\r\n                                <option selected=\"\">Select Rating</option>\r\n                                <option value={1}>All</option>\r\n                                <option value={2}>Rating (0)</option>\r\n                                <option value={2}>Rating (1.00 to 1.99)</option>\r\n                                <option value={2}>Rating (2.00 to 2.99)</option>\r\n                                <option value={2}>Rating (3.00 to 3.99)</option>\r\n                                <option value={2}>Rating (4.00 to 4.99)</option>\r\n                                <option value={2}>Rating (5)</option>\r\n                                <option value={2}>Rating Not Given</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <CustomTabs tabs={tableTabsRequest} type=\"pmsAdmin\" />\r\n\r\n                    <div className=\"tab-content\">\r\n                        <div className=\"tab-pane fade active show\" id=\"myTeam\">\r\n                            <ManagerTeamTable\r\n                                employeeData={allEmployeeListData}\r\n                                navigateEmpRating={navigateEmpRating}\r\n                                toggleViewMonthlyRating={toggleViewMonthlyRating}\r\n                            />\r\n                        </div>\r\n                        <div className=\"tab-pane fade\" id=\"ratingWiseEmp\">\r\n                            <RatingWiseEmp\r\n                                ratingWiseEmployeeData={ratingWiseEmployeeData}\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {isShowViewMonthlyRaging && <ViewMonthlyRating\r\n                        openModel={isShowViewMonthlyRaging}\r\n                        handleOpenClose={toggleViewMonthlyRating}\r\n                        selectedEmployee={selectedEmployee}\r\n                    />}\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyTeam\r\n"],"names":["BackIcon","_jsx","children","_jsxs","version","id","x","y","viewBox","xmlSpace","className","style","height","width","cursor","opacity","fill","cx","cy","r","d","props","dispatch","useDispatch","navigate","useNavigate","getKraDetailsByEmployeePending","getKraDetailsByEmployeeRes","getKraDetailsByEmployeeError","giveRatingPending","giveRatingRes","giveRatingError","getGivenRatingPending","getGivenRatingRes","getGivenRatingError","useSelector","state","pms","getFinancialYearWiseMonthPending","getFinancialYearWiseMonthRes","getFinancialYearWiseMonthError","financialYear","t","useCustomTranslation","selectedEmployeeData","employee","kraDetailsByEmployeeData","setKraDetailsByEmployeeData","useState","feedback","setFeedback","financialYearMonthData","setFinancialYearMonthData","selectedFinancialYearMonth","setSelectedFinancialYearMonth","useEffect","handleGetKraDetailsByEmployeeData","handleGetFinancialYearWiseMonthData","financial_id","getGivenRatingData","data","_id","kra_id","payload","financialYearActions","getFinancialYearWiseMonthRequest","code","filterMonth","filterCurrentFYMonth","handleSubParamChange","e","paramIndex","subParamIndex","customName","_e$target","_e$target2","name","target","value","prevData","updatedData","updatedParam","updatedSubParams","kra_sub_parameter_details","updatedSubParam","setRatingRemarkData","tempData","tempObj","kra_rating_type","map","paramItem","index","_paramItem$kra_sub_pa","subParamItem","parameter_id","rating_remark","key_performance_indicator","kpi_weightage","measurement_criteria","push","pmsActions","handleClearPMSStore","employee_id","rating_month","getGivenRatingRequest","_getGivenRatingRes$da","_getGivenRatingRes$da2","_getGivenRatingRes$da3","_getGivenRatingRes$da4","Link","to","emp_id","email","kra_name","CustomSelect","placeholder","handleChange","selectedOption","CustomSpinner","isShow","size","_Fragment","length","parameterItem","_parameterItem$kra_su","parameter_name","parameter_weightage","subParameter","subParaIndex","kpi_target","Input","type","onChange","rating","inputId","checked","htmlFor","BlankTableError","text","Textarea","CustomButton","classNames","handleClick","submitRatingData","ratingRemarkData","giveRatingRequest","isDisabled","every","param","_param$kra_sub_parame","sub","undefined","currentPage","setCurrentPage","employeeData","navigateEmpRating","toggleViewMonthlyRating","ratingDurationScopedSlots","useMemo","sn","_","account_status","item","setStatusColor","joining_date","dateFormate","action","onClick","CustomTable","fields","key","label","pagination","totalPages","isHeader","tableStyle","padding","boxShadow","scopedSlots","ratingWiseEmployeeData","ratingWiseEmpScopedSlots","average_rating","_item$average_rating","toFixed","openModel","handleOpenClose","selectedEmployee","empRatingData","ratingDataScopedSlots","tabIndex","visibility","kpiRemarkStatus","current_month","averageRating","KraRatingChart","options","chart","title","subtitle","xAxis","categories","crosshair","yAxis","min","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","series","val","HighchartsReact","highcharts","Highcharts","MyTeam","getFinancialYearListRes","getFinancialYearListError","getFinancialYearListPending","getEmployeeByKraRes","getEmployeeByKraError","getEmployeeByKraPending","getRatingWiseEmployeePending","getRatingWiseEmployeeRes","getRatingWiseEmployeeError","employeeDetailsData","financialYearListData","setFinancialYearListData","selectedFinancialYear","setSelectedFinancialYear","allEmployeeListData","setAllEmployeeListData","isShowViewMonthlyRaging","setIsShowViewMonthlyRaging","setSelectedEmployee","setRatingWiseEmployeeData","tableTabsRequest","onClickFun","getManagerRatingData","getFinancialYearListData","getAllEmployeeData","getFinancialYearListRequest","currentFY","filterCurrentFinancialYear","getRatingWiseEmployeeData","reported_to","getEmployeeByKraRequest","allEmployeeList","getRatingWiseEmployeeRequest","class","src","alt","display","accept","onchange","position","inset","margin","transform","href","selected","CustomTabs","tabs","ManagerTeamTable","employeeActions","RatingWiseEmp","ViewMonthlyRating"],"sourceRoot":""}