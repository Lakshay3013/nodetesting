{"version":3,"file":"static/js/4554.66bbc00e.chunk.js","mappings":"qOAQA,MAqGA,EArG6BA,IACzB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MACR,UACFC,EAAS,8BACTC,EAA6B,sCAC7BC,EAAqC,gCACrCC,EAA+B,YAC/BC,EAAW,eACXC,EAAc,mBACdC,EAAkB,wBAClBC,GACAV,GACGW,EAAoBC,IAAyBC,EAAAA,EAAAA,UAAS,KAO7DC,EAAAA,EAAAA,YAAU,KACNF,EAAsBH,EAAmB,GAC1C,CAACA,IAGJ,MAAMM,GAAcC,EAAAA,EAAAA,UAAQ,MACxBC,GAAIA,CAACC,EAAGC,KACJC,EAAAA,EAAAA,KAAA,QAAAC,SAAOF,EAAQ,IAEnBG,UAAWC,IACPH,EAAAA,EAAAA,KAAA,QACII,UAAW,UAASC,EAAAA,EAAAA,IAAcF,EAAKD,UAAY,SAAW,cAAcD,SAE3EE,EAAKD,UAAY,SAAW,aAGrCA,UAAWC,IACPH,EAAAA,EAAAA,KAAA,QACII,UAAW,UAASC,EAAAA,EAAAA,IAAcF,EAAKD,UAAY,SAAW,cAAcD,SAE3EE,EAAKD,UAAY,SAAW,aAGrCI,WAAYH,GAAQI,IAAOJ,EAAKG,YAAYE,OAAO,cACnDC,OAAQN,IACJO,EAAAA,EAAAA,MAAA,OAAKN,UAAU,2BAA0BH,SAAA,EACrCD,EAAAA,EAAAA,KAACW,EAAAA,GAAY,CACTC,KAAM/B,EAAE,eACRgC,WAAW,kBACXC,YAAaA,KAhCzB7B,EAiC2CkB,EAAK,KAGxCH,EAAAA,EAAAA,KAACW,EAAAA,GAAY,CACTC,KAAM/B,EAAE,eACRiC,YAAaA,IAAM5B,EAAgCiB,EAAKY,IAAMZ,EAAKa,KACnEH,WAAW,yBAIvB,CAAC7B,EAA+BC,IAYpC,OACIyB,EAAAA,EAAAA,MAAA,OAAKN,UAAU,yCAAwCH,SAAA,EACnDS,EAAAA,EAAAA,MAAA,OAAKN,UAAU,0DAAyDH,SAAA,EACpES,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kBAAiBH,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,OAAKiB,IAAI,4BAA4BC,IAAI,GAAGC,MAAO,MACnDnB,EAAAA,EAAAA,KAAA,MAAII,UAAU,YAAWH,SAAEpB,EAAE,iCAEjCmB,EAAAA,EAAAA,KAACW,EAAAA,GAAY,CACTC,KAAM,sBACNC,WAAY,kBACZC,YAAaA,IAAMxB,UAI3BU,EAAAA,EAAAA,KAACoB,EAAAA,GAAW,CACRC,KAAwB,OAAlB9B,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoB8B,KAC1BC,OA1BG,CACX,CAAEC,IAAK,KAAMC,MAAO,OACpB,CAAED,IAAK,OAAQC,MAAO,mBACtB,CAAED,IAAK,oBAAqBC,MAAO,sBACnC,CAAED,IAAK,kBAAmBC,MAAO,oBACjC,CAAED,IAAK,uBAAwBC,MAAO,yBACtC,CAAED,IAAK,YAAaC,MAAO,UAC3B,CAAED,IAAK,aAAcC,MAAO,cAC5B,CAAED,IAAK,SAAUC,MAAO,WAmBhBzC,UAAWA,EACX0C,YAAY,EACZtC,YAAaA,EACbC,eAAgBA,EAChBsC,WAA8B,OAAlBnC,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBmC,WAChCC,UAAU,EACVC,WAAY,CAAEC,QAAS,MAAOC,UAAW,QACzCnC,YAAaA,MAEf,E,eCtGd,MAeA,EAfwBoC,KACtB,MAAMC,GAAUC,EAAAA,EAAAA,MAIhB,OACEjC,EAAAA,EAAAA,KAAA,OAAAC,UAEED,EAAAA,EAAAA,KAACkC,EAAmB,CAClB5C,wBAP2ByB,IAC/BiB,EAAS,2CAA0CjB,EAAK,IAAIA,IAAO,IAAK,KAQlE,C","sources":["components/payrollAdmin/salaryTemplate/SalaryTemplateTable.js","components/payrollAdmin/salaryTemplate/SalaryTemplates.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomTable } from '../../reuseableComponents'\r\nimport { getBadgeColor } from '../../../utils/common'\r\nimport { CustomButton } from '../../globalComponents'\r\nimport moment from 'moment'\r\nimport { useCustomTranslation } from '../../../translation'\r\n\r\n\r\nconst SalaryTemplateTable = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        isLoading,\r\n        setSelectedSalaryTemplateData,\r\n        handleCreateUpdateSalaryTemplateModal,\r\n        toggleSalaryTemplateDeleteModal,\r\n        currentPage,\r\n        setCurrentPage,\r\n        allSalaryTemplates,\r\n        navigateSalaryTempModal\r\n    } = props\r\n    const [salaryTemplateList, setSalaryTemplateList] = useState('')\r\n\r\n\r\n    const handleUpdateSalaryTemplate = (data) => {\r\n        handleCreateUpdateSalaryTemplateModal(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSalaryTemplateList(allSalaryTemplates)\r\n    }, [allSalaryTemplates])\r\n\r\n\r\n    const scopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        is_active: item => (\r\n            <span\r\n                className={`badge ${getBadgeColor(item.is_active ? \"Active\" : \"Inactive\")}`}\r\n            >\r\n                {item.is_active ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n        ),\r\n        is_active: item => (\r\n            <span\r\n                className={`badge ${getBadgeColor(item.is_active ? \"Active\" : \"Inactive\")}`}\r\n            >\r\n                {item.is_active ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n        ),\r\n        created_at: item => moment(item.created_at).format(\"DD-MM-YYYY\"),\r\n        action: item => (\r\n            <div className=\"actionGroup d-flex gap-2\">\r\n                <CustomButton\r\n                    text={t(\"btns.update\")}\r\n                    classNames=\"btn btn-primary\"\r\n                    handleClick={() => {\r\n                        handleUpdateSalaryTemplate(item);\r\n                    }}\r\n                />\r\n                <CustomButton\r\n                    text={t(\"btns.delete\")}\r\n                    handleClick={() => toggleSalaryTemplateDeleteModal(item.id || item._id)}\r\n                    classNames=\"btn btn-danger\"\r\n                />\r\n            </div>\r\n        )\r\n    }), [setSelectedSalaryTemplateData, handleCreateUpdateSalaryTemplateModal]);\r\n\r\n    const fields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'name', label: 'Salary Template' },\r\n        { key: 'office_start_time', label: 'Office Start Time ' },\r\n        { key: 'office_end_time', label: 'Office End Time ' },\r\n        { key: 'office_working_hours', label: 'Office Working Hours ' },\r\n        { key: 'is_active', label: 'Status' },\r\n        { key: 'created_at', label: 'Created At' },\r\n        { key: 'action', label: 'Action' }\r\n    ];\r\n    return (\r\n        <div className='cardBox myRequest mb-3 employeeHistory'>\r\n            <div className=\"d-flex align-items-center justify-content-between gap-3\">\r\n                <div className=\"cardHead d-flex\">\r\n                    <img src=\"images/myrequest-icon.svg\" alt=\"\" width={35} />\r\n                    <h3 className=\"ms-2 mt-2\">{t(\"headings.salaryTemplate\")}</h3>\r\n                </div>\r\n                <CustomButton\r\n                    text={\"Add Salary Template\"}\r\n                    classNames={\"btn btn-primary\"}\r\n                    handleClick={() => navigateSalaryTempModal()}\r\n                // isLoading={selectedEarningsData ? updateEarningsPending : createEarningsPending}\r\n                />\r\n            </div>\r\n            <CustomTable\r\n                data={salaryTemplateList?.data}\r\n                fields={fields}\r\n                isLoading={isLoading}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={salaryTemplateList?.totalPages}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={scopedSlots}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalaryTemplateTable\r\n","import React, { useState } from 'react'\r\nimport SalaryTemplateTable from './SalaryTemplateTable'\r\nimport { useNavigate } from 'react-router-dom'\r\nconst SalaryTemplates = () => {\r\n  const navigate =useNavigate()\r\n  const navigateSalaryTempModal = (id) => {\r\n    navigate(`/salary-template/create-salary-template${id ? `/${id}` : ''}`);\r\n  }\r\n  return (\r\n    <div>\r\n\r\n      <SalaryTemplateTable\r\n        navigateSalaryTempModal={navigateSalaryTempModal}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SalaryTemplates\r\n"],"names":["props","t","useCustomTranslation","isLoading","setSelectedSalaryTemplateData","handleCreateUpdateSalaryTemplateModal","toggleSalaryTemplateDeleteModal","currentPage","setCurrentPage","allSalaryTemplates","navigateSalaryTempModal","salaryTemplateList","setSalaryTemplateList","useState","useEffect","scopedSlots","useMemo","sn","_","index","_jsx","children","is_active","item","className","getBadgeColor","created_at","moment","format","action","_jsxs","CustomButton","text","classNames","handleClick","id","_id","src","alt","width","CustomTable","data","fields","key","label","pagination","totalPages","isHeader","tableStyle","padding","boxShadow","SalaryTemplates","navigate","useNavigate","SalaryTemplateTable"],"sourceRoot":""}