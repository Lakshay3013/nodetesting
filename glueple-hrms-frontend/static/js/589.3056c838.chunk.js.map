{"version":3,"file":"static/js/589.3056c838.chunk.js","mappings":"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","sources":["components/commanComponent/Lottieplayer.js","components/commanComponent/BlankTableError.js","components/reuseableComponents/customTable/CustomTd.js","components/commanComponent/CustomPagination.js","components/reuseableComponents/customTable/CustomTable.js"],"sourcesContent":["import React from 'react'\r\nimport Lottie from 'react-lottie-player'\r\n\r\nconst Lottieplayer = ({lottieUrl,Lottiestyle,speed,backgroundColor}) => {\r\n  return (\r\n    <Lottie\r\n                 loop\r\n               // src=\"../images/star-icon.json\"\r\n                animationData={lottieUrl||''}\r\n                background={backgroundColor ||\"transparent\"}\r\n                speed={speed ||\"1\"}\r\n                play\r\n                style={Lottiestyle}\r\n                autoplay>\r\n       </Lottie>\r\n  )\r\n}\r\n\r\nexport default Lottieplayer\r\n","import React from 'react'\r\nimport Lottieplayer from './Lottieplayer'\r\n// import filteError from '../../../src/images/fileError.json'\r\nimport filteError from \"../../images/fileError.json\"\r\nimport Lottie from 'react-lottie-player'\r\n\r\n\r\nconst BlankTableError = (props) => {\r\n    const { text, style, totalField } = props\r\n    let styles = style || { fontSize: \"23px\", textAlign: \"center\", paddingTop: \"20px\" }\r\n    const divStyles = {}\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td colSpan={totalField || 6}>\r\n\r\n                    <div class=\"d-flex justify-content-center align-items-center flex-column h-100\">\r\n                        <div class=\"my-3\">\r\n                            <Lottie\r\n                                loop\r\n                                animationData={filteError}\r\n                                background=\"transparent\"\r\n                                speed=\"1\"\r\n                                play\r\n                                style={{ width: \"150px\", height: \"150px\" }}\r\n                                autoplay></Lottie>\r\n                        </div>\r\n                        <p class=\"text-danger fw-semibold fs-7\">{text || \"Data Not Found!\"}</p>\r\n                    </div>\r\n                   \r\n                </td>\r\n\r\n            </tr>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default BlankTableError\r\n","// Custom Td component for table cells\r\nconst CustomTd = ({ children, className = '', style = {}, ...props }) => {\r\n    const tdStyle = {\r\n        padding: '0.75rem',\r\n        verticalAlign: 'top',\r\n        borderTop: '1px solid #dee2e6',\r\n        ...style,\r\n    };\r\n\r\n    return (\r\n        <td className={className} style={tdStyle} {...props}>\r\n            {children}\r\n        </td>\r\n    );\r\n};\r\n\r\nexport default CustomTd","import React from 'react'\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\n\r\nconst CustomPagination = ({ currentPage, totalPages, onPageChange }) => {\r\n    const handlePageChange = (pageNumber) => {\r\n        onPageChange(pageNumber);\r\n      };\r\n  return (\r\n    <>\r\n        <Pagination className='pagination'>\r\n        <Pagination.Prev\r\n          onClick={() => currentPage > 1 && handlePageChange(currentPage - 1)}\r\n          disabled={currentPage === 1}\r\n        />\r\n        {[...Array(totalPages)].map((_, index) => (\r\n          <Pagination.Item\r\n            key={index + 1}\r\n            active={index + 1 === currentPage}\r\n            onClick={() => handlePageChange(index + 1)}\r\n          >\r\n            {index + 1}\r\n          </Pagination.Item>\r\n        ))}\r\n        <Pagination.Next\r\n          onClick={() => currentPage < totalPages && handlePageChange(currentPage + 1)}\r\n          disabled={currentPage === totalPages}\r\n        />\r\n      </Pagination>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomPagination\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableDataHeader from './TableDataHeader';\r\nimport { CustomButton, CustomSpinner } from '../../globalComponents';\r\nimport TableName from './TableName';\r\nimport BlankTableError from '../../commanComponent/BlankTableError';\r\nimport CustomTd from './CustomTd';\r\nimport CustomPagination from '../../commanComponent/CustomPagination';\r\n\r\n// Custom Table Component\r\nconst CustomTable = ({ data,\r\n    fields,\r\n    isLoading,\r\n    scopedSlots = {},\r\n    onSearch,\r\n    pagination,\r\n    setCurrentPage,\r\n    totalPages,\r\n    currentPage,\r\n    tableName,\r\n    isHeader = true,\r\n    tableStyle,\r\n }) => {\r\n    const renderTableBody = () => (\r\n        data &&\r\n            data?.length > 0 ? (\r\n            data?.map((item, index) => (\r\n                <tr key={index}>\r\n                    {fields.map((field, colIndex) => (\r\n                        <CustomTd key={field.key}>\r\n                            {scopedSlots[field.key] ? scopedSlots[field.key](item, index) : item[field.key]}\r\n                        </CustomTd>\r\n                    ))}\r\n                </tr>\r\n            ))\r\n        ) : (\r\n            !isLoading && <BlankTableError totalField={fields?.length} />\r\n            \r\n        )\r\n    );\r\n\r\n    return (\r\n        <div className=\"cardBox mb-3 mt-3\" style={tableStyle ||{}}>\r\n            {isHeader && <div className=\"cardHead d-flex align-items-center justify-content-between\">\r\n                <TableName name={tableName} />\r\n\r\n                <div className=\"d-flex\">\r\n                    <div className=\"ticketFilter\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control fs-7\"\r\n                            placeholder=\"Filter..\"\r\n                            // onChange={e => onSearch(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <CustomButton\r\n                        text=\"Search\"\r\n                        classNames=\"btn btn-primary p-1 ms-3\"\r\n                    />\r\n                </div>\r\n            </div>}\r\n            <div className=\"table-responsive tableDiv\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <TableDataHeader tableHeader={fields} />\r\n                    </thead>\r\n                    <tbody>\r\n                        {isLoading ? <CustomSpinner isShow={isLoading} size=\"xl\" /> : renderTableBody()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            {/* Pagination Controls */}\r\n            {pagination && <CustomPagination\r\n                currentPage={currentPage}\r\n                totalPages={totalPages}\r\n                onPageChange={(pageNumber) => setCurrentPage(pageNumber)}\r\n            />}\r\n        </div>\r\n    );\r\n};\r\n\r\n// PropTypes for CustomTable\r\nCustomTable.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    fields: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            key: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired\r\n        })\r\n    ).isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    scopedSlots: PropTypes.object,\r\n    // onSearch: PropTypes.func.isRequired,\r\n    pageLimit: PropTypes.number,\r\n    tableName: PropTypes.string\r\n};\r\n\r\nCustomTable.defaultProps = {\r\n    scopedSlots: {},\r\n    pageLimit: 10\r\n};\r\n\r\nexport default CustomTable;\r\n"],"names":["_ref","lottieUrl","Lottiestyle","speed","backgroundColor","_jsx","Lottie","loop","animationData","background","play","style","autoplay","props","text","totalField","_Fragment","children","colSpan","_jsxs","class","filteError","width","height","className","tdStyle","padding","verticalAlign","borderTop","currentPage","totalPages","onPageChange","handlePageChange","pageNumber","Pagination","Prev","onClick","disabled","Array","map","_","index","Item","active","Next","CustomTable","data","fields","isLoading","scopedSlots","onSearch","pagination","setCurrentPage","tableName","isHeader","tableStyle","TableName","name","type","placeholder","CustomButton","classNames","TableDataHeader","tableHeader","CustomSpinner","isShow","size","length","item","field","colIndex","CustomTd","key","BlankTableError","CustomPagination","defaultProps","pageLimit"],"sourceRoot":""}