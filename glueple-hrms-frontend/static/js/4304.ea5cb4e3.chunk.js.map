{"version":3,"file":"static/js/4304.ea5cb4e3.chunk.js","mappings":"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","sources":["components/advance/AdvanceRequestTable.js","components/advance/AdvanceApprovalTable.js","components/advance/ApplyAdvance.js","components/advance/Advance.js","components/modal/CommonApproveRejectModal.js","components/payrollAdmin/payRuns/loans/InstallmentTable.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomTable } from '../reuseableComponents'\r\nimport { dateFormate } from '../../utils/common'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\n\r\nconst AdvanceRequestTable = (props) => {\r\n    const { getAdvanceRequestPending}=useSelector(state =>state?.payroll)\r\n    const { toggleOpenCloseModal,advanceRequestData,currentPage,setCurrentPage} = props\r\n\r\n    const advanceFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'advance_type_name', label: 'Loan Type' },\r\n        { key: 'amount', label: 'Loan Amount' },\r\n        { key: 'tenure_duration', label: 'EMI Duration' },\r\n        { key: 'start_date', label: 'Effective Date' },\r\n        { key: 'end_date', label: 'End Date' },\r\n        { key: 'action', label: 'Action' },\r\n    ]\r\n\r\n    const advanceScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        start_date: (item, index) => (\r\n            <span>{dateFormate(item?.start_date)}</span>\r\n        ),\r\n        end_date: (item, index) => (\r\n            <span>{dateFormate(item?.end_date)}</span>\r\n        ),\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                        onClick={() => toggleOpenCloseModal(item ,\"view\")} \r\n                        >\r\n                            View Details</span>\r\n                    </li>\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n\r\n    }), [advanceRequestData,currentPage]);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <CustomTable\r\n                data={advanceRequestData?.data}\r\n                fields={advanceFields}\r\n                isLoading={getAdvanceRequestPending}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={(pageNo) => setCurrentPage(pageNo)}\r\n                totalPages={advanceRequestData?.totalPages}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={advanceScopedSlots}\r\n            />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdvanceRequestTable\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomTable } from '../reuseableComponents'\r\nimport { dateFormate } from '../../utils/common'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\n\r\nconst AdvanceApprovalTable = (props) => {\r\n    const { getAdvanceApprovalPending}=useSelector(state =>state?.payroll)\r\n    const { advanceApprovalData,currentPage,setCurrentPage,toggleApprovalRejectModal} = props\r\n\r\n    const advanceFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'advance_type_name', label: 'Loan Type' },\r\n        { key: 'amount', label: 'Loan Amount' },\r\n        { key: 'tenure_duration', label: 'EMI Duration' },\r\n        { key: 'start_date', label: 'Effective Date' },\r\n        { key: 'end_date', label: 'End Date' },\r\n        { key: 'action', label: 'Action' },\r\n    ]\r\n\r\n    const advanceScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        start_date: (item, index) => (\r\n            <span>{dateFormate(item?.start_date)}</span>\r\n        ),\r\n        end_date: (item, index) => (\r\n            <span>{dateFormate(item?.end_date)}</span>\r\n        ),\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                        onClick={() => toggleApprovalRejectModal(item?._id)} \r\n                        >\r\n                         Approve & Reject</span>\r\n                    </li>\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n\r\n    }), [advanceApprovalData,currentPage]);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <CustomTable\r\n                data={advanceApprovalData?.data}\r\n                fields={advanceFields}\r\n                isLoading={getAdvanceApprovalPending}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={(pageNo) => setCurrentPage(pageNo)}\r\n                totalPages={advanceApprovalData?.totalPages}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={advanceScopedSlots}\r\n            />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdvanceApprovalTable\r\n","import React, { useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\nimport { Input, Label } from '../commanComponent'\r\nimport CustomSelect from '../commanComponent/CustomSelect'\r\nimport { CustomButton, CustomError } from '../globalComponents'\r\nimport InstallmentTable from '../payrollAdmin/payRuns/loans/InstallmentTable'\r\nimport { dateFormate } from '../../utils/common'\r\nimport { useCustomTranslation } from '../../translation'\r\nimport { validateSchema } from '../../utils/ValidationHelper'\r\nimport { addUpdateLoanSchema, applyAdvanceSchema } from '../../utils/ValidationSchema'\r\n\r\nconst ApplyAdvance = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const { toggleOpenClose, isOpen, filteredDropdownData, handleApplyAdvanceRequest, selectedLoanData, loading } = props\r\n\r\n    const [loanFormData, setLoanFormData] = useState({\r\n        loanType: null,\r\n        amount: '',\r\n        emiDuration: null,\r\n        startDate: '',\r\n        endDate: '',\r\n    })\r\n    const [errors, setErrors] = useState('')\r\n    const [installmentData, setInstallmentData] = useState([])\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n        if (name === \"startDate\") {\r\n            setInstallmentData([])\r\n            calculateEndDate(value)\r\n        }\r\n        if (name === \"emiDuration\") {\r\n            setLoanFormData(prevState => ({\r\n                ...prevState,\r\n                [\"startDate\"]: '',\r\n                [\"endDate\"]: '',\r\n            }));\r\n            setInstallmentData([])\r\n        }\r\n        if (name === \"amount\") {\r\n            setLoanFormData(prevState => ({\r\n                ...prevState,\r\n                [\"emiDuration\"]: null,\r\n                [\"startDate\"]: '',\r\n                [\"endDate\"]: '',\r\n            }));\r\n            setInstallmentData([])\r\n        }\r\n        setLoanFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n        // Reset error for this field\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const calculateEndDate = startDate => {\r\n        const newDate = moment(startDate)\r\n            .add(Number(loanFormData.emiDuration.category_value) - 1, 'M')\r\n            .format('YYYY-MM-DD');\r\n\r\n        setLoanFormData(prevState => ({\r\n            ...prevState,\r\n            endDate: newDate,\r\n        }));\r\n\r\n        calculateEmiInstallment(startDate);\r\n    };\r\n\r\n\r\n    const calculateEmiInstallment = (startDate) => {\r\n        let principal = parseFloat(loanFormData?.amount) || 0;\r\n        let duration = parseInt(loanFormData?.emiDuration?.category_value) || 1;\r\n        let annualInterestRate = parseFloat(loanFormData?.interestRate) || 0;\r\n\r\n        let monthlyInterestRate = annualInterestRate / 12 / 100;\r\n        let emi = 0;\r\n\r\n        if (monthlyInterestRate > 0) {\r\n            emi = (\r\n                (principal * monthlyInterestRate * Math.pow(1 + monthlyInterestRate, duration)) /\r\n                (Math.pow(1 + monthlyInterestRate, duration) - 1)\r\n            ).toFixed(2);\r\n        } else {\r\n            emi = (principal / duration).toFixed(2);\r\n        }\r\n\r\n        let temp = [];\r\n        let date = moment(startDate).format('YYYY-MM-DD');\r\n\r\n        for (let i = 1; i <= duration; i++) {\r\n            temp.push({\r\n                installment: i,\r\n                payment_date: date,\r\n                emi_amount: emi,\r\n            });\r\n\r\n            date = moment(date).add(1, 'month').format('YYYY-MM-DD');\r\n        }\r\n\r\n        setInstallmentData(temp);\r\n    };\r\n\r\n    const onSubmitLoanData = async () => {\r\n        const validationResponse = await validateSchema(applyAdvanceSchema, loanFormData);\r\n        if (validationResponse.isValid) {\r\n            const {\r\n                loanType,\r\n                amount,\r\n                emiDuration,\r\n                startDate,\r\n                endDate,\r\n            } = loanFormData\r\n            setErrors({});\r\n            const params = {\r\n                loan_type: loanType?.value,\r\n                amount: amount || 0,\r\n                tenure_duration: emiDuration?.value,\r\n                start_date: startDate,\r\n                end_date: endDate,\r\n                installments: installmentData\r\n            }\r\n            handleApplyAdvanceRequest(params)\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedLoanData) {\r\n            setInstallmentData(selectedLoanData?.installments)\r\n            setLoanFormData({\r\n                employee: { label: selectedLoanData?.name, value: selectedLoanData?.value },\r\n                loanType: { label: selectedLoanData?.loan_type_name, value: selectedLoanData?.loan_type_value },\r\n                amount: selectedLoanData?.amount,\r\n                emiDuration: { value: selectedLoanData?.tenure_duration, label: '' },\r\n                startDate: selectedLoanData?.start_date,\r\n                endDate: selectedLoanData?.end_date,\r\n            })\r\n        }\r\n    }, [selectedLoanData])\r\n\r\n    return (<>\r\n        <div className={`offcanvas offcanvas-end creatNewTicketOff ${isOpen ? 'show' : ''}`} tabIndex={-1}\r\n            style={{\r\n                visibility: isOpen ? 'visible' : 'hidden',\r\n                width: \"800px\"\r\n            }}\r\n        >\r\n            <div className=\"offcanvas-header\">\r\n                <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\"> Apply Advance</h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                    onClick={() => toggleOpenClose()}\r\n                />\r\n            </div>\r\n            <div className=\"offcanvas-body\">\r\n                <div className=\"formPanel\">\r\n                    <div className=\"row\">\r\n                        {/* <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.employee\")} required={true} />\r\n                                <CustomSelect\r\n                                    data={allEmployeeList}\r\n                                    placeholder={t(\"placeholders.employee\")}\r\n                                    value={loanFormData?.employee || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"employee\")}\r\n                                    name=\"employee\"\r\n                                />\r\n                            </div>\r\n                            {errors?.employee && (\r\n                                <CustomError text={errors.employee} />\r\n                            )}\r\n                        </div> */}\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.loanType\")} required={true} />\r\n                                <CustomSelect\r\n                                    data={filteredDropdownData?.loan_type}\r\n                                    placeholder={t(\"placeholders.loanType\")}\r\n                                    value={loanFormData?.loanType || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"loanType\")}\r\n                                    name=\"loanType\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.amount\")} required={true} />\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.amount\")}\r\n                                    value={loanFormData?.amount}\r\n                                    name=\"amount\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.amount && (\r\n                                    <CustomError text={errors.amount} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.interestRate\")} required={true} />\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.interestRate\")}\r\n                                    value={loanFormData?.interestRate}\r\n                                    name=\"interestRate\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.interestRate && (\r\n                                    <CustomError text={errors.interestRate} />\r\n                                )}\r\n                            </div>\r\n                        </div> */}\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.emiDuration\")} required={true} />\r\n\r\n                                <CustomSelect\r\n                                    data={filteredDropdownData?.emi_duration}\r\n                                    placeholder={t(\"placeholders.emiDuration\")}\r\n                                    value={loanFormData?.emiDuration || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"emiDuration\")}\r\n                                    name=\"emiDuration\"\r\n                                />\r\n                            </div>\r\n                            {errors?.emiDuration && (\r\n                                <CustomError text={errors.emiDuration} />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.startDate\")} required={true} />\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    value={dateFormate(loanFormData?.startDate, \"YYYY-MM-DD\")}\r\n                                    isDisabled={!(loanFormData?.emiDuration) ? true : false}\r\n                                    name=\"startDate\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n\r\n                            </div>\r\n                            {errors?.startDate && (\r\n                                <CustomError text={errors.startDate} />\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.endDate\")} required={true} />\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    value={dateFormate(loanFormData?.endDate, \"YYYY-MM-DD\")}\r\n                                    isDisabled={true}\r\n                                    name=\"endDate\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.endDate && (\r\n                                    <CustomError text={errors.endDate} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <hr />\r\n                        {installmentData && installmentData?.length > 0 &&\r\n                            <div className=\"col-12\">\r\n                                <div className='card text-center p-1 m-o' style={{ backgroundColor: \"#3c82e9\", color: \"white\" }}> <h6 >Pending Installment </h6></div>\r\n                                <InstallmentTable\r\n                                    installmentData={installmentData}\r\n                                    setInstallmentData={setInstallmentData}\r\n                                    loanData={loanFormData}\r\n                                />\r\n                            </div>}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"offcanvas-footer\">\r\n                <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                    <CustomButton\r\n                        text={\"Add\"}\r\n                        classNames={\"btn btn-org-gradient\"}\r\n                        handleClick={() => onSubmitLoanData()}\r\n                        isLoading={loading}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default ApplyAdvance\r\n","import React, { useEffect, useState } from 'react'\r\nimport AdvanceRequestTable from './AdvanceRequestTable'\r\nimport AdvanceApprovalTable from './AdvanceApprovalTable'\r\nimport { CustomButton } from '../globalComponents'\r\nimport { CustomTabs } from '../reuseableComponents'\r\nimport ApplyAdvance from './ApplyAdvance'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { dropdownMasterActions, employeeActions, payrollActions } from '../../core/resource/actions'\r\nimport { pagination } from '../../utils/Constants.config'\r\nimport ApproveRejectModal from '../modal/ApproveRejectModal'\r\nimport CommonApproveRejectModal from '../modal/CommonApproveRejectModal'\r\nimport { setFilterDropdownData } from '../../utils/common'\r\n\r\nconst Advance = () => {\r\n    const dispatch = useDispatch()\r\n    const [activeTab, setActiveTab] = useState('')\r\n    const [isOpenApplyAdvance, setIsOpenApplyAdvance] = useState(false)\r\n    const [filteredDropdownData, setFilteredDropdownData] = useState('')\r\n    const [advanceReqCurrPage, setAdvanceReqCurrPage] = useState(1)\r\n    const [advanceApprovalCurrPage, setAdvanceApprovalCurrPage] = useState(1)\r\n    const [advanceRequestData, setAdvanceRequestData] = useState('')\r\n    const [advanceApprovalData, setAdvanceApprovalData] = useState('')\r\n    const [isOpenApproveRejectModal, setIsOpenApproveRejectModal] = useState('')\r\n    const [approveRejectAdvanceId, setApproveRejectAdvanceId] = useState('')\r\n    const [approveRejectComment, setApproveRejectComment] = useState('')\r\n    const {\r\n        getFilteredDropdownDataError,\r\n        getFilteredDropdownDataRes,\r\n        getFilteredDropdownDataPending\r\n    } = useSelector(state => state.dropdownMaster)\r\n\r\n    const {\r\n        applyAdvancePending,\r\n        applyAdvanceRes,\r\n        applyAdvanceError,\r\n\r\n        getAdvanceRequestPending,\r\n        getAdvanceRequestRes,\r\n        getAdvanceRequestError,\r\n\r\n        getAdvanceApprovalRes,\r\n        getAdvanceApprovalError,\r\n        getAdvanceApprovalPending,\r\n\r\n        approvalRejectAdvanceRes,\r\n        approvalRejectAdvanceError,\r\n        approvalRejectAdvancePending\r\n    } = useSelector(state => state.payroll)\r\n\r\n\r\n    useEffect(() => {\r\n        getDropdownFilteredData()\r\n    }, [])\r\n\r\n\r\n    /* Dropdown Master Filter */\r\n    const getDropdownFilteredData = () => {\r\n        const categories = ['loan_type', 'emi_duration']\r\n        let params = { category: categories }\r\n        dispatch(dropdownMasterActions.getFilteredDropdownDataRequest(params))\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getFilteredDropdownDataPending) {\r\n            if (getFilteredDropdownDataError) {\r\n                return;\r\n            }\r\n            if (getFilteredDropdownDataRes) {\r\n                if (getFilteredDropdownDataRes?.code === 200) {\r\n                    const updateData = setFilterDropdownData(getFilteredDropdownDataRes?.data?.data)\r\n                    setFilteredDropdownData(updateData);\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getFilteredDropdownDataRes,\r\n        getFilteredDropdownDataError,\r\n        getFilteredDropdownDataPending\r\n    ]);\r\n    const tableTabsRequest = [\r\n        { name: \"My Request\", onClickFun: (id) => onTabChange(id), id: \"advance_request\" },\r\n        { name: \"Advance Approval\", onClickFun: (id) => onTabChange(id), id: \"advance_approval\" },\r\n\r\n    ];\r\n\r\n\r\n    const onTabChange = (tabId) => {\r\n        setActiveTab(tabId)\r\n    }\r\n    const toggleOpenCloseModal = (data) => {\r\n        setIsOpenApplyAdvance(!isOpenApplyAdvance)\r\n    }\r\n\r\n    /* Apply Advance Request */\r\n    const handleApplyAdvanceRequest = (payload) => {\r\n        dispatch(payrollActions.applyAdvanceRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!applyAdvancePending) {\r\n            if (applyAdvanceError) {\r\n                dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_APPLY_ADVANCE_STORE\"))\r\n                return;\r\n            }\r\n            if (applyAdvanceRes) {\r\n                if (applyAdvanceRes?.code === 200) {\r\n                    toggleOpenCloseModal()\r\n                    dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_APPLY_ADVANCE_STORE\"))\r\n                    getAdvanceRequestData()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        applyAdvanceRes,\r\n        applyAdvanceError,\r\n        applyAdvancePending\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        getAdvanceRequestData()\r\n    }, [advanceReqCurrPage])\r\n\r\n    /* Apply Advance Request */\r\n    const getAdvanceRequestData = () => {\r\n        const payload = {\r\n            page: advanceReqCurrPage,\r\n            limit: pagination?.limit\r\n        }\r\n        dispatch(payrollActions.getAdvanceRequestRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!getAdvanceRequestPending) {\r\n            if (getAdvanceRequestError) {\r\n                return;\r\n            }\r\n            if (getAdvanceRequestRes) {\r\n                if (getAdvanceRequestRes?.code === 200) {\r\n                    setAdvanceRequestData(getAdvanceRequestRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAdvanceRequestRes,\r\n        getAdvanceRequestError,\r\n        getAdvanceRequestPending\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        getAdvanceApprovalData()\r\n    }, [advanceApprovalCurrPage])\r\n\r\n    /* Apply Advance Approval */\r\n    const getAdvanceApprovalData = () => {\r\n        const payload = {\r\n            page: advanceApprovalCurrPage,\r\n            limit: pagination?.limit\r\n        }\r\n        dispatch(payrollActions.getAdvanceApprovalRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!getAdvanceApprovalPending) {\r\n            if (getAdvanceApprovalError) {\r\n                return;\r\n            }\r\n            if (getAdvanceApprovalRes) {\r\n                if (getAdvanceApprovalRes?.code === 200) {\r\n                    setAdvanceApprovalData(getAdvanceApprovalRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAdvanceApprovalRes,\r\n        getAdvanceApprovalError,\r\n        getAdvanceApprovalPending\r\n    ]);\r\n\r\n    /* Toggle Approve Reject Modal */\r\n    const toggleApprovalRejectModal = (id) => {\r\n        if (id) {\r\n            setApproveRejectAdvanceId(id)\r\n        }\r\n        setIsOpenApproveRejectModal(!isOpenApproveRejectModal)\r\n    }\r\n    const approveRejectAdvance = (type) => {\r\n        if (type) {\r\n            const params = {\r\n                _id: approveRejectAdvanceId,\r\n                action_type: type,\r\n                comment: approveRejectComment\r\n            }\r\n            dispatch(payrollActions?.approvalRejectAdvanceRequest(params))\r\n        } else {\r\n            toggleApprovalRejectModal()\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!approvalRejectAdvancePending) {\r\n            if (approvalRejectAdvanceError) {\r\n                return;\r\n            }\r\n            if (approvalRejectAdvanceRes) {\r\n                if (approvalRejectAdvanceRes?.code === 200) {\r\n                    toggleApprovalRejectModal()\r\n                    getAdvanceRequestData()\r\n                    getAdvanceApprovalData()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        approvalRejectAdvanceRes,\r\n        approvalRejectAdvanceError,\r\n        approvalRejectAdvancePending\r\n    ]);\r\n\r\n    return (\r\n        <div className='cardBox'>\r\n            <div className=\"tab-pane fade show active\" id=\"receivedFeedback\">\r\n                <div className=\"cardHead d-flex justify-content-between\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <img\r\n                            src=\"images/kpi-guidline.svg\"\r\n                            alt=\"\"\r\n                            width={40}\r\n                            className=\"me-2 fw-bold\"\r\n                        />\r\n                        <div className=\"\">\r\n                            <h3>Advance </h3>\r\n                        </div>\r\n                    </div>\r\n                    <CustomButton\r\n                        text={\"Apply Advance\"}\r\n                        handleClick={() => toggleOpenCloseModal()}\r\n                        classNames=\"btn btn-primary\"\r\n                    />\r\n\r\n                </div>\r\n                <CustomTabs tabs={tableTabsRequest} type=\"rayRuns\" />\r\n                <div className=\"tab-content mykpiMain\">\r\n                    <div className=\"tab-pane fade active show\" id=\"advance_request\">\r\n\r\n                        <AdvanceRequestTable\r\n                            currentPage={advanceReqCurrPage}\r\n                            setCurrentPage={setAdvanceReqCurrPage}\r\n                            advanceRequestData={advanceRequestData}\r\n                        />\r\n                    </div>\r\n                    <div className=\"tab-pane fade\" id=\"advance_approval\">\r\n                        <AdvanceApprovalTable\r\n                            currentPage={advanceApprovalCurrPage}\r\n                            setCurrentPage={setAdvanceApprovalCurrPage}\r\n                            advanceApprovalData={advanceApprovalData}\r\n                            toggleApprovalRejectModal={toggleApprovalRejectModal}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            {isOpenApplyAdvance && <ApplyAdvance\r\n                isOpen={isOpenApplyAdvance}\r\n                toggleOpenClose={toggleOpenCloseModal}\r\n                filteredDropdownData={filteredDropdownData}\r\n                handleApplyAdvanceRequest={handleApplyAdvanceRequest}\r\n                loading={applyAdvancePending}\r\n            />}\r\n\r\n            {isOpenApproveRejectModal && <CommonApproveRejectModal\r\n                title={'Advance Approve Reject'}\r\n                onApproveReject={approveRejectAdvance}\r\n                isShow={isOpenApproveRejectModal}\r\n                // isLoading={approveRejectMrfPending}\r\n                // appliedFor={appliedFor}\r\n                setComment={setApproveRejectComment}\r\n                comment={approveRejectComment}\r\n\r\n            />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Advance\r\n","import React from 'react'\r\nimport { CustomButton } from '../globalComponents'\r\n\r\n\r\nconst CommonApproveRejectModal = (props) => {\r\n    const { title, onApproveReject, isShow, isLoading, btnTextLeft, btnTextRight, setComment, id, approveFor, comment } = props\r\n    return (\r\n        \r\n        <>\r\n            <div className=\"modal fade correctionAprovel\" id=\"mrfApproval\" style={{ display: isShow ? \"unset !important\" : \"none !important\", opacity: isShow ? \"unset\" : \"0\" }}>\r\n                <div className=\"modal-dialog modal-dialog-centered\">\r\n                    <div className=\"modal-content rounded-0 border-0\">\r\n                        <div className=\"modal-header border-0\">\r\n                            <h1 className=\"modal-title fs-5 fw-bold text-primary\">{title}</h1>\r\n                            <CustomButton\r\n                                classNames={\"btn-close\"}\r\n                                handleClick={() => onApproveReject('')}\r\n                            />\r\n                            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> */}\r\n                        </div>\r\n                        <div className=\"modal-body pt-0\">\r\n                            <div className=\"d-flex align-items-center justify-content-between mb-4\">\r\n                                {approveFor && <strong className=\"fs-7 text-light text-end\">Applied For<span\r\n                                    className=\"text-primary fw-bolder d-block\">{approveFor}</span></strong>}\r\n                            </div>\r\n                            <span className=\"text-primary fw-semibold mb-2 d-block fs-8\">Enter Reason</span>\r\n                            <div className=\"form-group mb-3\">\r\n                                <textarea className=\"form-control\" placeholder=\"Enter Reason\"\r\n                                    value={comment}\r\n                                    style={{ height: \"70px\" }}\r\n                                    onChange={(e) => setComment(e.target.value)}\r\n                                ></textarea>\r\n                            </div>\r\n                            <div className=\"my-3 d-flex justify-content-center gap-3\">\r\n                                <CustomButton\r\n                                    classNames={\"btn btn-danger\"}\r\n                                    isLoading={isLoading}\r\n                                    text={btnTextLeft || \"Reject\"}\r\n                                    handleClick={() => onApproveReject(\"reject\")}\r\n                                />\r\n                                <CustomButton\r\n                                    classNames={\"btn btn-success\"}\r\n                                    isLoading={isLoading}\r\n                                    text={btnTextRight || \"Approve\"}\r\n                                    handleClick={() => onApproveReject(\"approve\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isShow && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CommonApproveRejectModal\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { Input } from '../../../commanComponent'\r\n\r\nconst InstallmentTable = (props) => {\r\n    const {  installmentData, setInstallmentData,loanData } = props\r\n    const installmentFields = [\r\n        { key: 'installment', label: 'Installment' },\r\n        { key: 'payment_date', label: 'Payment Date' },\r\n        { key: 'emi_amount', label: 'Amount' },\r\n    ]\r\n\r\n    const calculateEMIAfterChanges = (amount, index) => {\r\n        let temp = installmentData;\r\n        temp[index]['amount'] = parseFloat(amount).toFixed(2);\r\n        let remEMI;\r\n        let totalEMI = 0;\r\n        temp.forEach((data, index1) => {\r\n          totalEMI = totalEMI + parseFloat(data['amount']);\r\n          if (index1 === index) {\r\n            remEMI =\r\n              parseFloat(loanData?.amount) - totalEMI >= 0\r\n                ? parseFloat(loanData?.amount) - totalEMI\r\n                : 0;\r\n            remEMI = remEMI / (temp.length - 1 - index).toFixed(2);\r\n          } else if (index1 > index) {\r\n            data['amount'] = JSON.stringify(remEMI);\r\n          }\r\n          return data;\r\n        });\r\n    \r\n        setInstallmentData(temp);\r\n      };\r\n    const installmentScopedSlots = useMemo(() => ({\r\n        amount: (item, index) => (\r\n            <span> \r\n                <Input\r\n                type=\"number\"\r\n                className=\"form-control border border-black text-center\"\r\n                id=\"instl_amt\"\r\n                placeholder=\"Installment Amount\"\r\n                onChange={e =>\r\n                    calculateEMIAfterChanges(e.target.value, index)\r\n                }\r\n                value={parseFloat(item?.amount)}\r\n            />\r\n            </span>\r\n        ),\r\n    }), [installmentData]);\r\n    return (\r\n        <React.Fragment>\r\n            <div className='text-center'>\r\n            <CustomTable\r\n                data={installmentData}\r\n                fields={installmentFields}\r\n                // isLoading={isLoading}\r\n                pagination={true}\r\n                // currentPage={currentPage}\r\n                // setCurrentPage={setCurrentPage}\r\n                // totalPages={depList?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\",marginTop:\"0px !important\" }}\r\n                scopedSlots={installmentScopedSlots}\r\n            />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default InstallmentTable\r\n"],"names":["props","getAdvanceRequestPending","useSelector","state","payroll","toggleOpenCloseModal","advanceRequestData","currentPage","setCurrentPage","advanceScopedSlots","useMemo","sn","_","index","_jsx","children","start_date","item","dateFormate","end_date","action","_jsxs","className","type","onClick","CustomTable","data","fields","key","label","isLoading","pagination","pageNo","totalPages","isHeader","tableStyle","padding","boxShadow","scopedSlots","getAdvanceApprovalPending","advanceApprovalData","toggleApprovalRejectModal","_id","t","useCustomTranslation","toggleOpenClose","isOpen","filteredDropdownData","handleApplyAdvanceRequest","selectedLoanData","loading","loanFormData","setLoanFormData","useState","loanType","amount","emiDuration","startDate","endDate","errors","setErrors","installmentData","setInstallmentData","handleFromChange","e","fieldName","_e$target","name","target","value","checked","calculateEndDate","prevState","prevErrors","undefined","newDate","moment","add","Number","category_value","format","calculateEmiInstallment","_loanFormData$emiDura","principal","parseFloat","duration","parseInt","monthlyInterestRate","interestRate","emi","Math","pow","toFixed","temp","date","i","push","installment","payment_date","emi_amount","useEffect","installments","employee","loan_type_name","loan_type_value","tenure_duration","_Fragment","tabIndex","style","visibility","width","Label","text","required","CustomSelect","loan_type","placeholder","handleChange","selectedOption","Input","onChange","CustomError","emi_duration","isDisabled","length","backgroundColor","color","InstallmentTable","loanData","CustomButton","classNames","handleClick","async","validationResponse","validateSchema","applyAdvanceSchema","isValid","params","onSubmitLoanData","Advance","dispatch","useDispatch","activeTab","setActiveTab","isOpenApplyAdvance","setIsOpenApplyAdvance","setFilteredDropdownData","advanceReqCurrPage","setAdvanceReqCurrPage","advanceApprovalCurrPage","setAdvanceApprovalCurrPage","setAdvanceRequestData","setAdvanceApprovalData","isOpenApproveRejectModal","setIsOpenApproveRejectModal","approveRejectAdvanceId","setApproveRejectAdvanceId","approveRejectComment","setApproveRejectComment","getFilteredDropdownDataError","getFilteredDropdownDataRes","getFilteredDropdownDataPending","dropdownMaster","applyAdvancePending","applyAdvanceRes","applyAdvanceError","getAdvanceRequestRes","getAdvanceRequestError","getAdvanceApprovalRes","getAdvanceApprovalError","approvalRejectAdvanceRes","approvalRejectAdvanceError","approvalRejectAdvancePending","getDropdownFilteredData","category","dropdownMasterActions","getFilteredDropdownDataRequest","code","_getFilteredDropdownD","updateData","setFilterDropdownData","tableTabsRequest","onClickFun","id","onTabChange","tabId","payrollActions","handleClearPayrollStore","getAdvanceRequestData","payload","page","limit","getAdvanceRequestRequest","getAdvanceApprovalData","getAdvanceApprovalRequest","src","alt","CustomTabs","tabs","AdvanceRequestTable","AdvanceApprovalTable","ApplyAdvance","applyAdvanceRequest","CommonApproveRejectModal","title","onApproveReject","action_type","comment","approvalRejectAdvanceRequest","isShow","setComment","btnTextLeft","btnTextRight","approveFor","display","opacity","height","installmentScopedSlots","calculateEMIAfterChanges","remEMI","totalEMI","forEach","index1","JSON","stringify","React","marginTop"],"sourceRoot":""}