{"version":3,"file":"static/js/174.8b74176d.chunk.js","mappings":"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","sources":["components/modal/AttendanceLogsModal.js","components/otherAttendance/BreadCrumb.js","components/otherAttendance/OtherAttendanceTable.js","components/otherAttendance/AttendanceReportModal.js","components/otherAttendance/OtherAttendance.js","../node_modules/sass|sync"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { CustomTable } from '../reuseableComponents';\r\nimport { attendanceCorrectionActions } from '../../core/resource/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { dateFormate } from '../../utils/common';\r\n\r\n\r\nconst AttendanceLogsModal = (props) => {\r\n    const dispatch = useDispatch()\r\n    const {\r\n        isOpen,\r\n        handleOpenClose,\r\n        // attendanceLogsData,\r\n        selectedData,\r\n    } = props\r\n    const [attendanceLogsData, setAttendanceLogsData] = useState([])\r\n    console.log(\"attendanceLogsData\",attendanceLogsData)\r\n    const [currentPage, setCurrentPage] = useState()\r\n    const {\r\n        getAttendanceLogsPending,\r\n        getAttendanceLogsRes,\r\n        getAttendanceLogsError,\r\n\r\n    } = useSelector(state => state.attendanceCorrection)\r\n\r\n    const attendanceLogsFields = [\r\n        { key: \"sn\", label: \"S.N\" },\r\n        { key: \"punch_time\", label: \"Time\" },\r\n        { key: \"activity_name\", label: \"Activity Name\" },\r\n        { key: \"log_type\", label: \"IN/OUT\" }\r\n    ]\r\n    const attendanceLogsScopedSlots = {\r\n        sn: (_, index) => (\r\n            <span className='srNum'>{index + 1}</span>\r\n        ),\r\n        punch_time: (item, index) => (\r\n            <span > {dateFormate(item?.punch_time,\"LTS\")}</span>\r\n        ),\r\n\r\n    };\r\n    useEffect(() => {\r\n        getAttendanceLogs()\r\n    }, [selectedData])\r\n    /* Get Attendance Logs */\r\n    const getAttendanceLogs = () => {\r\n        const payload = {\r\n            date: selectedData?.attendance_date,\r\n            emp_id: selectedData?.emp_id\r\n        }\r\n        dispatch(attendanceCorrectionActions.getAttendanceLogsRequest(payload))\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (!getAttendanceLogsPending) {\r\n            if (getAttendanceLogsError) {\r\n                return;\r\n            }\r\n            if (getAttendanceLogsRes) {\r\n                if (getAttendanceLogsRes?.code === 200) {\r\n                    setAttendanceLogsData(getAttendanceLogsRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAttendanceLogsRes,\r\n        getAttendanceLogsError,\r\n        getAttendanceLogsPending\r\n    ]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div class=\"modal fade attendanceViewodal\" id=\"viewModal\" style={{ display: isOpen ? \"unset !important\" : \"none !important\", opacity: isOpen ? \"unset\" : \"0\" }}>\r\n                <div class=\"modal-dialog modal-dialog-centered\">\r\n                    <div class=\"modal-content rounded-0 border-0\">\r\n                        <div class=\"modal-header border-0\">\r\n                            <h1 class=\"modal-title fs-5 fw-bold text-primary\">Attendance Logs\r\n                            </h1>\r\n                            <button type=\"button\"\r\n                                class=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                onClick={() => handleOpenClose()}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <div class=\"d-flex align-items-center justify-content-between mb-3\">\r\n                                <strong class=\"fs-7 text-primary\">\r\n                                    <span class=\"text-light fw-normal\">Date :</span>\r\n                                    {dateFormate(selectedData?.attendance_date)}\r\n                                </strong>\r\n                                <strong class=\"fs-7 text-primary\">{selectedData?.day_of_week}</strong>\r\n\r\n                            </div>\r\n                            <div class=\"timeCountmdl\">\r\n                                <strong>\r\n                                    <span>{selectedData?.total_working_hours || \"00:00:00\"}</span>\r\n                                    Working Hours\r\n                                </strong>\r\n                                <strong>\r\n                                    <span>{selectedData?.total_break_time || \"00:00:00\"}</span>\r\n                                    Break Time\r\n                                </strong>\r\n                            </div>\r\n                            <div class=\"table-responsive attendanceTbl\">\r\n                                <CustomTable\r\n                                    data={attendanceLogsData}\r\n                                    fields={attendanceLogsFields}\r\n                                    isLoading={getAttendanceLogsPending}\r\n                                    pagination={true}\r\n                                    currentPage={currentPage}\r\n                                    setCurrentPage={setCurrentPage}\r\n                                    totalPages={''}\r\n                                    isHeader={false}\r\n                                    tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                                    scopedSlots={attendanceLogsScopedSlots}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttendanceLogsModal\r\n","import React from 'react'\r\n\r\nconst BreadCrumb = (props) => {\r\n    const { tabType, empName, activeTabType,departmentName } = props\r\n    const renderedBreadCrumb = () => {\r\n        if (tabType === \"employee\") {\r\n            return (\r\n                <ul className=\"breadCrumb mb-3\">\r\n                    <li>\r\n                        <span onClick={() => activeTabType(\"team\")}>My Team</span> &gt;{\" \"}\r\n                    </li>\r\n                    <li className=\"active\">{empName}</li>\r\n                </ul>\r\n            );\r\n        } else if (tabType === \"team\") {\r\n            return <span className=\"underlineHead\">My Team</span>;\r\n        }\r\n        else if (tabType === \"deptWiseEmp\") {\r\n            return (\r\n                <ul className=\"breadCrumb mb-3\">\r\n                    <li>\r\n                        <span onClick={() => activeTabType(\"allTeam\")}>All Teams</span> &gt;{\" \"}\r\n                    </li>\r\n                    <li className=\"active\" onClick={() => activeTabType(\"deptWiseEmp\")}>{departmentName}</li>\r\n                </ul>\r\n            )\r\n        }\r\n\r\n        else if (tabType === \"empLogs\") {\r\n            return (\r\n                <ul className=\"breadCrumb mb-3\">\r\n                    <li>\r\n                        <span onClick={() => activeTabType(\"allTeam\")}>All Teams</span> &gt;{\" \"}\r\n                    </li>\r\n                    <li>\r\n                        <span onClick={() => activeTabType(\"deptWiseEmp\")}>{departmentName}</span> &gt;{\" \"}\r\n                    </li>\r\n                    <li className=\"active\">{empName}</li>\r\n                </ul>\r\n            );\r\n        } else if (tabType === \"allTeam\") {\r\n            return (\r\n                <span className=\"underlineHead\" >\r\n                    All Teams\r\n                </span>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n    return (\r\n        <>\r\n            {renderedBreadCrumb()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BreadCrumb\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable, CustomTabs } from '../reuseableComponents'\r\nimport { CustomButton, CustomDateRangePicker } from '../globalComponents';\r\nimport { checkAttendanceStatus, dateFormate, isPermission } from '../../utils/common';\r\nimport BreadCrumb from './BreadCrumb';\r\nimport { useCustomTranslation } from '../../translation';\r\nimport { useSelector } from 'react-redux';\r\nconst selfLogsData = [\r\n  {\r\n    date: \"04-03-2024\",\r\n    checkIn: \"09:30:12\",\r\n    checkOut: \"14:40:00\",\r\n    first_half_status: \"PR\",\r\n    second_half_present: \"AB\",\r\n    status: \"FHP\",\r\n    breakTime: \"00:20:12\",\r\n    workingHours: \"04:01:02\",\r\n  },\r\n  {\r\n    date: \"23-02-2024\",\r\n    checkIn: \"10:04:01\",\r\n    checkOut: \"18:50:00\",\r\n    first_half_status: \"AB\",\r\n    second_half_present: \"PR\",\r\n    status: \"SHP\",\r\n    breakTime: \"01:15:00\",\r\n    workingHours: \"08:02:01\",\r\n  },\r\n  {\r\n    date: \"04-03-2024\",\r\n    checkIn: \"09:44:12\",\r\n    checkOut: \"18:50:00\",\r\n    first_half_status: \"PR\",\r\n    second_half_present: \"PR\",\r\n    status: \"PR\",\r\n    breakTime: \"01:15:00\",\r\n    workingHours: \"08:02:01\",\r\n  },\r\n  {\r\n    date: \"23-02-2024\",\r\n    checkIn: \"09:44:01\",\r\n    checkOut: \"18:50:00\",\r\n    first_half_status: \"PR\",\r\n    second_half_present: \"PR\",\r\n    status: \"PR\",\r\n    breakTime: \"01:15:00\",\r\n    workingHours: \"08:02:01\",\r\n  },\r\n  {\r\n    date: \"04-03-2024\",\r\n    checkIn: \"-\",\r\n    checkOut: \"-\",\r\n    first_half_status: \"PL\",\r\n    second_half_present: \"PL\",\r\n    status: \"PL\",\r\n    breakTime: \"-\",\r\n    workingHours: \"-\",\r\n  },\r\n  {\r\n    date: \"23-02-2024\",\r\n    checkIn: \"-\",\r\n    checkOut: \"-\",\r\n    first_half_status: \"WO\",\r\n    second_half_present: \"WO\",\r\n    status: \"WO\",\r\n    breakTime: \"-\",\r\n    workingHours: \"-\",\r\n  },\r\n];\r\n\r\nconst employeeAttendanceSummary = [\r\n  {\r\n    id: 1,\r\n    name: \"mohd Sarfaraz\",\r\n    emp_id: \"QD1545\",\r\n    total_working_days: 23,\r\n    present_days: 21,\r\n    absent_days: 1,\r\n    leaves_taken: \"01\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Rishabh Kumawat\",\r\n    emp_id: \"QD9439\",\r\n    total_working_days: 23,\r\n    present_days: 22,\r\n    absent_days: \"01\",\r\n    leaves_taken: \"00\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Nikita Prajapat\",\r\n    emp_id: \"QD5958\",\r\n    total_working_days: 23,\r\n    present_days: 22,\r\n    absent_days: \"01\",\r\n    leaves_taken: \"00\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Anubhav Kumawat\",\r\n    emp_id: \"QD1245\",\r\n    total_working_days: 23,\r\n    present_days: 28,\r\n    absent_days: \"02\",\r\n    leaves_taken: \"00\",\r\n  },\r\n]\r\n\r\nconst deptAttendanceSummeryData = [\r\n  {\r\n    deptName: \"Product Development\",\r\n    totalEmp: 10,\r\n    deptManager: \"Naveen Raj\",\r\n    netWorking: \"198:00:00\",\r\n    grossWorking: \"176:00:00\",\r\n    breakHrs: \"20:00:00\",\r\n  },\r\n  {\r\n    deptName: \"HZL CVT Operation\",\r\n    totalEmp: 20,\r\n    deptManager: \"Ashutosh\",\r\n    netWorking: \"198:00:00\",\r\n    grossWorking: \"180:00:00\",\r\n    breakHrs: \"30:00:00\",\r\n  },\r\n  {\r\n    deptName: \"HR - (HRBP)\",\r\n    totalEmp: 35,\r\n    deptManager: \"Gurumurthy\",\r\n    netWorking: \"189:00:00\",\r\n    grossWorking: \"160:00:00\",\r\n    breakHrs: \"34:00:00\",\r\n  },\r\n  {\r\n    deptName: \"Product Development\",\r\n    totalEmp: 39,\r\n    deptManager: \"Smriti\",\r\n    netWorking: \"178:00:00\",\r\n    grossWorking: \"190:00:00\",\r\n    breakHrs: \"25:00:00\",\r\n  },\r\n  {\r\n    deptName: \"HZL CVT Operation\",\r\n    totalEmp: 46,\r\n    deptManager: \"Ashutosh\",\r\n    netWorking: \"198:00:00\",\r\n    grossWorking: \"160:00:00\",\r\n    breakHrs: \"70:00:00\",\r\n  },\r\n  {\r\n    deptName: \"HR - (HRBP)\",\r\n    totalEmp: 90,\r\n    deptManager: \"Smriti\",\r\n    netWorking: \"198:00:00\",\r\n    grossWorking: \"190:00:00\",\r\n    breakHrs: \"60:00:00\",\r\n  }\r\n];\r\n\r\nconst OtherAttendanceTable = (props) => {\r\n  const { t } = useCustomTranslation()\r\n  const {\r\n    otherAttendanceTabs,\r\n    isLoading,\r\n    currentPage,\r\n    setCurrentPage,\r\n    empName,\r\n    tabType,\r\n    activeTabType,\r\n    activeTab,\r\n    departmentName,\r\n    startDate,\r\n    endDate,\r\n    handleFilterDateWiseData,\r\n    toggleAttendanceLogs,\r\n    selfAttendanceData,\r\n    myTeamAttendanceData,\r\n    activeOtherAttendanceTab,\r\n    allTeamAttendance\r\n  } = props\r\n  const { selfAttendancePending, myTeamAttendancePending } = useSelector(state => state.otherAttendance)\r\n  /*  -----------------Code Start Self Attendance Section--------------- */\r\n  const selfLogFields = [\r\n    { key: 'sn', label: 'S.N' },\r\n    { key: 'attendance_date', label: 'Date' },\r\n    { key: 'first_check_in_time', label: 'Check In' },\r\n    { key: 'last_check_out_time', label: 'Check Out' },\r\n    { key: 'total_break_time', label: 'Break Time' },\r\n    { key: 'total_working_hours', label: 'Working Hours' },\r\n    { key: 'first_half_status', label: 'First Half Status' },\r\n    { key: 'second_half_status', label: 'Second Half Status' },\r\n    { key: 'attendance_status', label: 'Status' },\r\n    { key: 'action', label: 'Action' }\r\n  ];\r\n\r\n  const selfLogsScopedSlots = useMemo(() => ({\r\n    sn: (_, index) => (\r\n      <span>{index + 1}</span>\r\n    ),\r\n    attendance_date: item => dateFormate(item?.attendance_date),\r\n\r\n    first_check_in_time: item => dateFormate(item?.first_check_in_time,\"LTS\"),\r\n    last_check_out_time: item => dateFormate(item?.last_check_out_time,\"LTS\"),\r\n\r\n    first_half_status: (item) => (\r\n      <span className={`font-weight-bold ${checkAttendanceStatus(item?.first_half_status)}`}\r\n      >{item?.first_half_status}</span>\r\n    ),\r\n    second_half_status: (item) => (\r\n      <span className={checkAttendanceStatus(item?.second_half_status)}\r\n      >{item?.second_half_status}</span>\r\n    ),\r\n    attendance_status: (item) => (\r\n      <span className={checkAttendanceStatus(item?.attendance_status)}\r\n      >{item?.attendance_status}</span>\r\n    ),\r\n    created_at: item => dateFormate(item?.created_at),\r\n\r\n    action: item => (\r\n      <span onClick={() => toggleAttendanceLogs(item)}>\r\n        <img src=\"images/nextaction-Icon.svg\" alt=\"\" width={27} />\r\n      </span>\r\n    )\r\n  }), [selfLogsData]);\r\n\r\n  /* --------------Code End Self Attendance Section---------------------- */\r\n\r\n  /* --------------Code Start Team Section---------------------------- */\r\n  const empAttendanceSummaryFields = [\r\n    { key: 'sn', label: 'S.N' },\r\n    { key: 'name', label: 'Name' },\r\n    { key: 'emp_id', label: 'Emp Id' },\r\n    { key: 'total_working_days', label: 'Total Working Days' },\r\n    { key: 'present_days', label: 'Present Days' },\r\n    { key: 'absent_days', label: 'Absent Days' },\r\n    { key: 'leaves_taken', label: 'Leaves Taken' },\r\n    { key: 'action', label: 'Action' }\r\n  ];\r\n\r\n  const empAttendanceSummarySlots = {\r\n    sn: (_, index) => (\r\n      <span>{index + 1}</span>\r\n    ),\r\n    action: item => (\r\n      <span onClick={() => activeTabType(tabType === 'team' ? \"employee\" : \"empLogs\", item)}>\r\n        <img src=\"images/nextaction-Icon.svg\" alt=\"\" width={27} />\r\n      </span>\r\n    )\r\n  };\r\n\r\n  /* --------------Code End Team Section---------------------------- */\r\n\r\n  /* --------------Code Start All Team Section---------------------------- */\r\n\r\n  const deptAttendanceSummeryFields = [\r\n    { key: 'sn', label: 'S.N' },\r\n    { key: 'name', label: 'Dept Name' },\r\n    { key: 'totalEmp', label: 'Total Emp' },\r\n    { key: 'deptManager', label: 'Dept Manager' },\r\n    { key: 'netWorking', label: 'Net Working' },\r\n    { key: 'grossWorking', label: 'Gross Working' },\r\n    { key: 'breakHrs', label: 'Break Hrs' },\r\n    { key: 'action', label: 'Action' }\r\n  ];\r\n\r\n  const deptAttendanceSummerySlots = useMemo(() => ({\r\n    sn: (_, index) => (\r\n      <span>{index + 1}</span>\r\n    ),\r\n    action: item => (\r\n      <span onClick={() => activeTabType(\"deptWiseEmp\", item)}>\r\n        <img src=\"images/nextaction-Icon.svg\" alt=\"\" width={27} />\r\n      </span>\r\n    )\r\n  }), [deptAttendanceSummeryData, activeTabType]);\r\n\r\n  /* --------------Code End All Team Section---------------------------- */\r\n  return (\r\n    <>\r\n      <div className=\"ticketScoreSection\">\r\n        <div className=\"cardBox myRequest mb-3\">\r\n          <div className=\"cardHead d-flex justify-content-between\">\r\n            <h3>\r\n              <img\r\n                src=\"images/other-attendance.svg\"\r\n                alt=\"\"\r\n                width={40}\r\n                className=\"me-2\"\r\n              />{\" \"}\r\n              {t(\"headings.otherAttendance\")}\r\n            </h3>\r\n      \r\n              <CustomDateRangePicker\r\n                onDateRangeChange={(dateRange) => handleFilterDateWiseData(dateRange)}\r\n                endDefaultDate={endDate}\r\n                startDefaultDate={startDate}\r\n\r\n              />\r\n              \r\n         \r\n          </div>\r\n          <CustomTabs ulClass={\"leaveTabs otherAttendance mb-4\"} tabs={otherAttendanceTabs} />\r\n          <div className=\"tab-content\">\r\n          {isPermission(\"self_other_attendance\") &&  <div className={`tab-pane fade ${activeOtherAttendanceTab===\"self\" &&\"active show\"}`} id=\"self\">\r\n              <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                <span className=\"underlineHead\">Self Attendance Log</span>\r\n                <input type=\"text\" className=\"filterinpt\" placeholder=\"Filter..\" />\r\n              </div>\r\n              <CustomTable\r\n                data={selfAttendanceData?.data}\r\n                fields={selfLogFields}\r\n                isLoading={selfAttendancePending}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={selfAttendanceData?.totalPages}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={selfLogsScopedSlots}\r\n              />\r\n            </div>}\r\n           { isPermission(\"my_team_other_attendance\") &&<div className={`tab-pane fade ${activeOtherAttendanceTab===\"team\" &&\"active show\"}`} id=\"team\">\r\n              <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                <BreadCrumb tabType={tabType} empName={empName} activeTabType={activeTabType} activeTab={activeTab} />\r\n                <input type=\"text\" className=\"filterinpt\" placeholder=\"Filter..\" />\r\n              </div>\r\n              {tabType === \"employee\" &&\r\n                <CustomTable\r\n                  data={selfAttendanceData?.data}\r\n                  fields={selfLogFields}\r\n                  isLoading={isLoading}\r\n                  pagination={true}\r\n                  currentPage={currentPage}\r\n                  setCurrentPage={setCurrentPage}\r\n                  totalPages={selfAttendanceData?.totalPages}\r\n                  isHeader={false}\r\n                  tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                  scopedSlots={selfLogsScopedSlots}\r\n                />}\r\n              {tabType === \"team\" &&\r\n                <CustomTable\r\n                  data={myTeamAttendanceData?.data}\r\n                  fields={empAttendanceSummaryFields}\r\n                  isLoading={myTeamAttendancePending}\r\n                  pagination={true}\r\n                  currentPage={currentPage}\r\n                  setCurrentPage={setCurrentPage}\r\n                  totalPages={myTeamAttendanceData?.totalPages}\r\n                  isHeader={false}\r\n                  tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                  scopedSlots={empAttendanceSummarySlots}\r\n                />\r\n              }\r\n            </div>}\r\n           {isPermission(\"all_team_other_attendance\") && <div className={`tab-pane fade ${activeOtherAttendanceTab===\"allTeam\" &&\"active show\"}`} id=\"allTeam\">\r\n              <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                <BreadCrumb\r\n                  tabType={tabType}\r\n                  empName={empName}\r\n                  activeTabType={activeTabType}\r\n                  activeTab={activeTab}\r\n                  departmentName={departmentName}\r\n                />\r\n                <input type=\"text\" className=\"filterinpt\" placeholder=\"Filter..\" />\r\n              </div>\r\n\r\n              {tabType === \"allTeam\" && <CustomTable\r\n                data={allTeamAttendance?.data}\r\n                fields={deptAttendanceSummeryFields}\r\n                isLoading={isLoading}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={2}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={deptAttendanceSummerySlots}\r\n              />}\r\n\r\n              {tabType === \"deptWiseEmp\" && <CustomTable\r\n                data={employeeAttendanceSummary}\r\n                fields={empAttendanceSummaryFields}\r\n                isLoading={isLoading}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={2}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={empAttendanceSummarySlots}\r\n              />}\r\n              {tabType === \"empLogs\" &&\r\n                <CustomTable\r\n                  data={selfLogsData}\r\n                  fields={selfLogFields}\r\n                  isLoading={isLoading}\r\n                  pagination={true}\r\n                  currentPage={currentPage}\r\n                  setCurrentPage={setCurrentPage}\r\n                  totalPages={2}\r\n                  isHeader={false}\r\n                  tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                  scopedSlots={selfLogsScopedSlots}\r\n                />}\r\n\r\n            </div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OtherAttendanceTable","import React, { useState } from 'react'\r\nimport { useCustomTranslation } from '../../translation'\r\nimport { CustomButton, CustomDateRangePicker, CustomError } from '../globalComponents'\r\nimport { CustomMultiSelect, Input, Label } from '../commanComponent'\r\nimport CustomSelect from '../commanComponent/CustomSelect'\r\nimport moment from 'moment'\r\nimport { multiSelectIDs, setDateFormate } from '../../utils/common'\r\nimport { attendanceReportType } from '../../utils/Constants.config'\r\nimport { useSelector } from 'react-redux'\r\nimport { validateSchema } from '../../utils/ValidationHelper'\r\nimport { createEmployeeSchema, downloadAttendanceReportSchema } from '../../utils/ValidationSchema'\r\nconst AttendanceReportModal = (props) => {\r\n    const { isOpen, handleOpenClose, downloadAttendanceReport, allEmployeeData } = props\r\n    const { attendanceReportPending } = useSelector(state => state.otherAttendance)\r\n    const [startDate, setStartDate] = useState('')\r\n    const [endDate, setEndDate] = useState('')\r\n    const [errors, setErrors] = useState({});\r\n    const [reportForm, setReportForm] = useState({\r\n        reportType: null,\r\n        dateRange: \"\",\r\n        employees: []\r\n    })\r\n    const { t } = useCustomTranslation()\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n\r\n        setReportForm(prevState => {\r\n            let updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n         // Reset error for this field\r\n         setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    console.log(reportForm,\"reportForm-------\")\r\n\r\n    const handleFilterDateWiseData = (dateRange) => {\r\n        const startDate = dateRange[0] && setDateFormate(dateRange[0], 'YYYY-MM-DD')\r\n        const endDate = dateRange[1] && setDateFormate(dateRange[1], 'YYYY-MM-DD')\r\n        if (startDate && endDate) {\r\n            setStartDate(startDate)\r\n            setEndDate(endDate)\r\n            setErrors(prevErrors => ({\r\n                ...prevErrors,\r\n                [\"dateRange\"]: undefined,\r\n            }));\r\n        }\r\n\r\n    }\r\n    const handleDownloadAttendanceReport = async () => {\r\n\r\n        let filterReport = {}\r\n        if (reportForm?.reportType?.value) filterReport[\"report_type\"] = reportForm?.reportType?.value\r\n        if (startDate && endDate) {\r\n            filterReport[\"start_date\"] = startDate\r\n            filterReport[\"end_date\"] = endDate\r\n            reportForm[\"dateRange\"] = startDate + endDate\r\n        }\r\n        if (reportForm?.employees) filterReport[\"employees_ids\"] = multiSelectIDs(reportForm?.employees)\r\n\r\n        const validationResponse = await validateSchema(downloadAttendanceReportSchema, reportForm);\r\n        if (validationResponse.isValid) {\r\n\r\n            downloadAttendanceReport(filterReport)\r\n        }\r\n        else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class={`modal fade correctionAprovel ${isOpen ? ' show' : ''}`} id=\"correctionAp\"\r\n                tabIndex=\"-1\"\r\n                style={{ display: isOpen ? 'block' : 'none', }}\r\n                aria-hidden={!isOpen}\r\n            >\r\n                <div class=\"modal-dialog modal-dialog-centered\" style={{ maxWidth: \"550px\" }}>\r\n                    <div class=\"modal-content rounded-0 border-0\">\r\n                        <div class=\"modal-header \">\r\n                            <h1 class=\"modal-title fs-5 fw-bold text-primary\">Download Reports</h1>\r\n                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"\r\n                                onClick={() => handleOpenClose()}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body pt-0\">\r\n                            <div className=\"formPanel mt-4\">\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.reportType\")} required={true} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustomSelect\r\n                                                data={attendanceReportType || []}\r\n                                                placeholder={t(\"placeholders.reportType\")}\r\n                                                value={reportForm?.reportType || ''}\r\n                                                handleChange={(selectedOption) => handleFromChange(selectedOption, \"reportType\")}\r\n                                            />\r\n                                            {errors?.reportType && (\r\n                                                <CustomError text={errors.reportType} />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.date\")} required={true} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustomDateRangePicker\r\n                                                onDateRangeChange={(dateRange) => handleFilterDateWiseData(dateRange)}\r\n                                                endDefaultDate={endDate}\r\n                                                startDefaultDate={startDate}\r\n                                                sizeType={\"full\"}\r\n                                            />\r\n                                            {errors?.dateRange && (\r\n                                                <CustomError text={errors.dateRange} />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.employees\")} required={true} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustomMultiSelect\r\n                                                optionsData={allEmployeeData}\r\n                                                placeholder=\"Select Employee\"\r\n                                                values={reportForm.employees}\r\n                                                onChange={(data) => handleFromChange(data, \"employees\")}\r\n                                            />\r\n                                            {errors?.employees && (\r\n                                                <CustomError text={errors.employees} />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                        <div className='modal-footer'>\r\n                            <div class=\"d-flex justify-content-end gap-3\">\r\n                                <CustomButton\r\n                                    text={t(\"btns.download\")}\r\n                                    classNames={\"btn-success \"}\r\n                                    handleClick={() => handleDownloadAttendanceReport()}\r\n                                    isLoading={attendanceReportPending}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttendanceReportModal\r\n","import React, { useEffect, useState } from 'react'\r\nimport OtherAttendanceTable from './OtherAttendanceTable'\r\nimport { types } from 'sass';\r\nimport moment from 'moment';\r\nimport AttendanceLogsModal from '../modal/AttendanceLogsModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { pagination } from '../../utils/Constants.config';\r\nimport { employeeActions, otherAttendanceActions } from '../../core/resource/actions';\r\nimport { activeTabPermission, setDateFormate } from '../../utils/common';\r\nimport { CustomButton } from '../globalComponents';\r\nimport AttendanceReportModal from './AttendanceReportModal';\r\nimport { isPermission } from '../../utils/common';\r\n\r\n\r\nconst attendanceLogs = [\r\n  { time: \"09:30:20\", activity_name: \"Main Gate IN\", in_out: \"IN\" },\r\n  { time: \"09:33:34\", activity_name: \"Cafe IN\", in_out: \"OUT\" },\r\n  { time: \"09:35:00\", activity_name: \"Cafe OUT\", in_out: \"IN\" },\r\n  { time: \"09:30:20\", activity_name: \"Main Gate OUT\", in_out: \"OUT\" },\r\n  { time: \"09:33:34\", activity_name: \"Main Gate IN\", in_out: \"IN\" },\r\n  { time: \"09:35:00\", activity_name: \"Cafe IN\", in_out: \"OUT\" },\r\n  { time: \"09:33:34\", activity_name: \"Cafe OUT\", in_out: \"IN\" }\r\n];\r\nconst OtherAttendance = () => {\r\n  const dispatch = useDispatch()\r\n  const {\r\n    selfAttendancePending,\r\n    selfAttendanceRes,\r\n    selfAttendanceError,\r\n\r\n    myTeamAttendancePending,\r\n    myTeamAttendanceRes,\r\n    myTeamAttendanceError,\r\n\r\n    allTeamAttendancePending,\r\n    allTeamAttendanceRes,\r\n    allTeamAttendanceError,\r\n\r\n    attendanceReportPending,\r\n    attendanceReportRes,\r\n    attendanceReportError,\r\n\r\n  } = useSelector(state => state.otherAttendance)\r\n  const {\r\n\r\n    getAllEmployeeRes,\r\n    getAllEmployeeError,\r\n    getAllEmployeePending\r\n\r\n  } = useSelector(state => state.employee)\r\n\r\n\r\n\r\n  const [selectedTeamMemberData, setSelectedTeamMemberData] = useState([])\r\n  const [empName, setEmpName] = useState('')\r\n  const [tabType, setTabType] = useState('')\r\n  const [activeTab, setActiveTab] = useState('')\r\n  const [departmentName, setDepartmentName] = useState('')\r\n  const [startDate, setStartDate] = useState(moment().subtract(10, 'days').format('YYYY-MM-DD'))\r\n  const [endDate, setEndDate] = useState(moment().format('YYYY-MM-DD'))\r\n  const [isShowAttendanceLogs, setIsShowAttendanceLogs] = useState(false)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [selfAttendanceData, setSelfAttendanceData] = useState('')\r\n  const [selectedEmployeeData, setSelectedEmployeeData] = useState({})\r\n  const [myTeamAttendanceData, setMyTeamAttendanceData] = useState({})\r\n  const [selectedEmpData, setSelectedEmpData] = useState('')\r\n  const [allTeamAttendance, setAllTeamAttendance] = useState('')\r\n  const [isShowAttendanceModal, setIsShowAttendanceModal] = useState(false)\r\n  const [allEmployeeData, setAllEmployeeData] = useState('')\r\n  const otherAttendanceTabs = [\r\n    { name: \"Self\", onClickFun: (id) => getOtherAttendance(id), id: \"self\", permissionId :\"self_other_attendance\" },\r\n    { name: \"My Team \", onClickFun: (id) => getOtherAttendance(id), id: \"team\",permissionId :\"my_team_other_attendance\" },\r\n    { name: \"All Team\", onClickFun: (id) => getOtherAttendance(id), id: \"allTeam\",permissionId :\"all_team_other_attendance\" },\r\n  ];\r\n  const activeOtherAttendanceTab =activeTabPermission(otherAttendanceTabs)\r\n  console.log(activeOtherAttendanceTab,\"activeOtherAttendanceTab-------------\")\r\n\r\n  const getOtherAttendance = (type, selectedEmp, startDates, endDates) => {\r\n    let params = {\r\n      start_date: startDates || startDate,\r\n      end_date: endDates || endDate,\r\n      page: currentPage,\r\n      limit: pagination.limit,\r\n    }\r\n    if (selectedEmp) {\r\n      params = { ...params, emp_id: selectedEmp?._id || '' }\r\n    }\r\n    if (type === \"team\") {\r\n      setTabType(type)\r\n      dispatch(otherAttendanceActions.myTeamAttendanceRequest(params));\r\n\r\n    } else if (type === \"allTeam\") {\r\n      setTabType(type)\r\n      dispatch(otherAttendanceActions.allTeamAttendanceRequest(params))\r\n\r\n    } else {\r\n      // setTabType(type)\r\n      dispatch(otherAttendanceActions.selfAttendanceRequest(params));\r\n    }\r\n    setActiveTab(type)\r\n    if (!selectedEmp) {\r\n      setCurrentPage(1)\r\n      setSelectedEmpData('')\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  const activeTabType = (tabType, data) => {\r\n    setTabType(tabType)\r\n    // setActiveTab(tabName)\r\n    if (data) {\r\n      setEmpName(data?.name)\r\n      data?.deptName && setDepartmentName(data?.deptName)\r\n    }\r\n    setSelectedEmpData(data)\r\n    getOtherAttendance(tabType, data)\r\n\r\n  }\r\n\r\n\r\n  const handleFilterDateWiseData = (dateRange) => {\r\n    const startDate = dateRange[0] && setDateFormate(dateRange[0], 'YYYY-MM-DD')\r\n    const endDate = dateRange[1] && setDateFormate(dateRange[1], 'YYYY-MM-DD')\r\n    if (startDate && endDate) {\r\n      setStartDate(startDate)\r\n      setEndDate(endDate)\r\n      getOtherAttendance(tabType, \"\", startDate, endDate)\r\n    }\r\n\r\n  }\r\n\r\n  /* Toggle Attendance Logs */\r\n  const toggleAttendanceLogs = (empData) => {\r\n    if (empData) {\r\n      setIsShowAttendanceLogs(!isShowAttendanceLogs)\r\n      setSelectedEmployeeData(empData)\r\n    }\r\n    setIsShowAttendanceLogs(!isShowAttendanceLogs)\r\n  }\r\n\r\n\r\n\r\n\r\n  /*Get My Team Attendance */\r\n  useEffect(() => {\r\n    if (!myTeamAttendancePending) {\r\n      if (myTeamAttendanceError) {\r\n        return;\r\n      }\r\n      if (myTeamAttendanceRes) {\r\n        if (myTeamAttendanceRes?.code === 200) {\r\n          setMyTeamAttendanceData(myTeamAttendanceRes?.data)\r\n        }\r\n      } \r\n    }\r\n  }, [\r\n    myTeamAttendanceRes,\r\n    myTeamAttendanceError,\r\n    myTeamAttendancePending\r\n  ]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getOtherAttendance(activeTab||activeOtherAttendanceTab, selectedEmpData)\r\n  }, [currentPage])\r\n\r\n\r\n  /* Get Self Attendance Data */\r\n  useEffect(() => {\r\n    if (!selfAttendancePending) {\r\n      if (selfAttendanceError) {\r\n        return;\r\n      }\r\n      if (selfAttendanceRes) {\r\n        if (selfAttendanceRes?.code === 200) {\r\n          setSelfAttendanceData(selfAttendanceRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    selfAttendanceRes,\r\n    selfAttendanceError,\r\n    selfAttendancePending\r\n  ]);\r\n\r\n\r\n\r\n  /* Get All Team Attendance Data */\r\n  useEffect(() => {\r\n    if (!allTeamAttendancePending) {\r\n      if (allTeamAttendanceError) {\r\n        return;\r\n      }\r\n      if (allTeamAttendanceRes) {\r\n        if (allTeamAttendanceRes?.code === 200) {\r\n          setAllTeamAttendance(allTeamAttendanceRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    allTeamAttendanceRes,\r\n    allTeamAttendanceError,\r\n    allTeamAttendancePending\r\n  ]);\r\n\r\n  const toggleAttendanceReportModal = () => {\r\n    setIsShowAttendanceModal(!isShowAttendanceModal)\r\n  }\r\n\r\n\r\n  /* Get All Employee List*/\r\n  useEffect(() => {\r\n    getAllEmployees()\r\n  }, [])\r\n  const getAllEmployees = () => {\r\n    dispatch(employeeActions.getAllEmployeeRequest())\r\n  }\r\n  useEffect(() => {\r\n    if (!getAllEmployeePending) {\r\n      if (getAllEmployeeError) {\r\n        return;\r\n      }\r\n      if (getAllEmployeeRes) {\r\n        if (getAllEmployeeRes?.code === 200) {\r\n\r\n          setAllEmployeeData(getAllEmployeeRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllEmployeeRes,\r\n    getAllEmployeeError,\r\n    getAllEmployeePending\r\n  ]);\r\n\r\n  const downloadAttendanceReport = (filters) => {\r\n    dispatch(otherAttendanceActions.attendanceReportRequest(filters))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!attendanceReportPending) {\r\n      if (attendanceReportError) {\r\n        dispatch(otherAttendanceActions.handleClearOtherAttendanceStore(\"HANDLE_CLEAR_ATTENDANCE_REPORT_STORE\"))\r\n        return;\r\n      }\r\n      if (attendanceReportRes) {\r\n        if (attendanceReportRes?.code === 200) {\r\n          const fileUrl = attendanceReportRes?.data?.filePath;\r\n          // Download the file programmatically\r\n          const link = document.createElement('a');\r\n          link.href = fileUrl;\r\n          link.download = fileUrl.split('/').pop(); // Extract the file name from the URL\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          dispatch(otherAttendanceActions.handleClearOtherAttendanceStore(\"HANDLE_CLEAR_ATTENDANCE_REPORT_STORE\"));\r\n          toggleAttendanceReportModal();\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    attendanceReportRes,\r\n    attendanceReportError,\r\n    attendanceReportPending\r\n  ]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ticketScoreSection\">\r\n        <div className=\"row leavesMain mb-3\">\r\n          <div className=\"col-md-12 pe-md-2\">\r\n            <div className=\"cardBox leaveAppli ratingReview referral h-100 \">\r\n              <div className='d-flex gap-3 justify-content-end'>\r\n                {/* <CustomButton\r\n                  text={\"Absconding Report\"}\r\n                // classNames=\"btn btn-?\"\r\n                // handleClick={() => {\r\n                //     handleUpdateHierarchy(item);\r\n                // }}\r\n                /> */}\r\n               <CustomButton\r\n                  text={\"Attendance Report\"}\r\n                  classNames=\"btn btn-primary\"\r\n                  handleClick={() => {\r\n                    toggleAttendanceReportModal();\r\n                  }}\r\n                  slug={\"attendance_report\"}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <OtherAttendanceTable\r\n        otherAttendanceTabs={otherAttendanceTabs}\r\n        selectedTeamMemberData={selectedTeamMemberData}\r\n        setSelectedTeamMemberData={setSelectedTeamMemberData}\r\n        empName={empName}\r\n        activeTabType={activeTabType}\r\n        tabType={tabType}\r\n        activeTab={activeTab}\r\n        departmentName={departmentName}\r\n        endDate={endDate}\r\n        startDate={startDate}\r\n        handleFilterDateWiseData={handleFilterDateWiseData}\r\n        toggleAttendanceLogs={toggleAttendanceLogs}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        selfAttendanceData={selfAttendanceData}\r\n        myTeamAttendanceData={myTeamAttendanceData}\r\n        allTeamAttendance={allTeamAttendance}\r\n        activeOtherAttendanceTab={activeOtherAttendanceTab}\r\n\r\n      />\r\n\r\n      {isShowAttendanceLogs && <AttendanceLogsModal\r\n        isOpen={isShowAttendanceLogs}\r\n        handleOpenClose={toggleAttendanceLogs}\r\n        selectedData={selectedEmployeeData}\r\n      />\r\n      }\r\n      {isShowAttendanceModal && <AttendanceReportModal\r\n        handleOpenClose={toggleAttendanceReportModal}\r\n        isOpen={isShowAttendanceModal}\r\n        allEmployeeData={allEmployeeData}\r\n        downloadAttendanceReport={downloadAttendanceReport}\r\n      />\r\n\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OtherAttendance","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 28798;\nmodule.exports = webpackEmptyContext;"],"names":["props","dispatch","useDispatch","isOpen","handleOpenClose","selectedData","attendanceLogsData","setAttendanceLogsData","useState","console","log","currentPage","setCurrentPage","getAttendanceLogsPending","getAttendanceLogsRes","getAttendanceLogsError","useSelector","state","attendanceCorrection","attendanceLogsScopedSlots","sn","_","index","_jsx","className","children","punch_time","item","_jsxs","dateFormate","useEffect","getAttendanceLogs","payload","date","attendance_date","emp_id","attendanceCorrectionActions","getAttendanceLogsRequest","code","data","_Fragment","class","id","style","display","opacity","type","onClick","day_of_week","total_working_hours","total_break_time","CustomTable","fields","key","label","isLoading","pagination","totalPages","isHeader","tableStyle","padding","boxShadow","scopedSlots","tabType","empName","activeTabType","departmentName","selfLogsData","checkIn","checkOut","first_half_status","second_half_present","status","breakTime","workingHours","employeeAttendanceSummary","name","total_working_days","present_days","absent_days","leaves_taken","deptAttendanceSummeryData","deptName","totalEmp","deptManager","netWorking","grossWorking","breakHrs","t","useCustomTranslation","otherAttendanceTabs","activeTab","startDate","endDate","handleFilterDateWiseData","toggleAttendanceLogs","selfAttendanceData","myTeamAttendanceData","activeOtherAttendanceTab","allTeamAttendance","selfAttendancePending","myTeamAttendancePending","otherAttendance","selfLogFields","selfLogsScopedSlots","useMemo","first_check_in_time","last_check_out_time","checkAttendanceStatus","second_half_status","attendance_status","created_at","action","src","alt","width","empAttendanceSummaryFields","empAttendanceSummarySlots","deptAttendanceSummerySlots","CustomDateRangePicker","onDateRangeChange","dateRange","endDefaultDate","startDefaultDate","CustomTabs","ulClass","tabs","isPermission","placeholder","BreadCrumb","downloadAttendanceReport","allEmployeeData","attendanceReportPending","setStartDate","setEndDate","errors","setErrors","reportForm","setReportForm","reportType","employees","handleFromChange","e","fieldName","_e$target","target","value","checked","prevState","prevErrors","undefined","tabIndex","maxWidth","Label","text","required","CustomSelect","attendanceReportType","handleChange","selectedOption","CustomError","setDateFormate","sizeType","CustomMultiSelect","optionsData","values","onChange","CustomButton","classNames","handleClick","async","_reportForm$reportTyp","_reportForm$reportTyp2","filterReport","multiSelectIDs","validationResponse","validateSchema","downloadAttendanceReportSchema","isValid","handleDownloadAttendanceReport","OtherAttendance","selfAttendanceRes","selfAttendanceError","myTeamAttendanceRes","myTeamAttendanceError","allTeamAttendancePending","allTeamAttendanceRes","allTeamAttendanceError","attendanceReportRes","attendanceReportError","getAllEmployeeRes","getAllEmployeeError","getAllEmployeePending","employee","selectedTeamMemberData","setSelectedTeamMemberData","setEmpName","setTabType","setActiveTab","setDepartmentName","moment","subtract","format","isShowAttendanceLogs","setIsShowAttendanceLogs","setSelfAttendanceData","selectedEmployeeData","setSelectedEmployeeData","setMyTeamAttendanceData","selectedEmpData","setSelectedEmpData","setAllTeamAttendance","isShowAttendanceModal","setIsShowAttendanceModal","setAllEmployeeData","onClickFun","getOtherAttendance","permissionId","activeTabPermission","selectedEmp","startDates","endDates","params","start_date","end_date","page","limit","_id","otherAttendanceActions","myTeamAttendanceRequest","allTeamAttendanceRequest","selfAttendanceRequest","empData","toggleAttendanceReportModal","getAllEmployees","employeeActions","getAllEmployeeRequest","handleClearOtherAttendanceStore","_attendanceReportRes$","fileUrl","filePath","link","document","createElement","href","download","split","pop","body","appendChild","click","removeChild","slug","OtherAttendanceTable","AttendanceLogsModal","AttendanceReportModal","filters","attendanceReportRequest","webpackEmptyContext","req","Error","keys","resolve","module","exports"],"sourceRoot":""}