{"version":3,"file":"static/js/8281.2a670146.chunk.js","mappings":"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","sources":["components/performanceManagement/pmsEmployee/createKRA/CreatedKRATable.js","components/performanceManagement/pmsEmployee/createKRA/AddNewKRA.js","components/performanceManagement/pmsEmployee/createKRA/ViewKRAParameter.js","components/performanceManagement/pmsEmployee/createKRA/CreateKpi.js","components/performanceManagement/pmsEmployee/createKRA/CreateUpdateKpiParameter.js","components/performanceManagement/pmsEmployee/createKRA/UpdateKRAParameterModal.js","components/performanceManagement/pmsEmployee/createKRA/UpdateKPIParameter.js","components/performanceManagement/pmsEmployee/createKRA/CreateKRA.js","components/performanceManagement/pmsEmployee/createKRA/assignKRAEmployee/AssignKRAModal.js"],"sourcesContent":["import React, { useMemo, useState } from 'react'\r\nimport { Label } from 'reactstrap'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { Icon } from '../../../commanComponent'\r\nimport { setStatusColor, toTitleCase } from '../../../../utils/common'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst CreatedKRATable = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const {  currentPage, setCurrentPage, toggleAssignKRA, toggleViewKRAParameter,financialYearListData ,allKraDetailsData,toggleAddKraParameter,} = props\r\n    const {getKraDetailsPending}=useSelector(state=>state.pms)\r\n    const [financialYear, setFinancialYear] = useState('')\r\n    const createdKRAField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'kra_name', label: 'KRA' },\r\n        { key: 'department_name', label: 'Department' },\r\n        { key: 'kra_rating_type', label: 'Rating Type' },\r\n        // { key: 'is_active', label: 'Status' },\r\n        { key: 'assignKRA', label: 'Assign KRA' },\r\n        { key: 'action', label: 'Action' },\r\n    ]\r\n    const createdKRAScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        status: (item, index) => (\r\n            <span\r\n                key={index}\r\n                className={`${setStatusColor(item?.is_active)} text-capitalize`}\r\n            >\r\n                {item?.is_active}\r\n            </span>\r\n        ),\r\n        kra_rating_type:(item)=>(\r\n            <span>\r\n              {  toTitleCase(item?.kra_rating_type)}\r\n            </span>\r\n        ),\r\n        assignKRA: (item, index) => (\r\n            <span key={index}>\r\n                <CustomButton\r\n                    text={\"Assign KRA\"}\r\n                    classNames=\"btn btn-primary gradientBg\"\r\n                    handleClick={() => toggleAssignKRA(item)}\r\n                    isDisabled={!item?.is_eligible_for_assign_status}\r\n                />\r\n            </span>\r\n        ),\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => toggleViewKRAParameter(item)}\r\n                        >\r\n                            <Icon className={\"fa fa-eye\"} /> View</span>\r\n                    </li>\r\n\r\n                    {/* <li>\r\n                        <span className=\"dropdown-item\"\r\n                        //   onClick={() => toggleUpdateRatingDurationModal(item)}\r\n                        >\r\n                            <Icon className={\"fa fa-user-plus\"} /> Ready to Assign</span>\r\n                    </li> */}\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                          onClick={() => toggleAddKraParameter(item)}\r\n                        >\r\n                            <Icon className={\"fa fa-plus\"} /> Add KPI</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        ),\r\n\r\n    }), [allKraDetailsData]);\r\n    return (\r\n        <div>\r\n            <div className=\"cardBox myRequest\">\r\n                <div className=\"cardHead d-flex justify-content-between mb-3\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <img\r\n                            src=\"images/team-rating.svg\"\r\n                            alt=\"\"\r\n                            width={40}\r\n                            className=\"me-2 fw-bold\"\r\n                        />\r\n                        <div className=\"\">\r\n                            <h3> Manage KRA</h3>\r\n                            <p>To assign any KRA total KPI weight need to be 100%?</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-25\">\r\n                        <CustomSelect\r\n                            data={financialYearListData}\r\n                            placeholder={t(\"placeholders.financialYear\")}\r\n                            value={financialYear || ''}\r\n                            handleChange={(selectedOption) => setFinancialYear(selectedOption)}\r\n                            name=\"department\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"table-responsive tableDiv\">\r\n                    <CustomTable\r\n                        data={allKraDetailsData?.data}\r\n                        fields={createdKRAField}\r\n                        isLoading={getKraDetailsPending}\r\n                        pagination={true}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                        totalPages={allKraDetailsData?.totalPages}\r\n                        isHeader={false}\r\n                        tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                        scopedSlots={createdKRAScopedSlots}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatedKRATable\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustCheckbox, Input, Label } from '../../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { addNewKRA } from '../../../../utils/ValidationSchema'\r\nimport { useDispatch } from 'react-redux'\r\nimport { pmsActions } from '../../../../core/resource/actions'\r\nimport { toTitleCase } from '../../../../utils/common'\r\n\r\nconst AddNewKRA = (props) => {\r\n    const {\r\n        openModel,\r\n        handleOpenClose,\r\n        allDepartmentList,\r\n        financialYearListData,\r\n        handleCreateUpdateKra,\r\n        getSubDepartmentByDepartment,\r\n        subDepartmentByDepartmentData,\r\n        kraRatingTypeData,\r\n        getAllKraRatingTypeForDepartmentData\r\n    } = props\r\n    const { t } = useCustomTranslation()\r\n    const [errors, setErrors] = useState('')\r\n    const dispatch =useDispatch()\r\n    const [addNewKRAFormData, setAddNewKRAFormData] = useState({\r\n        department: null,\r\n        subDepartment: null,\r\n        financialYear: null,\r\n        kraName: '',\r\n        kraRatingType: \"\",\r\n        ratingDuration: \"monthly\",\r\n        bonusDuration: \"Bonus Duration\",\r\n        isActive: true\r\n    })\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e?.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n        if (name === 'department') {\r\n            getSubDepartmentByDepartment(value?.value);\r\n        }\r\n        if(name ===\"subDepartment\"){\r\n            getAllKraRatingTypeForDepartmentData(value?.value)\r\n        }\r\n      \r\n        setAddNewKRAFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n\r\n            return updatedState;\r\n        });\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n\r\n    };\r\n\r\n\r\n\r\n    const submitKRA = async () => {\r\n        const validationResponse = await validateSchema(addNewKRA, addNewKRAFormData);\r\n        if (validationResponse.isValid) {\r\n            const {\r\n                department,\r\n                financialYear,\r\n                kraName,\r\n                kraRatingType,\r\n                ratingDuration,\r\n                bonusDuration,\r\n                isActive,\r\n                subDepartment\r\n            } = addNewKRAFormData\r\n\r\n            const payload = {\r\n                kra_name: kraName,\r\n                kra_rating_type: kraRatingType,\r\n                rating_duration: ratingDuration,\r\n                bonus_duration: bonusDuration,\r\n                financial_id: financialYear?.value,\r\n                department_id: department?.value,\r\n                function_id:subDepartment.value,\r\n                is_active: isActive\r\n            }\r\n            handleCreateUpdateKra(payload)\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            // setSelectedRatingDurationEmp('')\r\n            dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_GET_ALL_KRA_RATING_TYPE_FOR_DEPARTMENT_STORE\")) \r\n        })\r\n    }, [openModel])\r\n\r\n    useEffect(()=>{\r\n        if(kraRatingTypeData?.length > 0){\r\n            setAddNewKRAFormData((pre)=>(\r\n                {\r\n                    ...pre,\r\n                    [\"kraRatingType\"]:kraRatingTypeData[0]?.rating_type\r\n                }\r\n\r\n            ))\r\n        }\r\n    },[kraRatingTypeData])\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    // width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">\r\n                        {t(\"headings.addNewKRA\")}\r\n                    </h5>\r\n                    <button type=\"button\"\r\n                        className=\"btn-close\"\r\n                        data-bs-dismiss=\"offcanvas\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose()}\r\n                    />\r\n                </div>\r\n\r\n\r\n                <div className=\"offcanvas-body myRequest \">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"formPanel\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.financialYear\")} required={true} />\r\n                                <CustomSelect\r\n                                    data={financialYearListData}\r\n                                    placeholder={t(\"placeholders.financialYear\")}\r\n                                    value={addNewKRAFormData?.financialYear || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"financialYear\")}\r\n                                    name=\"financialYear\"\r\n                                />\r\n                                {errors?.financialYear && (\r\n                                    <CustomError text={errors.financialYear} />\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.kraName\")} required={true} />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.kraName\")}\r\n                                    value={addNewKRAFormData?.kraName}\r\n                                    name=\"kraName\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.kraName && (\r\n                                    <CustomError text={errors.kraName} />\r\n                                )}\r\n\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.selectDepartment\")} required={true} />\r\n                                <CustomSelect\r\n                                    data={allDepartmentList}\r\n                                    placeholder={t(\"placeholders.selectDepartment\")}\r\n                                    value={addNewKRAFormData?.department || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"department\")}\r\n                                    name=\"department\"\r\n                                />\r\n                                {errors?.department && (\r\n                                    <CustomError text={errors.department_id} />\r\n                                )}\r\n\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.selectFunction\")} required={true} />\r\n                                <CustomSelect\r\n                                    data={subDepartmentByDepartmentData}\r\n                                    placeholder={t(\"placeholders.selectFunction\")}\r\n                                    value={addNewKRAFormData?.subDepartment || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"subDepartment\")}\r\n                                    name=\"subDepartment\"\r\n                                />\r\n                                {errors?.subDepartment && (\r\n                                    <CustomError text={errors.subDepartment} />\r\n                                )}\r\n\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-between align-items-center typerating\">\r\n                                <div>\r\n                                    <span>\r\n                                        KRA Rating Type <strong>{toTitleCase(addNewKRAFormData?.kraRatingType)}</strong>\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <span>\r\n                                        Rating Duration <strong>{addNewKRAFormData?.ratingDuration}</strong>\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <span>\r\n                                        Bonus Duration <strong>{addNewKRAFormData?.bonusDuration}</strong>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.isActive\")} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <CustCheckbox\r\n                                    key={\"is_active\"}\r\n                                    id={`is_active`}\r\n                                    // label={\"Active\"}\r\n                                    checked={addNewKRAFormData?.isActive}\r\n                                    handleChange={(e) => handleFromChange(e)}\r\n                                    name={\"is_active\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={t(\"btns.submit\")}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitKRA()}\r\n                        //  isLoading={ addPositionPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddNewKRA\r\n","import React from 'react'\r\nimport { CustomButton, CustomSpinner } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { useSelector } from 'react-redux'\r\nimport BlankTableError from '../../../commanComponent/BlankTableError'\r\n\r\nconst ViewKRAParameter = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const { getAllKpiDetailsDataPending, getAllKraParameterDataPending } = useSelector(state => state.pms)\r\n    const { openModel, handleOpenClose, allKRAParameterData, selectedKRA, getKpiSubParameterData, kpiSubParameterData } = props\r\n\r\n    const renderedViewAllKRAParameter = () => {\r\n        return (allKRAParameterData?.data?.length > 1 ? allKRAParameterData?.data?.map((parameter, paraInd) => (\r\n            <div className=\"accordion-item mb-3 border-0\" key={paraInd}>\r\n                <h2 className=\"accordion-header\">\r\n                    <button\r\n                        className=\"accordion-button collapsed\"\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target={`#parameter${paraInd}`}\r\n                        onClick={() => getKpiSubParameterData({ parameter_id: parameter?._id })}\r\n                    >\r\n                        <div className=\"parameterName w-100\">\r\n                            <div className=\"d-flex justify-content-between align-items-center w-100\">\r\n                                <b>{paraInd + 1}.</b>\r\n                                <div className=\"d-flex justify-content-between align-items-center w-100 parameterinner\">\r\n                                    <span>\r\n                                        Parameter Name <strong>{parameter?.parameter_name}</strong>\r\n                                    </span>\r\n                                    <span>\r\n                                        Parameter weightage <strong>{parameter?.parameter_weightage} %</strong>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                </h2>\r\n                <div\r\n                    id={`parameter${paraInd}`}\r\n                    className=\"accordion-collapse collapse\"\r\n                    data-bs-parent=\"#parameteroneFlush\"\r\n                >\r\n                    <div className=\"accordion-body py-0\">\r\n                        <ul className=\"listUl\">\r\n                            {!getAllKpiDetailsDataPending ? kpiSubParameterData?.length ?\r\n                                kpiSubParameterData?.map((subParamItem, subParamIndex) => (\r\n                                    <li key={subParamIndex}>\r\n                                        <div className=\"row \">\r\n                                            <div className=\"col-md-4\">\r\n                                                <strong>\r\n                                                    KPI Description <span>{subParamItem?.key_performance_indicator}</span>\r\n                                                </strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <strong>\r\n                                                    KPI Criteria <span>{subParamItem?.measurement_criteria}</span>\r\n                                                </strong>\r\n                                            </div>\r\n                                            <div className=\"col-md-4\">\r\n                                                <strong>\r\n                                                    KPI weightage <span>{subParamItem?.kpi_weightage}</span>\r\n                                                </strong>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                )) : <span className='d-flex justify-content-center'><BlankTableError /></span>\r\n                                : <CustomSpinner isShow={getAllKpiDetailsDataPending} size=\"xl\" />}\r\n\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )) :\r\n            (\r\n                !getAllKraParameterDataPending && <span className='d-flex justify-content-center'> <BlankTableError /></span>\r\n            ))\r\n    }\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">\r\n                        {t(\"headings.view\")}\r\n                    </h5>\r\n                    <button type=\"button\"\r\n                        className=\"btn-close\"\r\n                        data-bs-dismiss=\"offcanvas\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose()}\r\n                    />\r\n                </div>\r\n\r\n\r\n                <div className=\"offcanvas-body viewcnv\">\r\n                    <div className=\"d-flex justify-content-between align-items-center typerating mb-3\">\r\n\r\n                        <div className=\"\">\r\n                            <span>\r\n                                KRA Name <strong>{selectedKRA?.kra_name}</strong>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <span>\r\n                                Department <strong>{selectedKRA?.department_name}</strong>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <span>\r\n                                Rating Type <strong>{selectedKRA?.kra_rating_type}</strong>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"accordion accordion-flush mb-5\" id=\"parameteroneFlush\">\r\n\r\n                        {getAllKraParameterDataPending ? <span><CustomSpinner isShow={getAllKraParameterDataPending} size=\"xl\" /> </span> : renderedViewAllKRAParameter()}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        {/* <CustomButton\r\n                    text={t(\"btns.submit\")}\r\n                    classNames={\"btn btn-org-gradient\"}\r\n                    handleClick={() => submitKRA()}\r\n                // isLoading={ addPositionPending}\r\n                /> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViewKRAParameter\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustCheckbox, Input, Label } from '../../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { addNewKRA, addParameterSchema } from '../../../../utils/ValidationSchema'\r\nimport { financialYearDuration } from '../../../../utils/Constants.config'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { dateFormate } from '../../../../utils/common'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst CreateKpi = (props) => {\r\n    const {\r\n        toggleAddKraParameter,\r\n        openAddKraParameter,\r\n        selectedKRA,\r\n        handleCreateUpdateParameter,\r\n        allKRAParameterData,\r\n        toggleAddUpdateKpiSubParameter,\r\n        toggleUpdateKraParameterModal,\r\n        toggleDeleteKraParameterModal\r\n\r\n    } = props\r\n    const { getAllKraParameterDataPending } = useSelector(state => state.pms)\r\n    const { t } = useCustomTranslation()\r\n    const [errors, setErrors] = useState('')\r\n    const [addParameterError, setAddParameterError] = useState('')\r\n    const [isShowAddKPIParameter, setIsShowAddKPIParameter] = useState(false)\r\n    const [addParameter, setAddParameter] = useState({\r\n        parameterName: '',\r\n        parameterWeightage: ''\r\n    })\r\n\r\n\r\n    const handleAddParameter = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e.target ? e.target : { value: e };\r\n        setAddParameter(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n\r\n            return updatedState;\r\n        });\r\n        setAddParameterError(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            // setSelectedRatingDurationEmp('')\r\n        })\r\n    }, [openAddKraParameter])\r\n\r\n    const onSubmitParameter = async () => {\r\n        const validationResponse = await validateSchema(addParameterSchema, addParameter);\r\n\r\n        if (validationResponse.isValid) {\r\n            const payload = {\r\n                kra_id: selectedKRA?._id,\r\n                parameter_name: addParameter?.parameterName,\r\n                parameter_weightage: addParameter?.parameterWeightage,\r\n            }\r\n            handleCreateUpdateParameter(payload)\r\n\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    const kraParameterField = [\r\n        { key: 'sn', label: 'S.No' },\r\n        { key: 'parameter_name', label: 'Name' },\r\n        { key: 'parameter_weightage', label: 'Weightage' },\r\n        { key: 'created_at', label: 'Created At' },\r\n        { key: 'action', label: 'Action' }\r\n\r\n    ];\r\n    const kraParameterScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span className=\"srNum\">{index + 1}</span>\r\n        ),\r\n\r\n        created_at: (item) => (\r\n            <span>{dateFormate(item?.created_at, \"DD-MM-YYYY LT\")}</span>\r\n        ),\r\n\r\n        action: item => (\r\n            <div className=\"d-flex gap-2\">\r\n                <span onClick={() => toggleDeleteKraParameterModal(item)}>\r\n                    {\" \"}\r\n                    <img\r\n                        src=\"images/deletebg-Icon.svg\"\r\n                        alt=\"\"\r\n                        width={26}\r\n                        data-bs-toggle=\"tooltip\"\r\n                        data-bs-title=\"Delete\"\r\n                    />\r\n                </span>\r\n                <span onClick={() => toggleUpdateKraParameterModal(item)} >\r\n                    {\" \"}\r\n                    <img\r\n                        src=\"images/editbg-Icon.svg\"\r\n                        alt=\"\"\r\n                        width={26}\r\n                        data-bs-toggle=\"tooltip\"\r\n                        data-bs-title=\"Edit\"\r\n                    />\r\n                </span>\r\n                <span onClick={() => toggleAddUpdateKpiSubParameter(item)}>\r\n                    {\" \"}\r\n                    <img\r\n                        src=\"images/addbg-Icon.svg\"\r\n                        alt=\"\"\r\n                        width={26}\r\n                        data-bs-toggle=\"tooltip\"\r\n                        data-bs-title=\"Delete\"\r\n                    />\r\n                </span>\r\n            </div>\r\n        )\r\n    }), [allKRAParameterData]);\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${openAddKraParameter ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openAddKraParameter ? 'visible' : 'hidden',\r\n                    // width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">\r\n                        {t(\"headings.addKpi\")}\r\n                    </h5>\r\n                    <button type=\"button\"\r\n                        className=\"btn-close\"\r\n                        data-bs-dismiss=\"offcanvas\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => toggleAddKraParameter()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"d-flex justify-content-between align-items-center typerating mb-3\">\r\n\r\n                        <div className=\"\">\r\n                            <span>\r\n                                KRA Name <strong>{selectedKRA?.kra_name}</strong>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <span>\r\n                                Department <strong>{selectedKRA?.department_name}</strong>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <span>\r\n                                Rating Type <strong>{selectedKRA?.kra_rating_type}</strong>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"addmain\">\r\n                        <select\r\n                            className=\"form-select\"\r\n                            disabled=\"\"\r\n                            aria-label=\"Default select example\"\r\n                        >\r\n                            <option selected=\"\">Select KRA Template</option>\r\n                        </select>\r\n                        <span>or</span>\r\n                        <div>\r\n                            <CustomButton\r\n                                classNames={\"\"}\r\n                                handleClick={() => setIsShowAddKPIParameter(!isShowAddKPIParameter)}\r\n                                text={\"Add Main Parameter\"}\r\n                                isDisabled={selectedKRA?.kra_weightage_status}\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                    {isShowAddKPIParameter && <div className=\"addnewkpi mb-2\" >\r\n                        <div className=\"addnewkpiInner h-100 overflow-hidden\">\r\n                            <span className=\"updation\">Add New Parameter</span>\r\n                            <div className=\"form-group mb-3\">\r\n                                <label htmlFor=\"\">Parameter Name</label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter here..\"\r\n                                    name=\"parameterName\"\r\n                                    value={addParameter?.parameterName}\r\n                                    onChange={(e) => handleAddParameter(e)}\r\n                                />\r\n                                {errors?.parameterName && (\r\n                                    <CustomError text={errors.parameterName} />\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <label htmlFor=\"\">Parameter Weightage</label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"parameterWeightage\"\r\n                                    value={addParameter?.parameterWeightage}\r\n                                    onChange={(e) => handleAddParameter(e)}\r\n                                />\r\n                                {errors?.parameterWeightage && (\r\n                                    <CustomError text={errors.parameterWeightage} />\r\n                                )}\r\n                            </div>\r\n                            <CustomButton\r\n                                classNames={\"btn btn-primary gradientBg\"}\r\n                                handleClick={() => onSubmitParameter(true)}\r\n                                text={\"Add Parameter\"}\r\n                            />\r\n                        </div>\r\n                    </div>}\r\n                    <div className=\"\">\r\n                        <div className=\"cardHead d-flex justify-content-between\">\r\n                            <h3> Main Category List</h3>\r\n                        </div>\r\n\r\n                        <CustomTable\r\n                            data={allKRAParameterData?.data}\r\n                            fields={kraParameterField}\r\n                            pagination={true}\r\n                            isHeader={false}\r\n                            tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                            scopedSlots={kraParameterScopedSlots}\r\n                            isLoading={getAllKraParameterDataPending}\r\n\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"offcanvas-footer\">\r\n                    <div class=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        {/* <button type=\"button\" class=\"btn btn-secondary\">Back</button> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {openAddKraParameter && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateKpi\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { Input, Label } from '../../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport { addKpiParameterSchema } from '../../../../utils/ValidationSchema'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { dateFormate } from '../../../../utils/common'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst CreateUpdateKpiParameter = (props) => {\r\n    const { getAllKpiDetailsDataPending } = useSelector(state => state.pms)\r\n    const {\r\n        toggleOpenClose,\r\n        isOpen,\r\n        selectedKpiParameterData,\r\n        handleCreateUpdateKpiSubParameter,\r\n        selectedKRA,\r\n        kpiSubParameterData,\r\n        toggleUpdateKpiSubParameter,\r\n        toggleDeleteSubKpiParameterModal\r\n\r\n\r\n    } = props\r\n    const { t } = useCustomTranslation()\r\n    const [addKpiParameterError, setAddKpiParameterError] = useState('')\r\n    const [isShowAddKPI, setIsShowAddKPI] = useState('')\r\n    const [addKpiParameter, setAddKpiParameter] = useState({\r\n        kpiDescription: '',\r\n        kpiMeasurementCriteria: '',\r\n        kpiWeightage: '',\r\n        kpiTarget: ''\r\n    })\r\n\r\n\r\n    const handleAddKpiParameter = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e.target ? e.target : { value: e };\r\n        setAddKpiParameter(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n        setAddKpiParameterError(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n\r\n    };\r\n    const onSubmitParameter = async () => {\r\n        const validationResponse = await validateSchema(addKpiParameterSchema, addKpiParameter);\r\n\r\n        if (validationResponse.isValid) {\r\n            const payload = {\r\n                parameter_id: selectedKpiParameterData?._id,\r\n                key_performance_indicator: addKpiParameter?.kpiDescription || '',\r\n                measurement_criteria: addKpiParameter?.kpiMeasurementCriteria || '',\r\n                kpi_weightage: addKpiParameter?.kpiWeightage || '',\r\n                kpi_target: addKpiParameter?.kpiTarget || ''\r\n            }\r\n            handleCreateUpdateKpiSubParameter(payload)\r\n        } else {\r\n            setAddKpiParameterError(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    const kraParameterField = [\r\n        { key: 'sn', label: 'S.No' },\r\n        { key: 'key_performance_indicator', label: 'Description' },\r\n        { key: 'measurement_criteria', label: 'Measurement Criteria' },\r\n        { key: 'kpi_weightage', label: 'Kpi Weightage' },\r\n        { key: 'created_at', label: 'Created At' },\r\n        { key: 'action', label: 'Action' }\r\n\r\n    ];\r\n\r\n    const kraParameterScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span className=\"srNum\">{index + 1}</span>\r\n        ),\r\n\r\n        created_at: (item) => (\r\n            <span>{dateFormate(item?.created_at, \"DD-MM-YYYY LT\")}</span>\r\n        ),\r\n\r\n        action: item => (\r\n            <div className=\"d-flex gap-2\">\r\n                <span onClick={() => toggleDeleteSubKpiParameterModal(item)}>\r\n                    {\" \"}\r\n                    <img\r\n                        src=\"images/deletebg-Icon.svg\"\r\n                        alt=\"\"\r\n                        width={26}\r\n                        data-bs-toggle=\"tooltip\"\r\n                        data-bs-title=\"Delete\"\r\n                    />\r\n                </span>\r\n                <span onClick={() => toggleUpdateKpiSubParameter(item)}>\r\n                    {\" \"}\r\n                    <img\r\n                        src=\"images/editbg-Icon.svg\"\r\n                        alt=\"\"\r\n                        width={26}\r\n                        data-bs-toggle=\"tooltip\"\r\n                        data-bs-title=\"Edit\"\r\n                    />\r\n                </span>\r\n\r\n            </div>\r\n        )\r\n    }), [kpiSubParameterData]);\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${isOpen ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: isOpen ? 'visible' : 'hidden',\r\n                    // width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">\r\n                        {t(\"headings.addKpi\")}\r\n                    </h5>\r\n                    <button type=\"button\"\r\n                        className=\"btn-close\"\r\n                        data-bs-dismiss=\"offcanvas\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => toggleOpenClose()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"d-flex justify-content-between align-items-center typerating mb-3\">\r\n\r\n                        <div className=\"\">\r\n                            <span>\r\n                                KRA Name <strong>{selectedKRA?.kra_name}</strong>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <span>\r\n                                Department <strong>{selectedKRA?.department_name}</strong>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <span>\r\n                                Rating Type <strong>{selectedKRA?.kra_rating_type}</strong>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"inputFeild\">\r\n                        <div class=\"cardHead\">\r\n                            <h3 clupdationass=\"mb-3\"> Main Category List</h3>\r\n                            <ul class=\"breadCrumb mb-3 mt-2\">\r\n                                <li><span class=\"me-2\" onClick={() => toggleOpenClose()}>{selectedKpiParameterData?.parameter_name} </span> &gt; </li>\r\n                                <li class=\"active border-0\">Add KPI</li>\r\n                            </ul>\r\n                            <div className='d-flex justify-content-between'>\r\n                                <h3 class=\"fw-bolder text-primary\">{selectedKpiParameterData?.parameter_name} - {selectedKpiParameterData?.parameter_weightage} %</h3>\r\n                                <div>\r\n                                    <CustomButton\r\n                                        classNames={\"\"}\r\n                                        handleClick={() => setIsShowAddKPI(!isShowAddKPI)}\r\n                                        text={\"Add New KPI\"}\r\n                                    />\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        {/* <div class=\"idCreate\">\r\n                            <span>ID : <b> 1689</b></span>\r\n                            <span>Created At : <b> 02-11-2023 11:26 AM</b></span>\r\n                        </div> */}\r\n                        {isShowAddKPI && <div class=\"addnewkpi\">\r\n                            <div class=\"addnewkpiInner\">\r\n                                <span class=\"updation\">Add New KPI</span>\r\n                                <div class=\"form-group mb-3\">\r\n                                    <Label text={\"KPI Description\"} required={true} />\r\n                                    {/* <label for=\"\">KPI Description</label> */}\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter here..\"\r\n                                        name=\"kpiDescription\"\r\n                                        value={addKpiParameter?.kpiDescription}\r\n                                        onChange={(e) => handleAddKpiParameter(e)}\r\n                                    />\r\n                                    {addKpiParameterError?.kpiDescription && (\r\n                                        <CustomError text={addKpiParameterError.kpiDescription} />\r\n                                    )}\r\n                                </div>\r\n                                <div class=\"form-group mb-3\">\r\n                                    <Label text={\"KPI Measurement Criteria\"} required={true} />\r\n                                    <label for=\"\"></label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter here..\"\r\n                                        name=\"kpiMeasurementCriteria\"\r\n                                        value={addKpiParameter?.kpiMeasurementCriteria}\r\n                                        onChange={(e) => handleAddKpiParameter(e)}\r\n                                    />\r\n                                    {addKpiParameterError?.kpiMeasurementCriteria && (\r\n                                        <CustomError text={addKpiParameterError.kpiMeasurementCriteria} />\r\n                                    )}\r\n                                </div>\r\n                                <div class=\"form-group mb-3\">\r\n                                    <Label text={\"KPI Weightage\"} required={true} />\r\n                                    <label for=\"\"></label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Enter here..\"\r\n                                        name=\"kpiWeightage\"\r\n                                        value={addKpiParameter?.kpiWeightage}\r\n                                        onChange={(e) => handleAddKpiParameter(e)}\r\n                                    />\r\n                                    {addKpiParameterError?.kpiWeightage && (\r\n                                        <CustomError text={addKpiParameterError.kpiWeightage} />\r\n                                    )}\r\n                                </div>\r\n                                {selectedKRA?.kra_rating_type === \"target_achivement\" && <div class=\"form-group mb-3\">\r\n                                    <Label text={\"KPI Target\"} />\r\n                                    <label for=\"\"></label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Enter here..\"\r\n                                        name=\"kpiTarget\"\r\n                                        value={addKpiParameter?.kpiTarget}\r\n                                        onChange={(e) => handleAddKpiParameter(e)}\r\n                                    />\r\n                                    {addKpiParameterError?.kpiTarget && (\r\n                                        <CustomError text={addKpiParameterError.kpiTarget} />\r\n                                    )}\r\n                                </div>}\r\n\r\n                                <CustomButton\r\n                                    classNames={\"btn btn-primary gradientBg\"}\r\n                                    handleClick={() => onSubmitParameter()}\r\n                                    text={\"Submit\"}\r\n                                />\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n\r\n                    <CustomTable\r\n                        data={kpiSubParameterData}\r\n                        fields={kraParameterField}\r\n                        pagination={true}\r\n                        isHeader={false}\r\n                        tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                        scopedSlots={kraParameterScopedSlots}\r\n                        isLoading={getAllKpiDetailsDataPending}\r\n                    />\r\n                </div>\r\n\r\n\r\n\r\n                <div class=\"offcanvas-footer\">\r\n                    <div class=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" onClick={() => toggleOpenClose()}>Back</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateUpdateKpiParameter\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport {  Input,  } from '../../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport { addNewKRA, addParameterSchema } from '../../../../utils/ValidationSchema'\r\n\r\nconst UpdateKRAParameterModal = (props) => {\r\n    const {\r\n        openCloseModal,\r\n        isOpen,\r\n        selectedKRA,\r\n        handleCreateUpdateParameter,\r\n        selectedKRAParameterData,\r\n\r\n    } = props\r\n    const { t } = useCustomTranslation()\r\n    const [errors, setErrors] = useState('')\r\n    const [addParameterError, setAddParameterError] = useState('')\r\n    const [isShowAddKPIParameter, setIsShowAddKPIParameter] = useState(false)\r\n    const [addParameter, setAddParameter] = useState({\r\n        parameterName: '',\r\n        parameterWeightage: ''\r\n    })\r\n\r\n\r\n    const handleAddParameter = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e.target ? e.target : { value: e };\r\n        setAddParameter(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n\r\n            return updatedState;\r\n        });\r\n        setAddParameterError(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            // setSelectedRatingDurationEmp('')\r\n        })\r\n    }, [isOpen])\r\n\r\n    const onSubmitParameter = async () => {\r\n        const validationResponse = await validateSchema(addParameterSchema, addParameter);\r\n\r\n        if (validationResponse.isValid) {\r\n            const payload = {\r\n                kra_id: selectedKRA?._id,\r\n                parameter_name: addParameter?.parameterName,\r\n                parameter_weightage: addParameter?.parameterWeightage,\r\n            }\r\n            handleCreateUpdateParameter(payload)\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (selectedKRAParameterData) {\r\n            setAddParameter({\r\n                parameterName: selectedKRAParameterData?.parameter_name,\r\n                parameterWeightage: selectedKRAParameterData?.parameter_weightage\r\n            })\r\n        }\r\n    }, [selectedKRAParameterData])\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${isOpen ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: isOpen ? 'visible' : 'hidden',\r\n                    // width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">\r\n                        {t(\"headings.addKpi\")}\r\n                    </h5>\r\n                    <button type=\"button\"\r\n                        className=\"btn-close\"\r\n                        data-bs-dismiss=\"offcanvas\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => openCloseModal()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"d-flex justify-content-between align-items-center typerating mb-3\">\r\n\r\n                        <div className=\"\">\r\n                            <span>\r\n                                KRA Name <strong>{selectedKRA?.kra_name}</strong>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <span>\r\n                                Department <strong>{selectedKRA?.department_name}</strong>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <span>\r\n                                Rating Type <strong>{selectedKRA?.kra_rating_type}</strong>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {<div className=\"addnewkpi mb-2\" >\r\n                        <div className=\"addnewkpiInner h-100 overflow-hidden\">\r\n                            <span className=\"updation\">Update Parameter</span>\r\n                            <div className=\"form-group mb-3\">\r\n                                <label htmlFor=\"\">Parameter Name</label>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter here..\"\r\n                                    name=\"parameterName\"\r\n                                    value={addParameter?.parameterName}\r\n                                    onChange={(e) => handleAddParameter(e)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <label htmlFor=\"\">Parameter Weightage</label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"parameterWeightage\"\r\n                                    value={addParameter?.parameterWeightage}\r\n                                    onChange={(e) => handleAddParameter(e)}\r\n                                />\r\n                            </div>\r\n                            <CustomButton\r\n                                classNames={\"btn btn-primary gradientBg\"}\r\n                                handleClick={() => onSubmitParameter(true)}\r\n                                text={\"Update \"}\r\n                            />\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n\r\n                <div class=\"offcanvas-footer\">\r\n                    <div class=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        {/* <button type=\"button\" class=\"btn btn-secondary\">Back</button> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateKRAParameterModal\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { Input, Label } from '../../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport { addKpiParameterSchema } from '../../../../utils/ValidationSchema'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { dateFormate } from '../../../../utils/common'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst UpdateKPIParameter = (props) => {\r\n    const { getAllKpiDetailsDataPending } = useSelector(state => state.pms)\r\n    const {\r\n        toggleOpenClose,\r\n        isOpen,\r\n        selectedSubKpiParameterData,\r\n        handleCreateUpdateKpiSubParameter,\r\n        selectedKRA,\r\n    } = props\r\n    const { t } = useCustomTranslation()\r\n    const [addKpiParameterError, setAddKpiParameterError] = useState('')\r\n    const [addKpiParameter, setAddKpiParameter] = useState({\r\n        kpiDescription: '',\r\n        kpiMeasurementCriteria: '',\r\n        kpiWeightage: ''\r\n    })\r\n\r\n\r\n    const handleAddKpiParameter = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e.target ? e.target : { value: e };\r\n        setAddKpiParameter(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n        setAddKpiParameterError(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetFormData()\r\n        })\r\n    }, [isOpen])\r\n    const resetFormData = () => {\r\n        setAddKpiParameter(\r\n            {\r\n                kpiDescription: '',\r\n                kpiMeasurementCriteria: '',\r\n                kpiWeightage: ''\r\n            }\r\n        )\r\n    }\r\n\r\n    const onSubmitParameter = async () => {\r\n        const validationResponse = await validateSchema(addKpiParameterSchema, addKpiParameter);\r\n\r\n        if (validationResponse.isValid) {\r\n            const payload = {\r\n                key_performance_indicator: addKpiParameter?.kpiDescription,\r\n                measurement_criteria: addKpiParameter?.kpiMeasurementCriteria,\r\n                kpi_weightage: addKpiParameter?.kpiWeightage,\r\n            }\r\n            handleCreateUpdateKpiSubParameter(payload)\r\n        } else {\r\n            setAddKpiParameterError(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (selectedSubKpiParameterData) {\r\n            setAddKpiParameter({\r\n                kpiDescription: selectedSubKpiParameterData?.key_performance_indicator,\r\n                kpiMeasurementCriteria: selectedSubKpiParameterData?.measurement_criteria,\r\n                kpiWeightage: selectedSubKpiParameterData?.kpi_weightage\r\n            })\r\n        }\r\n    }, [selectedSubKpiParameterData])\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${isOpen ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: isOpen ? 'visible' : 'hidden',\r\n                    // width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">\r\n                        {t(\"headings.addKpi\")}\r\n                    </h5>\r\n                    <button type=\"button\"\r\n                        className=\"btn-close\"\r\n                        data-bs-dismiss=\"offcanvas\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => toggleOpenClose()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"d-flex justify-content-between align-items-center typerating mb-3\">\r\n\r\n                        <div className=\"\">\r\n                            <span>\r\n                                KRA Name <strong>{selectedKRA?.kra_name}</strong>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <span>\r\n                                Department <strong>{selectedKRA?.department_name}</strong>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <span>\r\n                                Rating Type <strong>{selectedKRA?.kra_rating_type}</strong>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"inputFeild\">\r\n                        {/* <div class=\"cardHead\">\r\n                            <h3 className=\"mb-3\"> Main Category List</h3>\r\n                            <ul class=\"breadCrumb mb-3 mt-2\">\r\n                                <li><span class=\"me-2\" onClick={() => toggleOpenClose()}>{selectedSubKpiParameterData?.parameter_name} </span> &gt; </li>\r\n                                <li class=\"active border-0\">Add KPI</li>\r\n                            </ul>\r\n                            <div className='d-flex justify-content-between'>\r\n                                <h3 class=\"fw-bolder text-primary\">{selectedSubKpiParameterData?.parameter_name} - {selectedSubKpiParameterData?.parameter_weightage} %</h3>\r\n\r\n\r\n                            </div>\r\n                        </div> */}\r\n\r\n                        {<div class=\"addnewkpi\">\r\n                            <div class=\"addnewkpiInner\">\r\n                                <span class=\"updation\">Update KPI Parameter</span>\r\n                                <div class=\"form-group mb-3\">\r\n                                    <Label text={\"KPI Description\"} required={true} />\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter here..\"\r\n                                        name=\"kpiDescription\"\r\n                                        value={addKpiParameter?.kpiDescription}\r\n                                        onChange={(e) => handleAddKpiParameter(e)}\r\n                                    />\r\n                                    {addKpiParameterError?.kpiDescription && (\r\n                                        <CustomError text={addKpiParameterError.kpiDescription} />\r\n                                    )}\r\n                                </div>\r\n                                <div class=\"form-group mb-3\">\r\n                                    <Label text={\"KPI Measurement Criteria\"} required={true} />\r\n                                    <label for=\"\"></label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter here..\"\r\n                                        name=\"kpiMeasurementCriteria\"\r\n                                        value={addKpiParameter?.kpiMeasurementCriteria}\r\n                                        onChange={(e) => handleAddKpiParameter(e)}\r\n                                    />\r\n                                    {addKpiParameterError?.kpiMeasurementCriteria && (\r\n                                        <CustomError text={addKpiParameterError.kpiMeasurementCriteria} />\r\n                                    )}\r\n                                </div>\r\n                                <div class=\"form-group mb-3\">\r\n                                    <Label text={\"KPI Weightage\"} required={true} />\r\n                                    <label for=\"\"></label>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Enter here..\"\r\n                                        name=\"kpiWeightage\"\r\n                                        value={addKpiParameter?.kpiWeightage}\r\n                                        onChange={(e) => handleAddKpiParameter(e)}\r\n                                    />\r\n                                    {addKpiParameterError?.kpiWeightage && (\r\n                                        <CustomError text={addKpiParameterError.kpiWeightage} />\r\n                                    )}\r\n                                </div>\r\n\r\n                                <CustomButton\r\n                                    classNames={\"btn btn-primary gradientBg\"}\r\n                                    handleClick={() => onSubmitParameter()}\r\n                                    text={\"Update\"}\r\n                                />\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div class=\"offcanvas-footer\">\r\n                    <div class=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" onClick={() => toggleOpenClose()}>Back</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateKPIParameter\r\n","import React, { useEffect, useState } from 'react'\r\nimport AddBanner from '../../../reuseableComponents/AddBanner'\r\nimport CreatedKRATable from './CreatedKRATable'\r\nimport AddNewKRA from './AddNewKRA';\r\nimport AssignKRAModal from './assignKRAEmployee/AssignKRAModal';\r\nimport ViewKRAParameter from './ViewKRAParameter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { departmentAction, employeeActions, financialYearActions, pmsActions } from '../../../../core/resource/actions';\r\nimport { pagination } from '../../../../utils/Constants.config';\r\nimport CreateKpi from './CreateKpi';\r\nimport CreateUpdateKpiParameter from './CreateUpdateKpiParameter';\r\nimport UpdateKRAParameterModal from './UpdateKRAParameterModal';\r\nimport ApproveRejectModal from '../../../modal/ApproveRejectModal';\r\nimport { useCustomTranslation } from '../../../../translation';\r\nimport UpdateKPIParameter from './UpdateKPIParameter';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CreateKRA = () => {\r\n    const dispatch = useDispatch()\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending,\r\n\r\n        getSubDepartmentByDepartmentRes,\r\n        getSubDepartmentByDepartmentError,\r\n        getSubDepartmentByDepartmentPending,\r\n    } = useSelector(state => state.department)\r\n    const {\r\n        getFinancialYearListRes,\r\n        getFinancialYearListError,\r\n        getFinancialYearListPending\r\n    } = useSelector(state => state.financialYear)\r\n\r\n    const {\r\n        createKraPending,\r\n        createKraRes,\r\n        createKraError,\r\n\r\n        getKraDetailsPending,\r\n        getKraDetailsRes,\r\n        getKraDetailsError,\r\n\r\n        updateKraDetailPending,\r\n        updateKraDetailRes,\r\n        updateKraDetailError,\r\n\r\n        deleteKraDetailPending,\r\n        deleteKraDetailRes,\r\n        deleteKraDetailError,\r\n\r\n        createKraParameterPending,\r\n        createKraParameterRes,\r\n        createKraParameterError,\r\n\r\n        getKraParameterPending,\r\n        getKraParameterRes,\r\n        getKraParameterError,\r\n\r\n        getAllKraParameterDataPending,\r\n        getAllKraParameterDataRes,\r\n        getAllKraParameterDataError,\r\n\r\n        updateKraParameterPending,\r\n        updateKraParameterRes,\r\n        updateKraParameterError,\r\n\r\n        deleteKraParameterPending,\r\n        deleteKraParameterRes,\r\n        deleteKraParameterError,\r\n\r\n        createKPiDetailsPending,\r\n        createKPiDetailsRes,\r\n        createKPiDetailsError,\r\n\r\n        getAllKpiDetailsDataPending,\r\n        getAllKpiDetailsDataRes,\r\n        getAllKpiDetailsDataError,\r\n\r\n        updateKpiDetailPending,\r\n        updateKpiDetailRes,\r\n        updateKpiDetailError,\r\n\r\n        deleteKpiDetailPending,\r\n        deleteKpiDetailRes,\r\n        deleteKpiDetailError,\r\n\r\n        getAllKraRatingTypeForDepartmentPending,\r\n        getAllKraRatingTypeForDepartmentRes,\r\n        getAllKraRatingTypeForDepartmentError,\r\n\r\n        selectedKraDetailData\r\n\r\n    } = useSelector(state => state.pms)\r\n\r\n    const {\r\n        getAllEmployeePending,\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n    } = useSelector(state => state.employee)\r\n    const navigate = useNavigate()\r\n    const [isShowAddNewKRA, setIsShowAddNewKRA] = useState(false)\r\n    const [isShowViewKRAParameter, setIsShowViewKRAParameter] = useState(false)\r\n    const [allDepartments, setAllDepartments] = useState('')\r\n    const [financialYearListData, setFinancialYearListData] = useState('')\r\n    const [allKraDetailsData, setAllKraDetailsData] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [isShowDeleteDeleteKraModal, setIsShowDeleteDeleteKraModal] = useState(false)\r\n    const [subDepartmentByDepartmentData, setSubDepartmentByDepartmentData] = useState([])\r\n    const [openAddKraParameter, setOpenKraParameter] = useState(false)\r\n    const [openUpdateKraParameter, setOpenUpdateKraParameter] = useState(false)\r\n    const [selectedKRA, setSelectedKRA] = useState('')\r\n    const [KRAParameterData, setKRAParameterData] = useState('')\r\n    const [allKRAParameterData, setAllKRAParameterData] = useState('')\r\n    const [selectedKpiParameterData, setSelectedKpiParameterData] = useState('')\r\n    const [isOpenKpiSubParaModal, setIsOpenKpiSubParaModal] = useState('')\r\n    const [kpiSubParameterData, setKpiSubParameterData] = useState('')\r\n    const [selectedKRAParameterData, setSelectedKRAParameterData] = useState('')\r\n    const [isShowDeleteKraParameterModal, setIsShowDeleteKraParameterModal] = useState('')\r\n    const [isOpenUpdateKpiSubParaModal, setIsOpenUpdateKpiSubParaModal] = useState(false)\r\n    const [selectedSubKpiParameterData, setSelectedSubKpiParameterData] = useState('')\r\n    const [isShowDeleteKpiSubParameterModal, setIsShowDeleteKpiSubParameterModal] = useState(false)\r\n    const [allEmployeeListData, setAllEmployeeListData] = useState([])\r\n    const [kraRatingTypeData,setKraRatingTypeData]=useState('')\r\n\r\n\r\n    const toggleAddNewKRA = () => {\r\n        setIsShowAddNewKRA(!isShowAddNewKRA)\r\n    }\r\n    const toggleAssignKRA = (data) => {\r\n        dispatch(pmsActions.selectedKraDetailData(data))\r\n        navigate('assign-kra')\r\n        // if (data) {\r\n        //     setSelectedAssignKRA(data)\r\n        // }\r\n        // setIsShowAssignKRA(!isShowAssignKRA)\r\n    }\r\n\r\n    const toggleViewKRAParameter = (data) => {\r\n        if (data) {\r\n            setSelectedKRA(data)\r\n            getAllParameterData({ kra_id: data?._id })\r\n\r\n        }\r\n        setIsShowViewKRAParameter(!isShowViewKRAParameter)\r\n    }\r\n\r\n\r\n\r\n    const buttons = [{ classNames: \"btn-primary\", onClick: toggleAddNewKRA, text: 'New KRA' }]\r\n\r\n\r\n    /* Get All Departments */\r\n    useEffect(() => {\r\n        getAllDepartments()\r\n        getFinancialYearListData()\r\n        getAllEmployeeData()\r\n    }, [])\r\n\r\n    /* Get All Department */\r\n    const getAllDepartments = () => {\r\n        const departmentResposnse = getDepartmentListRes?.data\r\n        if (!departmentResposnse?.length) {\r\n            dispatch(departmentAction.getDepartmentListRequest());\r\n        } else {\r\n            setAllDepartments(departmentResposnse)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getDepartmentListPending) {\r\n            if (getDepartmentListError) {\r\n                return;\r\n            }\r\n            if (getDepartmentListRes) {\r\n                if (getDepartmentListRes?.code === 200) {\r\n                    const departmentResponse = getDepartmentListRes?.data\r\n                    setAllDepartments(departmentResponse)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    ]);\r\n\r\n    /* Get All Employee Data */\r\n    const getAllEmployeeData = () => {\r\n        const getAllEmployeeListResData = getAllEmployeeRes?.data\r\n        if (!getAllEmployeeListResData?.length) {\r\n            dispatch(employeeActions.getAllEmployeeRequest());\r\n        } else {\r\n            setAllEmployeeListData(getAllEmployeeListResData)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getAllEmployeePending) {\r\n            if (getAllEmployeeError) {\r\n                return;\r\n            }\r\n            if (getAllEmployeeRes) {\r\n                if (getAllEmployeeRes?.code === 200) {\r\n                    const allEmployeeList = getAllEmployeeRes?.data\r\n                    setAllEmployeeListData(allEmployeeList)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n        getAllEmployeePending\r\n    ]);\r\n\r\n\r\n    /* List of Financial Year */\r\n    const getFinancialYearListData = () => {\r\n        dispatch(financialYearActions.getFinancialYearListRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getFinancialYearListPending) {\r\n            if (getFinancialYearListError) {\r\n                return;\r\n            }\r\n            if (getFinancialYearListRes) {\r\n                if (getFinancialYearListRes?.code === 200) {\r\n                    setFinancialYearListData(getFinancialYearListRes?.data)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getFinancialYearListRes,\r\n        getFinancialYearListError,\r\n        getFinancialYearListPending\r\n    ]);\r\n\r\n    const handleAddClearKraData = (data) => {\r\n        if (data) {\r\n            dispatch(pmsActions.selectedKraDetailData(data))\r\n        } else {\r\n            dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_SELECTED_KRA_DETAIL_DATA_STORE\"))\r\n        }\r\n\r\n    }\r\n\r\n    /* Create Update Kra Details */\r\n    const handleCreateUpdateKra = (params) => {\r\n        // if (selectedKraDetailData) {\r\n        //     dispatch(pmsActions.updateKraDetailRequest(params));\r\n        // }\r\n        // else {\r\n        dispatch(pmsActions.createKraRequest(params));\r\n        // }\r\n    }\r\n    useEffect(() => {\r\n        if (!createKraPending) {\r\n            if (createKraError) {\r\n                dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_CREATE_KRA_STORE\"))\r\n                return;\r\n            }\r\n            if (createKraRes) {\r\n                if (createKraRes?.code === 200) {\r\n                    dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_CREATE_KRA_STORE\"))\r\n                    dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_GET_KRA_DETAILS_STORE\"))\r\n                    getKraDetailsData()\r\n                    toggleAddNewKRA()\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        createKraPending,\r\n        createKraRes,\r\n        createKraError,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!updateKraDetailPending) {\r\n            if (updateKraDetailError) {\r\n                return;\r\n            }\r\n            if (updateKraDetailRes) {\r\n                if (updateKraDetailRes?.code === 200) {\r\n                    dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_UPDATE_KRA_DETAIL_STORE\"))\r\n                    dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_GET_KRA_DETAILS_STORE\"))\r\n                    getKraDetailsData()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updateKraDetailPending,\r\n        updateKraDetailRes,\r\n        updateKraDetailError,\r\n    ]);\r\n\r\n\r\n    /* Get Kra Details Data */\r\n    useEffect(() => {\r\n        getKraDetailsData()\r\n    }, [currentPage])\r\n\r\n    const getKraDetailsData = () => {\r\n        const params = {\r\n            page: currentPage,\r\n            limit: pagination.limit,\r\n        }\r\n        dispatch(pmsActions.getKraDetailsRequest(params));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getKraDetailsPending) {\r\n            if (getKraDetailsError) {\r\n                return;\r\n            }\r\n            if (getKraDetailsRes) {\r\n                if (getKraDetailsRes?.code === 200) {\r\n                    setAllKraDetailsData(getKraDetailsRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getKraDetailsRes,\r\n        getKraDetailsError,\r\n        getKraDetailsPending\r\n    ]);\r\n\r\n    /* Delete  Kra Detail */\r\n    const toggleDeleteKraDeleteModal = (data) => {\r\n        if (data) {\r\n            // setSelectedKraDetailData(data)\r\n        }\r\n        setIsShowDeleteDeleteKraModal(!isShowDeleteDeleteKraModal)\r\n    }\r\n\r\n    const handleDeleteDeleteKra = (type) => {\r\n        if (type) {\r\n            const params = {\r\n                _id: selectedKraDetailData?._id\r\n            }\r\n            dispatch(pmsActions?.deleteKraParameterRequest(params))\r\n        } else {\r\n            toggleDeleteKraDeleteModal()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!deleteKraDetailPending) {\r\n            if (deleteKraDetailError) {\r\n                dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_DELETE_KRA_DETAIL_STORE\"))\r\n                return;\r\n            }\r\n            if (deleteKraDetailRes) {\r\n                if (deleteKraDetailRes?.code === 200) {\r\n                    dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_DELETE_KRA_DETAIL_STORE\"))\r\n                    dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_GET_KRA_DETAILS_STORE\"))\r\n                    toggleDeleteKraDeleteModal()\r\n                    if (currentPage > 1 && allKraDetailsData?.data?.length === 1) {\r\n                        setCurrentPage((pre => pre -= 1))\r\n                    } else {\r\n                        getKraDetailsData()\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        deleteKraDetailRes,\r\n        deleteKraDetailError,\r\n        deleteKraDetailPending\r\n    ]);\r\n\r\n    const getSubDepartmentByDepartment = (id) => {\r\n        const payload = {\r\n            department_id: id\r\n        }\r\n        dispatch(departmentAction.getSubDepartmentByDepartmentRequest(payload))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getSubDepartmentByDepartmentPending) {\r\n            if (getSubDepartmentByDepartmentError) {\r\n                return;\r\n            }\r\n            if (getSubDepartmentByDepartmentRes) {\r\n                if (getSubDepartmentByDepartmentRes?.code === 200) {\r\n\r\n                    setSubDepartmentByDepartmentData(getSubDepartmentByDepartmentRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getSubDepartmentByDepartmentRes,\r\n        getSubDepartmentByDepartmentError,\r\n        getSubDepartmentByDepartmentPending\r\n    ]);\r\n\r\n    const toggleAddKraParameter = (data) => {\r\n        if (data) {\r\n            setSelectedKRA(data)\r\n            getAllParameterData({ kra_id: data?._id })\r\n\r\n        }\r\n        setOpenKraParameter(!openAddKraParameter)\r\n    }\r\n\r\n    const toggleUpdateKraParameterModal = (data) => {\r\n        setSelectedKRAParameterData(data)\r\n        setOpenUpdateKraParameter(!openUpdateKraParameter)\r\n    }\r\n\r\n    /* Add parameter  */\r\n\r\n    const handleCreateUpdateParameter = (params) => {\r\n        if (selectedKRAParameterData) {\r\n            params[\"_id\"] = selectedKRAParameterData?._id\r\n            dispatch(pmsActions.updateKraParameterRequest(params));\r\n        }\r\n        else {\r\n            dispatch(pmsActions.createKraParameterRequest(params));\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!createKraParameterPending) {\r\n            if (createKraError) {\r\n                dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_CREATE_KRA_PARAMETER_STORE\"))\r\n                return;\r\n            }\r\n            if (createKraParameterRes) {\r\n                if (createKraParameterRes?.code === 200) {\r\n                    dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_CREATE_KRA_PARAMETER_STORE\"))\r\n                    getAllParameterData({ kra_id: selectedKRA?._id })\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        createKraParameterPending,\r\n        createKraParameterRes,\r\n        createKraParameterError,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!updateKraParameterPending) {\r\n            if (updateKraParameterError) {\r\n                return;\r\n            }\r\n            if (updateKraParameterRes) {\r\n                if (updateKraParameterRes?.code === 200) {\r\n                    dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_UPDATE_KRA_PARAMETER_STORE\"))\r\n                    toggleUpdateKraParameterModal('')\r\n                    getAllParameterData({ kra_id: selectedKRA?._id })\r\n                    // toggleAddKraParameter()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updateKraParameterPending,\r\n        updateKraParameterRes,\r\n        updateKraParameterError,\r\n    ]);\r\n    const getParameterData = () => {\r\n        dispatch(pmsActions.getKraParameterRequest())\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getKraParameterPending) {\r\n            if (getKraParameterError) {\r\n                return;\r\n            }\r\n            if (getKraParameterRes) {\r\n                if (getKraParameterRes?.code === 200) {\r\n                    setKRAParameterData(getKraParameterRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getKraParameterPending,\r\n        getKraParameterRes,\r\n        getKraParameterError,\r\n    ]);\r\n\r\n    const getAllParameterData = (payload) => {\r\n        setAllKRAParameterData(null)\r\n        dispatch(pmsActions.getAllKraParameterDataRequest(payload))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getAllKraParameterDataPending) {\r\n            if (getAllKraParameterDataError) {\r\n                return;\r\n            }\r\n            if (getAllKraParameterDataRes) {\r\n                if (getAllKraParameterDataRes?.code === 200) {\r\n                    setAllKRAParameterData(getAllKraParameterDataRes )\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllKraParameterDataPending,\r\n        getAllKraParameterDataRes,\r\n        getAllKraParameterDataError,\r\n    ]);\r\n\r\n\r\n    /* Delete Kra Parameter Detail */\r\n    const toggleDeleteKraParameterModal = (data) => {\r\n        if (data) {\r\n            setSelectedKRAParameterData(data)\r\n        } else {\r\n            setSelectedKRAParameterData('')\r\n        }\r\n        setIsShowDeleteKraParameterModal(!isShowDeleteKraParameterModal)\r\n    }\r\n\r\n    const handleDeleteKraParameter = (type) => {\r\n        if (type) {\r\n            const params = {\r\n                _id: selectedKRAParameterData?._id\r\n            }\r\n            dispatch(pmsActions?.deleteKraParameterRequest(params))\r\n        } else {\r\n            toggleDeleteKraParameterModal()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!deleteKraParameterPending) {\r\n            if (deleteKraParameterError) {\r\n                dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_DELETE_KRA_PARAMETER_STORE\"))\r\n                return;\r\n            }\r\n            if (deleteKraParameterRes) {\r\n                if (deleteKraParameterRes?.code === 200) {\r\n                    dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_DELETE_KRA_PARAMETER_STORE\"))\r\n                    toggleDeleteKraParameterModal()\r\n                    getAllParameterData({ kra_id: selectedKRA?._id })\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        deleteKraParameterPending,\r\n        deleteKraParameterRes,\r\n        deleteKraParameterError,\r\n    ]);\r\n\r\n\r\n\r\n    /*-------------------------------------- Create Update Kpi Sub Parameter--------------------------- */\r\n\r\n    const toggleAddUpdateKpiSubParameter = (data) => {\r\n        if (data) {\r\n            setSelectedKpiParameterData(data)\r\n            getKpiSubParameterData({ parameter_id: data?._id })\r\n        }\r\n        setIsOpenKpiSubParaModal(!isOpenKpiSubParaModal)\r\n        toggleAddKraParameter()\r\n\r\n    }\r\n    const toggleUpdateKpiSubParameter = (data) => {\r\n        if (data) {\r\n            setSelectedSubKpiParameterData(data)\r\n        }\r\n        setIsOpenUpdateKpiSubParaModal(!isOpenUpdateKpiSubParaModal)\r\n\r\n    }\r\n    const handleCreateUpdateKpiSubParameter = (params) => {\r\n        if (selectedSubKpiParameterData) {\r\n            params[\"parameter_id\"] = selectedKpiParameterData?._id\r\n            params[\"_id\"] = selectedSubKpiParameterData?._id\r\n            dispatch(pmsActions.updateKpiDetailRequest(params));\r\n        }\r\n        else {\r\n            dispatch(pmsActions.createKPiDetailsRequest(params));\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!createKPiDetailsPending) {\r\n            if (createKPiDetailsError) {\r\n                dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_CREATE_KPI_DETAILS_STORE\"))\r\n                return;\r\n            }\r\n            if (createKPiDetailsRes) {\r\n                if (createKPiDetailsRes?.code === 200) {\r\n                    dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_CREATE_KPI_DETAILS_STORE\"))\r\n                    getKpiSubParameterData({ parameter_id: selectedKpiParameterData?._id })\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        createKPiDetailsPending,\r\n        createKPiDetailsRes,\r\n        createKPiDetailsError,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!updateKpiDetailPending) {\r\n            if (updateKpiDetailError) {\r\n                dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_UPDATE_KPI_DETAIL_STORE\"))\r\n                return;\r\n            }\r\n            if (updateKpiDetailRes) {\r\n                if (updateKpiDetailRes?.code === 200) {\r\n                    dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_UPDATE_KPI_DETAIL_STORE\"))\r\n                    setSelectedSubKpiParameterData('')\r\n                    toggleUpdateKpiSubParameter()\r\n                    getKpiSubParameterData({ parameter_id: selectedKpiParameterData?._id })\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updateKpiDetailPending,\r\n        updateKpiDetailRes,\r\n        updateKpiDetailError,\r\n    ]);\r\n\r\n    const getKpiSubParameterData = (payload) => {\r\n        setKpiSubParameterData(null)\r\n        dispatch(pmsActions.getAllKpiDetailsDataRequest(payload))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getAllKpiDetailsDataPending) {\r\n            if (getAllKpiDetailsDataError) {\r\n                return;\r\n            }\r\n            if (getAllKpiDetailsDataRes) {\r\n                if (getAllKpiDetailsDataRes?.code === 200) {\r\n                    setKpiSubParameterData(getAllKpiDetailsDataRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllKpiDetailsDataPending,\r\n        getAllKpiDetailsDataRes,\r\n        getAllKpiDetailsDataError,\r\n    ]);\r\n\r\n\r\n    /* Delete Kra Parameter Detail */\r\n    const toggleDeleteSubKpiParameterModal = (data) => {\r\n        if (data) {\r\n            setSelectedSubKpiParameterData(data)\r\n        } else {\r\n            setSelectedSubKpiParameterData('')\r\n        }\r\n        setIsShowDeleteKpiSubParameterModal(!isShowDeleteKpiSubParameterModal)\r\n    }\r\n\r\n    const handleDeleteSubKpiParameter = (type) => {\r\n        if (type) {\r\n            const params = {\r\n                _id: selectedSubKpiParameterData?._id\r\n            }\r\n            dispatch(pmsActions?.deleteKpiDetailRequest(params))\r\n        } else {\r\n            toggleDeleteSubKpiParameterModal()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!deleteKpiDetailPending) {\r\n            if (deleteKpiDetailError) {\r\n                dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_DELETE_KPI_DETAIL_STORE\"))\r\n                return;\r\n            }\r\n            if (deleteKpiDetailRes) {\r\n                if (deleteKpiDetailRes?.code === 200) {\r\n                    dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_DELETE_KPI_DETAIL_STORE\"))\r\n                    toggleDeleteSubKpiParameterModal()\r\n                    getKpiSubParameterData({ parameter_id: selectedKpiParameterData?._id })\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        deleteKpiDetailPending,\r\n        deleteKpiDetailRes,\r\n        deleteKpiDetailError,\r\n    ]);\r\n\r\n\r\nconst getAllKraRatingTypeForDepartmentData =(function_id)=>{\r\n    dispatch(pmsActions.getAllKraRatingTypeForDepartmentRequest({function_id}))\r\n}\r\n\r\n\r\nuseEffect(() => {\r\n    if (!getAllKraRatingTypeForDepartmentPending) {\r\n        if (getAllKraRatingTypeForDepartmentError) {\r\n  \r\n            return;\r\n        }\r\n        if (getAllKraRatingTypeForDepartmentRes) {\r\n            if (getAllKraRatingTypeForDepartmentRes?.code === 200) {\r\n                setKraRatingTypeData(getAllKraRatingTypeForDepartmentRes?.data)\r\n            }\r\n        }\r\n    }\r\n}, [\r\n    getAllKraRatingTypeForDepartmentPending,\r\n    getAllKraRatingTypeForDepartmentRes,\r\n    getAllKraRatingTypeForDepartmentError,\r\n]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <AddBanner\r\n                titleName={\"Add New Key Responsibility Areas (KRA)\"}\r\n                buttons={buttons}\r\n            />\r\n            <CreatedKRATable\r\n                toggleAssignKRA={toggleAssignKRA}\r\n                toggleViewKRAParameter={toggleViewKRAParameter}\r\n                financialYearListData={financialYearListData}\r\n                allKraDetailsData={allKraDetailsData}\r\n                toggleAddKraParameter={toggleAddKraParameter}\r\n            />\r\n            {isShowAddNewKRA && <AddNewKRA\r\n                openModel={isShowAddNewKRA}\r\n                handleOpenClose={toggleAddNewKRA}\r\n                allDepartmentList={allDepartments}\r\n                financialYearListData={financialYearListData}\r\n                handleCreateUpdateKra={handleCreateUpdateKra}\r\n                getSubDepartmentByDepartment={getSubDepartmentByDepartment}\r\n                subDepartmentByDepartmentData={subDepartmentByDepartmentData}\r\n                getAllKraRatingTypeForDepartmentData={getAllKraRatingTypeForDepartmentData}\r\n                kraRatingTypeData={kraRatingTypeData}\r\n            />}\r\n\r\n            {isShowViewKRAParameter && <ViewKRAParameter\r\n                openModel={isShowViewKRAParameter}\r\n                handleOpenClose={toggleViewKRAParameter}\r\n                allKRAParameterData={allKRAParameterData}\r\n                selectedKRA={selectedKRA}\r\n                kpiSubParameterData={kpiSubParameterData}\r\n                getKpiSubParameterData={getKpiSubParameterData}\r\n            />}\r\n            {openAddKraParameter && <CreateKpi\r\n                openAddKraParameter={openAddKraParameter}\r\n                toggleAddKraParameter={toggleAddKraParameter}\r\n                selectedKRA={selectedKRA}\r\n                handleCreateUpdateParameter={handleCreateUpdateParameter}\r\n                allKRAParameterData={allKRAParameterData}\r\n                toggleAddUpdateKpiSubParameter={toggleAddUpdateKpiSubParameter}\r\n                toggleUpdateKraParameterModal={toggleUpdateKraParameterModal}\r\n                toggleDeleteKraParameterModal={toggleDeleteKraParameterModal}\r\n            />\r\n            }\r\n\r\n            {isOpenKpiSubParaModal && <CreateUpdateKpiParameter\r\n                isOpen={isOpenKpiSubParaModal}\r\n                toggleOpenClose={toggleAddUpdateKpiSubParameter}\r\n                selectedKpiParameterData={selectedKpiParameterData}\r\n                selectedKRA={selectedKRA}\r\n                handleCreateUpdateKpiSubParameter={handleCreateUpdateKpiSubParameter}\r\n                kpiSubParameterData={kpiSubParameterData}\r\n                toggleUpdateKpiSubParameter={toggleUpdateKpiSubParameter}\r\n                toggleDeleteSubKpiParameterModal={toggleDeleteSubKpiParameterModal}\r\n            />}\r\n\r\n            {openUpdateKraParameter && <UpdateKRAParameterModal\r\n                isOpen={openUpdateKraParameter}\r\n                openCloseModal={toggleUpdateKraParameterModal}\r\n                selectedKRA={selectedKRA}\r\n                handleCreateUpdateParameter={handleCreateUpdateParameter}\r\n                allKRAParameterData={allKRAParameterData}\r\n                selectedKRAParameterData={selectedKRAParameterData}\r\n            />}\r\n            {isOpenUpdateKpiSubParaModal && <UpdateKPIParameter\r\n                isOpen={isOpenUpdateKpiSubParaModal}\r\n                toggleOpenClose={toggleUpdateKpiSubParameter}\r\n                selectedSubKpiParameterData={selectedSubKpiParameterData}\r\n                selectedKRA={selectedKRA}\r\n                handleCreateUpdateKpiSubParameter={handleCreateUpdateKpiSubParameter}\r\n            />}\r\n\r\n            {isShowDeleteKraParameterModal && (\r\n                <ApproveRejectModal\r\n                    onApproveReject={handleDeleteKraParameter}\r\n                    isShow={isShowDeleteKraParameterModal}\r\n                    desc={t(\"alerts.deletePopup.desc\").replace('$1', \"Parameter\")}\r\n                    btnRightLoading={deleteKraParameterPending}\r\n                    btnTextRight={t(\"btns.delete\")}\r\n                    btnTextLeft={t(\"btns.cancel\")}\r\n                />)\r\n            }\r\n            {isShowDeleteKpiSubParameterModal && (\r\n                <ApproveRejectModal\r\n                    onApproveReject={handleDeleteSubKpiParameter}\r\n                    isShow={isShowDeleteKpiSubParameterModal}\r\n                    desc={t(\"alerts.deletePopup.desc\").replace('$1', \"KPI Parameter\")}\r\n                    btnRightLoading={deleteKpiDetailPending}\r\n                    btnTextRight={t(\"btns.delete\")}\r\n                    btnTextLeft={t(\"btns.cancel\")}\r\n                />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateKRA\r\n","import React, { useState } from 'react'\r\nimport { CustCheckbox, CustomMultiSelect, Label } from '../../../../commanComponent'\r\nimport CustomSelect from '../../../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../../../translation'\r\nimport { CustomButton } from '../../../../globalComponents'\r\n\r\nconst AssignKRAModal = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        openModel,\r\n        handleOpenClose,\r\n        allKraDetailsData,\r\n        handleAssignKra\r\n    } = props\r\n    const [assignBy, setAssignBy] = useState(null)\r\n\r\n    const onSubmitAssign = () => {\r\n        let payload = {\r\n            kra_id:assignBy?.value,\r\n        }\r\n        handleAssignKra(payload)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"modal fade attendanceViewodal\"\r\n                id=\"assignKra\"\r\n                style={\r\n                    {\r\n                        display: openModel ? \"unset !important\" : \"none !important\",\r\n                        opacity: openModel ? \"unset\" : \"0\"\r\n                    }\r\n                }\r\n            >\r\n                <div className=\"modal-dialog modal-dialog-centered\">\r\n                    <div className=\"modal-content rounded-0 border-0\">\r\n                        <div className=\"modal-header border-0\">\r\n                            <h1 className=\"modal-title fs-5 fw-bold text-primary\">Assign KRA</h1>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                onClick={() => handleOpenClose()}\r\n                            />\r\n                        </div>\r\n                        <div className=\"modal-body \">\r\n\r\n\r\n                            <div className=\"approveSlct mb-3\">\r\n                                <Label text={\"Assign To\"} required={true} />\r\n\r\n                                <CustomSelect\r\n                                    data={allKraDetailsData || []}\r\n                                    placeholder={\"Select KRA\"}\r\n                                    value={assignBy}\r\n                                    handleChange={(selectedOption) => setAssignBy(selectedOption)}\r\n                                    name=\"id\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"py-2\">\r\n                                <CustomButton\r\n                                    classNames=\"btn btn-primary gradientBg mt-2\"\r\n                                    text={\"Assign KRA\"}\r\n                                    handleClick={() => onSubmitAssign()}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AssignKRAModal\r\n"],"names":["props","t","useCustomTranslation","currentPage","setCurrentPage","toggleAssignKRA","toggleViewKRAParameter","financialYearListData","allKraDetailsData","toggleAddKraParameter","getKraDetailsPending","useSelector","state","pms","financialYear","setFinancialYear","useState","createdKRAScopedSlots","useMemo","sn","_","index","_jsx","children","status","item","className","setStatusColor","is_active","kra_rating_type","toTitleCase","assignKRA","CustomButton","text","classNames","handleClick","isDisabled","is_eligible_for_assign_status","action","_jsxs","type","onClick","Icon","src","alt","width","CustomSelect","data","placeholder","value","handleChange","selectedOption","name","CustomTable","fields","key","label","isLoading","pagination","totalPages","isHeader","tableStyle","padding","boxShadow","scopedSlots","openModel","handleOpenClose","allDepartmentList","handleCreateUpdateKra","getSubDepartmentByDepartment","subDepartmentByDepartmentData","kraRatingTypeData","getAllKraRatingTypeForDepartmentData","errors","setErrors","dispatch","useDispatch","addNewKRAFormData","setAddNewKRAFormData","department","subDepartment","kraName","kraRatingType","ratingDuration","bonusDuration","isActive","handleFromChange","e","fieldName","_e$target","target","checked","prevState","prevErrors","undefined","useEffect","pmsActions","handleClearPMSStore","length","pre","_kraRatingTypeData$","rating_type","_Fragment","tabIndex","style","visibility","id","Label","required","CustomError","Input","onChange","department_id","CustCheckbox","async","validationResponse","validateSchema","addNewKRA","isValid","payload","kra_name","rating_duration","bonus_duration","financial_id","function_id","submitKRA","getAllKpiDetailsDataPending","getAllKraParameterDataPending","allKRAParameterData","selectedKRA","getKpiSubParameterData","kpiSubParameterData","department_name","CustomSpinner","isShow","size","renderedViewAllKRAParameter","_allKRAParameterData$","_allKRAParameterData$2","map","parameter","paraInd","parameter_id","_id","parameter_name","parameter_weightage","subParamItem","subParamIndex","key_performance_indicator","measurement_criteria","kpi_weightage","BlankTableError","openAddKraParameter","handleCreateUpdateParameter","toggleAddUpdateKpiSubParameter","toggleUpdateKraParameterModal","toggleDeleteKraParameterModal","addParameterError","setAddParameterError","isShowAddKPIParameter","setIsShowAddKPIParameter","addParameter","setAddParameter","parameterName","parameterWeightage","handleAddParameter","kraParameterScopedSlots","created_at","dateFormate","disabled","selected","kra_weightage_status","htmlFor","addParameterSchema","kra_id","onSubmitParameter","class","toggleOpenClose","isOpen","selectedKpiParameterData","handleCreateUpdateKpiSubParameter","toggleUpdateKpiSubParameter","toggleDeleteSubKpiParameterModal","addKpiParameterError","setAddKpiParameterError","isShowAddKPI","setIsShowAddKPI","addKpiParameter","setAddKpiParameter","kpiDescription","kpiMeasurementCriteria","kpiWeightage","kpiTarget","handleAddKpiParameter","clupdationass","for","addKpiParameterSchema","kpi_target","openCloseModal","selectedKRAParameterData","selectedSubKpiParameterData","resetFormData","CreateKRA","getDepartmentListRes","getDepartmentListError","getDepartmentListPending","getSubDepartmentByDepartmentRes","getSubDepartmentByDepartmentError","getSubDepartmentByDepartmentPending","getFinancialYearListRes","getFinancialYearListError","getFinancialYearListPending","createKraPending","createKraRes","createKraError","getKraDetailsRes","getKraDetailsError","updateKraDetailPending","updateKraDetailRes","updateKraDetailError","deleteKraDetailPending","deleteKraDetailRes","deleteKraDetailError","createKraParameterPending","createKraParameterRes","createKraParameterError","getKraParameterPending","getKraParameterRes","getKraParameterError","getAllKraParameterDataRes","getAllKraParameterDataError","updateKraParameterPending","updateKraParameterRes","updateKraParameterError","deleteKraParameterPending","deleteKraParameterRes","deleteKraParameterError","createKPiDetailsPending","createKPiDetailsRes","createKPiDetailsError","getAllKpiDetailsDataRes","getAllKpiDetailsDataError","updateKpiDetailPending","updateKpiDetailRes","updateKpiDetailError","deleteKpiDetailPending","deleteKpiDetailRes","deleteKpiDetailError","getAllKraRatingTypeForDepartmentPending","getAllKraRatingTypeForDepartmentRes","getAllKraRatingTypeForDepartmentError","selectedKraDetailData","getAllEmployeePending","getAllEmployeeRes","getAllEmployeeError","employee","navigate","useNavigate","isShowAddNewKRA","setIsShowAddNewKRA","isShowViewKRAParameter","setIsShowViewKRAParameter","allDepartments","setAllDepartments","setFinancialYearListData","setAllKraDetailsData","isShowDeleteDeleteKraModal","setIsShowDeleteDeleteKraModal","setSubDepartmentByDepartmentData","setOpenKraParameter","openUpdateKraParameter","setOpenUpdateKraParameter","setSelectedKRA","KRAParameterData","setKRAParameterData","setAllKRAParameterData","setSelectedKpiParameterData","isOpenKpiSubParaModal","setIsOpenKpiSubParaModal","setKpiSubParameterData","setSelectedKRAParameterData","isShowDeleteKraParameterModal","setIsShowDeleteKraParameterModal","isOpenUpdateKpiSubParaModal","setIsOpenUpdateKpiSubParaModal","setSelectedSubKpiParameterData","isShowDeleteKpiSubParameterModal","setIsShowDeleteKpiSubParameterModal","allEmployeeListData","setAllEmployeeListData","setKraRatingTypeData","toggleAddNewKRA","getAllParameterData","buttons","getAllDepartments","getFinancialYearListData","getAllEmployeeData","departmentResposnse","departmentAction","getDepartmentListRequest","code","departmentResponse","getAllEmployeeListResData","employeeActions","getAllEmployeeRequest","allEmployeeList","financialYearActions","getFinancialYearListRequest","getKraDetailsData","params","page","limit","getKraDetailsRequest","toggleDeleteKraDeleteModal","_allKraDetailsData$da","updateKraParameterRequest","createKraParameterRequest","getAllKraParameterDataRequest","updateKpiDetailRequest","createKPiDetailsRequest","getAllKpiDetailsDataRequest","AddBanner","titleName","CreatedKRATable","AddNewKRA","createKraRequest","getSubDepartmentByDepartmentRequest","getAllKraRatingTypeForDepartmentRequest","ViewKRAParameter","CreateKpi","CreateUpdateKpiParameter","UpdateKRAParameterModal","UpdateKPIParameter","ApproveRejectModal","onApproveReject","deleteKraParameterRequest","desc","replace","btnRightLoading","btnTextRight","btnTextLeft","deleteKpiDetailRequest","handleAssignKra","assignBy","setAssignBy","display","opacity","onSubmitAssign"],"sourceRoot":""}