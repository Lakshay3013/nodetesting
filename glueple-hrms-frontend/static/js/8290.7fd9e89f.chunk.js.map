{"version":3,"file":"static/js/8290.7fd9e89f.chunk.js","mappings":"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","sources":["components/admin/designation/DesignationTable.js","components/modal/ApproveRejectModal.js","components/modal/admin/emailTemplate/AddActionEmailTemplate.js","components/modal/admin/emailTemplate/Customckediter.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomButton } from '../../globalComponents'\r\nimport moment from 'moment-timezone'\r\nimport { getBadgeColor } from '../../../utils/common'\r\nimport { CustomTable } from '../../reuseableComponents'\r\nimport { useCustomTranslation } from '../../../translation'\r\nconst DesignationTable = (props) => {\r\n  const {t}=useCustomTranslation()\r\n  const {\r\n    designationList,\r\n    isLoading,\r\n    setSelectedDesignation,\r\n    toggleDesignation,\r\n    onHandleDeleteModal,\r\n    setCurrentPage,\r\n    currentPage\r\n  } = props\r\n\r\n  const [desiList, setDesiList] = useState()\r\n  const updateDesignation = (data) => {\r\n    setSelectedDesignation(data)\r\n    toggleDesignation()\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDesiList(designationList)\r\n  }, [designationList])\r\n\r\n\r\n  const scopedSlots = useMemo(() => ({\r\n    sn: (_, index) => (\r\n      <span>{index + 1}</span>\r\n    ),\r\n    is_active: item => (\r\n      <span\r\n        className={`badge ${getBadgeColor(item.is_active ? \"Active\" : \"Inactive\")}`}\r\n      >\r\n        {item.is_active ? \"Active\" : \"Inactive\"}\r\n      </span>\r\n    ),\r\n    created_at: item => moment(item.created_at).format(\"DD-MM-YYYY\"),\r\n    action: item => (\r\n      <div className=\"actionGroup d-flex gap-2\">\r\n        <CustomButton\r\n          text={t(\"btns.update\")}\r\n          classNames=\"btn btn-primary\"\r\n          handleClick={() => {\r\n            updateDesignation(item);\r\n          }}\r\n        />\r\n        {item?.emp_count===0&&<CustomButton\r\n          text={t(\"btns.delete\")}\r\n          handleClick={() => onHandleDeleteModal(item._id)}\r\n          classNames=\"btn btn-danger\"\r\n        />}\r\n      </div>\r\n    )\r\n  }), [\r\n    setSelectedDesignation,\r\n    toggleDesignation,\r\n    onHandleDeleteModal\r\n  ]);\r\n  const fields = [\r\n    { key: 'sn', label: 'S.N' },\r\n    { key: 'department_name', label: 'Department Name' },\r\n    { key: 'name', label: 'Name' },\r\n    { key: 'short_name', label: 'Short Name' },\r\n    { key: 'emp_count', label: 'Total Employees' },\r\n    { key: 'is_active', label: 'Status' },\r\n    { key: 'created_at', label: 'Created At' },\r\n    { key: 'action', label: 'Action' }\r\n  ];\r\n\r\n\r\n  return (\r\n    <>\r\n      <CustomTable\r\n        data={desiList?.data}\r\n        fields={fields}\r\n        isLoading={isLoading}\r\n        pagination={true}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        totalPages={desiList?.totalPages}\r\n        tableName={\"Designation\"}\r\n        // onSearch={handleSearch}\r\n        scopedSlots={scopedSlots}\r\n      />\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default DesignationTable\r\n","import React from 'react'\r\nimport Lottieplayer from '../commanComponent/Lottieplayer'\r\nimport backup from '../../../src/images/Backup.json'\r\nimport { CustomButton } from '../globalComponents'\r\nimport PropTypes from 'prop-types'\r\nimport { useCustomTranslation } from '../../translation'\r\n\r\n/**\r\n * ApproveRejectModal component.\r\n * @param {string} [title=\"Are You Sure?\"] - Title of the modal (optional, defaults to \"Are You Sure?\")\r\n * @param {string} [desc] - Description text (optional).\r\n * @param {function} onApproveReject - Callback function for handling approve/reject actions (required).\r\n * @param {boolean} isShow - Boolean flag to show or hide the modal (required).\r\n * @param {boolean} [btnRightLoading=false] - Boolean flag to show loading state for the right button (optional).\r\n * @param {string} [btnTextLeft=\"Cancel\"] - Custom text for the left button (optional).\r\n * @param {string} [btnTextRight=\"Confirm\"] - Custom text for the right button (optional).\r\n * @returns {void}\r\n */\r\nconst ApproveRejectModal = (\r\n  {  \r\n    title ,               \r\n    desc = \"\",                           \r\n    onApproveReject,                      \r\n    isShow,                               \r\n    btnLeftLoading = false,               \r\n    btnRightLoading = false,              \r\n    btnTextLeft ,               \r\n    btnTextRight     \r\n}\r\n) => {\r\n    const {t} =useCustomTranslation()\r\n    return (\r\n        <>\r\n            <div className=\"modal fade attendanceViewodal\" id=\"sureMdl\" style={{ display: isShow ? \"unset !important\" : \"none !important\", opacity: isShow ? \"unset\" : \"0\" }}>\r\n                <div className=\"modal-dialog modal-dialog-centered\">\r\n                    <div className=\"modal-content rounded-1 border-0\">\r\n                        <div className=\"modal-body \">\r\n                            <div className=\"text-center suremodalCon\">\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <Lottieplayer lottieUrl={backup} Lottiestyle={{ width: \"90px\", height: \"90px\" }} />\r\n                                </div>\r\n                                <h6 className=\"fw-semibold mb-2\">{title?title:t(\"alerts.deletePopup.title\")}</h6>\r\n                                <p className=\"mb-5 px-4 text-center\">{desc ? desc : \"\"}\r\n                                </p>\r\n                                <div className=\"d-flex justify-content-center gap-3\">\r\n                                    <CustomButton\r\n                                        classNames={\"btn btn-danger\"}\r\n                                        isLoading={btnLeftLoading}\r\n                                        text={btnTextLeft?btnTextLeft:t(\"btns.reject\") }\r\n                                        handleClick={() => onApproveReject(false)}\r\n                                    />\r\n                                    <CustomButton\r\n                                        classNames={\"btn btn-success\"}\r\n                                        isLoading={btnRightLoading}\r\n                                        text={btnTextRight?btnTextRight:t(\"btns.confirm\")}\r\n                                        handleClick={() => onApproveReject(true)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isShow && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n// Add PropTypes validation\r\nApproveRejectModal.propTypes = {\r\n    title: PropTypes.string,                     \r\n    desc: PropTypes.string,                       \r\n    onApproveReject: PropTypes.func.isRequired,   \r\n    isShow: PropTypes.bool.isRequired,            \r\n    btnRightLoading: PropTypes.bool,                         \r\n    btnTextLeft: PropTypes.string,                \r\n    btnTextRight: PropTypes.string,   \r\n};\r\n\r\nexport default ApproveRejectModal\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CustomButton } from '../../../globalComponents';\r\nimport { emailTemplateAction, notificationActions } from '../../../../core/resource/actions';\r\nimport { toast } from 'react-toastify';\r\nimport { addActionSchema } from '../../../../utils/ValidationSchema';\r\nimport * as yup from 'yup';\r\nimport { validateSchema } from '../../../../utils/ValidationHelper';\r\nimport CustomError from '../../../globalComponents/CustomError';\r\nimport { notify } from '../../../globalComponents/ToastNotification';\r\n\r\nimport Customckediter from './Customckediter'\r\nimport { pagination } from '../../../../utils/Constants.config'\r\n\r\nconst AddActionEmailTemplate = (props) => {\r\n    const editorRef = useRef(null);\r\n\r\n    const {TemplateList, openAction,getAllAction, toggleOpenAction, getAllEmailTemplalte, setSelectedActionData, selectedActionData, onHandleViewModals } = props\r\n    const [errors, setErrors] = useState({});\r\n    const dispatch = useDispatch();\r\n    const {addActionTemplatePending,\r\n        addActionTemplateRes,\r\n        addActionTemplateError, GetActionTypeTemplatePending,\r\n        GetActionTypeTemplateRes,\r\n        GetActionTypeTemplateError } = useSelector(state => state.emailtemplate);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [editorData, setEditorData] = useState('')\r\n    const [templateId, setTemplateId] = useState('')\r\n    const [actionType, setActionType] = useState([])\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const [addEmailTemplate, setAddEmailTemplate] = useState({\r\n        template_name: '',\r\n        email_title: '',\r\n        email_type: '',\r\n        body: '',\r\n        is_active: '',\r\n        remark:''\r\n    })\r\n\r\n    const [addAction, setAddAction] = useState({\r\n        action_name:'',\r\n        action_type:'',\r\n        template_id:'',\r\n    })\r\n    const [Alltemplate,setAlltemplate] = useState(TemplateList?.data)\r\n\r\n    useEffect(() => {\r\n        setAlltemplate(TemplateList?.data)\r\n      }, [TemplateList])\r\n\r\n      useEffect(() => {\r\n        getAllActionType()\r\n      }, [currentPage])\r\n    \r\n      const getAllActionType = () => {\r\n        const params = {\r\n            page: currentPage,\r\n            limit: pagination.limit,\r\n          }\r\n        dispatch(emailTemplateAction.GetActionTypeTemplateRequest(params))\r\n      }\r\n\r\n      useEffect(() => {\r\n        if (!GetActionTypeTemplatePending) {\r\n            if (GetActionTypeTemplateError) {\r\n                setActionType([])\r\n                return;\r\n            }\r\n            if (GetActionTypeTemplateRes) {\r\n                if (GetActionTypeTemplateRes?.data?.code == 200) {\r\n                    setActionType(GetActionTypeTemplateRes?.data?.data?.data?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        GetActionTypeTemplatePending,\r\n        GetActionTypeTemplateRes,\r\n        GetActionTypeTemplateError\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setAddAction({\r\n            action_name: selectedActionData?.action_name || '',\r\n            action_type: selectedActionData?.action_type || '',\r\n            template_id: selectedActionData.template_id || '',\r\n        })\r\n        setIsActive(selectedActionData?.is_active)\r\n        setTemplateId(selectedActionData?.id)\r\n    }, [selectedActionData])\r\n\r\n    useEffect(() => {\r\n        if (!addActionTemplatePending) {\r\n            if (addActionTemplateError) {\r\n                toast.error(addActionTemplateError?.errorMessage)\r\n                return;\r\n            }\r\n            if (addActionTemplateRes) {\r\n                if (addActionTemplateRes?.data?.code === 200) {\r\n                    toast.success(addActionTemplateRes?.data?.msg)\r\n                    toggleOpenAction()\r\n                    getAllAction()\r\n                    dispatch(emailTemplateAction.handleClearEmailTemplateStore(\"HANDLE_CLEAR_ADD_ACTION_TEMPLATE_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addActionTemplateRes,\r\n        addActionTemplateError,\r\n        addActionTemplatePending]);\r\n\r\n    const handleChange = (event) => {\r\n        errors && setErrors({});\r\n        const { name, value } = event.target\r\n        setAddAction({ ...addAction, [name]: value })\r\n    }\r\n\r\n    const createAction = async () => {\r\n        addAction.is_active = isActive\r\n        const validationResponse = await validateSchema(addActionSchema, addAction);\r\n        if (validationResponse.isValid) {\r\n            setErrors({});\r\n            if (selectedActionData) {\r\n                addAction['_id'] = templateId\r\n                dispatch(emailTemplateAction.UpdataActionTemplateRequest(addAction));\r\n                getAllAction()\r\n                toggleOpenAction()\r\n            } else {\r\n                dispatch(emailTemplateAction.AddActionTemplateRequest(addAction));\r\n                getAllAction()\r\n            }\r\n\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n            console.log(validationResponse.errors, \"formattedErrors\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (openAction == false) {\r\n            resetTempateData()\r\n        }\r\n    }, [openAction])\r\n\r\n\r\n    const resetTempateData = () => {\r\n        setAddAction({\r\n        action_name:'',\r\n        action_type:'',\r\n        template_id:'',\r\n        })\r\n        setSelectedActionData('')\r\n        setErrors({});\r\n        setEditorData('')\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end creatNewTicketOff ${openAction ? 'show' : ''}`}\r\n\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openAction ? 'visible' : 'hidden',\r\n                }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{onHandleViewModals ? \"View\" : selectedActionData ? \"Update\" : \"Create New\"} Action</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => toggleOpenAction('view')}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Action Name<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <input type=\"text\" className=\"form-control fs-7\"\r\n                                        placeholder=\"Enter Action Name\"\r\n                                        name='action_name'\r\n                                        value={addAction?.action_name || ''}\r\n                                        onChange={(e) => handleChange(e)}\r\n                                    />\r\n                                    {errors?.template_name && (\r\n                                        <CustomError text={errors.template_name} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Action Type<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <select className=\"form-select\" required\r\n                                        name='action_type'\r\n                                        value={addAction?.action_type}\r\n                                        onChange={(e) => handleChange(e)}\r\n                                        disabled={onHandleViewModals != '' ? true : false}\r\n                                    >\r\n                                        <option value='' hidden selected>Select Required Action Type</option>\r\n                                        {actionType && actionType?.map(data => (\r\n                                            <option value={data?.action_name}>{data?.action_name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors?.email_title && (\r\n                                        <CustomError text={errors.action_type} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Select Email Template<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <select className=\"form-select\" required\r\n                                        name='template_id'\r\n                                        value={addAction?.template_id}\r\n                                        onChange={(e) => handleChange(e)}\r\n                                        disabled={onHandleViewModals != '' ? true : false}\r\n                                    >\r\n                                        <option value='' hidden selected>Select Required Email Type</option>\r\n                                        {Alltemplate && Alltemplate?.map(data => (\r\n                                            <option value={data?.id}>{data?.template_name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors?.email_type && (\r\n                                        <CustomError text={errors.template_id} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Is Active</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <input type=\"checkbox\" placeholder=\"Is Active\"\r\n                                        checked={isActive}\r\n                                        onChange={(e) => setIsActive(!isActive)}\r\n                                        disabled={onHandleViewModals != '' ? true : false}\r\n                                    />\r\n                                </div>\r\n                                {errors?.is_active && (\r\n                                    <CustomError text={errors.is_active} />\r\n                                )}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center justify-content-end gap-2\">\r\n                            {onHandleViewModals == '' &&\r\n                                <CustomButton\r\n                                    type=\"button\"\r\n                                    classNames={\"btn btn-primary gradientBg\"}\r\n                                    handleClick={e => createAction()}\r\n                                    // isLoading={departmentData?updateDepartmentPending:addDepartmentPending}\r\n                                    text={`${selectedActionData ? \"Update\" : \"Create\"} Action`}\r\n                                />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddActionEmailTemplate\r\n","\r\n// import { CKEditor, CKEditorContext } from '@ckeditor/ckeditor5-react';\r\n// import {\r\n//     ClassicEditor, Context, Bold, Essentials, Italic, Paragraph, ContextWatchdog, CodeBlock, AutoLink, Link, List, SimpleUploadAdapter,\r\n//     Image, ImageCaption, ImageResize, ImageStyle, ImageToolbar, LinkImage, Table, TableToolbar,HtmlEmbed,GeneralHtmlSupport,FullPage,Highlight,Heading,\r\n//     Font,FontFamily,FindAndReplace, Code, Strikethrough, Subscript, Superscript, Underline,Indent, IndentBlock,BlockQuote,HorizontalLine,ImageInsert,\r\n//     AutoImage,Markdown,Style,FontColor,FontSize,TextPartLanguage,Alignment,Mention,MediaEmbed,HtmlComment,RemoveFormat\r\n// } from 'ckeditor5';\r\nimport 'ckeditor5/ckeditor5.css';\r\nimport { CKEditor, CKEditorContext } from '@ckeditor/ckeditor5-react';\r\nimport {\r\n  ClassicEditor, Context, Bold, Essentials, Italic, Paragraph, ContextWatchdog, CodeBlock, AutoLink, Link, List, SimpleUploadAdapter,\r\n  Image, ImageCaption, ImageResize, ImageStyle, ImageToolbar, LinkImage, Table, TableToolbar, HtmlEmbed, GeneralHtmlSupport, FullPage, Highlight, Heading,\r\n  Font, FontFamily, FindAndReplace, Code, Strikethrough, Subscript, Superscript, Underline, Indent, IndentBlock, BlockQuote, HorizontalLine, ImageInsert,\r\n  AutoImage, Markdown, Style, FontColor, FontSize, TextPartLanguage, Alignment, Mention, MediaEmbed, HtmlComment, RemoveFormat,SourceEditing\r\n} from 'ckeditor5';\r\nimport React, { useState, useEffect, useRef } from 'react'; \r\nimport { emailTemplateAction } from '../../../../core/resource/actions';\r\nimport { useDispatch } from 'react-redux'\r\n\r\n\r\n\r\n\r\nconst Customckediter = (props) => {\r\n    const editorRef = useRef('');\r\n    const dispatch = useDispatch();\r\n    const {editorData,setEditorData,dropdownValue,setDropdownValue,bodydata} = props\r\n\r\n    useEffect(() => {\r\n        handleDropdownChanges(dropdownValue);\r\n\r\n        if (bodydata !== undefined) {\r\n            handleUpdateBody(bodydata);\r\n        }\r\n    }, [dropdownValue, bodydata]);\r\n\r\n    const handleUpdateBody = (selectedValue) => {\r\n        const editor = editorRef.current.editor;\r\n        const currentData = editor?.getData();\r\n        const newData = currentData + selectedValue?.replaceAll('&lt;', '<');\r\n\r\n        console.log(\"Hello new html\", newData);\r\n        editor?.setData(newData);\r\n    };\r\n\r\n    // const handleDropdownChanges = (event) => {\r\n    //     const editor = editorRef.current.editor;\r\n    //     const selectedValue = event\r\n    //     const currentData = editor?.getData();\r\n    //     console.log(\"sdfsdfdsfsdfsdfsdfsdf\",currentData)\r\n    //     const newData = currentData?.replace(/<\\/p>/, ` ${selectedValue}</p>`);\r\n    //     editor?.setData(newData);\r\n    // };\r\n\r\n    const handleDropdownChanges = (selectedOption) => {\r\n        const editor = editorRef.current.editor;\r\n        const selectedValue = selectedOption?.replaceAll('&lt;', '<');\r\n\r\n        editor?.model.change(writer => {\r\n            const selection = editor.model.document.selection;\r\n            const position = selection.getFirstPosition();\r\n            writer.insertText(selectedValue, position);\r\n        });\r\n    };\r\n\r\n   const handleEditorChange = (event, editor,save) => {\r\n    console.log(\"Helllo chandan\")\r\n    const currentData = editor.getData();\r\n    const previousData = editorRef?.current?.previousData; \r\n\r\n    if (!previousData || previousData === currentData) {\r\n        setEditorData(currentData); \r\n        editorRef.current.previousData = currentData\r\n        return;\r\n    }\r\n    const previousImages = [...(previousData?.matchAll(/<img.*?src=\"(.*?)\"/g) || [])].map(match => match[1]);\r\n    const currentImages = [...(currentData?.matchAll(/<img.*?src=\"(.*?)\"/g) || [])].map(match => match[1]);\r\n    \r\n    const removedImages = previousImages.filter(src => !currentImages.includes(src));\r\n\r\n    console.log(\"Removed Images:\", removedImages);\r\n    \r\n    removedImages.forEach(imageUrl => dispatch(emailTemplateAction.RemoveImageRequest({url:imageUrl})));\r\n    editorRef.current.previousData = currentData;\r\n    setEditorData(currentData);\r\n};\r\n\r\n    return (\r\n        <>\r\n        <CKEditorContext context={Context} contextWatchdog={ContextWatchdog}>\r\n      <CKEditor\r\n        editor={ClassicEditor}\r\n        data={editorData}\r\n        config={{\r\n          plugins: [\r\n            Essentials, Bold, Italic, Paragraph, CodeBlock, Link, AutoLink, List, Table, TableToolbar,\r\n            Image, ImageToolbar, ImageCaption, ImageStyle, ImageResize, LinkImage, SimpleUploadAdapter,\r\n            HtmlEmbed, GeneralHtmlSupport, FullPage, Highlight, Heading, Font, FontFamily, FindAndReplace,\r\n            Code, Strikethrough, Subscript, Superscript, Underline, Indent, IndentBlock, BlockQuote, HorizontalLine,\r\n            ImageInsert, AutoImage, Markdown, Style, FontColor, FontSize, TextPartLanguage, Alignment, Mention, MediaEmbed, HtmlComment, RemoveFormat,SourceEditing\r\n          ],\r\n          toolbar: {\r\n            items: [\r\n              'undo', 'redo', 'heading', '|', 'bold', 'italic', 'Alignment', '|',\r\n              'link', 'bulletedList', 'numberedList', 'insertImage', 'image', 'simpleUploadAdapter', 'insertTable','sourceEditing', 'fullPage',\r\n              'highlight', 'font', 'fontColor', 'style', 'textPartLanguage', '|','fontSize', 'fontFamily', '|', 'findAndReplace', 'underline', 'strikethrough', 'code', 'subscript', 'superscript', 'indent', 'outdent', 'blockQuote',\r\n              'horizontalLine', 'image', 'AutoImage', 'Markdown','codeBlock', 'mention', 'mediaEmbed', 'htmlComment', 'removeFormat', 'linkImage','htmlEmbed'\r\n            ],\r\n            shouldNotGroupWhenFull: true,\r\n            \r\n          },\r\n          style: {\r\n            definitions: [\r\n                {\r\n                  name: 'Article Category',\r\n                  element: 'h3',\r\n                  classes: [ 'category' ]\r\n                },\r\n                {\r\n                  name: 'Info Box',\r\n                  element: 'p',\r\n                  classes: [ 'info-box' ]\r\n                },\r\n                {\r\n                  name: 'Quotation',\r\n                  element: 'blockquote',\r\n                  classes: [ 'quote' ]\r\n                },\r\n                {\r\n                  name: 'Code Snippet',\r\n                  element: 'code',\r\n                  classes: [ 'code-snippet' ]\r\n                },\r\n                {\r\n                  name: 'Warning Box',\r\n                  element: 'div',\r\n                  classes: [ 'warning-box' ]\r\n                },\r\n                {\r\n                  name: 'Highlight',\r\n                  element: 'span',\r\n                  classes: [ 'highlight' ]\r\n                },\r\n              ]\r\n        },\r\n        simpleUpload: {\r\n            uploadUrl: 'http://localhost:3001/v1/api/add-template-image',\r\n            withCredentials: true,\r\n            headers: {\r\n                'X-CSRF-TOKEN': 'CSRF-Token',\r\n                Authorization: 'Bearer <JSON Web Token>'\r\n            }\r\n        },\r\n        image: {\r\n            resizeOptions: [\r\n            {\r\n                name: 'resizeImage:original',\r\n                value: null,\r\n                icon: 'original'\r\n            },\r\n            {\r\n                name: 'resizeImage:custom',\r\n                value: 'custom',\r\n                icon: 'custom'\r\n            },\r\n            {\r\n                name: 'resizeImage:50',\r\n                value: '50',\r\n                icon: 'medium'\r\n            },\r\n            {\r\n                name: 'resizeImage:75',\r\n                value: '75',\r\n                icon: 'large'\r\n            }\r\n        ],\r\n        toolbar: [\r\n            'toggleImageCaption',\r\n            'imageTextAlternative',\r\n            'ckboxImageEdit',\r\n            'resizeImage:50',\r\n            'resizeImage:75',\r\n            'resizeImage:original',\r\n            'resizeImage:custom',\r\n        ] },\r\n        htmlSupport: {\r\n            allow: [\r\n                {\r\n                    attributes: true,\r\n                    classes: true,\r\n                    styles: true\r\n                }\r\n            ]\r\n        },\r\n        htmlEmbed: {\r\n            showPreviews: true,\r\n          }\r\n        }}\r\n        onReady={(editor) => {\r\n            editorRef.current = {editor}}}\r\n            onChange={(event, editor)=>handleEditorChange(event, editor,'save')}\r\n      />\r\n    </CKEditorContext>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Customckediter;\r\n"],"names":["props","t","useCustomTranslation","designationList","isLoading","setSelectedDesignation","toggleDesignation","onHandleDeleteModal","setCurrentPage","currentPage","desiList","setDesiList","useState","useEffect","scopedSlots","useMemo","sn","_","index","_jsx","children","is_active","item","className","getBadgeColor","created_at","moment","format","action","_jsxs","CustomButton","text","classNames","handleClick","emp_count","_id","_Fragment","CustomTable","data","fields","key","label","pagination","totalPages","tableName","_ref","title","desc","onApproveReject","isShow","btnLeftLoading","btnRightLoading","btnTextLeft","btnTextRight","id","style","display","opacity","Lottieplayer","lottieUrl","backup","Lottiestyle","width","height","useRef","TemplateList","openAction","getAllAction","toggleOpenAction","getAllEmailTemplalte","setSelectedActionData","selectedActionData","onHandleViewModals","errors","setErrors","dispatch","useDispatch","addActionTemplatePending","addActionTemplateRes","addActionTemplateError","GetActionTypeTemplatePending","GetActionTypeTemplateRes","GetActionTypeTemplateError","useSelector","state","emailtemplate","isActive","setIsActive","editorData","setEditorData","templateId","setTemplateId","actionType","setActionType","addEmailTemplate","setAddEmailTemplate","template_name","email_title","email_type","body","remark","addAction","setAddAction","action_name","action_type","template_id","Alltemplate","setAlltemplate","getAllActionType","params","page","limit","emailTemplateAction","GetActionTypeTemplateRequest","_GetActionTypeTemplat","_GetActionTypeTemplat2","_GetActionTypeTemplat3","_GetActionTypeTemplat4","code","toast","error","errorMessage","_addActionTemplateRes","_addActionTemplateRes2","success","msg","handleClearEmailTemplateStore","handleChange","event","name","value","target","resetTempateData","tabIndex","visibility","type","onClick","htmlFor","placeholder","onChange","e","CustomError","required","disabled","hidden","selected","map","checked","async","validationResponse","validateSchema","addActionSchema","isValid","UpdataActionTemplateRequest","AddActionTemplateRequest","console","log","createAction","editorRef","dropdownValue","setDropdownValue","bodydata","handleDropdownChanges","undefined","handleUpdateBody","selectedValue","editor","current","newData","getData","replaceAll","setData","selectedOption","model","change","writer","position","document","selection","getFirstPosition","insertText","CKEditorContext","context","Context","contextWatchdog","ContextWatchdog","CKEditor","ClassicEditor","config","plugins","Essentials","Bold","Italic","Paragraph","CodeBlock","Link","AutoLink","List","Table","TableToolbar","Image","ImageToolbar","ImageCaption","ImageStyle","ImageResize","LinkImage","SimpleUploadAdapter","HtmlEmbed","GeneralHtmlSupport","FullPage","Highlight","Heading","Font","FontFamily","FindAndReplace","Code","Strikethrough","Subscript","Superscript","Underline","Indent","IndentBlock","BlockQuote","HorizontalLine","ImageInsert","AutoImage","Markdown","Style","FontColor","FontSize","TextPartLanguage","Alignment","Mention","MediaEmbed","HtmlComment","RemoveFormat","SourceEditing","toolbar","items","shouldNotGroupWhenFull","definitions","element","classes","simpleUpload","uploadUrl","withCredentials","headers","Authorization","image","resizeOptions","icon","htmlSupport","allow","attributes","styles","htmlEmbed","showPreviews","onReady","handleEditorChange","_editorRef$current","currentData","previousData","previousImages","matchAll","match","currentImages","removedImages","filter","src","includes","forEach","imageUrl","RemoveImageRequest","url"],"sourceRoot":""}