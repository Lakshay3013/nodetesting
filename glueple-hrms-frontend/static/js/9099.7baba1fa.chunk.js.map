{"version":3,"file":"static/js/9099.7baba1fa.chunk.js","mappings":"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","sources":["components/admin/approvalManagement/AssignedToRenderer.js","components/admin/approvalManagement/CreateUpdateApprovalManagement.js","components/admin/approvalManagement/ApprovalManagementTable.js","components/admin/approvalManagement/ApprovalManagement.js"],"sourcesContent":["import React from 'react'\r\nimport Image from '../../commanComponent/Image'\r\nimport { Label } from '../../commanComponent'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport CustomSelect from '../../commanComponent/CustomSelect'\r\nimport { CustomError } from '../../globalComponents'\r\nconst AssignedToRenderer = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const { assignTo, handleChange, deleteAssignTo, addAssignTo, allRolesData, usersOnRoleData, assignToError,createUpdateHierarchyFormData } = props\r\n    return (\r\n        <>\r\n            {assignTo && assignTo?.map((rule, index) => (\r\n                <div className=\"row m-2 \" key={index}>\r\n                    <div className=\"row m-0 p-0\">\r\n                        <div className=\"row mt-3 col-6\">\r\n                            <div className=\"col-md-12 form-group  \">\r\n                                <Label text={t(\"labels.approvalTo\")} required={true} />\r\n\r\n                                <CustomSelect\r\n                                    data={allRolesData || []}\r\n                                    placeholder={t(\"placeholders.approvalTo\")}\r\n                                    value={rule?.role_id}\r\n                                    handleChange={(selectedOption) => handleChange(selectedOption, \"role_id\", index)}\r\n                                    name=\"role_id\"\r\n                                />\r\n\r\n                                {assignToError[index]?.role_id && (\r\n                                    <CustomError text={assignToError[index]?.role_id} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-3 col-6\">\r\n                            <div className=\"col-md-12 form-group  \">\r\n                                <Label text={t(\"labels.approvalToEmployee\")} />\r\n                                <CustomSelect\r\n                                    data={usersOnRoleData || []}\r\n                                    placeholder={t(\"placeholders.approvalToEmployee\")}\r\n                                    value={rule?.id}\r\n                                    handleChange={(selectedOption) => handleChange(selectedOption, \"id\", index)}\r\n                                    name=\"id\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end  mt-2\">\r\n                        {(createUpdateHierarchyFormData?.approvalLevel !==null && createUpdateHierarchyFormData?.approvalLevel?.value !==\"single\" && assignTo.length - 1 === index) && (\r\n                            <div className=\"me-2\" onClick={() => addAssignTo(index)}>\r\n                                <Image imgSrc={\"images/add-icon3.svg\"} altText={\"\"} width={32} />\r\n                            </div>\r\n                        )}\r\n                        {assignTo.length > 1 && (\r\n                            <div onClick={() => deleteAssignTo(index)}>\r\n                                <Image imgSrc={\"images/deletebg-Icon.svg\"} altText={\"\"} width={32} />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AssignedToRenderer\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../globalComponents'\r\nimport { createShortName } from '../../../utils/common'\r\nimport CustomSelect from '../../commanComponent/CustomSelect'\r\nimport { CustCheckbox, Input, Label } from '../../commanComponent'\r\nimport { validateSchema } from '../../../utils/ValidationHelper'\r\nimport { addUpdateHierarchySchema } from '../../../utils/ValidationSchema'\r\nimport { useSelector } from 'react-redux'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport AssignedToRenderer from './AssignedToRenderer'\r\n\r\nconst CreateUpdateApprovalManagement = (props) => {\r\n  const { addHierarchyPending, updateHierarchyPending } = useSelector(state => state?.position)\r\n  const { t } = useCustomTranslation()\r\n  const {\r\n    selectedHierarchyData,\r\n    openModel,\r\n    handleOpenClose,\r\n    allDepartments,\r\n    handleDesignationByDepartment,\r\n    allDesignations,\r\n    handleCreateUpdateHierarchy,\r\n    allPosition,\r\n    handleGetPositionByDepartmentDesignation,\r\n    categorySubcategoryData,\r\n    allRolesData,\r\n    usersOnRoleData,\r\n    getUserOnRole,\r\n    allEmployeeList\r\n  } = props\r\n  const [errors, setErrors] = useState({})\r\n  const [assignTo, setAssignTo] = useState([{ role_id: null, id: null }])\r\n  const [assignToError, setAssignToError] = useState([])\r\n  const [createUpdateHierarchyFormData, setCreateUpdateHierarchyFormData] = useState({\r\n    department: null,\r\n    designation: null,\r\n    type: null,\r\n    approvalLevel: null,\r\n    position: null,\r\n    autoApproveAssignAfter: '',\r\n    autoApproveAssignTo: null\r\n  })\r\n\r\n  const handleFromChange = (e, fieldName) => {\r\n    const name = fieldName || e.target?.name;\r\n    const { value, type, checked } = e?.target ? e.target : { value: e };\r\n    if (fieldName === \"department\") {\r\n      handleDesignationByDepartment(value?.value)\r\n      setCreateUpdateHierarchyFormData(prevState => ({\r\n        ...prevState,\r\n        [\"designation\"]: null,\r\n        [\"position\"]: null,\r\n      }));\r\n    }\r\n    if (fieldName === \"designation\") {\r\n      handleGetPositionByDepartmentDesignation(value?.value)\r\n      setCreateUpdateHierarchyFormData(prevState => ({\r\n        ...prevState,\r\n        [\"position\"]: null,\r\n      }));\r\n    }\r\n    if (fieldName === \"approvalLevel\") {\r\n      setAssignTo([{ role_id: null, id: null }])\r\n    }\r\n    setCreateUpdateHierarchyFormData(prevState => {\r\n      const updatedState = {\r\n        ...prevState,\r\n        [name]: type === 'checkbox' ? checked : value,\r\n      };\r\n      return updatedState;\r\n    });\r\n\r\n    /* Reset error for this field */\r\n    setErrors(prevErrors => ({\r\n      ...prevErrors,\r\n      [name]: undefined,\r\n    }));\r\n  };\r\n\r\n  const submitCreateUpdateHierarchy = async () => {\r\n    const validationResponse = await validateSchema(addUpdateHierarchySchema, createUpdateHierarchyFormData);\r\n    const assignedTo = handleAssignToValue(assignTo)\r\n    if (validationResponse.isValid) {\r\n      const {\r\n        department,\r\n        designation,\r\n        position,\r\n        type,\r\n        approvalLevel,\r\n        autoApproveAssignAfter,\r\n        autoApproveAssignTo,\r\n      } = createUpdateHierarchyFormData\r\n      const params = {\r\n        department_id: department?.value,\r\n        designation_id: designation?.value,\r\n        position_id: position?.value,\r\n        type: type?.value,\r\n        approval_level: approvalLevel?.value,\r\n        auto_approve_assign_after: autoApproveAssignAfter,\r\n        auto_approve_assign_to: autoApproveAssignTo?.value,\r\n        assigned_to: assignedTo || [],\r\n      }\r\n      setErrors({})\r\n      handleCreateUpdateHierarchy(params)\r\n    } else {\r\n      setErrors(validationResponse.errors);\r\n    }\r\n  }\r\n\r\n  const handleAssignToValue = (data) => {\r\n    return data\r\n      ? data\r\n        .map((item) => ({\r\n          ...item,\r\n          role_id: item?.role_id?.value || '',\r\n          id: item?.id?.value || '',\r\n        }))\r\n        .filter((item) => item.role_id !== '' || item.id !== '')\r\n      : [];\r\n  };\r\n\r\n  useEffect(() => {\r\n    return (() => {\r\n      resetForm()\r\n    })\r\n  }, [openModel])\r\n\r\n  useEffect(() => {\r\n    if (selectedHierarchyData) {\r\n      setCreateUpdateHierarchyFormData({\r\n        department: { value: selectedHierarchyData?.department_id, label: selectedHierarchyData?.department_name },\r\n        designation: { value: selectedHierarchyData?.designation_id, label: selectedHierarchyData?.designation_name },\r\n        position: { value: selectedHierarchyData?.position_id, label: selectedHierarchyData?.position_name },\r\n        type: { value: selectedHierarchyData?.type, label: selectedHierarchyData?.type },\r\n        approvalLevel: { value: selectedHierarchyData?.approval_level, label: selectedHierarchyData?.approval_level },\r\n        autoApproveAssignAfter: selectedHierarchyData?.auto_approve_assign_after,\r\n        autoApproveAssignTo: { value: selectedHierarchyData?.auto_approve_assign_to, label: selectedHierarchyData?.auto_approve_assign_to_name }\r\n      })\r\n    }\r\n  }, [selectedHierarchyData])\r\n\r\n  const resetForm = () => {\r\n    setCreateUpdateHierarchyFormData({\r\n      department: null,\r\n      designation: null,\r\n      position: null,\r\n      type: null,\r\n      approvalLevel: null,\r\n      autoApproveAssignAfter: '',\r\n      autoApproveAssignTo: null\r\n    })\r\n    setErrors({})\r\n    setAssignTo([{ role_id: null, id: null }])\r\n  }\r\n\r\n\r\n  /* CRUD Assigned To */\r\n\r\n  const handleChangeAssignTo = (e, field, index, setAssignTo, assignTo) => {\r\n    const newAssign = [...assignTo];\r\n    if (field === \"role_id\") {\r\n      getUserOnRole(e?.value)\r\n      newAssign[index][\"id\"] = null;\r\n    }\r\n    newAssign[index][field || e.target.name] = field ? e : e.target.value;\r\n    setAssignTo(newAssign); // Update the state with the modified assignTo\r\n    setAssignToError((prevErrors) => {\r\n      const updatedErrors = [...prevErrors];\r\n      updatedErrors[index] = null;\r\n      return updatedErrors;\r\n    });\r\n  };\r\n\r\n  const addAssignTo = (index, setAssignTo, assignTo) => {\r\n    const newAssign = [...assignTo];\r\n    if (!(newAssign[index][\"role_id\"])) {\r\n\r\n      setAssignToError((prevErrors) => {\r\n        const updatedErrors = [...prevErrors];\r\n        updatedErrors[index] = { role_id: \"Role ID is required\" };\r\n        return updatedErrors;\r\n      });\r\n\r\n    } else {\r\n      setAssignTo([...assignTo, { role_id: null, id: null }]);\r\n    }\r\n  };\r\n\r\n  const deleteAssignTo = (index, setAssignTo, assignTo) => {\r\n    const updatedRules = assignTo.filter((_, i) => i !== index);\r\n    setAssignTo(updatedRules);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n        tabIndex={-1}\r\n        style={{\r\n          visibility: openModel ? 'visible' : 'hidden',\r\n          width: \"800px\"\r\n        }}\r\n        id=\"interviewDetail\"\r\n      >\r\n        <div className=\"offcanvas-header\">\r\n          <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">\r\n            {selectedHierarchyData ? t(\"headings.updateHierarchy\") : t(\"headings.createHierarchy\")}\r\n          </h5>\r\n          <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n            onClick={() => handleOpenClose()}\r\n          />\r\n        </div>\r\n\r\n\r\n        <div className=\"offcanvas-body myRequest \">\r\n          <div className=\"formPanel\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group mb-3\">\r\n                  <Label text={t(\"labels.selectDepartment\")} required={true} />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-9\">\r\n                <div className=\"form-group mb-3\">\r\n                  <CustomSelect\r\n                    data={allDepartments}\r\n                    placeholder={t(\"placeholders.selectDepartment\")}\r\n                    value={createUpdateHierarchyFormData?.department || ''}\r\n                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"department\")}\r\n                    name=\"department\"\r\n                  />\r\n                  {errors?.department && (\r\n                    <CustomError text={errors.department} />\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group mb-3\">\r\n                  <Label text={t(\"labels.selectDesignation\")} />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-9\">\r\n                <div className=\"form-group mb-3\">\r\n                  <CustomSelect\r\n                    data={allDesignations}\r\n                    placeholder={t(\"placeholders.selectDesignation\")}\r\n                    value={createUpdateHierarchyFormData?.designation || ''}\r\n                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"designation\")}\r\n                    name=\"designation\"\r\n                  />\r\n                  {/* {errors?.designation && (\r\n                    <CustomError text={errors.designation} />\r\n                  )} */}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group mb-3\">\r\n                  <Label text={t(\"labels.positionName\")} />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-9\">\r\n                <div className=\"form-group mb-3\">\r\n                  <CustomSelect\r\n                    data={allPosition || []}\r\n                    placeholder=\"Select Position\"\r\n                    value={createUpdateHierarchyFormData?.position || ''}\r\n                    handleChange={(selectedOption) => handleFromChange(selectedOption, 'position')}\r\n                    name=\"position\"\r\n                  />\r\n                  {/* {errors.position_id &&\r\n                    <CustomError\r\n                      text={errors.position_id}\r\n                    />\r\n                  } */}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group mb-3\">\r\n                  <Label text={t(\"labels.type\")} required={true} />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-9\">\r\n                <div className=\"form-group mb-3\">\r\n                  <CustomSelect\r\n                    data={categorySubcategoryData?.type || []}\r\n                    placeholder={t(\"placeholders.type\")}\r\n                    value={createUpdateHierarchyFormData?.type || ''}\r\n                    handleChange={(selectedOption) => handleFromChange(selectedOption, 'type')}\r\n                    name=\"type\"\r\n                  />\r\n                  {errors.type &&\r\n                    <CustomError\r\n                      text={errors.type}\r\n                    />\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group mb-3\">\r\n                  <Label text={t(\"labels.autoApproveAssignAfter\")} required={true} />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-9\">\r\n                <div className=\"form-group mb-3\">\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder={t(\"placeholders.autoApproveAssignAfter\")}\r\n                    value={createUpdateHierarchyFormData?.autoApproveAssignAfter}\r\n                    name=\"autoApproveAssignAfter\"\r\n                    onChange={(e) => handleFromChange(e)}\r\n                  />\r\n                  {errors?.autoApproveAssignAfter && (\r\n                    <CustomError text={errors.autoApproveAssignAfter} />\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group mb-3\">\r\n                  <Label text={t(\"labels.autoApproveAssignTo\")} required={true} />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-9\">\r\n                <div className=\"form-group mb-3\">\r\n                  <CustomSelect\r\n                    data={allEmployeeList || []}\r\n                    placeholder={t(\"placeholders.autoApproveAssignTo\")}\r\n                    value={createUpdateHierarchyFormData?.autoApproveAssignTo || ''}\r\n                    handleChange={(selectedOption) => handleFromChange(selectedOption, 'autoApproveAssignTo')}\r\n                    name=\"autoApproveAssignTo\"\r\n                  />\r\n                  {errors.autoApproveAssignTo &&\r\n                    <CustomError\r\n                      text={errors.autoApproveAssignTo}\r\n                    />\r\n                  }\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <div className=\"form-group mb-3\">\r\n                  <Label text={t(\"labels.approvalLevel\")} required={true} />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-9\">\r\n                <div className=\"form-group mb-3\">\r\n                  <CustomSelect\r\n                    data={categorySubcategoryData?.approvalLevel || []}\r\n                    placeholder={t(\"placeholders.approvalLevel\")}\r\n                    value={createUpdateHierarchyFormData?.approvalLevel || ''}\r\n                    handleChange={(selectedOption) => handleFromChange(selectedOption, 'approvalLevel')}\r\n                    name=\"approvalLevel\"\r\n                  />\r\n                  {errors.approvalLevel &&\r\n                    <CustomError\r\n                      text={errors.approvalLevel}\r\n                    />\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 form-group mb-3\">\r\n              <Label text={t(\"labels.assignedTo\")} required={true} />\r\n\r\n              <AssignedToRenderer\r\n                assignTo={assignTo}\r\n                addAssignTo={(index) => addAssignTo(index, setAssignTo, assignTo)}\r\n                deleteAssignTo={(index) => deleteAssignTo(index, setAssignTo, assignTo)}\r\n                handleChange={(e, field, index) => handleChangeAssignTo(e, field, index, setAssignTo, assignTo)}\r\n                allRolesData={allRolesData}\r\n                usersOnRoleData={usersOnRoleData}\r\n                assignToError={assignToError}\r\n                createUpdateHierarchyFormData={createUpdateHierarchyFormData}\r\n\r\n              />\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"offcanvas-footer\">\r\n          <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n            <CustomButton\r\n              text={selectedHierarchyData ? t(\"btns.update\") : t(\"btns.submit\")}\r\n              classNames={\"btn btn-org-gradient\"}\r\n              handleClick={() => submitCreateUpdateHierarchy()}\r\n              isLoading={selectedHierarchyData ? updateHierarchyPending : addHierarchyPending}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateUpdateApprovalManagement","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { getBadgeColor } from '../../../utils/common'\r\nimport moment from 'moment'\r\nimport { CustomButton } from '../../globalComponents'\r\nimport { CustomTable } from '../../reuseableComponents'\r\nimport { Icon } from '../../commanComponent'\r\n\r\nconst ApprovalManagementTable = (props) => {\r\n\r\n  const {t}=useCustomTranslation()\r\n  const {\r\n      allHierarchy,\r\n      isLoading,\r\n      toggleCreateUpdateHierarchyModal,\r\n      handleHierarchyDeleteModal,\r\n      currentPage,\r\n      setCurrentPage\r\n      \r\n  } = props\r\n  const [hierarchyList, setHierarchyList] = useState(allHierarchy)\r\n\r\n\r\n  const handleUpdateHierarchy = (data) => {\r\n      toggleCreateUpdateHierarchyModal(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n      setHierarchyList(allHierarchy)\r\n  }, [allHierarchy])\r\n\r\n\r\n  const scopedSlots = useMemo(() => ({\r\n      sn: (_, index) => (\r\n          <span>{index+1}</span>\r\n      ),\r\n      \r\n      created_at: item => moment(item.created_at).format(\"DD-MM-YYYY\"),\r\n      action: item => (\r\n        <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => handleUpdateHierarchy(item)}\r\n                        >\r\n                            <Icon className={\"bi bi-pencil-square me-1\"} />Update</span>\r\n                    </li>\r\n                     <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => handleHierarchyDeleteModal(item?._id||item?.id)}\r\n                        >\r\n                            <Icon className={\"bi bi-trash me-1\"} />Delete</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n         \r\n      )\r\n  }), [toggleCreateUpdateHierarchyModal]);\r\n\r\n\r\n  const fields = [\r\n      { key: 'sn', label: 'S.N' },\r\n      { key: 'department_name', label: 'Departments' },\r\n      { key: 'designation_name', label: 'Designations' },\r\n      { key: 'type', label: 'Type' },\r\n      { key: 'approval_level', label: 'Approval Level' },\r\n      { key: 'created_at', label: 'Created Date' },\r\n      { key: 'action', label: 'Action' }\r\n  ];\r\n  return (\r\n    <CustomTable\r\n    data={hierarchyList?.data}\r\n    fields={fields}\r\n    isLoading={isLoading}\r\n    pagination={true}\r\n    currentPage={currentPage}\r\n    setCurrentPage={setCurrentPage}\r\n    totalPages={hierarchyList?.totalPages}\r\n    tableName={\"Hierarchy\"}\r\n    // onSearch={handleSearch}\r\n    scopedSlots={scopedSlots}\r\n/>\r\n  )\r\n}\r\n\r\nexport default ApprovalManagementTable","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CreateUpdateApprovalManagement from './CreateUpdateApprovalManagement';\r\nimport ApprovalManagementTable from './ApprovalManagementTable';\r\nimport ApproveRejectModal from '../../modal/ApproveRejectModal';\r\nimport { pagination } from '../../../utils/Constants.config';\r\nimport { useCustomTranslation } from '../../../translation';\r\nimport { ApprovalManagementActions, commonActions, departmentAction, designationAction, employeeActions, positionActions, rolesActions } from '../../../core/resource/actions';\r\nimport { CustomButton } from '../../globalComponents';\r\n\r\nconst ApprovalManagement = () => {\r\n  const dispatch = useDispatch()\r\n  const { t } = useCustomTranslation();\r\n\r\n  const {\r\n    addHierarchyPending,\r\n    addHierarchyRes,\r\n    addHierarchyError,\r\n\r\n    getAllHierarchyPending,\r\n    getAllHierarchyRes,\r\n    getAllHierarchyError,\r\n\r\n    updateHierarchyPending,\r\n    updateHierarchyRes,\r\n    updateHierarchyError,\r\n\r\n    deleteHierarchyPending,\r\n    deleteHierarchyRes,\r\n    deleteHierarchyError,\r\n  } = useSelector(state => state.approvalManagement)\r\n  const {\r\n    getDepartmentListRes,\r\n    getDepartmentListError,\r\n    getDepartmentListPending\r\n  } = useSelector(state => state.department)\r\n  const {\r\n    getDesignationsByDepartmentRes,\r\n    getDesignationsByDepartmentPending,\r\n    getDesignationsByDepartmentError\r\n  } = useSelector(state => state.designation)\r\n  const {\r\n    getPositionsByDepartmentDesignationError,\r\n    getPositionsByDepartmentDesignationPending,\r\n    getPositionsByDepartmentDesignationRes\r\n  } = useSelector(state => state.position)\r\n\r\n  const {\r\n    getConstantByCategorySubcategoryPending,\r\n    getConstantByCategorySubcategoryRes,\r\n    getConstantByCategorySubcategoryError,\r\n  } = useSelector(state => state.common)\r\n\r\n  const {\r\n    getAllRolesPending,\r\n    getAllRolesRes,\r\n    getAllRolesError,\r\n  } = useSelector(state => state.roles)\r\n\r\n  const {\r\n    getUserOnRolePending,\r\n    getUserOnRoleRes,\r\n    getUserOnRoleError,\r\n\r\n    getAllEmployeeRes,\r\n    getAllEmployeeError,\r\n    getAllEmployeePending\r\n\r\n  } = useSelector(state => state.employee)\r\n\r\n  const [isOpenCreateUpdateHierarchy, setIsOpenCreateUpdateHierarchy] = useState(false)\r\n  const [selectedHierarchyData, setSelectedHierarchyData] = useState('')\r\n  const [allDepartments, setAllDepartments] = useState([])\r\n  const [allDesignations, setAllDesignations] = useState([])\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [allHierarchy, setAllHierarchy] = useState({})\r\n  const [isShowDeleteHierarchyModal, setIsShowDeleteHierarchyModal] = useState(false)\r\n  const [deleteHierarchyId, setDeleteHierarchyId] = useState('')\r\n  const [departmentId, setDepartmentId] = useState('')\r\n  const [allPosition, setAllPosition] = useState([])\r\n  const [categorySubcategoryData, setCategorySubcategoryData] = useState([])\r\n  const [allRolesData, setAllRolesData] = useState([])\r\n  const [usersOnRoleData, setUsersOnRoleData] = useState([])\r\n  const [allEmployeeList, setAllEmployeeList] = useState([])\r\n\r\n\r\n  useEffect(() => {\r\n    getAllDepartments()\r\n    getConstantByCategorySubcategory()\r\n    getAllEmployee()\r\n    getAllRoles()\r\n  }, [])\r\n\r\n  /* Create Update Hierarchy */\r\n  const toggleCreateUpdateHierarchyModal = (data) => {\r\n    if (!data) {\r\n      setSelectedHierarchyData('')\r\n    } else {\r\n      setSelectedHierarchyData(data)\r\n    }\r\n    setIsOpenCreateUpdateHierarchy(!isOpenCreateUpdateHierarchy)\r\n  }\r\n\r\n  const handleCreateUpdateHierarchy = (params) => {\r\n    if (selectedHierarchyData) {\r\n      params['_id'] = selectedHierarchyData?._id || selectedHierarchyData?.id\r\n      dispatch(ApprovalManagementActions.updateHierarchyRequest(params));\r\n    }\r\n    else {\r\n      dispatch(ApprovalManagementActions.addHierarchyRequest(params));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!addHierarchyPending) {\r\n      if (addHierarchyError) {\r\n        dispatch(ApprovalManagementActions.handleClearHierarchyStore(\"HANDLE_CLEAR_ADD_HIERARCHY_STORE\"))\r\n        return;\r\n      }\r\n      if (addHierarchyRes) {\r\n        if (addHierarchyRes?.code === 200) {\r\n          dispatch(ApprovalManagementActions.handleClearHierarchyStore(\"HANDLE_CLEAR_ADD_HIERARCHY_STORE\"))\r\n          getAllHierarchy()\r\n          setIsOpenCreateUpdateHierarchy(!isOpenCreateUpdateHierarchy)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    addHierarchyRes,\r\n    addHierarchyError,\r\n    addHierarchyPending\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!updateHierarchyPending) {\r\n      if (updateHierarchyError) {\r\n        dispatch(ApprovalManagementActions.handleClearHierarchyStore(\"HANDLE_CLEAR_UPDATE_HIERARCHY_STORE\"))\r\n        return;\r\n      }\r\n      if (updateHierarchyRes) {\r\n        if (updateHierarchyRes?.code === 200) {\r\n          dispatch(ApprovalManagementActions.handleClearHierarchyStore(\"HANDLE_CLEAR_UPDATE_HIERARCHY_STORE\"))\r\n          getAllHierarchy()\r\n          setIsOpenCreateUpdateHierarchy(!isOpenCreateUpdateHierarchy)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    updateHierarchyRes,\r\n    updateHierarchyError,\r\n    updateHierarchyPending\r\n  ]);\r\n\r\n  /* Get All Departments */\r\n  const getAllDepartments = () => {\r\n    const departmentResposnse = getDepartmentListRes?.data\r\n    if (!departmentResposnse?.length) {\r\n      dispatch(departmentAction.getDepartmentListRequest());\r\n    } else {\r\n      setAllDepartments(departmentResposnse)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getDepartmentListPending) {\r\n      if (getDepartmentListError) {\r\n        return;\r\n      }\r\n      if (getDepartmentListRes) {\r\n        if (getDepartmentListRes?.code === 200) {\r\n          const departmentResponse = getDepartmentListRes?.data\r\n          setAllDepartments(departmentResponse)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getDepartmentListRes,\r\n    getDepartmentListError,\r\n    getDepartmentListPending\r\n  ]);\r\n\r\n  const handleDesignationByDepartment = (id) => {\r\n    const params = {\r\n      department_id: id\r\n    }\r\n    setDepartmentId(id)\r\n    dispatch(designationAction.getDesignationsByDepartmentRequest(params));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getDesignationsByDepartmentPending) {\r\n      if (getDesignationsByDepartmentError) {\r\n        return;\r\n      }\r\n      if (getDesignationsByDepartmentRes) {\r\n        if (getDesignationsByDepartmentRes?.code === 200) {\r\n          const designationResponse = getDesignationsByDepartmentRes?.data\r\n          setAllDesignations(designationResponse)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getDesignationsByDepartmentRes,\r\n    getDesignationsByDepartmentError,\r\n    getDesignationsByDepartmentPending\r\n  ]);\r\n\r\n\r\n  /* Get Position by Designation api calling */\r\n  const handleGetPositionByDepartmentDesignation = (id) => {\r\n    const params = {\r\n      department_id: departmentId,\r\n      designation_id: id\r\n    }\r\n    dispatch(positionActions.getPositionsByDepartmentDesignationRequest(params))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getPositionsByDepartmentDesignationPending) {\r\n      if (getPositionsByDepartmentDesignationError) {\r\n        return;\r\n      }\r\n      if (getPositionsByDepartmentDesignationRes) {\r\n        if (getPositionsByDepartmentDesignationRes?.code === 200) {\r\n          setAllPosition(getPositionsByDepartmentDesignationRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getPositionsByDepartmentDesignationRes,\r\n    getPositionsByDepartmentDesignationError,\r\n    getPositionsByDepartmentDesignationPending\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    getAllHierarchy()\r\n  }, [currentPage])\r\n\r\n  /* Get All Hierarchy Data */\r\n  const getAllHierarchy = () => {\r\n    const params = {\r\n      page: currentPage,\r\n      limit: pagination.limit,\r\n    }\r\n    dispatch(ApprovalManagementActions.getAllHierarchyRequest(params));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getAllHierarchyPending) {\r\n      if (getAllHierarchyError) {\r\n        return;\r\n      }\r\n      if (getAllHierarchyRes) {\r\n        if (getAllHierarchyRes?.code === 200) {\r\n          setAllHierarchy(getAllHierarchyRes?.data)\r\n\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllHierarchyRes,\r\n    getAllHierarchyError,\r\n    getAllHierarchyPending\r\n  ]);\r\n\r\n\r\n  /*  Delete Hierarchy   */\r\n  const handleHierarchyDeleteModal = (id) => {\r\n    if (id) {\r\n      setDeleteHierarchyId(id)\r\n    }\r\n    setIsShowDeleteHierarchyModal(!isShowDeleteHierarchyModal)\r\n  }\r\n\r\n  const handleDeleteHierarchy = (type) => {\r\n    if (type) {\r\n      const params = {\r\n        _id: deleteHierarchyId\r\n      }\r\n\r\n      dispatch(ApprovalManagementActions?.deleteHierarchyRequest(params))\r\n\r\n    } else {\r\n      handleHierarchyDeleteModal()\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!deleteHierarchyPending) {\r\n      if (deleteHierarchyError) {\r\n        dispatch(ApprovalManagementActions.handleClearHierarchyStore(\"HANDLE_CLEAR_DELETE_HIERARCHY_STORE\"))\r\n        return;\r\n      }\r\n      if (deleteHierarchyRes) {\r\n        if (deleteHierarchyRes?.code === 200) {\r\n          handleHierarchyDeleteModal()\r\n          if (currentPage > 1 && allHierarchy?.data?.length === 1) {\r\n            setCurrentPage((pre => pre -= 1))\r\n          } else {\r\n            getAllHierarchy()\r\n          }\r\n          dispatch(ApprovalManagementActions.handleClearHierarchyStore(\"HANDLE_CLEAR_DELETE_HIERARCHY_STORE\"))\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    deleteHierarchyRes,\r\n    deleteHierarchyError,\r\n    deleteHierarchyPending\r\n  ]);\r\n\r\n  /* Get Constant By Category Subcategory */\r\n  const getConstantByCategorySubcategory = () => {\r\n    const payload = {\r\n      category: \"approvalHierarchyConstant\",\r\n      subcategory: ''\r\n    }\r\n    dispatch(commonActions.getConstantByCategorySubcategoryRequest(payload))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getConstantByCategorySubcategoryPending) {\r\n      if (getConstantByCategorySubcategoryError) {\r\n\r\n        return;\r\n      }\r\n      if (getConstantByCategorySubcategoryRes) {\r\n        if (getConstantByCategorySubcategoryRes?.code === 200) {\r\n          setCategorySubcategoryData(getConstantByCategorySubcategoryRes?.data)\r\n\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getConstantByCategorySubcategoryRes,\r\n    getConstantByCategorySubcategoryError,\r\n    getConstantByCategorySubcategoryPending\r\n  ]);\r\n\r\n\r\n  /* Get All Roles  */\r\n  const getAllRoles = () => {\r\n    dispatch(rolesActions.getAllRolesRequest())\r\n  }\r\n  useEffect(() => {\r\n    if (!getAllRolesPending) {\r\n      if (getAllRolesError) {\r\n        return;\r\n      }\r\n      if (getAllRolesRes) {\r\n        if (getAllRolesRes?.code === 200) {\r\n          setAllRolesData(getAllRolesRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllRolesRes,\r\n    getAllRolesError,\r\n    getAllRolesPending\r\n  ]);\r\n\r\n  /* Get User On Role  */\r\n  const getUserOnRole = (roleId) => {\r\n    const payload = {\r\n      role_id: roleId\r\n    }\r\n    dispatch(employeeActions.getUserOnRoleRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!getUserOnRolePending) {\r\n      if (getUserOnRoleError) {\r\n        return;\r\n      }\r\n      if (getUserOnRoleRes) {\r\n        if (getUserOnRoleRes?.code === 200) {\r\n          setUsersOnRoleData(getUserOnRoleRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getUserOnRoleRes,\r\n    getUserOnRoleError,\r\n    getUserOnRolePending\r\n  ]);\r\n\r\n  /* Get All Employee List*/\r\n  const getAllEmployee = () => {\r\n    dispatch(employeeActions.getAllEmployeeRequest())\r\n  }\r\n  useEffect(() => {\r\n    if (!getAllEmployeePending) {\r\n      if (getAllEmployeeError) {\r\n        return;\r\n      }\r\n      if (getAllEmployeeRes) {\r\n        if (getAllEmployeeRes?.code === 200) {\r\n\r\n          setAllEmployeeList(getAllEmployeeRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllEmployeeRes,\r\n    getAllEmployeeError,\r\n    getAllEmployeePending\r\n  ]);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex  justify-content-end \">\r\n        <CustomButton\r\n          classNames={\"btn btn-primary gradientBg\"}\r\n          handleClick={() => toggleCreateUpdateHierarchyModal()}\r\n          text={t(\"btns.createNewHierarchy\")}\r\n        />\r\n      </div>\r\n      <CreateUpdateApprovalManagement\r\n        openModel={isOpenCreateUpdateHierarchy}\r\n        handleOpenClose={toggleCreateUpdateHierarchyModal}\r\n        handleCreateUpdateHierarchy={handleCreateUpdateHierarchy}\r\n        selectedHierarchyData={selectedHierarchyData}\r\n        allDepartments={allDepartments}\r\n        handleDesignationByDepartment={handleDesignationByDepartment}\r\n        allDesignations={allDesignations}\r\n        handleGetPositionByDepartmentDesignation={handleGetPositionByDepartmentDesignation}\r\n        allPosition={allPosition}\r\n        categorySubcategoryData={categorySubcategoryData}\r\n        allRolesData={allRolesData}\r\n        usersOnRoleData={usersOnRoleData}\r\n        getUserOnRole={getUserOnRole}\r\n        allEmployeeList={allEmployeeList}\r\n      />\r\n      <ApprovalManagementTable\r\n        toggleCreateUpdateHierarchyModal={toggleCreateUpdateHierarchyModal}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        allHierarchy={allHierarchy}\r\n        handleHierarchyDeleteModal={handleHierarchyDeleteModal}\r\n        isLoading={getAllHierarchyPending}\r\n\r\n      />\r\n\r\n      {isShowDeleteHierarchyModal && (\r\n        <ApproveRejectModal\r\n          onApproveReject={handleDeleteHierarchy}\r\n          isShow={isShowDeleteHierarchyModal}\r\n          desc={t(\"alerts.deletePopup.desc\").replace('$1', \"Hierarchy\")}\r\n          btnRightLoading={deleteHierarchyPending}\r\n          btnTextRight={t(\"btns.delete\")}\r\n          btnTextLeft={t(\"btns.cancel\")}\r\n\r\n        />)\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ApprovalManagement"],"names":["props","t","useCustomTranslation","assignTo","handleChange","deleteAssignTo","addAssignTo","allRolesData","usersOnRoleData","assignToError","createUpdateHierarchyFormData","_jsx","_Fragment","children","map","rule","index","_assignToError$index","_assignToError$index2","_createUpdateHierarch","_jsxs","className","Label","text","required","CustomSelect","data","placeholder","value","role_id","selectedOption","name","CustomError","id","approvalLevel","length","onClick","Image","imgSrc","altText","width","addHierarchyPending","updateHierarchyPending","useSelector","state","position","selectedHierarchyData","openModel","handleOpenClose","allDepartments","handleDesignationByDepartment","allDesignations","handleCreateUpdateHierarchy","allPosition","handleGetPositionByDepartmentDesignation","categorySubcategoryData","getUserOnRole","allEmployeeList","errors","setErrors","useState","setAssignTo","setAssignToError","setCreateUpdateHierarchyFormData","department","designation","type","autoApproveAssignAfter","autoApproveAssignTo","handleFromChange","e","fieldName","_e$target","target","checked","prevState","prevErrors","undefined","handleAssignToValue","item","_item$role_id","_item$id","filter","useEffect","resetForm","department_id","label","department_name","designation_id","designation_name","position_id","position_name","approval_level","auto_approve_assign_after","auto_approve_assign_to","auto_approve_assign_to_name","tabIndex","style","visibility","Input","onChange","AssignedToRenderer","updatedErrors","_","i","field","handleChangeAssignTo","newAssign","CustomButton","classNames","handleClick","async","validationResponse","validateSchema","addUpdateHierarchySchema","assignedTo","isValid","params","assigned_to","submitCreateUpdateHierarchy","isLoading","allHierarchy","toggleCreateUpdateHierarchyModal","handleHierarchyDeleteModal","currentPage","setCurrentPage","hierarchyList","setHierarchyList","scopedSlots","useMemo","sn","created_at","moment","format","action","Icon","_id","CustomTable","fields","key","pagination","totalPages","tableName","ApprovalManagement","dispatch","useDispatch","addHierarchyRes","addHierarchyError","getAllHierarchyPending","getAllHierarchyRes","getAllHierarchyError","updateHierarchyRes","updateHierarchyError","deleteHierarchyPending","deleteHierarchyRes","deleteHierarchyError","approvalManagement","getDepartmentListRes","getDepartmentListError","getDepartmentListPending","getDesignationsByDepartmentRes","getDesignationsByDepartmentPending","getDesignationsByDepartmentError","getPositionsByDepartmentDesignationError","getPositionsByDepartmentDesignationPending","getPositionsByDepartmentDesignationRes","getConstantByCategorySubcategoryPending","getConstantByCategorySubcategoryRes","getConstantByCategorySubcategoryError","common","getAllRolesPending","getAllRolesRes","getAllRolesError","roles","getUserOnRolePending","getUserOnRoleRes","getUserOnRoleError","getAllEmployeeRes","getAllEmployeeError","getAllEmployeePending","employee","isOpenCreateUpdateHierarchy","setIsOpenCreateUpdateHierarchy","setSelectedHierarchyData","setAllDepartments","setAllDesignations","setAllHierarchy","isShowDeleteHierarchyModal","setIsShowDeleteHierarchyModal","deleteHierarchyId","setDeleteHierarchyId","departmentId","setDepartmentId","setAllPosition","setCategorySubcategoryData","setAllRolesData","setUsersOnRoleData","setAllEmployeeList","getAllDepartments","getConstantByCategorySubcategory","getAllEmployee","getAllRoles","ApprovalManagementActions","handleClearHierarchyStore","code","getAllHierarchy","departmentResposnse","departmentAction","getDepartmentListRequest","departmentResponse","designationResponse","page","limit","getAllHierarchyRequest","_allHierarchy$data","pre","commonActions","getConstantByCategorySubcategoryRequest","category","subcategory","rolesActions","getAllRolesRequest","employeeActions","getAllEmployeeRequest","CreateUpdateApprovalManagement","updateHierarchyRequest","addHierarchyRequest","designationAction","getDesignationsByDepartmentRequest","positionActions","getPositionsByDepartmentDesignationRequest","roleId","payload","getUserOnRoleRequest","ApprovalManagementTable","ApproveRejectModal","onApproveReject","deleteHierarchyRequest","isShow","desc","replace","btnRightLoading","btnTextRight","btnTextLeft"],"sourceRoot":""}