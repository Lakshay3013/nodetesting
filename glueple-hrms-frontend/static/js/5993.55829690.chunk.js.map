{"version":3,"file":"static/js/5993.55829690.chunk.js","mappings":"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","sources":["components/commanComponent/BackIcon.js","components/payrollAdmin/payRuns/arrears/Arrears.js","components/payrollAdmin/payRuns/arrears/AddArrears.js","components/payrollAdmin/payRuns/loans/InstallmentTable.js","components/payrollAdmin/payRuns/loans/Loans.js","components/payrollAdmin/payRuns/loans/AddLoans.js","components/payrollAdmin/payRuns/payrollHistory/payrollHistory.js","components/payrollAdmin/payRuns/RunAttendance.js/RunAttendance.js","components/payrollAdmin/payRuns/attendanceTracking/EmpAttendanceTrackingTable.js","components/payrollAdmin/payRuns/attendanceTracking/AttendanceFilters.js","components/payrollAdmin/payRuns/attendanceTracking/AttendanceTracking.js","components/payrollAdmin/payRuns/PayRuns.js","components/payrollAdmin/payRuns/RunAttendance.js/CreatePayrun.js","components/reuseableComponents/customTable/CustomTableWithSubTable.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst BackIcon = () => {\r\n    return (\r\n        <div >\r\n            <svg\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                x={0}\r\n                y={0}\r\n                viewBox=\"0 0 512 512\"\r\n                xmlSpace=\"preserve\"\r\n                className=\"icon icon-xlg me-2\"\r\n                style={{\r\n                    height: \"23px\",\r\n                    width: \"23px\",\r\n                    cursor: \"pointer\",\r\n                }}\r\n            >\r\n                <circle id=\"Oval-3\" opacity=\".1\" fill=\"#2B76D2\" cx={256} cy={256} r={256} />\r\n                <path\r\n                    fill=\"#2B76D2\"\r\n                    d=\"M277.3 362.7c-5.3 0-10.6-2-14.7-5.9l-85.3-81.5c-4.1-3.9-6.5-9.3-6.6-15-.1-5.7 2-11.1 5.9-15.2l85.3-89.1c8.1-8.5 21.7-8.8 30.2-.7 8.5 8.1 8.8 21.6.7 30.2l-70.6 73.7 69.9 66.8c8.5 8.1 8.8 21.6.7 30.1-4.2 4.4-9.8 6.6-15.5 6.6z\"\r\n                />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackIcon\r\n","import React, { useMemo, useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport CustomTable from '../../../reuseableComponents/customTable/CustomTable'\r\nimport CustomTableWithSubTable from '../../../reuseableComponents/customTable/CustomTableWithSubTable'\r\n\r\nconst Arrears = (props) => {\r\n    const { toggleAddArrearsModal, allArrearsList, isLoading, setCurrentPage, currentPage } = props\r\n    const { t } = useCustomTranslation()\r\n    const [isShowSubMenu, setIsShowSubMenu] = useState([]);\r\n    const subTableFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'emp_code', label: 'Employee Code ' },\r\n        { key: 'name', label: 'Employee Name' },\r\n        { key: 'pay_days', label: 'Pay Days' },\r\n        { key: 'bonus', label: 'Bonus' },\r\n        { key: 'total_employee', label: 'Employee Contribution' },\r\n        { key: 'total_employer', label: ' Employer Contribution' },\r\n        { key: 'gross', label: 'Gross' },\r\n        { key: 'ctc', label: 'CTC' },\r\n    ];\r\n\r\n    const arrearsEmployeeFields = [\r\n        { key: 'sn', label: 'S.N' ,width: '20%' },\r\n        { key: 'name', label: 'Arrear Name',width: '30%'  },\r\n        { key: 'arrear_for', label: 'Arrear For',width: '20%'  },\r\n        { key: 'year_mon', label: 'Pay Month',width: '20%'  },\r\n        { key: 'action', label: 'Action',width: '20%'  },\r\n        { key: 'sub_table', label: '',width: '20%'  },\r\n\r\n    ]\r\n    const arrearsEmployeeScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n      \r\n        pay_days: (item, index) => (\r\n            <span>{item?.present}</span>\r\n        ),\r\n        bonus: (item, index) => (\r\n            <span>{item?.bonus?.real}</span>\r\n        ),\r\n        total_employee: (item, index) => (\r\n            <span>{item?.total_employee?.real}</span>\r\n        ),\r\n        total_employer: (item, index) => (\r\n            <span>{item?.total_employer?.real}</span>\r\n        ),\r\n        gross: (item, index) => (\r\n            <span>{item?.gross?.real}</span>\r\n        ),\r\n\r\n        ctc: (item, index) => (\r\n            <span>{item?.ctc?.real}</span>\r\n        ),\r\n\r\n\r\n\r\n        action: (item,index) => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li className=\"dropdown-item\" onClick={() => toggleAddArrearsModal(item)} >\r\n\r\n                        Update Arrear\r\n                    </li>\r\n\r\n                    <li className=\"dropdown-item\" onClick={() => handleSubMenuToggle(index)} >\r\n\r\n                        Employee Detail\r\n                    </li>\r\n\r\n                </ul>\r\n            </div>\r\n        ),\r\n        sub_table: (item) => (\r\n            <CustomTable\r\n            data={item?.employees}\r\n            fields={subTableFields}\r\n            // isLoading={isLoading}\r\n            // pagination={true}\r\n            currentPage={currentPage}\r\n            setCurrentPage={(pageNo) => setCurrentPage(pageNo, \"addArrears\")}\r\n            totalPages={allArrearsList?.totalPages}\r\n            tableName={\"Employees\"}\r\n            // onSearch={handleSearch}\r\n            isHeader={true}\r\n            // tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n            scopedSlots={arrearsEmployeeScopedSlots}\r\n        />\r\n          ),\r\n    }), []);\r\n\r\n    const handleSubMenuToggle = (index) => {\r\n        if (isShowSubMenu.includes(index)) {\r\n            setIsShowSubMenu(isShowSubMenu.filter((i) => i !== index));\r\n        } else {\r\n            setIsShowSubMenu([...isShowSubMenu, index]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Arrears</h3>\r\n                <CustomButton\r\n                    classNames={\"btn btn-primary gradientBg\"}\r\n                    handleClick={() => toggleAddArrearsModal()}\r\n                    text={\"Add Arrear\"}\r\n                />\r\n            </div>\r\n\r\n\r\n            {/* <CustomTable\r\n                data={allArrearsList?.data}\r\n                fields={arrearsEmployeeFields}\r\n                isLoading={isLoading}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={(pageNo) => setCurrentPage(pageNo, \"addArrears\")}\r\n                totalPages={allArrearsList?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={arrearsEmployeeScopedSlots}\r\n            /> */}\r\n            <CustomTableWithSubTable\r\n                data={allArrearsList?.data}\r\n                fields={arrearsEmployeeFields}\r\n                isLoading={isLoading}\r\n                scopedSlots={arrearsEmployeeScopedSlots}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                totalPages={allArrearsList?.totalPages}\r\n                setCurrentPage={(pageNo) => setCurrentPage(pageNo, \"addArrears\")}\r\n                // tableName=\"My Custom Table\"\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                isShowSubMenu={isShowSubMenu}\r\n            />\r\n\r\n\r\n\r\n\r\n\r\n            {/* <CustomButton\r\n                classNames={\"btn btn-primary gradientBg mt-2\"}\r\n                // handleClick={() => ()}\r\n                text={\"Save\"}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Arrears\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { Input, Label, Textarea } from '../../../commanComponent'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport { addArrearsSchema } from '../../../../utils/ValidationSchema'\r\n\r\nconst AddArrears = (props) => {\r\n    const { isOpen, toggleOpenClose, allEmployeeList, handleAddArrears, selectedArrear } = props\r\n    const { addArrearsPending } = props\r\n    const { t } = useCustomTranslation()\r\n    // const [payDays, setPayDays] = useState('')\r\n    const [errors, setErrors] = useState({})\r\n    const [selectedEmployees, setSelectedEmployees] = useState('')\r\n    const [arrearFormData, setArrearFormData] = useState({\r\n        arrearName: '',\r\n        arrearFor: '',\r\n        payMonth: '',\r\n        description: '',\r\n        employees: [],\r\n\r\n    })\r\n    const addArrearsFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'pay_days', label: 'Pay Days' },\r\n        { key: 'emp_code', label: 'Emp Code' },\r\n        { key: 'name', label: 'Emp Name' },\r\n        { key: 'department_name', label: 'Department  ' },\r\n        { key: 'designation_name', label: 'Designation' },\r\n    ];\r\n\r\n    const addEmployeesPayDays = (e, item) => {\r\n        const { value } = e?.target;\r\n        setArrearFormData((prev) => ({\r\n            ...prev,\r\n            employees: prev.employees.map((emp) =>\r\n                emp?.value === item?.value\r\n                    ? { ...emp, pay_days: value }\r\n                    : emp\r\n            ),\r\n        }));\r\n    };\r\n\r\n\r\n    const addArrearsScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        pay_days: (item, index) => (\r\n            <span>\r\n\r\n                <Input\r\n                    type=\"number\"\r\n                    value={item?.pay_days || ''}\r\n                    name=\"pay_days\"\r\n                    onChange={(e) => addEmployeesPayDays(e, item)}\r\n                />\r\n            </span>\r\n        ),\r\n\r\n\r\n    }), [arrearFormData]);\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n        setArrearFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n        if (\"employees\" == name) {\r\n            setSelectedEmployees(value)\r\n        }\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitFormData = async () => {\r\n        const validationResponse = await validateSchema(addArrearsSchema, arrearFormData);\r\n        if (validationResponse.isValid) {\r\n            const payload = {\r\n                name: arrearFormData?.arrearName,\r\n                description: arrearFormData?.description,\r\n                year_mon: arrearFormData?.payMonth,\r\n                arrear_for: arrearFormData?.arrearFor,\r\n                employees: arrearFormData?.employees\r\n            }\r\n            handleAddArrears(payload)\r\n\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (selectedArrear) {\r\n            setArrearFormData({\r\n                arrearName:selectedArrear?.name,\r\n                arrearFor: selectedArrear?.arrear_for,\r\n                payMonth: selectedArrear?.year_mon,\r\n                description:selectedArrear?.description,\r\n                employees: selectedArrear?.employees,\r\n            })\r\n        }\r\n    }, [selectedArrear])\r\n    return (<>\r\n        <div className={`offcanvas offcanvas-end creatNewTicketOff ${isOpen ? 'show' : ''}`} tabIndex={-1}\r\n            style={{ visibility: isOpen ? 'visible' : 'hidden', width: \"800px\" }}\r\n        >\r\n            <div className=\"offcanvas-header\">\r\n                <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\"> {selectedArrear ?\"Update\":\"Add\"} Arrears </h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                    onClick={() => toggleOpenClose()}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"offcanvas-body\">\r\n                <div className=\"formPanel\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.arrearName\")} required={true} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.arrearName\")}\r\n                                    value={arrearFormData?.arrearName || ''}\r\n                                    name=\"arrearName\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.arrearName && (\r\n                                    <CustomError text={errors.arrearName} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.arrearFor\")} required={true} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Input\r\n                                    type=\"month\"\r\n                                    value={arrearFormData?.arrearFor || ''}\r\n                                    name=\"arrearFor\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.arrearFor && (\r\n                                    <CustomError text={errors.arrearFor} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.payMonth\")} required={true} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Input\r\n                                    type=\"month\"\r\n                                    value={arrearFormData?.payMonth || ''}\r\n                                    name=\"payMonth\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.payMonth && (\r\n                                    <CustomError text={errors.payMonth} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.description\")} required={true} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Textarea\r\n                                    name=\"description\"\r\n                                    value={arrearFormData?.description}\r\n                                    placeholder={t(\"placeholders.description\")}\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.description && (\r\n                                    <CustomError text={errors.description} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.employee\")} required={true} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <CustomSelect\r\n                                    data={allEmployeeList}\r\n                                    placeholder={t(\"placeholders.employee\")}\r\n                                    value={arrearFormData?.employees || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"employees\")}\r\n                                    name=\"employees\"\r\n                                    isMulti={true}\r\n                                />\r\n                                {errors?.employees && (\r\n                                    <CustomError text={errors.employees} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <CustomTable\r\n                        data={arrearFormData?.employees}\r\n                        fields={addArrearsFields}\r\n                        // isLoading={isLoading}\r\n                        pagination={true}\r\n                        // currentPage={currentPage}\r\n                        // setCurrentPage={setCurrentPage}\r\n                        // totalPages={depList?.totalPages}\r\n                        // tableName={\"\"}\r\n                        // onSearch={handleSearch}\r\n                        isHeader={false}\r\n                        tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                        scopedSlots={addArrearsScopedSlots}\r\n                    />\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"offcanvas-footer\">\r\n                <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                    <CustomButton\r\n                        text={selectedArrear ?\"Update\":\"Add\"}\r\n                        classNames={\"btn btn-org-gradient\"}\r\n                        handleClick={() => submitFormData()}\r\n                        isLoading={addArrearsPending}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div></div>\r\n        {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default AddArrears\r\n\r\n\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { Input } from '../../../commanComponent'\r\n\r\nconst InstallmentTable = (props) => {\r\n    const {  installmentData, setInstallmentData,loanData } = props\r\n    const installmentFields = [\r\n        { key: 'installment', label: 'Installment' },\r\n        { key: 'date', label: 'Date' },\r\n        { key: 'amount', label: 'Amount' },\r\n    ]\r\n\r\n    const calculateEMIAfterChanges = (amount, index) => {\r\n        let temp = installmentData;\r\n        temp[index]['amount'] = parseFloat(amount).toFixed(2);\r\n        let remEMI;\r\n        let totalEMI = 0;\r\n        temp.forEach((data, index1) => {\r\n          totalEMI = totalEMI + parseFloat(data['amount']);\r\n          if (index1 === index) {\r\n            remEMI =\r\n              parseFloat(loanData?.amount) - totalEMI >= 0\r\n                ? parseFloat(loanData?.amount) - totalEMI\r\n                : 0;\r\n            remEMI = remEMI / (temp.length - 1 - index).toFixed(2);\r\n          } else if (index1 > index) {\r\n            data['amount'] = JSON.stringify(remEMI);\r\n          }\r\n          return data;\r\n        });\r\n    \r\n        setInstallmentData(temp);\r\n      };\r\n    const installmentScopedSlots = useMemo(() => ({\r\n        amount: (item, index) => (\r\n            <span> \r\n                <Input\r\n                type=\"number\"\r\n                className=\"form-control border border-black text-center\"\r\n                id=\"instl_amt\"\r\n                placeholder=\"Installment Amount\"\r\n                onChange={e =>\r\n                    calculateEMIAfterChanges(e.target.value, index)\r\n                }\r\n                value={parseFloat(item?.amount)}\r\n            />\r\n            </span>\r\n        ),\r\n    }), [installmentData]);\r\n    return (\r\n        <React.Fragment>\r\n            <div className='text-center'>\r\n            <CustomTable\r\n                data={installmentData}\r\n                fields={installmentFields}\r\n                // isLoading={isLoading}\r\n                pagination={true}\r\n                // currentPage={currentPage}\r\n                // setCurrentPage={setCurrentPage}\r\n                // totalPages={depList?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\",marginTop:\"0px !important\" }}\r\n                scopedSlots={installmentScopedSlots}\r\n            />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default InstallmentTable\r\n","import React, { useMemo, useState } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport InstallmentTable from './InstallmentTable';\r\nconst loan = [\r\n    {\r\n        emp_id: \"qd2654\",\r\n        name: \"Mohd Sarfaraz\",\r\n        email: \"sarfaraz1@qdegrees.com\",\r\n        department: \"IT\",\r\n        loan_type: \"Personal Loan\",\r\n        amount: \"100\",\r\n        emi_duration: \"3\",\r\n        effective_date: \"2024-11-21\",\r\n        end_date: \"2025-01-21\",\r\n    },\r\n    {\r\n        emp_id: \"qd2281\",\r\n        name: \"Chandan Kumar\",\r\n        email: \"Candan@qdegrees.com\",\r\n        department: \"IT\",\r\n        loan_type: \"Car Loan\",\r\n        amount: \"10000\",\r\n        emi_duration: \"10\",\r\n        effective_date: \"2024-12-01\",\r\n        end_date: \"2025-08-30\",\r\n    },\r\n\r\n]\r\nconst installments = [\r\n    {\r\n        installment: 1,\r\n        date: \"2024-11-21\",\r\n        amount: \"33.33\",\r\n    },\r\n    {\r\n        installment: 2,\r\n        date: \"2024-12-21\",\r\n        amount: \"33.33\",\r\n    },\r\n    {\r\n        installment: 3,\r\n        date: \"2025-01-21\",\r\n        amount: \"33.33\",\r\n    },\r\n];\r\nconst Loans = (props) => {\r\n    const { toggleAddLoanModal } = props\r\n    const [installmentData, setInstallmentData] = useState(installments)\r\n\r\n    const loanFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'name', label: 'Employee Name' },\r\n        { key: 'emp_id', label: 'Employee ID' },\r\n        { key: 'department', label: 'Department' },\r\n        { key: 'loan_type', label: 'Loan Type' },\r\n        { key: 'loan_amount', label: 'Loan Amount' },\r\n        { key: 'emi_duration', label: 'EMI Duration' },\r\n        { key: 'effective_date', label: 'Effective Date' },\r\n        { key: 'end_date', label: 'End Date' },\r\n        { key: 'action', label: 'Action' },\r\n    ]\r\n\r\n    const loanScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                        onClick={() => toggleAddLoanModal(item?._id ,\"edit\")} \r\n                        >\r\n                            View  Details</span>\r\n                    </li>\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n\r\n    }), []);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Loans</h3>\r\n                <CustomButton\r\n                    classNames={\"btn btn-primary gradientBg\"}\r\n                    handleClick={() => toggleAddLoanModal()}\r\n                    text={\"Add Loan\"}\r\n                />\r\n            </div>\r\n            <CustomTable\r\n                data={loan}\r\n                fields={loanFields}\r\n                // isLoading={isLoading}\r\n                pagination={true}\r\n                // currentPage={currentPage}\r\n                // setCurrentPage={setCurrentPage}\r\n                // totalPages={depList?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={loanScopedSlots}\r\n            />\r\n            {/* {installmentData && installmentData?.length > 0 &&\r\n                <div className=\"col-12\">\r\n                    <div className='card text-center p-1 m-o' style={{ backgroundColor: \"#3c82e9\", color: \"white\" }}> <h6 >Edit Installment </h6></div>\r\n                    <InstallmentTable\r\n                        installmentData={installmentData}\r\n                        setInstallmentData={setInstallmentData}\r\n                        loanData={loan}\r\n                    />\r\n                </div>} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loans\r\n","import React, { useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { Input, Label } from '../../../commanComponent'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport moment from 'moment'\r\nimport InstallmentTable from './InstallmentTable'\r\nconst durationOptions = [\r\n    { label: \"3 Months\", value: 3 },\r\n    { label: \"4 Months\", value: 4 },\r\n    { label: \"5 Months\", value: 5 },\r\n    { label: \"6 Months\", value: 6 },\r\n    { label: \"7 Months\", value: 7 },\r\n    { label: \"8 Months\", value: 8 },\r\n    { label: \"1 Year\", value: 12 },\r\n    { label: \"2 Years\", value: 24 },\r\n    { label: \"3 Years\", value: 36 },\r\n];\r\nconst AddLoans = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const { toggleOpenClose, isOpen } = props\r\n\r\n    const [loanFormData, setLoanFormData] = useState({\r\n        employee: null,\r\n        loanType: null,\r\n        amount: '',\r\n        emiDuration: null,\r\n        effectiveDate: '',\r\n        endDate: '',\r\n    })\r\n    const [errors, setErrors] = useState('')\r\n    const [installmentData, setInstallmentData] = useState([])\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n        if (name === \"effectiveDate\") {\r\n            calculateEndDate(value)\r\n        }\r\n        if (name === \"emiDuration\") {\r\n            setLoanFormData(prevState => ({\r\n                ...prevState,\r\n                [\"effectiveDate\"]: '',\r\n                [\"endDate\"]: '',\r\n            }));\r\n            setInstallmentData([])\r\n        }\r\n        if (name === \"amount\") {\r\n            setLoanFormData(prevState => ({\r\n                ...prevState,\r\n                [\"emiDuration\"]: null,\r\n                [\"effectiveDate\"]: '',\r\n                [\"endDate\"]: '',\r\n            }));\r\n            setInstallmentData([])\r\n        }\r\n        setLoanFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n        // Reset error for this field\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n    const calculateEndDate = effectiveDate => {\r\n        var newDate = moment(effectiveDate)\r\n            .add(loanFormData?.emiDuration?.value - 1, 'M')\r\n            .format('YYYY-MM-DD');\r\n        newDate = moment(newDate).format('YYYY-MM-DD');\r\n        setLoanFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [\"endDate\"]: newDate,\r\n            };\r\n            return updatedState;\r\n        });\r\n        calculateEmiInstallment(effectiveDate);\r\n    };\r\n\r\n    const calculateEmiInstallment = (effectiveDate) => {\r\n        let duration = parseInt(loanFormData?.emiDuration?.value);\r\n        let emi = parseFloat(loanFormData?.amount / duration).toFixed(2);\r\n        let temp = [];\r\n        let date = moment(effectiveDate).format('YYYY-MM-DD');\r\n        for (let i = 1; i <= duration; i++) {\r\n            temp.push({ installment: i, date: date, amount: emi, });\r\n            let len = temp.length;\r\n            //   subCompanyDetails?.length && subCompanyDetails?.map((item,index)=>{\r\n            //     if(index === 0){\r\n            //     temp[len-1].subcompany.push({[item.value]:100});\r\n            //     }else{\r\n            //       temp[len-1].subcompany.push({[item.value]:0});\r\n            //     }\r\n            //   })\r\n            date = moment(date)\r\n                .add(1, 'month')\r\n                .format('YYYY-MM-DD');\r\n        }\r\n        console.log(temp, \"temporary Installment ................................\")\r\n        setInstallmentData(temp);\r\n    };\r\n\r\n\r\n\r\n\r\n    return (<>\r\n        <div className={`offcanvas offcanvas-end creatNewTicketOff ${isOpen ? 'show' : ''}`} tabIndex={-1}\r\n            style={{\r\n                visibility: isOpen ? 'visible' : 'hidden',\r\n                width: \"800px\"\r\n            }}\r\n        >\r\n            <div className=\"offcanvas-header\">\r\n                <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\"> Add Loans </h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                    onClick={() => toggleOpenClose()}\r\n                />\r\n            </div>\r\n            <div className=\"offcanvas-body\">\r\n                <div className=\"formPanel\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.employee\")} required={true} />\r\n                                <CustomSelect\r\n                                    data={[]}\r\n                                    placeholder={t(\"placeholders.employee\")}\r\n                                    value={loanFormData?.employee || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"employee\")}\r\n                                    name=\"employee\"\r\n                                />\r\n                            </div>\r\n                            {errors?.employee && (\r\n                                <CustomError text={errors.employee} />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.loanType\")} />\r\n                                <CustomSelect\r\n                                    data={[]}\r\n                                    placeholder={t(\"placeholders.loanType\")}\r\n                                    value={loanFormData?.loanType || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"loanType\")}\r\n                                    name=\"loanType\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.amount\")} required={true} />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.amount\")}\r\n                                    value={loanFormData?.amount}\r\n                                    name=\"amount\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.amount && (\r\n                                    <CustomError text={errors.amount} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.emiDuration\")} required={true} />\r\n\r\n                                <CustomSelect\r\n                                    data={durationOptions}\r\n                                    placeholder={t(\"placeholders.emiDuration\")}\r\n                                    value={loanFormData?.emiDuration || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"emiDuration\")}\r\n                                    name=\"emiDuration\"\r\n                                />\r\n                            </div>\r\n                            {errors?.emiDuration && (\r\n                                <CustomError text={errors.emiDuration} />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.effectiveDate\")} required={true} />\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    value={loanFormData?.effectiveDate}\r\n                                    isDisabled={!(loanFormData?.emiDuration) ? true : false}\r\n                                    name=\"effectiveDate\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n\r\n                            </div>\r\n                            {errors?.effectiveDate && (\r\n                                <CustomError text={errors.effectiveDate} />\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.endDate\")} required={true} />\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    value={loanFormData?.endDate}\r\n                                    isDisabled={true}\r\n                                    name=\"endDate\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <hr/>\r\n                       {installmentData &&installmentData?.length>0 &&\r\n                       <div className=\"col-12\">\r\n                            <div className='card text-center p-1 m-o' style={{backgroundColor:\"#3c82e9\",color:\"white\"}}> <h6 >Pending Installment </h6></div>\r\n                            <InstallmentTable\r\n                            installmentData={installmentData}\r\n                            setInstallmentData={setInstallmentData}\r\n                            loanData={loanFormData}\r\n                            />\r\n                        </div>}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"offcanvas-footer\">\r\n                <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                    <CustomButton\r\n                        text={\"Add\"}\r\n                        classNames={\"btn btn-org-gradient\"}\r\n                    // handleClick={() => submitCreateUpdateDepartment()}\r\n                    // isLoading={selectedDepartmentData ? updateDepartmentPending : addDepartmentPending}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default AddLoans\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { values } from 'lodash';\r\nconst payrollHistoryData = [\r\n    {\r\n      salaryForMonth: \"May 2024\",\r\n      paymentMonth: \"June 2024\",\r\n      paymentDate: \"2024-06-07\",\r\n    },\r\n    {\r\n      salaryForMonth: \"June 2024\",\r\n      paymentMonth: \"July 2024\",\r\n      paymentDate: \"2024-07-07\",\r\n    },\r\n    {\r\n      salaryForMonth: \"February 2024\",\r\n      paymentMonth: \"March 2024\",\r\n      paymentDate: \"2024-03-07\",\r\n    },\r\n    {\r\n      salaryForMonth: \"March 2024\",\r\n      paymentMonth: \"April 2024\",\r\n      paymentDate: \"2024-04-07\",\r\n    },\r\n    {\r\n      salaryForMonth: \"April 2024\",\r\n      paymentMonth: \"May 2024\",\r\n      paymentDate: \"2024-05-07\",\r\n    },\r\n    {\r\n      salaryForMonth: \"September 2024\",\r\n      paymentMonth: \"October 2024\",\r\n      paymentDate: \"2024-10-07\",\r\n    },\r\n  ];\r\n  \r\nconst PayrollHistory = () => {\r\n\r\n    const payrollHistoryField =[\r\n        {key:\"salaryForMonth\",label:\"Salary For Month\"},\r\n        {key:\"paymentMonth\",label:\"Payment Month\"},\r\n        {key:\"paymentDate\",label:\"Payment Date\"},\r\n        {key:\"action\",label:\"Action\"},\r\n    ]\r\n    const payrollHistoryScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                        // onClick={() => toggleAddLoanModal(item?._id ,\"edit\")} \r\n                        >\r\n                            View  Details</span>\r\n                    </li>\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n\r\n    }), []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n         <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Payroll History</h3>\r\n                \r\n            </div>\r\n         <CustomTable\r\n                data={payrollHistoryData}\r\n                fields={payrollHistoryField}\r\n                // isLoading={isLoading}\r\n                pagination={true}\r\n                // currentPage={currentPage}\r\n                // setCurrentPage={setCurrentPage}\r\n                // totalPages={depList?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={payrollHistoryScopedSlots}\r\n            />\r\n      \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default PayrollHistory\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst RunAttendance = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\" d-flex justify-content-between align-items-center mb-2\">\r\n                <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Run Attendance</h3>\r\n\r\n            </div>\r\n            <div className='card'>\r\n                <div className=\" payroll-card-body-css  p-3 border-left border-dark\">\r\n                    <div className=\"payruns-cards d-flex align-items-center justify-content-around\">\r\n                        <div className=\"col\">\r\n                            <small className=\"text-secondary\">PAYMENT DATE</small>\r\n                            <h5 className=\"py-3\">08-09-2024</h5>\r\n                        </div>\r\n                        {/* { */}\r\n                        {/* //   payRollNotification?.status === 'Ready' ?  */}\r\n                        {/* // ( */}\r\n                        {/* <div className=\"col\">\r\n                                <button\r\n                                    className=\"btn btn-primary\"\r\n                                // onClick={createPayRunId}\r\n                                >\r\n                                    Add Pay Run\r\n                                </button>\r\n                            </div> */}\r\n                        {/* // )\r\n                            //   : \r\n                            // ( */}\r\n                        <div className=\"col\">\r\n                            <Link to=\"/pay-runs/create-pay-run\"> <button\r\n                                className=\"btn btn-primary\"\r\n                            >\r\n                                Create Pay Run\r\n                            </button>\r\n                            </Link>\r\n                            &nbsp;&nbsp;\r\n                            <Link to=\"/regular-payroll\">\r\n                                <button className=\"btn btn-primary\"\r\n                                //   onClick={createPayRun}\r\n                                >\r\n                                    View Details\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                        {/* // )} */}\r\n                    </div>\r\n                    <i class=\"bi bi-info-circle\"></i>\r\n                    <span>\r\n                        <small className=\"text-secondary\">\r\n                            Please approve this payroll before{' '}\r\n                            08-09-2024 | 04:00 PM\r\n                        </small>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default RunAttendance\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { getBadgeColor } from '../../../../utils/common';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { payrollActions } from '../../../../core/resource/actions';\r\n\r\nconst EmpAttendanceTrackingTable = (props) => {\r\n    const dispatch =useDispatch()    \r\n    const {currentPage,setCurrentPage ,getAllEmployeeDetailsByPayDays,monthYear} = props\r\n    const {\r\n        getEmployeeDetailsByPayDaysPending,\r\n    } = useSelector(state => state.payroll)\r\n    // const selectedEmployeeAttendanceDetail =(id)=>{\r\n    //     navigate()\r\n    // }\r\n    const employeeField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'emp_id', label: 'Emp Id' },\r\n        { key: 'name', label: 'Full Name' },\r\n        { key: 'present_days', label: 'Present Days' },\r\n        { key: 'absent_days', label: 'Absent Days' },\r\n        { key: 'present_days', label: 'Pay Days' },\r\n        { key: 'account_status', label: 'Account Status' },\r\n        { key: 'action', label: 'Action' }\r\n    ];\r\n    const setSelectedEmpData =(data)=>{\r\n        dispatch(payrollActions.selectedEmployeeData(data))\r\n    }\r\n    \r\n    const employeeScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        account_status: item =>(\r\n            <span\r\n            className={`badge ${getBadgeColor(item.account_status)}`}\r\n          >\r\n            {item.account_status}\r\n          </span>\r\n        ) ,\r\n        \r\n\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                        <Link className=\"dropdown-item\" to={`employee-attendance-tracking/${item?._id}/${monthYear}`}\r\n                        onClick={() => setSelectedEmpData(item)} \r\n                        >\r\n                            View Details</Link>\r\n                    </li>\r\n                    {/* <li>\r\n                        <span className=\"dropdown-item\"\r\n                        // onClick={() => handleCreateUpdateEmployeeModal()}\r\n                        >Update</span>\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }), [getAllEmployeeDetailsByPayDays,currentPage]);\r\n    return (\r\n        <>\r\n            <CustomTable\r\n                data={getAllEmployeeDetailsByPayDays?.data}\r\n                fields={employeeField}\r\n                isLoading={getEmployeeDetailsByPayDaysPending}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={(currentNum)=>setCurrentPage(currentNum,\"attendanceTracking\")}\r\n                totalPages={getAllEmployeeDetailsByPayDays?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={employeeScopedSlots}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmpAttendanceTrackingTable\r\n","import React, { useState } from 'react'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { Icon, Input, Label } from '../../../commanComponent'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport moment from 'moment'\r\nimport { multiSelectIDs } from '../../../../utils/common'\r\n\r\nconst AttendanceFilters = (props) => {\r\n    const {\r\n        allEmployeeList,\r\n        allDepartments,\r\n        allDesignations,\r\n        handleDepartmentByDesignation,\r\n        getEmployeeDetailsByPayDays,\r\n        setMonthYear\r\n    } = props\r\n    const { t } = useCustomTranslation()\r\n    const [filterFormData, setFilterFormData] = useState({\r\n        department: null,\r\n        designation: null,\r\n        employees:'',\r\n        month_year:moment().format(\"YYYY-MM\")\r\n    })\r\n\r\n    const handleFilterFormData = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n\r\n\r\n        if (name === \"department\") {\r\n            value && value?.value && handleDepartmentByDesignation(value?.value)\r\n            setFilterFormData(prevState => ({\r\n                ...prevState,\r\n                [\"designation\"]: null,\r\n            })\r\n            );\r\n        }\r\n        if(name ===\"month_year\") setMonthYear(value)\r\n        setFilterFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n    }\r\n    const handleFilterEmployees =()=>{\r\n        const filterFields={};\r\n\r\n        if(filterFormData?.department?.value)  filterFields[\"department_id\"] = filterFormData?.department?.value;\r\n        if(filterFormData?.designation?.value)  filterFields[\"designation_id\"] = filterFormData?.designation?.value;\r\n        if(filterFormData?.employees?.length>0) filterFields[\"employee_ids\"]=multiSelectIDs(filterFormData?.employees)\r\n        filterFields[\"month_year\"]=filterFormData?.month_year\r\n        getEmployeeDetailsByPayDays(filterFields)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"formPanel cardBox\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-2\">\r\n                            <Label text={t(\"labels.department\")} />\r\n                            <CustomSelect\r\n                                data={allDepartments}\r\n                                placeholder={t(\"placeholders.selectDepartment\")}\r\n                                value={filterFormData?.department || ''}\r\n                                handleChange={(selectedOption) => handleFilterFormData(selectedOption, \"department\")}\r\n                                name=\"department\"\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-2\">\r\n                            <Label text={t(\"labels.designation\")} />\r\n                            <CustomSelect\r\n                                data={allDesignations}\r\n                                placeholder={t(\"placeholders.selectDesignation\")}\r\n                                value={filterFormData?.designation || ''}\r\n                                handleChange={(selectedOption) => handleFilterFormData(selectedOption, \"designation\")}\r\n                                name=\"designation\"\r\n                                isDisabled={!(filterFormData?.department) ? true : false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-2\">\r\n                            <Label text={t(\"labels.employees\")} />\r\n                            <CustomSelect\r\n                                data={allEmployeeList}\r\n                                placeholder={t(\"placeholders.employees\")}\r\n                                value={filterFormData?.employees || ''}\r\n                                handleChange={(selectedOption) => handleFilterFormData(selectedOption, \"employees\")}\r\n                                name=\"employees\"\r\n                                isMulti={true}\r\n                                selectAllText={t(\"labels.selectAll\")}\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-2\">\r\n                            <Label text={t(\"labels.monthYear\")} />\r\n                            <Input\r\n                               type={\"month\"}\r\n                               value={filterFormData?.month_year||''}\r\n                               onChange={(e)=>handleFilterFormData(e)}\r\n                               name=\"month_year\"\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='d-flex justify-content-end'>\r\n\r\n                    <CustomButton\r\n                        classNames={\"btn btn-primary gradientBg\"}\r\n                        handleClick={() => handleFilterEmployees()}\r\n                        text={t(\"btns.filter\")}\r\n                        icon={<Icon className={\"fa fa-search\"}/>}\r\n                    />\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttendanceFilters\r\n","import React, { useState } from 'react'\r\nimport AttendanceTrackingTable from './AttendanceTrackingTable'\r\nimport EmpAttendanceTrackingTable from './EmpAttendanceTrackingTable'\r\nimport AttendanceFilters from './AttendanceFilters';\r\nimport moment from 'moment';\r\n\r\nconst AttendanceTracking = (props) => {\r\n    \r\n    const {\r\n        allEmployeeList,\r\n        allDepartments,\r\n        allDesignations,\r\n        handleDepartmentByDesignation,\r\n        getAllEmployeeDetailsByPayDays,\r\n        getEmployeeDetailsByPayDays,\r\n        currentPage, \r\n        setCurrentPage\r\n    } = props\r\n    const [monthYear,setMonthYear]=useState(moment().format(\"YYYY-MM\"))\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Attendance Tracking</h3>\r\n            </div>\r\n            <AttendanceFilters\r\n                allEmployeeList={allEmployeeList}\r\n                allDepartments={allDepartments}\r\n                allDesignations={allDesignations}\r\n                handleDepartmentByDesignation={handleDepartmentByDesignation}\r\n                getEmployeeDetailsByPayDays={getEmployeeDetailsByPayDays}\r\n                setMonthYear={setMonthYear}\r\n            />\r\n            <EmpAttendanceTrackingTable\r\n                setCurrentPage={setCurrentPage}\r\n                currentPage={currentPage}\r\n                allEmployeeData={allEmployeeList}\r\n                getAllEmployeeDetailsByPayDays={getAllEmployeeDetailsByPayDays}\r\n                monthYear={monthYear}\r\n\r\n            />\r\n            {/* <AttendanceTrackingTable/> */}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AttendanceTracking\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { CustomTabs } from '../../reuseableComponents';\r\nimport Arrears from './arrears/Arrears';\r\nimport AddArrears from './arrears/AddArrears';\r\nimport Loans from './loans/Loans';\r\nimport AddLoans from './loans/AddLoans';\r\nimport PayrollHistory from './payrollHistory/payrollHistory';\r\nimport RunAttendance from './RunAttendance.js/RunAttendance';\r\nimport AttendanceTracking from './attendanceTracking/AttendanceTracking';\r\nimport CreatePayrun from './RunAttendance.js/CreatePayrun';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useCustomTranslation } from '../../../translation';\r\nimport { departmentAction, designationAction, employeeActions, payrollActions } from '../../../core/resource/actions';\r\nimport { pagination } from '../../../utils/Constants.config';\r\nimport { use } from 'i18next';\r\nimport moment from 'moment';\r\n\r\nconst PayRuns = () => {\r\n    const dispatch = useDispatch()\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    } = useSelector(state => state.department)\r\n    const {\r\n        getDesignationsByDepartmentRes,\r\n        getDesignationsByDepartmentPending,\r\n        getDesignationsByDepartmentError\r\n    } = useSelector(state => state.designation)\r\n\r\n    const {\r\n        getAllEmployeePending,\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n    } = useSelector(state => state.employee)\r\n\r\n    const {\r\n\r\n        getEmployeeDetailsByPayDaysPending,\r\n        getEmployeeDetailsByPayDaysRes,\r\n        getEmployeeDetailsByPayDaysError,\r\n\r\n        addArrearsPending,\r\n        addArrearsRes,\r\n        addArrearsError,\r\n\r\n        getArrearsPending,\r\n        getArrearsRes,\r\n        getArrearsError,\r\n\r\n    } = useSelector(state => state.payroll)\r\n\r\n    const [isOpenAddArrears, setIsOpenAddArrears] = useState(false)\r\n    const [isOpenAddLoans, setIsOpenAddLoans] = useState(false)\r\n    const [openLoanTypeModal, setOpenLoanTypeModal] = useState('')\r\n    const [allEmployeeList, setAllEmployeeList] = useState('')\r\n    const [allDepartments, setAllDepartments] = useState('')\r\n    const [allDesignations, setAllDesignations] = useState('')\r\n    const [getAllEmployeeDetailsByPayDays, setGetAllEmployeeDetailsByPayDays] = useState([])\r\n    const [attendanceStatusData, setAttendanceStatusData] = useState([])\r\n    const [allArrearsList, setAllArrearsList] = useState('')\r\n    const [selectedArrear, setSelectedArrear] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(\r\n        {\r\n            attendanceTrackCurrentPage: 1,\r\n            arrearCurrentPage: 1,\r\n        }\r\n    )\r\n\r\n\r\n\r\n    const tableTabsRequest = [\r\n        { name: \"Run Attendance\", onClickFun: (id) => getPayRunsData(id), id: \"runAttendance\" },\r\n        { name: \"Attendance Tracking\", onClickFun: (id) => getPayRunsData(id), id: \"attendanceTracking\" },\r\n        { name: \"Add Arrears\", onClickFun: (id) => getPayRunsData(id), id: \"addArrears\" },\r\n        { name: \"Loans\", onClickFun: (id) => getPayRunsData(id), id: \"loans\" },\r\n        { name: \"Payroll History\", onClickFun: (id) => getPayRunsData(id), id: \"payRollHistory\" },\r\n    ];\r\n    const getPayRunsData = (id) => {\r\n        if (id === \"attendanceTracking\") {\r\n            getEmployeeDetailsByPayDays()\r\n        }\r\n        else if (id === \"addArrears\") {\r\n            getAllArrearsList()\r\n        }\r\n\r\n    }\r\n    const toggleAddArrearsModal = (data) => {\r\n        if (data) {\r\n            setSelectedArrear(data)\r\n        }\r\n        setIsOpenAddArrears(!isOpenAddArrears)\r\n    }\r\n    const toggleAddLoanModal = (id, type) => {\r\n        if (type) {\r\n            setOpenLoanTypeModal(type)\r\n        }\r\n        setIsOpenAddLoans(!isOpenAddLoans)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllDepartments()\r\n        getAllEmployee()\r\n    }, [])\r\n    /* Get All Employee List*/\r\n    const getAllEmployee = () => {\r\n        dispatch(employeeActions.getAllEmployeeRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getAllEmployeePending) {\r\n            if (getAllEmployeeError) {\r\n                return;\r\n            }\r\n            if (getAllEmployeeRes) {\r\n                if (getAllEmployeeRes?.code === 200) {\r\n\r\n                    setAllEmployeeList(getAllEmployeeRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n        getAllEmployeePending\r\n    ]);\r\n\r\n\r\n\r\n    /* Get All Departments */\r\n    const getAllDepartments = () => {\r\n        if (!getDepartmentListRes?.data?.length) {\r\n            dispatch(departmentAction.getDepartmentListRequest());\r\n        } else {\r\n            setAllDepartments(getDepartmentListRes?.data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getDepartmentListPending) {\r\n            if (getDepartmentListError) {\r\n                return;\r\n            }\r\n            if (getDepartmentListRes) {\r\n                if (getDepartmentListRes?.code === 200) {\r\n                    const departmentResponse = getDepartmentListRes?.data\r\n                    setAllDepartments(departmentResponse)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    ]);\r\n\r\n    /* Department by Designation  */\r\n    const handleDepartmentByDesignation = (id) => {\r\n        const params = {\r\n            department_id: id\r\n        }\r\n        dispatch(designationAction.getDesignationsByDepartmentRequest(params));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getDesignationsByDepartmentPending) {\r\n            if (getDesignationsByDepartmentError) {\r\n                return;\r\n            }\r\n            if (getDesignationsByDepartmentRes) {\r\n                if (getDesignationsByDepartmentRes?.code === 200) {\r\n                    const designationResponse = getDesignationsByDepartmentRes?.data || []\r\n                    setAllDesignations(designationResponse)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDesignationsByDepartmentRes,\r\n        getDesignationsByDepartmentError,\r\n        getDesignationsByDepartmentPending\r\n    ]);\r\n\r\n\r\n    /* Get Employee Details By Pay Days  */\r\n    const getEmployeeDetailsByPayDays = (pageNo,param) => {\r\n        const payload ={\r\n            page: pageNo ||currentPage?.attendanceTrackCurrentPage,\r\n            limit: pagination.limit,\r\n        //     month_year: moment().format(\"YYYY-MM\"),\r\n        //     ...param\r\n        }\r\n        dispatch(payrollActions.getEmployeeDetailsByPayDaysRequest(payload));\r\n        // dispatch(payrollActions.getEmployeeDetailsByPayDaysRequest());\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getEmployeeDetailsByPayDaysPending) {\r\n            if (getEmployeeDetailsByPayDaysError) {\r\n                return;\r\n            }\r\n            if (getEmployeeDetailsByPayDaysRes) {\r\n                if (getEmployeeDetailsByPayDaysRes?.code === 200) {\r\n                    const getEmployeeDetailsByPayDaysData = getEmployeeDetailsByPayDaysRes?.data\r\n                    setGetAllEmployeeDetailsByPayDays(getEmployeeDetailsByPayDaysData)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getEmployeeDetailsByPayDaysRes,\r\n        getEmployeeDetailsByPayDaysError,\r\n        getEmployeeDetailsByPayDaysPending\r\n    ]);\r\n\r\n\r\n    /*  Handle Add Arrears*/\r\n    const handleAddArrears = (payload) => {\r\n        dispatch(payrollActions.addArrearsRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!addArrearsPending) {\r\n            if (addArrearsError) {\r\n                dispatch(payrollActions?.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_ARREARS_STORE\"))\r\n                return;\r\n            }\r\n            if (addArrearsRes) {\r\n                if (addArrearsRes?.code === 200) {\r\n                    toggleAddArrearsModal()\r\n                    getAllArrearsList()\r\n                    dispatch(payrollActions?.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_ARREARS_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addArrearsRes,\r\n        addArrearsError,\r\n        addArrearsPending\r\n    ]);\r\n\r\n    /*  Handle  Get Arrears*/\r\n\r\n    const getAllArrearsList = (pageNo) => {\r\n        const payload ={\r\n            page: pageNo ||currentPage?.arrearCurrentPage,\r\n            limit: pagination?.limit,\r\n        }\r\n        dispatch(payrollActions.getArrearsRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!getArrearsPending) {\r\n            if (getArrearsError) {\r\n                dispatch(payrollActions?.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_ARREARS_STORE\"))\r\n                return;\r\n            }\r\n            if (getArrearsRes) {\r\n                if (getArrearsRes?.code === 200) {\r\n                    setAllArrearsList(getArrearsRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getArrearsRes,\r\n        getArrearsError,\r\n        getArrearsPending\r\n    ]);\r\n\r\n\r\n    const handlePageChange = (pageNo, type) => {\r\n        if (\"attendanceTracking\" === type) {\r\n            setCurrentPage((pre) => ({\r\n                ...pre,\r\n                attendanceTrackCurrentPage: pageNo\r\n            }))\r\n            getEmployeeDetailsByPayDays(pageNo)\r\n        } else if (\"addArrears\" === type) {\r\n            setCurrentPage((pre) => ({\r\n                ...pre,\r\n                arrearCurrentPage: pageNo\r\n            }))\r\n            getAllArrearsList(pageNo)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"tab-pane fade show active\" id=\"receivedFeedback\">\r\n                <div className=\"cardBox myRequest mb-3\">\r\n                    <div className=\"cardHead d-flex justify-content-between\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <img\r\n                                src=\"images/kpi-guidline.svg\"\r\n                                alt=\"\"\r\n                                width={40}\r\n                                className=\"me-2 fw-bold\"\r\n                            />\r\n                            <div className=\"\">\r\n                                <h3> Pay Runs</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"searchB me-0 \">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control w-100 fs-7\"\r\n                                placeholder=\"Search\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <CustomTabs tabs={tableTabsRequest} type=\"rayRuns\" />\r\n                    <div className=\"tab-content mykpiMain\">\r\n                        <div className=\"tab-pane fade active show\" id=\"runAttendance\">\r\n                            <RunAttendance\r\n                            />\r\n                        </div>\r\n                        <div className=\"tab-pane fade\" id=\"attendanceTracking\">\r\n                            <AttendanceTracking\r\n                                allEmployeeList={allEmployeeList}\r\n                                allDepartments={allDepartments}\r\n                                allDesignations={allDesignations}\r\n                                handleDepartmentByDesignation={handleDepartmentByDesignation}\r\n                                getAllEmployeeDetailsByPayDays={getAllEmployeeDetailsByPayDays}\r\n                                getEmployeeDetailsByPayDays={getEmployeeDetailsByPayDays}\r\n                                attendanceStatusData={attendanceStatusData}\r\n                                currentPage={currentPage?.attendanceTrackCurrentPage}\r\n                                setCurrentPage={handlePageChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"tab-pane fade\" id=\"addArrears\">\r\n                            <Arrears\r\n                                toggleAddArrearsModal={toggleAddArrearsModal}\r\n                                allArrearsList={allArrearsList}\r\n                                isLoading={getArrearsPending}\r\n                                currentPage={currentPage?.arrearCurrentPage}\r\n                                setCurrentPage={handlePageChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"tab-pane fade\" id=\"loans\">\r\n                            <Loans\r\n                                toggleAddLoanModal={toggleAddLoanModal}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"tab-pane fade\" id=\"payRollHistory\">\r\n                            <PayrollHistory\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                isOpenAddArrears && <AddArrears\r\n                    isOpen={isOpenAddArrears}\r\n                    toggleOpenClose={toggleAddArrearsModal}\r\n                    allEmployeeList={allEmployeeList}\r\n                    handleAddArrears={handleAddArrears}\r\n                    selectedArrear={selectedArrear}\r\n\r\n                />}\r\n            {\r\n                isOpenAddLoans &&\r\n                <AddLoans\r\n                    isOpen={isOpenAddLoans}\r\n                    toggleOpenClose={toggleAddLoanModal}\r\n                    openLoanTypeModal={openLoanTypeModal}\r\n                />\r\n            }\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PayRuns\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { CustCheckbox, DynamicFilter, Label } from '../../../commanComponent'\r\nimport { CustomButton, CustomSpinner } from '../../../globalComponents'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport BackIcon from '../../../commanComponent/BackIcon'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { pagination } from '../../../../utils/Constants.config'\r\nimport { departmentAction, employeeActions, payrollActions } from '../../../../core/resource/actions'\r\n\r\nconst CreatePayrun = () => {\r\n    const dispatch = useDispatch()\r\n    const {\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    } = useSelector(state => state.department)\r\n    const {\r\n        getAllEmployeePending,\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n    } = useSelector(state => state.employee)\r\n    const {\r\n        getEmployeeSalaryPending,\r\n        getEmployeeSalaryRes,\r\n        getEmployeeSalaryError,\r\n\r\n        addPayRunPending,\r\n        addPayRunRes,\r\n        addPayRunError,\r\n\r\n    } = useSelector(state => state.payroll)\r\n\r\n    const { t } = useCustomTranslation()\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [createdSalaryEmpList, setCreatedSalaryEmpList] = useState('')\r\n    const [allActiveSalaryCreate, setAllActiveSalaryCreate] = useState(true)\r\n    const [tempSalaryEmpData, setTempSalaryEmpData] = useState('')\r\n    const [allDepartments, setAllDepartments] = useState('')\r\n    const [allEmployeeList, setAllEmployeeList] = useState('')\r\n    const [filterFormData, setFilterFormData] = useState({\r\n        employeeName: '',\r\n        department: '',\r\n    });\r\n\r\n    const createPayRunFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'hold_salary', label: 'Hold Salary' },\r\n        { key: 'create_salary', label: 'Create Salary' },\r\n        { key: 'emp_code', label: 'Emp ID' },\r\n        { key: 'employee_name', label: 'Emp Name' },\r\n        { key: 'email', label: 'Email' },\r\n        { key: 'department', label: 'Department  ' },\r\n        { key: 'designation', label: 'Designation' },\r\n    ];\r\n\r\n    const createPayRunScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        hold_salary: (item) => (\r\n            <span>\r\n                <CustCheckbox\r\n                    key={\"is_hold\"}\r\n                    id={`is_hold`}\r\n                    checked={item?.is_hold}\r\n                    handleChange={(e) => handleCheckedUncheck(e, null, item)}\r\n                    name={\"is_hold\"}\r\n                />\r\n            </span>\r\n        ),\r\n        create_salary: (item) => (\r\n            <span>\r\n                <CustCheckbox\r\n                    key={\"create_salary\"}\r\n                    id={`create_salary`}\r\n                    checked={item?.create_salary}\r\n                    handleChange={(e) => handleCheckedUncheck(e, null, item)}\r\n                    name={\"create_salary\"}\r\n                />\r\n            </span>\r\n        ),\r\n\r\n\r\n    }), [allActiveSalaryCreate, createdSalaryEmpList]);\r\n\r\n    useEffect(() => {\r\n        getAllDepartments()\r\n    }, [])\r\n\r\n    const employeeFilters = [\r\n        {\r\n            name: 'employeeName',\r\n            label: 'Select Employee / ID',\r\n            type: 'select',\r\n            value: filterFormData.employeeName,\r\n            data: allEmployeeList,\r\n            placeholder: 'Enter Employee Name',\r\n            isMulti: true\r\n        },\r\n        {\r\n            name: 'department',\r\n            label: 'Department',\r\n            type: 'select',\r\n            data: allDepartments,\r\n            value: filterFormData.department,\r\n            placeholder: 'Select Department',\r\n        },\r\n\r\n    ];\r\n\r\n    const handleFilterFormData = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n\r\n        setFilterFormData((prevState) => ({\r\n            ...prevState,\r\n            [name]: type === 'checkbox' ? checked : value,\r\n        }));\r\n    };\r\n\r\n    const handleFilterEmployees = () => {\r\n        const filterFields = {};\r\n        if (filterFormData?.department?.value) filterFields[\"department_id\"] = filterFormData?.department?.value;\r\n        if (filterFormData?.designation?.value) filterFields[\"designation_id\"] = filterFormData?.designation?.value;\r\n        if (filterFormData?.employeeName) filterFields[\"employee_name\"] = filterFormData?.employeeName\r\n        console.log(filterFields, \"filterFields---------\")\r\n        // searchFilterData(filterFields, tempSalaryEmpData?.data)\r\n    }\r\n    const handleCheckedUncheck = (e, fieldName, checkedEmp) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n\r\n        setCreatedSalaryEmpList((prevState) => {\r\n            const updatedData = prevState?.data?.map((item) => {\r\n                if (checkedEmp?._id === item?._id) {\r\n                    return {\r\n                        ...item,\r\n                        [name]: type === 'checkbox' ? checked : value,\r\n                    };\r\n                }\r\n                return item;\r\n            });\r\n            const allChecked = updatedData.every((item) => item.create_salary);\r\n            setAllActiveSalaryCreate(allChecked);\r\n\r\n            return {\r\n                ...prevState,\r\n                data: updatedData,\r\n            };\r\n        });\r\n    };\r\n\r\n    /* Get Employee Salary Data */\r\n\r\n    useEffect(() => {\r\n        getEmployeeSalary()\r\n    }, [currentPage])\r\n\r\n    const getEmployeeSalary = () => {\r\n        // const payload = {\r\n        //     page: currentPage,\r\n        //     limit: 1,\r\n        // }\r\n        dispatch(payrollActions?.getEmployeeSalaryRequest())\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getEmployeeSalaryPending) {\r\n            if (getEmployeeSalaryError) {\r\n                return;\r\n            }\r\n            if (getEmployeeSalaryRes) {\r\n                if (getEmployeeSalaryRes?.code === 200) {\r\n                    setCreatedSalaryEmpList(getEmployeeSalaryRes?.data)\r\n                    setTempSalaryEmpData(getEmployeeSalaryRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getEmployeeSalaryRes,\r\n        getEmployeeSalaryError,\r\n        getEmployeeSalaryPending\r\n    ]);\r\n\r\n    const handleCheckedUnCheckedAll = (e) => {\r\n        const { type, checked } = e?.target\r\n        setAllActiveSalaryCreate(checked)\r\n        setCreatedSalaryEmpList((prevState) => ({\r\n            ...prevState,\r\n            data: prevState.data.map((item) => ({\r\n                ...item,\r\n                create_salary: checked,\r\n            })),\r\n        }));\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     setCreatedSalaryEmpList((prevState) => ({\r\n    //         ...prevState,\r\n    //         data: prevState?.data?.map((item) => ({\r\n    //             ...item,\r\n    //             create_salary: allActiveSalaryCreate,\r\n    //         })),\r\n    //     }));\r\n    // }, []);\r\n\r\n    // useEffect(()=>{\r\n    //     if(currentPage >1){\r\n    //         setCreatedSalaryEmpList((prevState) => ({\r\n    //             ...prevState,\r\n    //             data: prevState?.data?.map((item) => ({\r\n    //                 ...item,\r\n    //                 create_salary: item?.create_salary ||allActiveSalaryCreate,\r\n    //             })),\r\n    //         })); \r\n    //     }\r\n    // },[currentPage])\r\n    const searchFilterData = (searchFiled, data) => {\r\n        let tempCreatedSalaryEmpData = data\r\n        if (Object.keys(data)?.length > 0) {\r\n            let filterData = tempCreatedSalaryEmpData.filter((item, index) => item?.employee_name?.includes(searchFiled?.employee_name))\r\n            setCreatedSalaryEmpList((prevState) => ({\r\n                ...prevState,\r\n                data: filterData,\r\n            }));\r\n        }\r\n        else {\r\n            setCreatedSalaryEmpList()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /* Get All Departments */\r\n    const getAllDepartments = () => {\r\n        if (!getDepartmentListRes?.data?.length) {\r\n            dispatch(departmentAction.getDepartmentListRequest());\r\n        } else {\r\n            setAllDepartments(getDepartmentListRes?.data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getDepartmentListPending) {\r\n            if (getDepartmentListError) {\r\n                return;\r\n            }\r\n            if (getDepartmentListRes) {\r\n                if (getDepartmentListRes?.code === 200) {\r\n                    const departmentResponse = getDepartmentListRes?.data\r\n                    setAllDepartments(departmentResponse)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    ]);\r\n\r\n    /* Get All Employee List*/\r\n    const getAllEmployee = () => {\r\n        dispatch(employeeActions.getAllEmployeeRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getAllEmployeePending) {\r\n            if (getAllEmployeeError) {\r\n                return;\r\n            }\r\n            if (getAllEmployeeRes) {\r\n                if (getAllEmployeeRes?.code === 200) {\r\n\r\n                    setAllEmployeeList(getAllEmployeeRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n        getAllEmployeePending\r\n    ]);\r\n\r\n    const createPayRun = (payload) => {\r\n\r\n    }\r\n    const submitCreatePayRun = () => {\r\n        const submitData = createdSalaryEmpList?.data?.filter((item) => item?.create_salary === true)\r\n        const payload = {\r\n            pay_run_employees: submitData\r\n        }\r\n        // dispatch(payrollActions?.addPayRunRequest(payload))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!addPayRunPending) {\r\n            if (addPayRunError) {\r\n                dispatch(payrollActions?.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_PAY_RUN_STORE\"))\r\n                return;\r\n            }\r\n            if (addPayRunRes) {\r\n                if (addPayRunRes?.code === 200) {\r\n                    dispatch(payrollActions?.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_PAY_RUN_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addPayRunRes,\r\n        addPayRunError,\r\n        addPayRunPending\r\n    ]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={`cardBox  creatNewTicketOff `}\r\n            >\r\n                <div className=\"header d-flex\">\r\n                    <Link to={\"/pay-runs\"} ><BackIcon /></Link>\r\n                    <h5 className=\"title  fs-5 fw-bold text-primary\">\r\n                        Create Pay Run </h5>\r\n\r\n                </div>\r\n                <div className=\"body \">\r\n                    <DynamicFilter\r\n                        filters={employeeFilters}\r\n                        handleFilterFormData={handleFilterFormData}\r\n                        onSubmitHandleFilter={handleFilterEmployees}\r\n                    />\r\n\r\n                    <div className='mt-3'>\r\n                        {/* <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Employees</h3> */}\r\n                        <div className=\"row ms-2\">\r\n                            <CustCheckbox\r\n                                key={\"allActiveCreatedSalary\"}\r\n                                id={`allActiveCreatedSalary`}\r\n                                checked={allActiveSalaryCreate}\r\n                                handleChange={(e) => handleCheckedUnCheckedAll(e)}\r\n                                name={\"allActiveCreatedSalary\"}\r\n                                label={\"Create Salary For All\"}\r\n                            />\r\n                        </div>\r\n                        <div style={createdSalaryEmpList?.data?.length > 9 ? { height: \"539px\", overflowX: \"scroll\" } : {}}>\r\n                            <CustomTable\r\n                                data={createdSalaryEmpList?.data}\r\n                                fields={createPayRunFields}\r\n                                isLoading={getEmployeeSalaryPending}\r\n                                // pagination={true}\r\n                                // currentPage={currentPage}\r\n                                // setCurrentPage={setCurrentPage}\r\n                                totalPages={createdSalaryEmpList?.totalPages}\r\n                                // tableName={\"\"}\r\n                                // onSearch={handleSearch}\r\n                                isHeader={false}\r\n                                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                                scopedSlots={createPayRunScopedSlots}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={\"Submit\"}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitCreatePayRun()}\r\n                        // isLoading={selectedDepartmentData ? updateDepartmentPending : addDepartmentPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {addPayRunPending && <CustomSpinner isShow={addPayRunPending} size=\"lg\" />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreatePayrun\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableDataHeader from './TableDataHeader';\r\nimport { CustomButton, CustomSpinner } from '../../globalComponents';\r\nimport TableName from './TableName';\r\nimport BlankTableError from '../../commanComponent/BlankTableError';\r\nimport CustomTd from './CustomTd';\r\nimport CustomPagination from '../../commanComponent/CustomPagination';\r\nimport { getCustomTableSN } from '../../../utils/common';\r\n\r\nconst CustomTableWithSubTable = ({ data,\r\n    fields,\r\n    isLoading,\r\n    scopedSlots = {},\r\n    onSearch,\r\n    pagination,\r\n    setCurrentPage,\r\n    totalPages,\r\n    currentPage,\r\n    tableName,\r\n    isHeader = true,\r\n    tableStyle,\r\n    isShowSubMenu\r\n}) => {\r\n    const renderTableBody = () => (\r\n        data && data.length > 0 ? (\r\n            data.map((item, index) => {\r\n                const indexValue = getCustomTableSN(index, currentPage); // Get serial number\r\n\r\n                return (\r\n                    <React.Fragment key={index}>\r\n                        {/* Main Row */}\r\n                        <tr>\r\n                            {fields.map((field) => (\r\n                                field.key !== \"sub_table\" ? <CustomTd key={field.key}\r\n                                    style={{ width: field.width || 'auto' }}\r\n                                >\r\n                                    {scopedSlots[field.key] ? scopedSlots[field.key](item, indexValue) : item[field.key]}\r\n                                </CustomTd> : <CustomTd key={field.key} style={{ width: field.width || 'auto' }} />\r\n                            ))}\r\n                        </tr>\r\n\r\n                        {/* Submenu Row */}\r\n                        {scopedSlots['sub_table'] && isShowSubMenu.includes(index) && (\r\n                            <tr>\r\n                                <td colSpan={fields.length} style={{ padding: '3px 20px', backgroundColor: '#f9f9f9' }}>\r\n                                    {scopedSlots['sub_table'](item, indexValue)}\r\n                                </td>\r\n                            </tr>\r\n\r\n                        )}\r\n                    </React.Fragment>\r\n                );\r\n            })\r\n        ) : (\r\n            !isLoading && <BlankTableError totalField={fields?.length} />\r\n        )\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"cardBox mb-3 mt-3\" style={tableStyle || {}}>\r\n            {isHeader && <div className=\"cardHead d-flex align-items-center justify-content-between\">\r\n                <TableName name={tableName} />\r\n\r\n                <div className=\"d-flex\">\r\n                    <div className=\"ticketFilter\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control fs-7\"\r\n                            placeholder=\"Filter..\"\r\n                        // onChange={e => onSearch(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <CustomButton\r\n                        text=\"Search\"\r\n                        classNames=\"btn btn-primary p-1 ms-3\"\r\n                    />\r\n                </div>\r\n            </div>}\r\n            <div className=\"table-responsive tableDiv\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <TableDataHeader tableHeader={fields} />\r\n                    </thead>\r\n                    <tbody>\r\n                        {isLoading ? <tr>\r\n                            <td colSpan={fields?.length}>\r\n                                <CustomSpinner isShow={isLoading} size=\"xl\" />\r\n                            </td>\r\n                        </tr>\r\n                            :\r\n                            renderTableBody()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            {/* Pagination Controls */}\r\n            {(totalPages > 1 && pagination) && <CustomPagination\r\n                currentPage={currentPage}\r\n                totalPages={totalPages}\r\n                onPageChange={(pageNumber) => setCurrentPage(pageNumber)}\r\n            />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomTableWithSubTable\r\n"],"names":["BackIcon","_jsx","children","_jsxs","version","id","x","y","viewBox","xmlSpace","className","style","height","width","cursor","opacity","fill","cx","cy","r","d","props","toggleAddArrearsModal","allArrearsList","isLoading","setCurrentPage","currentPage","t","useCustomTranslation","isShowSubMenu","setIsShowSubMenu","useState","subTableFields","key","label","arrearsEmployeeScopedSlots","useMemo","sn","_","index","pay_days","item","present","bonus","_item$bonus","real","total_employee","_item$total_employee","total_employer","_item$total_employer","gross","_item$gross","ctc","_item$ctc","action","type","onClick","handleSubMenuToggle","sub_table","CustomTable","data","employees","fields","pageNo","totalPages","tableName","isHeader","scopedSlots","includes","filter","i","fontSize","CustomButton","classNames","handleClick","text","CustomTableWithSubTable","pagination","tableStyle","padding","boxShadow","isOpen","toggleOpenClose","allEmployeeList","handleAddArrears","selectedArrear","addArrearsPending","errors","setErrors","selectedEmployees","setSelectedEmployees","arrearFormData","setArrearFormData","arrearName","arrearFor","payMonth","description","addArrearsScopedSlots","Input","value","name","onChange","e","addEmployeesPayDays","target","prev","map","emp","handleFromChange","fieldName","_e$target","checked","prevState","prevErrors","undefined","useEffect","arrear_for","year_mon","_Fragment","tabIndex","visibility","Label","required","placeholder","CustomError","Textarea","CustomSelect","handleChange","selectedOption","isMulti","async","validationResponse","validateSchema","addArrearsSchema","isValid","payload","submitFormData","installmentData","setInstallmentData","loanData","installmentScopedSlots","amount","calculateEMIAfterChanges","remEMI","temp","parseFloat","toFixed","totalEMI","forEach","index1","length","JSON","stringify","React","marginTop","loan","emp_id","email","department","loan_type","emi_duration","effective_date","end_date","installments","installment","date","toggleAddLoanModal","loanScopedSlots","_id","durationOptions","loanFormData","setLoanFormData","employee","loanType","emiDuration","effectiveDate","endDate","calculateEndDate","_loanFormData$emiDura","newDate","moment","add","format","calculateEmiInstallment","_loanFormData$emiDura2","duration","parseInt","emi","push","console","log","isDisabled","backgroundColor","color","InstallmentTable","payrollHistoryData","salaryForMonth","paymentMonth","paymentDate","PayrollHistory","payrollHistoryScopedSlots","RunAttendance","Link","to","class","dispatch","useDispatch","getAllEmployeeDetailsByPayDays","monthYear","getEmployeeDetailsByPayDaysPending","useSelector","state","payroll","employeeScopedSlots","account_status","getBadgeColor","setSelectedEmpData","payrollActions","selectedEmployeeData","currentNum","allDepartments","allDesignations","handleDepartmentByDesignation","getEmployeeDetailsByPayDays","setMonthYear","filterFormData","setFilterFormData","designation","month_year","handleFilterFormData","selectAllText","handleFilterEmployees","_filterFormData$depar","_filterFormData$depar2","_filterFormData$desig","_filterFormData$desig2","_filterFormData$emplo","filterFields","multiSelectIDs","icon","Icon","AttendanceFilters","EmpAttendanceTrackingTable","allEmployeeData","PayRuns","getDepartmentListRes","getDepartmentListError","getDepartmentListPending","getDesignationsByDepartmentRes","getDesignationsByDepartmentPending","getDesignationsByDepartmentError","getAllEmployeePending","getAllEmployeeRes","getAllEmployeeError","getEmployeeDetailsByPayDaysRes","getEmployeeDetailsByPayDaysError","addArrearsRes","addArrearsError","getArrearsPending","getArrearsRes","getArrearsError","isOpenAddArrears","setIsOpenAddArrears","isOpenAddLoans","setIsOpenAddLoans","openLoanTypeModal","setOpenLoanTypeModal","setAllEmployeeList","setAllDepartments","setAllDesignations","setGetAllEmployeeDetailsByPayDays","attendanceStatusData","setAttendanceStatusData","setAllArrearsList","setSelectedArrear","attendanceTrackCurrentPage","arrearCurrentPage","tableTabsRequest","onClickFun","getPayRunsData","getAllArrearsList","getAllDepartments","getAllEmployee","employeeActions","getAllEmployeeRequest","code","_getDepartmentListRes","departmentAction","getDepartmentListRequest","departmentResponse","designationResponse","param","page","limit","getEmployeeDetailsByPayDaysRequest","getEmployeeDetailsByPayDaysData","handleClearPayrollStore","getArrearsRequest","handlePageChange","pre","src","alt","CustomTabs","tabs","AttendanceTracking","params","department_id","designationAction","getDesignationsByDepartmentRequest","Arrears","Loans","AddArrears","addArrearsRequest","AddLoans","CreatePayrun","_createdSalaryEmpList2","getEmployeeSalaryPending","getEmployeeSalaryRes","getEmployeeSalaryError","addPayRunPending","addPayRunRes","addPayRunError","createdSalaryEmpList","setCreatedSalaryEmpList","allActiveSalaryCreate","setAllActiveSalaryCreate","tempSalaryEmpData","setTempSalaryEmpData","employeeName","createPayRunScopedSlots","hold_salary","CustCheckbox","is_hold","handleCheckedUncheck","create_salary","employeeFilters","checkedEmp","_e$target2","_prevState$data","updatedData","allChecked","every","getEmployeeSalary","getEmployeeSalaryRequest","DynamicFilter","filters","onSubmitHandleFilter","handleCheckedUnCheckedAll","overflowX","submitCreatePayRun","_createdSalaryEmpList","CustomSpinner","isShow","size","_ref","onSearch","TableName","TableDataHeader","tableHeader","colSpan","indexValue","getCustomTableSN","field","CustomTd","BlankTableError","totalField","CustomPagination","onPageChange","pageNumber"],"sourceRoot":""}