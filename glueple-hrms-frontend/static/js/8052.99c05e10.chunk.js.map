{"version":3,"file":"static/js/8052.99c05e10.chunk.js","mappings":"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","sources":["components/admin/permissions/AllPermissions.js","components/admin/permissions/PermissionFilters.js","components/admin/permissions/CreateUpdatePermission.js","components/admin/permissions/Permissions.js","components/reuseableComponents/customTable/CustomTableWithSubTable.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustCheckbox, CustomError } from '../../commanComponent'\r\nimport { CustomTable } from '../../reuseableComponents'\r\nimport CustomTableWithSubTable from '../../reuseableComponents/customTable/CustomTableWithSubTable'\r\nimport { CustomButton, CustomSpinner } from '../../globalComponents'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { useSelector } from 'react-redux'\r\nimport { toTitleCase } from '../../../utils/common'\r\nimport BlankTableError from '../../commanComponent/BlankTableError'\r\nconst AllPermissions = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const { categoryWisePermissionData, roleOrUserWisePermissionData, updatePermissions } = props\r\n    const { getCategoryWisePermissionPending } = useSelector(state => state.permission)\r\n    const [permissionIds, setPermissionIds] = useState(new Set([]))\r\n\r\n    useEffect(() => {\r\n        if (roleOrUserWisePermissionData) {\r\n            const { permission_ids } = roleOrUserWisePermissionData\r\n            setPermissionIds(new Set(permission_ids));\r\n        }\r\n    }, [roleOrUserWisePermissionData])\r\n\r\n    /* Routes Permission Code*/\r\n    const routesField = [\r\n        { key: 'sn', label: 'S.No' },\r\n        { key: 'permission', label: 'Permission' },\r\n        { key: 'title', label: 'Title' },\r\n        { key: 'permission_type', label: 'Permission Type' },\r\n    ];\r\n    const handlePermissionChecked = (e, item) => {\r\n        let tempPermission = new Set(permissionIds)\r\n        if (e.target.checked) {\r\n            tempPermission.add(item?._id)\r\n        } else {\r\n            tempPermission.delete(item?._id)\r\n        }\r\n        setPermissionIds(tempPermission)\r\n\r\n    }\r\n    // useEffect(()=>{\r\n    // if(getCategoryWisePermissionPending){\r\n    //     setPermissionIds(new Set([]))\r\n    // }\r\n    // },[getCategoryWisePermissionPending])\r\n\r\n    const renderCategoryWisePermissionData = () => {\r\n        return (\r\n            categoryWisePermissionData ? categoryWisePermissionData?.map((permissionData, index) => <div className='m-3' key={index}>\r\n                <div className=\"\">\r\n                    <h5>{toTitleCase(permissionData?.distinct_category)}</h5>\r\n                </div>\r\n                <CustomTable\r\n                    data={permissionData?.items}\r\n                    fields={routesField}\r\n                    isHeader={false}\r\n                    tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                    scopedSlots={{\r\n                        sn: (_, index) => (\r\n                            <span>{index + 1}</span>\r\n                        ),\r\n                        permission: (item, index) => (\r\n                            <span>\r\n                                <CustCheckbox\r\n                                    key={\"is_active\"}\r\n                                    id={`is_active`}\r\n                                    // label={\"Active\"}\r\n                                    checked={permissionIds.has(item?._id)}\r\n                                    handleChange={(e) => handlePermissionChecked(e, item)}\r\n                                    name={\"is_active\"}\r\n                                /></span>\r\n                        ),\r\n\r\n\r\n                    }}\r\n                />\r\n                <div className='d-flex justify-content-end'>\r\n                    <CustomButton\r\n                        text={t(\"btns.update\")}\r\n                        classNames=\"btn btn-primary\"\r\n                        handleClick={() => {\r\n                            updatePermissions(permissionIds);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <hr />\r\n            </div>\r\n            ) : <p><CustomError /></p>\r\n\r\n        )\r\n    }\r\n    return (\r\n        <div className='mt-3'>\r\n            <div className=\"\">\r\n                <h5>All Permissions</h5>\r\n            </div>\r\n            {/* Menu Permission */}\r\n\r\n            <hr />\r\n            {getCategoryWisePermissionPending ? <CustomSpinner isShow={getCategoryWisePermissionPending} size=\"md\" /> : renderCategoryWisePermissionData()}\r\n            {/* {console.log(categoryWisePermissionData,\"categoryWisePermissionData\")} */}\r\n\r\n            <hr />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllPermissions\r\n","import React, { useState } from 'react'\r\nimport { CustCheckbox, Label } from '../../commanComponent'\r\nimport CustomSelect from '../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../translation'\r\nconst PermissionFilters = (props) => {\r\n    const {t}=useCustomTranslation()\r\n    const {allRolesData,getUserOnRole,usersOnRoleData,getRoleOrUserWisePermission,setFilters,filters}=props\r\n    const [roleChecked, setRoleChecked] = useState(true)\r\n    const [userChecked, setUserChecked] = useState(false)\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e?.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n\r\n        setFilters(prevState => ({\r\n            ...prevState,\r\n            [name]: type === 'checkbox' ? checked : value,\r\n        }));\r\n\r\n        if(fieldName === \"role\" && value ) {\r\n            const params={\r\n                role_id:value?.value\r\n            }\r\n            getRoleOrUserWisePermission(params)\r\n            getUserOnRole(value?.value)\r\n            setFilters(prevState => ({\r\n                ...prevState,\r\n                [\"user\"]: null,\r\n            }));\r\n        }\r\n        if(fieldName === \"user\"){\r\n            const params={\r\n                role_id:filters?.role?.value,\r\n                user_id:value?.value\r\n            }\r\n            getRoleOrUserWisePermission(params)\r\n        }\r\n\r\n    };\r\n    return (<>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <div className=\"form-group mb-3 \">\r\n                    <CustCheckbox\r\n                        key={\"role\"}\r\n                        id={`role`}\r\n                        label={t(\"labels.role\")}\r\n                        checked={roleChecked}\r\n                        handleChange={(e) => setRoleChecked(e.target.checked)}\r\n                        name={\"role\"}\r\n                    />\r\n                </div>\r\n                {roleChecked &&<div className=\"form-group mb-3 \">\r\n                    <div className=\"col-md-12 form-group mb-3\">\r\n                        <Label text={t(\"labels.role\")}\r\n                        />\r\n                        <CustomSelect\r\n                            data={allRolesData}\r\n                            placeholder={t(\"placeholders.role\")}\r\n                            value={filters?.role }\r\n                            handleChange={(selectedOption) => handleFromChange(selectedOption, \"role\")}\r\n                            name=\"role\"\r\n                        />\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n                <div className=\"form-group mb-3\">\r\n                    <CustCheckbox\r\n                        key={\"user\"}\r\n                        id={`user`}\r\n                        label={t(\"labels.user\")}\r\n                        checked={userChecked}\r\n                        handleChange={(e) => setUserChecked(e.target.checked)}\r\n                        name={\"user\"}\r\n                    />\r\n                </div>\r\n                {userChecked &&<div className=\"form-group mb-3 \">\r\n                    <div className=\"col-md-12 form-group mb-3\">\r\n                        <Label text={\"User\"}\r\n                        />\r\n                        <CustomSelect\r\n                            data={usersOnRoleData}\r\n                            placeholder={t(\"placeholders.user\")}\r\n                            value={filters?.user || ''}\r\n                            handleChange={(selectedOption) => handleFromChange(selectedOption, \"user\")}\r\n                            name=\"user\"\r\n                        />\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PermissionFilters\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { validateSchema } from '../../../utils/ValidationHelper'\r\nimport { createUpdatePermissionSchema } from '../../../utils/ValidationSchema'\r\nimport { createShortName } from '../../../utils/common'\r\nimport { CustCheckbox, Input, Label } from '../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../globalComponents'\r\nimport CustomSelect from '../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../translation'\r\n\r\nconst CreateUpdatePermission = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const { createPermissionPending } = useSelector(state => state?.permission)\r\n    const {\r\n        openModel,\r\n        handleOpenClose,\r\n        handleCreateUpdatePermission,\r\n        menuPermissionData,\r\n        permissionConstantData\r\n\r\n    } = props\r\n    const [errors, setErrors] = useState({})\r\n    const [createUpdatePermissionFormData, setCreateUpdatePermissionFormData] = useState({\r\n        route_key: '',\r\n        routes: '',\r\n        permission_type: null,\r\n        title: '',\r\n        parent: null,\r\n        sort_order: '',\r\n        icon: '',\r\n        sub_title: '',\r\n        category: null\r\n    })\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e.target ? e.target : { value: e };\r\n    \r\n        setCreateUpdatePermissionFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n\r\n        // Reset error for this field\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitCreateUpdatePermission = async () => {\r\n        const validationResponse = await validateSchema(createUpdatePermissionSchema, createUpdatePermissionFormData);\r\n        if (validationResponse.isValid) {\r\n            const {\r\n                route_key,\r\n                routes,\r\n                permission_type,\r\n                title,\r\n                parent,\r\n                sort_order,\r\n                icon,\r\n                sub_title,\r\n                category\r\n            } = createUpdatePermissionFormData\r\n            const params = {\r\n                route_key,\r\n                routes,\r\n                permission_type:permission_type?.value,\r\n                title,\r\n                parent:parent?.value,\r\n                sort_order,\r\n                icon,\r\n                sub_title,\r\n                category:category?.value\r\n            }\r\n            handleCreateUpdatePermission(params)\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetForm()\r\n        })\r\n    }, [openModel])\r\n\r\n    const resetForm = () => {\r\n        setCreateUpdatePermissionFormData({\r\n            route_key: '',\r\n            routes: '',\r\n            permission_type: null,\r\n            title: '',\r\n            parent: null,\r\n            sort_order: '',\r\n            icon: '',\r\n            sub_title: '',\r\n            category: null\r\n        })\r\n        setErrors({})\r\n    }\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{\"Create\"} Permission</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose()}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"offcanvas-body myRequest \">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.permissionTitle\")} required={true} />\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.permissionTitle\")}\r\n                                        value={createUpdatePermissionFormData?.title}\r\n                                        name=\"title\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n                                {errors?.title && (\r\n                                    <CustomError text={errors.title} />\r\n                                )}\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.permissionSubTitle\")} />\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.permissionSubTitle\")}\r\n                                        value={createUpdatePermissionFormData?.sub_title}\r\n                                        name=\"sub_title\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.permissionType\")} required={true} />\r\n                                    <CustomSelect\r\n                                        data={permissionConstantData?.permissionType}\r\n                                        placeholder={t(\"placeholders.permissionType\")}\r\n                                        value={createUpdatePermissionFormData?.permission_type || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"permission_type\")}\r\n                                        name=\"permission_type\"\r\n                                    />\r\n                                </div>\r\n                                {errors?.permission_type && (\r\n                                    <CustomError text={errors.permission_type} />\r\n                                )}\r\n                            </div>\r\n                            { createUpdatePermissionFormData?.permission_type?.value===\"submenu\" && <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.permissionParent\")} />\r\n                                    <CustomSelect\r\n                                        data={menuPermissionData}\r\n                                        placeholder={t(\"placeholders.permissionParent\")}\r\n                                        value={createUpdatePermissionFormData?.parent || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"parent\")}\r\n                                        name=\"parent\"\r\n                                    />\r\n                                </div>\r\n                            </div>}\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.routeKey\")} required={true} />\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.routeKey\")}\r\n                                        value={createUpdatePermissionFormData?.route_key}\r\n                                        name=\"route_key\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.route_key && (\r\n                                        <CustomError text={errors.route_key} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                           \r\n                      { !(createUpdatePermissionFormData?.permission_type===\"route\") &&<>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.routes\")} required={true} />\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.routes\")}\r\n                                        value={createUpdatePermissionFormData?.routes}\r\n                                        name=\"routes\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n                                {errors?.routes && (\r\n                                    <CustomError text={errors.routes} />\r\n                                )}\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.permissionSortOrder\")} />\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.permissionSortOrder\")}\r\n                                        value={createUpdatePermissionFormData?.sort_order}\r\n                                        name=\"sort_order\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.permissionIcon\")} />\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.permissionIcon\")}\r\n                                        value={createUpdatePermissionFormData?.icon}\r\n                                        name=\"icon\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            </>}\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.permissionCategory\")} />\r\n                                    <CustomSelect\r\n                                        data={permissionConstantData?.category}\r\n                                        placeholder={t(\"placeholders.permissionType\")}\r\n                                        value={createUpdatePermissionFormData?.category || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"category\")}\r\n                                        name=\"category\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={t(\"btns.submit\")}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitCreateUpdatePermission()}\r\n                            isLoading={createPermissionPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateUpdatePermission\r\n","import React, { useEffect, useState } from 'react'\r\nimport AllPermissions from './AllPermissions'\r\nimport PermissionFilters from './PermissionFilters'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { employeeActions, permissionActions, rolesActions } from '../../../core/resource/actions'\r\nimport { CustomButton } from '../../globalComponents'\r\nimport CreateUpdatePermission from './CreateUpdatePermission'\r\n\r\nconst Permissions = () => {\r\n    const [categoryWisePermissionData, setCategoryWisePermissionData] = useState('')\r\n    const [isShowPermission, setIsShowPermission] = useState(false)\r\n    const [allRolesData, setAllRolesData] = useState('')\r\n    const [usersOnRoleData, setUsersOnRoleData] = useState('')\r\n    const [permissionConstantData, setPermissionConstantData] = useState('')\r\n    const [menuPermissionData, setMenuPermissionData] = useState('')\r\n    const [roleOrUserWisePermissionData, setRoleOrUserWisePermissionData] = useState('')\r\n    const [filters, setFilters] = useState({\r\n        role: null,\r\n        user: null\r\n    })\r\n    const dispatch = useDispatch()\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        getPermissionConstantPending,\r\n        getPermissionConstantRes,\r\n        getPermissionConstantError,\r\n\r\n        getMenuPermissionPending,\r\n        getMenuPermissionRes,\r\n        getMenuPermissionError,\r\n\r\n        getCategoryWisePermissionPending,\r\n        getCategoryWisePermissionRes,\r\n        getCategoryWisePermissionError,\r\n\r\n        createPermissionPending,\r\n        createPermissionRes,\r\n        createPermissionError,\r\n\r\n        updatePermissionPending,\r\n        updatePermissionRes,\r\n        updatePermissionError,\r\n\r\n        getRoleOrUserWisePermissionPending,\r\n        getRoleOrUserWisePermissionRes,\r\n        getRoleOrUserWisePermissionError,\r\n\r\n    } = useSelector(state => state.permission)\r\n    const {\r\n        getAllRolesPending,\r\n        getAllRolesRes,\r\n        getAllRolesError,\r\n    } = useSelector(state => state.roles)\r\n    const {\r\n        getUserOnRolePending,\r\n        getUserOnRoleRes,\r\n        getUserOnRoleError,\r\n    } = useSelector(state => state.employee)\r\n\r\n    useEffect(() => {\r\n        getCategoryWisePermission()\r\n        getAllRoles()\r\n        getPermissionConstant()\r\n        getMenuPermission()\r\n        dispatch(permissionActions.handleClearPermissionStore(\"HANDLE_GET_ROLE_OR_USER_WISE_PERMISSION_STORE\"))\r\n    }, [])\r\n\r\n    /* Get Category Wise Permission*/\r\n    const getCategoryWisePermission = () => {\r\n        dispatch(permissionActions.getCategoryWisePermissionRequest())\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getCategoryWisePermissionPending) {\r\n            if (getCategoryWisePermissionError) {\r\n                return;\r\n            }\r\n            if (getCategoryWisePermissionRes) {\r\n                if (getCategoryWisePermissionRes?.code === 200) {\r\n                    setCategoryWisePermissionData(getCategoryWisePermissionRes.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getCategoryWisePermissionRes,\r\n        getCategoryWisePermissionError,\r\n        getCategoryWisePermissionPending\r\n    ]);\r\n\r\n\r\n    /* Create Update Permission */\r\n    const toggleCreateUpdatePermissionModal = () => {\r\n        setIsShowPermission(!isShowPermission)\r\n    }\r\n\r\n    const handleCreateUpdatePermission = (params) => {\r\n        dispatch(permissionActions.createPermissionRequest(params))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!createPermissionPending) {\r\n            if (createPermissionError) {\r\n                dispatch(permissionActions.handleClearPermissionStore(\"HANDLE_CREATE_PERMISSION_STORE\"))\r\n                return;\r\n            }\r\n            if (createPermissionRes) {\r\n                if (createPermissionRes?.code === 200) {\r\n                    toggleCreateUpdatePermissionModal()\r\n                    getCategoryWisePermission()\r\n                    dispatch(permissionActions.handleClearPermissionStore(\"HANDLE_CREATE_PERMISSION_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        createPermissionRes,\r\n        createPermissionError,\r\n        createPermissionPending\r\n    ]);\r\n\r\n    /* Get All Roles  */\r\n    const getAllRoles = () => {\r\n        dispatch(rolesActions.getAllRolesRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getAllRolesPending) {\r\n            if (getAllRolesError) {\r\n                return;\r\n            }\r\n            if (getAllRolesRes) {\r\n                if (getAllRolesRes?.code === 200) {\r\n                    setAllRolesData(getAllRolesRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllRolesRes,\r\n        getAllRolesError,\r\n        getAllRolesPending\r\n    ]);\r\n\r\n    /* Get User On Role  */\r\n    const getUserOnRole = (roleId) => {\r\n        const payload = {\r\n            role_id: roleId\r\n        }\r\n        dispatch(employeeActions.getUserOnRoleRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!getUserOnRolePending) {\r\n            if (getUserOnRoleError) {\r\n                return;\r\n            }\r\n            if (getUserOnRoleRes) {\r\n                if (getUserOnRoleRes?.code === 200) {\r\n                    setUsersOnRoleData(getUserOnRoleRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getUserOnRoleRes,\r\n        getUserOnRoleError,\r\n        getUserOnRolePending\r\n    ]);\r\n\r\n\r\n    /* Get Permission Constant */\r\n    const getPermissionConstant = (roleId) => {\r\n        dispatch(permissionActions.getPermissionConstantRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getPermissionConstantPending) {\r\n            if (getPermissionConstantError) {\r\n                return;\r\n            }\r\n            if (getPermissionConstantRes) {\r\n                if (getPermissionConstantRes?.code === 200) {\r\n                    setPermissionConstantData(getPermissionConstantRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getPermissionConstantRes,\r\n        getPermissionConstantError,\r\n        getPermissionConstantPending\r\n    ]);\r\n\r\n    /* Get Menu Permission */\r\n    const getMenuPermission = (roleId) => {\r\n        dispatch(permissionActions.getMenuPermissionRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getMenuPermissionPending) {\r\n            if (getMenuPermissionError) {\r\n                return;\r\n            }\r\n            if (getMenuPermissionRes) {\r\n                if (getMenuPermissionRes?.code === 200) {\r\n                    setMenuPermissionData(getMenuPermissionRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getMenuPermissionRes,\r\n        getMenuPermissionError,\r\n        getMenuPermissionPending\r\n    ]);\r\n\r\n    /* Update Permission */\r\n    const updatePermissions = (permissionIds) => {\r\n        const params = {\r\n            user_id: filters?.user?.value || '',\r\n            role_id: filters?.role?.value || '',\r\n            permission_ids: Array.from(permissionIds) || []\r\n        }\r\n        dispatch(permissionActions.updatePermissionRequest(params))\r\n    }\r\n    useEffect(() => {\r\n        if (!updatePermissionPending) {\r\n            if (updatePermissionError) {\r\n                dispatch(permissionActions.handleClearPermissionStore(\"HANDLE_UPDATE_PERMISSION_STORE\"))\r\n                dispatch(permissionActions.handleClearPermissionStore(\"HANDLE_GET_ROLE_OR_USER_WISE_PERMISSION_STORE\"))\r\n                return;\r\n            }\r\n            if (updatePermissionRes) {\r\n                if (updatePermissionRes?.code === 200) {\r\n                    dispatch(permissionActions.handleClearPermissionStore(\"HANDLE_UPDATE_PERMISSION_STORE\"))\r\n                    dispatch(permissionActions.handleClearPermissionStore(\"HANDLE_GET_ROLE_OR_USER_WISE_PERMISSION_STORE\"))\r\n                    // setFilters({\r\n                    //     role:null,\r\n                    //     user:null\r\n                    // })\r\n                    getCategoryWisePermission()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updatePermissionRes,\r\n        updatePermissionError,\r\n        updatePermissionPending\r\n    ]);\r\n\r\n    /* Get  Role Or User Wise Permission */\r\n    const getRoleOrUserWisePermission = (prams) => {\r\n        dispatch(permissionActions.getRoleOrUserWisePermissionRequest(prams))\r\n    }\r\n    useEffect(() => {\r\n        if (!getRoleOrUserWisePermissionPending) {\r\n            if (getRoleOrUserWisePermissionError) {\r\n                return;\r\n            }\r\n            if (getRoleOrUserWisePermissionRes) {\r\n                if (getRoleOrUserWisePermissionRes?.code === 200) {\r\n                    setRoleOrUserWisePermissionData(getRoleOrUserWisePermissionRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getRoleOrUserWisePermissionRes,\r\n        getRoleOrUserWisePermissionError,\r\n        getRoleOrUserWisePermissionPending\r\n    ]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex  justify-content-end mb-3\">\r\n                <CustomButton\r\n                    classNames={\"btn btn-primary gradientBg \"}\r\n                    handleClick={() => toggleCreateUpdatePermissionModal()}\r\n                    text={t(\"btns.createPermission\")}\r\n                />\r\n            </div>\r\n            <div className=\"cardBox myRequest\">\r\n                <div className=\"cardHead\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <img\r\n                            src=\"images/team-rating.svg\"\r\n                            alt=\"\"\r\n                            width={40}\r\n                            className=\"me-2 fw-bold\"\r\n                        />\r\n                        <div className=\"\">\r\n                            <h3> {t(\"headings.assignPermission\")}</h3>\r\n                            {/* <p>Lorem Ipsum is simply dummy text of the printing</p> */}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <PermissionFilters\r\n                    allRolesData={allRolesData}\r\n                    getUserOnRole={getUserOnRole}\r\n                    usersOnRoleData={usersOnRoleData}\r\n                    getRoleOrUserWisePermission={getRoleOrUserWisePermission}\r\n                    filters={filters}\r\n                    setFilters={setFilters}\r\n                />\r\n                <AllPermissions\r\n                    categoryWisePermissionData={categoryWisePermissionData}\r\n                    roleOrUserWisePermissionData={roleOrUserWisePermissionData}\r\n                    updatePermissions={updatePermissions}\r\n                />\r\n                <CreateUpdatePermission\r\n                    openModel={isShowPermission}\r\n                    handleOpenClose={toggleCreateUpdatePermissionModal}\r\n                    handleCreateUpdatePermission={handleCreateUpdatePermission}\r\n                    permissionConstantData={permissionConstantData}\r\n                    menuPermissionData={menuPermissionData}\r\n\r\n                />\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Permissions\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableDataHeader from './TableDataHeader';\r\nimport { CustomButton, CustomSpinner } from '../../globalComponents';\r\nimport TableName from './TableName';\r\nimport BlankTableError from '../../commanComponent/BlankTableError';\r\nimport CustomTd from './CustomTd';\r\nimport CustomPagination from '../../commanComponent/CustomPagination';\r\nimport { getCustomTableSN } from '../../../utils/common';\r\n\r\nconst CustomTableWithSubTable = ({ data,\r\n    fields,\r\n    isLoading,\r\n    scopedSlots = {},\r\n    onSearch,\r\n    pagination,\r\n    setCurrentPage,\r\n    totalPages,\r\n    currentPage,\r\n    tableName,\r\n    isHeader = true,\r\n    tableStyle,\r\n    isShowSubMenu\r\n}) => {\r\n    const renderTableBody = () => (\r\n        data && data.length > 0 ? (\r\n            data.map((item, index) => {\r\n                const indexValue = getCustomTableSN(index, currentPage); // Get serial number\r\n\r\n                return (\r\n                    <React.Fragment key={index}>\r\n                        {/* Main Row */}\r\n                        <tr>\r\n                            {fields.map((field) => (\r\n                                field.key !== \"sub_table\" ? <CustomTd key={field.key}\r\n                                    style={{ width: field.width || 'auto' }}\r\n                                >\r\n                                    {scopedSlots[field.key] ? scopedSlots[field.key](item, indexValue) : item[field.key]}\r\n                                </CustomTd> : <CustomTd key={field.key} style={{ width: field.width || 'auto' }} />\r\n                            ))}\r\n                        </tr>\r\n\r\n                        {/* Submenu Row */}\r\n                        {scopedSlots['sub_table'] && isShowSubMenu.includes(index) && (\r\n                            <tr>\r\n                                <td colSpan={fields.length} style={{ padding: '3px 20px', backgroundColor: '#f9f9f9' }}>\r\n                                    {scopedSlots['sub_table'](item, indexValue)}\r\n                                </td>\r\n                            </tr>\r\n\r\n                        )}\r\n                    </React.Fragment>\r\n                );\r\n            })\r\n        ) : (\r\n            !isLoading && <BlankTableError totalField={fields?.length} />\r\n        )\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"cardBox mb-3 mt-3\" style={tableStyle || {}}>\r\n            {isHeader && <div className=\"cardHead d-flex align-items-center justify-content-between\">\r\n                <TableName name={tableName} />\r\n\r\n                <div className=\"d-flex\">\r\n                    <div className=\"ticketFilter\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control fs-7\"\r\n                            placeholder=\"Filter..\"\r\n                        // onChange={e => onSearch(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <CustomButton\r\n                        text=\"Search\"\r\n                        classNames=\"btn btn-primary p-1 ms-3\"\r\n                    />\r\n                </div>\r\n            </div>}\r\n            <div className=\"table-responsive tableDiv\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <TableDataHeader tableHeader={fields} />\r\n                    </thead>\r\n                    <tbody>\r\n                        {isLoading ? <tr>\r\n                            <td colSpan={fields?.length}>\r\n                                <CustomSpinner isShow={isLoading} size=\"xl\" />\r\n                            </td>\r\n                        </tr>\r\n                            :\r\n                            renderTableBody()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            {/* Pagination Controls */}\r\n            {(totalPages > 1 && pagination) && <CustomPagination\r\n                currentPage={currentPage}\r\n                totalPages={totalPages}\r\n                onPageChange={(pageNumber) => setCurrentPage(pageNumber)}\r\n            />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomTableWithSubTable\r\n"],"names":["props","t","useCustomTranslation","categoryWisePermissionData","roleOrUserWisePermissionData","updatePermissions","getCategoryWisePermissionPending","useSelector","state","permission","permissionIds","setPermissionIds","useState","Set","useEffect","permission_ids","routesField","key","label","_jsxs","className","children","_jsx","CustomSpinner","isShow","size","map","permissionData","index","toTitleCase","distinct_category","CustomTable","data","items","fields","isHeader","tableStyle","padding","boxShadow","scopedSlots","sn","_","item","CustCheckbox","id","checked","has","_id","handleChange","e","handlePermissionChecked","tempPermission","target","add","delete","name","CustomButton","text","classNames","handleClick","CustomError","allRolesData","getUserOnRole","usersOnRoleData","getRoleOrUserWisePermission","setFilters","filters","roleChecked","setRoleChecked","userChecked","setUserChecked","handleFromChange","fieldName","_e$target","value","type","prevState","params","role_id","_filters$role","role","user_id","_Fragment","Label","CustomSelect","placeholder","selectedOption","user","_createUpdatePermissi","createPermissionPending","openModel","handleOpenClose","handleCreateUpdatePermission","menuPermissionData","permissionConstantData","errors","setErrors","createUpdatePermissionFormData","setCreateUpdatePermissionFormData","route_key","routes","permission_type","title","parent","sort_order","icon","sub_title","category","prevErrors","undefined","resetForm","tabIndex","style","visibility","width","onClick","required","Input","onChange","permissionType","async","validationResponse","validateSchema","createUpdatePermissionSchema","isValid","submitCreateUpdatePermission","isLoading","Permissions","setCategoryWisePermissionData","isShowPermission","setIsShowPermission","setAllRolesData","setUsersOnRoleData","setPermissionConstantData","setMenuPermissionData","setRoleOrUserWisePermissionData","dispatch","useDispatch","getPermissionConstantPending","getPermissionConstantRes","getPermissionConstantError","getMenuPermissionPending","getMenuPermissionRes","getMenuPermissionError","getCategoryWisePermissionRes","getCategoryWisePermissionError","createPermissionRes","createPermissionError","updatePermissionPending","updatePermissionRes","updatePermissionError","getRoleOrUserWisePermissionPending","getRoleOrUserWisePermissionRes","getRoleOrUserWisePermissionError","getAllRolesPending","getAllRolesRes","getAllRolesError","roles","getUserOnRolePending","getUserOnRoleRes","getUserOnRoleError","employee","getCategoryWisePermission","getAllRoles","getPermissionConstant","getMenuPermission","permissionActions","handleClearPermissionStore","getCategoryWisePermissionRequest","code","toggleCreateUpdatePermissionModal","rolesActions","getAllRolesRequest","roleId","getPermissionConstantRequest","getMenuPermissionRequest","src","alt","PermissionFilters","payload","employeeActions","getUserOnRoleRequest","prams","getRoleOrUserWisePermissionRequest","AllPermissions","_filters$user","Array","from","updatePermissionRequest","CreateUpdatePermission","createPermissionRequest","_ref","onSearch","pagination","setCurrentPage","totalPages","currentPage","tableName","isShowSubMenu","TableName","TableDataHeader","tableHeader","colSpan","length","indexValue","getCustomTableSN","React","field","CustomTd","includes","backgroundColor","BlankTableError","totalField","CustomPagination","onPageChange","pageNumber"],"sourceRoot":""}