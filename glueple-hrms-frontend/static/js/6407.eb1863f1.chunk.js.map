{"version":3,"file":"static/js/6407.eb1863f1.chunk.js","mappings":"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","sources":["components/attendanceDashboard/AttendanceStatusCount.js","components/modal/AttendanceLogsModal.js","components/modal/attendanceDashboard/CheckInCheckOutModel.js","components/attendanceDashboard/AttendanceIDetails.js","components/modal/attendanceDashboard/PunchNotAvailable.js","components/modal/SelectLeaveTypeModal.js","view/AttendanceDashboard.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport { weekDays } from \"../../utils/Constants.config\";\r\nimport { months } from \"../../utils/Constants.config\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { attendanceDashboardActions } from '../../core/resource/actions';\r\n\r\nconst AttendanceStatusCount = () => {\r\n  const [getAttendanceSummary, setAttendanceSummary] = useState()\r\n  const { getAttendanceSummaryPending,\r\n       getAttendanceSummaryRes,\r\n    getAttendanceSummaryError} = useSelector(state => state.attendanceDashboard)\r\n\r\n    useEffect(() => {\r\n      if (!getAttendanceSummaryPending) {\r\n        if (getAttendanceSummaryError) {\r\n          return;\r\n        }\r\n        if (getAttendanceSummaryRes) {\r\n          if (getAttendanceSummaryRes?.code === 200) {\r\n            setAttendanceSummary(getAttendanceSummaryRes.data)\r\n          }\r\n        }\r\n      }\r\n    }, [\r\n      getAttendanceSummaryRes,\r\n      getAttendanceSummaryError,\r\n      getAttendanceSummaryPending\r\n    ]);\r\n  \r\n\r\n  let today = new Date();\r\n  return (\r\n    <>\r\n      <div className=\"cardBox mb-3\">\r\n        <div className=\"d-flex flex-wrap align-items-center\">\r\n          <div className=\"d-flex align-items-center gap-2 currentDate\">\r\n            <figure className=\"mb-0\">\r\n              <img src=\"images/date-icon.svg\" alt=\"\" width={55} />\r\n            </figure>\r\n            <p className=\"m-0\">\r\n              <strong>\r\n                Today,{\" \"}\r\n                {`${today.getDate()} ${\r\n                  months[today.getMonth()]\r\n                } ${today.getFullYear()}`}\r\n              </strong>\r\n              {`${weekDays[today.getDay()]}`}\r\n            </p>\r\n          </div>\r\n          <ul className=\"leavesList\">\r\n            <li>\r\n              <div className=\"leavesTxt greenColor\">\r\n                <span>Present</span>\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <strong>{getAttendanceSummary?.present_count} PR</strong>\r\n                  <i className=\"bi bi-arrow-up-right-square-fill\" />\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"leavesTxt redColor\">\r\n                <span>Half Day</span>\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <strong>0 HD</strong>\r\n                  <i className=\"bi bi-arrow-up-right-square-fill\" />\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"leavesTxt redColor\">\r\n                <span>Absent</span>\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <strong>{getAttendanceSummary?.absent_count} AB</strong>\r\n                  <i className=\"bi bi-arrow-up-right-square-fill\" />\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"leavesTxt phColor\">\r\n                <span>Public Holiday</span>\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <strong>0 PH</strong>\r\n                  <i className=\"bi bi-arrow-up-right-square-fill\" />\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"leavesTxt\">\r\n                <span>Weekly Off</span>\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <strong>{getAttendanceSummary?.week_count} WO</strong>\r\n                  <i className=\"bi bi-arrow-up-right-square-fill\" />\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"leavesTxt plColor\">\r\n                <span>Paid Leave</span>\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <strong>{getAttendanceSummary?.paid_count} PL</strong>\r\n                  <i className=\"bi bi-arrow-up-right-square-fill\" />\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"leavesTxt yelloColor\">\r\n                <span>Leave Without Pay</span>\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <strong>0 LW</strong>\r\n                  <i className=\"bi bi-arrow-up-right-square-fill\" />\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttendanceStatusCount;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustomTable } from '../reuseableComponents';\r\nimport { attendanceCorrectionActions } from '../../core/resource/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { dateFormate } from '../../utils/common';\r\n\r\n\r\nconst AttendanceLogsModal = (props) => {\r\n    const dispatch = useDispatch()\r\n    const {\r\n        isOpen,\r\n        handleOpenClose,\r\n        // attendanceLogsData,\r\n        selectedData,\r\n    } = props\r\n    const [attendanceLogsData, setAttendanceLogsData] = useState([])\r\n    const [currentPage, setCurrentPage] = useState()\r\n    const {\r\n        getAttendanceLogsPending,\r\n        getAttendanceLogsRes,\r\n        getAttendanceLogsError,\r\n\r\n    } = useSelector(state => state.attendanceCorrection)\r\n\r\n    const attendanceLogsFields = [\r\n        { key: \"sn\", label: \"S.N\" },\r\n        { key: \"punch_time\", label: \"Time\" },\r\n        { key: \"device_from_name\", label: \"Activity Name\" },\r\n        { key: \"log_type\", label: \"IN/OUT\" }\r\n    ]\r\n    const attendanceLogsScopedSlots = {\r\n        sn: (_, index) => (\r\n            <span className='srNum'>{index + 1}</span>\r\n        ),\r\n        punch_time: (item, index) => (\r\n            <span > {dateFormate(item?.punch_time,\"LTS\")}</span>\r\n        ),\r\n\r\n    };\r\n    useEffect(() => {\r\n        getAttendanceLogs()\r\n    }, [selectedData])\r\n    /* Get Attendance Logs */\r\n    const getAttendanceLogs = () => {\r\n        const payload = {\r\n            date: selectedData?.attendance_date,\r\n            emp_id: selectedData?.emp_id\r\n        }\r\n        dispatch(attendanceCorrectionActions.getAttendanceLogsRequest(payload))\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (!getAttendanceLogsPending) {\r\n            if (getAttendanceLogsError) {\r\n                return;\r\n            }\r\n            if (getAttendanceLogsRes) {\r\n                if (getAttendanceLogsRes?.code === 200) {\r\n                    setAttendanceLogsData(getAttendanceLogsRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAttendanceLogsRes,\r\n        getAttendanceLogsError,\r\n        getAttendanceLogsPending\r\n    ]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div class=\"modal fade attendanceViewodal\" id=\"viewModal\" style={{ display: isOpen ? \"unset !important\" : \"none !important\", opacity: isOpen ? \"unset\" : \"0\" }}>\r\n                <div class=\"modal-dialog modal-dialog-centered\">\r\n                    <div class=\"modal-content rounded-0 border-0\">\r\n                        <div class=\"modal-header border-0\">\r\n                            <h1 class=\"modal-title fs-5 fw-bold text-primary\">Attendance Logs\r\n                            </h1>\r\n                            <button type=\"button\"\r\n                                class=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                onClick={() => handleOpenClose()}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <div class=\"d-flex align-items-center justify-content-between mb-3\">\r\n                                <strong class=\"fs-7 text-primary\">\r\n                                    <span class=\"text-light fw-normal\">Date :</span>\r\n                                    {dateFormate(selectedData?.attendance_date)}\r\n                                </strong>\r\n                                <strong class=\"fs-7 text-primary\">{selectedData?.day_of_week}</strong>\r\n\r\n                            </div>\r\n                            <div class=\"timeCountmdl\">\r\n                                <strong>\r\n                                    <span>{selectedData?.total_working_hours || \"00:00:00\"}</span>\r\n                                    Working Hours\r\n                                </strong>\r\n                                <strong>\r\n                                    <span>{selectedData?.total_break_time || \"00:00:00\"}</span>\r\n                                    Break Time\r\n                                </strong>\r\n                            </div>\r\n                            <div class=\"table-responsive attendanceTbl\">\r\n                                <CustomTable\r\n                                    data={attendanceLogsData}\r\n                                    fields={attendanceLogsFields}\r\n                                    isLoading={getAttendanceLogsPending}\r\n                                    pagination={true}\r\n                                    currentPage={currentPage}\r\n                                    setCurrentPage={setCurrentPage}\r\n                                    totalPages={''}\r\n                                    isHeader={false}\r\n                                    tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                                    scopedSlots={attendanceLogsScopedSlots}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttendanceLogsModal\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\r\nimport Webcam from 'react-webcam';\r\nimport { FaceDetection } from '@mediapipe/face_detection';\r\nimport { Camera } from '@mediapipe/camera_utils';\r\n\r\n\r\nconst CheckInCheckOutModel = (props) => {\r\n    const webcamRef = useRef(null);\r\n    const cameraRef = useRef(null);\r\n    const { checkInModel, setCheckInModel, checkInOutSave, attendanceType, checkInStatus } = props\r\n    const [isCamera, setIsCamera] = useState(true);\r\n    const [isWebCamAvailable, setIsWebCamAvailable] = useState(false);\r\n    const [captureImage, setCaptureImage] = useState('');\r\n    const [isOpen, setIsOpen] = useState(true)\r\n    const [loader, setloader] = useState(true)\r\n    const [faceDetected, setFaceDetected] = useState(false);\r\n\r\n    const videoConstraints = {\r\n        width: 1280,\r\n        height: 720,\r\n        facingMode: 'user',\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        checkMediaAndAccess();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setCaptureImage(isWebCamAvailable ? '' : \"no_cam\");\r\n    }, [isWebCamAvailable]);\r\n\r\n    const checkMediaAndAccess = async () => {\r\n        try {\r\n            // Ensure navigator.mediaDevices exists\r\n            if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\r\n                console.error(\"MediaDevices API is not supported in this browser.\");\r\n                setIsWebCamAvailable(false);\r\n                setCaptureImage(\"no_cam\");\r\n                return;\r\n            }\r\n    \r\n            // Check for available devices\r\n            const devices = await navigator.mediaDevices.enumerateDevices();\r\n            const hasVideoInput = devices.some(device => device.kind === \"videoinput\");\r\n    \r\n            if (hasVideoInput) {\r\n                setIsWebCamAvailable(true);\r\n                setCaptureImage(\"\");\r\n            } else {\r\n                setIsWebCamAvailable(false);\r\n                setCaptureImage(\"no_cam\");\r\n            }\r\n    \r\n            // Check for camera availability using getUserMedia\r\n            if (navigator.mediaDevices.getUserMedia) {\r\n                await navigator.mediaDevices.getUserMedia({ video: true })\r\n                    .then(() => setIsCamera(true))\r\n                    .catch(err => {\r\n                        console.error(\"Error accessing webcam:\", err);\r\n                        setIsCamera(false);\r\n                    });\r\n            } else {\r\n                // Fallback for older browsers\r\n                const getMedia = navigator.getUserMedia ||\r\n                    navigator.webkitGetUserMedia ||\r\n                    navigator.mozGetUserMedia ||\r\n                    navigator.msGetUserMedia;\r\n    \r\n                if (getMedia) {\r\n                    getMedia(\r\n                        { video: true },\r\n                        () => setIsCamera(true),\r\n                        err => {\r\n                            console.error(\"Fallback error accessing webcam:\", err);\r\n                            setIsCamera(false);\r\n                        }\r\n                    );\r\n                } else {\r\n                    console.error(\"getUserMedia is not supported in this browser.\");\r\n                    setIsCamera(false);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"An error occurred during media access:\", error);\r\n            setIsWebCamAvailable(false);\r\n            setCaptureImage(\"no_cam\");\r\n            setIsCamera(false);\r\n        }\r\n    };\r\n    \r\n\r\n    // const checkMediaAndAccess = async() => {\r\n    //    await navigator.mediaDevices.enumerateDevices().then(devices =>\r\n    //         devices.forEach(device => {\r\n    //             console.log({ device });\r\n    //             if (device.kind === 'videoinput') {\r\n    //                 setIsWebCamAvailable(true);\r\n    //                 setCaptureImage('');\r\n    //             }\r\n    //         }),\r\n    //     );\r\n\r\n    //     navigator.getMedia =\r\n    //         navigator.getUserMedia || // use the proper vendor prefix\r\n    //         navigator.webkitGetUserMedia ||\r\n    //         navigator.mozGetUserMedia ||\r\n    //         navigator.msGetUserMedia;\r\n\r\n    //     navigator.mediaDevices.getUserMedia(\r\n    //         { video: true },\r\n    //         function () {\r\n    //             setIsCamera(true);\r\n    //         },\r\n    //         function (err) {\r\n    //             setIsCamera(false);\r\n    //             // toast.warning('webcam is not available');\r\n    //         },\r\n    //     );\r\n    // };\r\n\r\n    const capture = useCallback(() => {\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        setCaptureImage(imageSrc);\r\n    }, [webcamRef]);\r\n\r\n    const checkInBtn = async () => {\r\n        if (!captureImage && isWebCamAvailable) {\r\n            //   toast.warning('Please capture image');\r\n            return;\r\n        }\r\n        let location;\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            location = {\r\n                latitude: position.coords.latitude,\r\n                longitude: position.coords.longitude,\r\n            };\r\n            checkInOutSave(\r\n                location,\r\n                captureImage,\r\n                attendanceType\r\n            );\r\n            setCaptureImage(isWebCamAvailable ? '' : 'no_cam');\r\n        });\r\n    };\r\n    useEffect(() => {\r\n            if (checkInModel && webcamRef.current) {\r\n                const videoElement = webcamRef.current.video;\r\n    \r\n                // Create face detection model\r\n                const faceDetectionModel = new FaceDetection({\r\n                    locateFile: (file) => {\r\n                        return `https://cdn.jsdelivr.net/npm/@mediapipe/face_detection/${file}`;\r\n                    },\r\n                });\r\n    \r\n                faceDetectionModel.setOptions({\r\n                    model: 'short',\r\n                    minDetectionConfidence: 0.5,\r\n                });\r\n    \r\n                faceDetectionModel.onResults((results) => {\r\n                    // Debugging\r\n                    // console.log(\"Face Detection Results:\", results);\r\n                    if (results.detections.length > 0) {\r\n                        setFaceDetected(true);\r\n                    } else {\r\n                        setFaceDetected(false);\r\n                    }\r\n                });\r\n    \r\n                const camera = new Camera(videoElement, {\r\n                    onFrame: async () => {\r\n                        await faceDetectionModel.send({ image: videoElement });\r\n                    },\r\n                    width: 1280,\r\n                    height: 720,\r\n                });\r\n    \r\n                camera.start();\r\n                cameraRef.current = camera;\r\n            } else {\r\n                stopCamera();\r\n            }\r\n            return () => {\r\n                stopCamera();\r\n            };\r\n    }, [checkInModel]);\r\n\r\n    const stopCamera = () => {\r\n        if (webcamRef.current) {\r\n            const stream = webcamRef.current.video.srcObject;\r\n            if (stream) {\r\n                const tracks = stream.getTracks();\r\n                tracks.forEach((track) => track.stop());\r\n            }\r\n        }\r\n\r\n        if (cameraRef.current) {\r\n            cameraRef.current.stop(); // Stop the MediaPipe camera\r\n            cameraRef.current = null; // Clear reference\r\n        }\r\n    };\r\n\r\n    const getBtnOptions = () => {\r\n        const data = { label: 'Check In', color: 'success' };\r\n        if (checkInStatus && attendanceType === 'attendance') {\r\n            data.label = 'Check Out';\r\n            data.color = 'danger';\r\n        }\r\n        if (!checkInStatus && captureImage && attendanceType === 'attendance') {\r\n            data.label = 'Check In';\r\n            data.color = 'success';\r\n        }\r\n        if (checkInStatus && attendanceType === 'short_break') {\r\n            data.label = 'Take short break';\r\n            data.color = 'danger';\r\n        }\r\n        if (!checkInStatus && captureImage && attendanceType === 'short_break') {\r\n            data.label = 'End short break';\r\n            data.color = 'success';\r\n        }\r\n        if (checkInStatus && attendanceType === 'long_break') {\r\n            data.label = 'Take long break';\r\n            data.color = 'danger';\r\n        }\r\n        if (!checkInStatus && captureImage && attendanceType === 'long_break') {\r\n            data.label = 'End long break';\r\n            data.color = 'success';\r\n        }\r\n        if (checkInStatus && attendanceType === 'other_break') {\r\n            data.label = 'Take other break';\r\n            data.color = 'danger';\r\n        }\r\n        if (!checkInStatus && captureImage && attendanceType === 'other_break') {\r\n            data.label = 'End other break';\r\n            data.color = 'danger';\r\n        }\r\n        return data;\r\n    };\r\n    const attBtnOptions = getBtnOptions();\r\n    return (\r\n        <div>\r\n            <div className=\"modal fade attendanceViewodal\" style={{ display: checkInModel ? \"unset !important\" : \"none !important\", opacity: checkInModel ? \"unset\" : \"0\" }} >\r\n                <div className=\"modal-dialog modal-dialog-centered\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header border-0 pb-0\">\r\n                            <h1 className=\"modal-title fs-5 fw-bold text-primary\">{attBtnOptions.label}</h1>\r\n                            <button type=\"button\" className=\"btn-close\" onClick={() => {setCheckInModel(!checkInModel)}}></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"checkInModaltxt\">\r\n                                {!isWebCamAvailable && (\r\n                                    <div className=\"row\">\r\n                                        <div className=\"row text-center mt-3\">\r\n                                            <div className=\"col-md-12 mb-5\">\r\n                                                <h3>Unable to detect your webcam</h3>\r\n                                                <span>\r\n                                                    Your request will be sent to your reporting manager for\r\n                                                    approval.\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <button color={attBtnOptions.color} onClick={checkInBtn}>\r\n                                                    Click to {attBtnOptions.label}{' '}\r\n                                                    {loader && (\r\n                                                        <i\r\n                                                            className=\"fa fa-spinner fa-spin\"\r\n                                                            style={{ textAlignLast: 'center' }}\r\n                                                        ></i>\r\n                                                    )}\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                {!captureImage && (<>\r\n\r\n                                    {isOpen && (\r\n                                        <>\r\n                                            {isCamera == true ? (\r\n                                                <Webcam\r\n                                                    audio={false}\r\n                                                    height={250}\r\n                                                    ref={webcamRef}\r\n                                                    screenshotFormat=\"image/jpeg\"\r\n                                                    width={400}\r\n                                                    videoConstraints={videoConstraints}\r\n                                                />) : (<div className=\"mt-5\">\r\n                                                    <img\r\n                                                        src={'images/cameranotavailable.png'}\r\n                                                        alt=\"User Image\"\r\n                                                        height=\"172\"\r\n                                                        width=\"280\"\r\n                                                    ></img>\r\n                                                    <h3 className=\"mt-2\">camera not available</h3>\r\n                                                    <h5 className=\"mt-2\">Login with your mobile</h5>\r\n                                                </div>)}\r\n                                        </>)}\r\n                                </>)}\r\n                                {captureImage && isCamera == true && (\r\n                                    <div className=\"col-md\">\r\n                                        <div className=\"text-center\" style={{ margin: 'auto' }}>\r\n                                            <h5 align=\"center\" style={{ color: '#6f4e37' }}>\r\n                                                CAPTURE IMAGE\r\n                                            </h5>\r\n                                            <div className=\"mt-5\">\r\n                                                <img\r\n                                                    src={\r\n                                                        captureImage && captureImage !== \"no_cam\"\r\n                                                            ? captureImage\r\n                                                            : 'images/capture.jpeg'\r\n                                                    }\r\n                                                    alt=\"User Image\"\r\n                                                    height=\"220\"\r\n                                                    width=\"400\"\r\n                                                ></img>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <strong className=\"fs-6 d-block text-primary mb-1 text-center\">NOTE</strong>\r\n                                <p className=\"text-center\">\r\n                                    Please align with camera then press capture button below\r\n                                </p>\r\n\r\n                                <div className=\"text-center\">\r\n                                    {/* {faceDetected  && */}\r\n                                        <>\r\n                                            {/* <p className=\"text-center text-success\">Face detected! You can now capture your image.</p> */}\r\n                                            <button type=\"button\"\r\n                                                className=\"btn btn-primary gradientBg w-75 d-flex align-items-center justify-content-center mx-auto\" onClick={captureImage ? () => setCaptureImage('') : capture}\r\n                                                disabled={!faceDetected}>\r\n                                                {!captureImage ? (\r\n                                                    <img src=\"images/capture.svg\" alt=\"\" width=\"20\" className=\"me-2\" />\r\n                                                ) : (\r\n                                                    <i className=\"fa fa-repeat\" aria-hidden=\"true\"></i>\r\n                                                )}\r\n                                            </button>\r\n                                        </>\r\n                                    \r\n                                         {/* <p className=\"text-center text-danger\">No face detected. Please align with the camera.</p> */}\r\n                                    {/* } */}\r\n\r\n                                    {captureImage &&\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-primary bg-success w-75 mt-2  d-flex align-items-center justify-content-center  mx-auto \" color={attBtnOptions.color}\r\n                                            style={{ display: \"none !important\" }} onClick={checkInBtn}>\r\n                                            <img src=\"images/checkIn-icon.svg\" alt=\"\" width=\"15\" className=\"me-2\" />{attBtnOptions.label}\r\n                                        </button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {checkInModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </div>\r\n         \r\n    )\r\n}\r\n\r\nexport default CheckInCheckOutModel","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { attendanceDashboardActions } from '../../core/resource/actions';\r\nimport CheckInCheckOutModel from \"../modal/attendanceDashboard/CheckInCheckOutModel\";\r\nimport ApexCharts from 'react-apexcharts';\r\nimport { subtractFromMomentDate, workHoursPercentages, addInMomentDate, currentDateAndTime,timeStringToDuration } from \"../../utils/AppHelper\"\r\nimport { CustomSpinner } from \"../globalComponents\";\r\n\r\n\r\nconst AttendanceIDetails = (props) => {\r\n  const { getCheckInCheckOutdata } = props\r\n  const dispatch = useDispatch()\r\n  const { getCheckInCheckOutPending,\r\n    getCheckInCheckOutRes,\r\n    getCheckInCheckOutError,\r\n\r\n    checkInCheckOutPending,\r\n    checkInCheckOutRes,\r\n    checkInCheckOutError,\r\n\r\n    getAttendanceDashBoardPending,\r\n    getAttendanceDashBoardRes,\r\n    getAttendanceDashBoardError,\r\n  } = useSelector(state => state.attendanceDashboard)\r\n  const [getAttendanceLog, setAttendacenLog] = useState()\r\n  const [checkInModel, setCheckInModel] = useState(false)\r\n  const [checkInStatus, setCheckInStatus] = useState(false);\r\n  const [attendanceType, setAttendanceType] = useState('attendance');\r\n  const [timer, setTimer] = useState('00:00:00');\r\n  const [shiftHours, setShiftHours] = useState(\"00:00:00\")\r\n  const [timeLeft, setTimeLeft] = useState(\"00:00:00\")\r\n  const [workHoursPercentage, setWorkHoursPercentage] = useState(\"00\")\r\n  const [monthlyCount, setMonthlyCount] = useState({})\r\n  const [monthlyAttendanceDetails, setmonthlyAttendanceDetails] = useState({})\r\n  \r\n  \r\n\r\n  const options = {\r\n    chart: {\r\n      type: 'radialBar',\r\n      height: 300,\r\n    },\r\n    plotOptions: {\r\n      radialBar: {\r\n        hollow: {\r\n          size: '70%',\r\n        },\r\n        track: {\r\n          background: '#e7eefc',\r\n        },\r\n        dataLabels: {\r\n          show: false,\r\n          name: {\r\n            show: false,\r\n          },\r\n          value: {\r\n            fontSize: '22px',\r\n            offsetY: -10,\r\n            formatter: (val) => `${val}%`,\r\n          },\r\n          total: {\r\n            show: false,\r\n            label: 'in office',\r\n            formatter: function () {\r\n              return `${workHoursPercentage}%<br>in office<br>${workHoursPercentage < 50 ? 'POOR' : 'GOOD'\r\n                }`;\r\n            },\r\n            style: {\r\n              fontSize: '16px',\r\n              color: '#000',\r\n              fontWeight: 'bold',\r\n              textAlign: 'center',\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    fill: {\r\n      colors: ['#1D5A7F'], // Radial fill color\r\n    },\r\n    stroke: {\r\n      lineCap: 'round',\r\n    },\r\n  };\r\n\r\n  const series = [workHoursPercentage];\r\n\r\n  // const [chartOptions, setChartOptions] = useState({\r\n  //   chart: {\r\n  //     type: 'donut',\r\n  //   },\r\n  //   labels: ['Worked Hours', 'Remaining Hours', 'Overtime Hours'],\r\n  //   colors: ['#00E396', '#FEB019', '#FF4560'],\r\n  //   plotOptions: {\r\n  //     pie: {\r\n  //       donut: {\r\n  //         size: '80%',\r\n  //         labels: {\r\n  //           show: false,\r\n  //           total: {\r\n  //             show: true,\r\n  //             label: '190hrs',\r\n  //             formatter: () => '190hrs',\r\n  //             fontSize: '20px',\r\n  //           },\r\n  //         },\r\n  //       },\r\n  //     },\r\n  //   },\r\n  //   legend: {\r\n  //     show: false,\r\n  //   },\r\n  //   tooltip: {\r\n  //     enabled: false,\r\n  //   },\r\n  // });\r\n \r\n  \r\n  \r\n  // const [seriess] = useState(totalWorkingHoursInMinute);\r\n\r\n\r\n\r\n  const CheckInCheckModel = () => {\r\n    setCheckInModel(!checkInModel)\r\n  }\r\n  useEffect(() => {\r\n    setTimeLeft(subtractFromMomentDate(shiftHours, 'HH:mm', timer, 'seconds', \"HH:mm:ss\"));\r\n    setWorkHoursPercentage(workHoursPercentages(shiftHours, timer));\r\n  }, [timer, shiftHours]);\r\n\r\n  useEffect(() => {\r\n    if (!getAttendanceDashBoardPending) {\r\n      if (getAttendanceDashBoardError) {\r\n        return;\r\n      }\r\n      if (getAttendanceDashBoardRes) {\r\n        if (getAttendanceDashBoardRes?.code === 200) {\r\n          setMonthlyCount(getAttendanceDashBoardRes?.data?.attendanceCount)\r\n          setmonthlyAttendanceDetails(getAttendanceDashBoardRes?.data?.monthlyAttendanceDetails)\r\n\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAttendanceDashBoardRes,\r\n    getAttendanceDashBoardError,\r\n    getAttendanceDashBoardPending\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!getCheckInCheckOutPending) {\r\n      if (getCheckInCheckOutError) {\r\n        return;\r\n      }\r\n      if (getCheckInCheckOutRes) {\r\n        if (getCheckInCheckOutRes?.data?.code === 200) {\r\n          const checkInCheck = getCheckInCheckOutRes?.data?.data?.attendanceLog\r\n          setAttendacenLog(checkInCheck)\r\n          setCheckInStatus(checkInCheck?.log_type === 'IN')\r\n          const {\r\n            firstEntryTime,\r\n            workHours,\r\n            workMinutes,\r\n            workSeconds,\r\n            shift_full_day_working_hours,\r\n          } = getCheckInCheckOutRes?.data?.data?.attendanceTime\r\n          if (firstEntryTime) {\r\n            let workTime = `${workHours}:${workMinutes}:${workSeconds}`;\r\n            setShiftHours(shift_full_day_working_hours)\r\n            const intervalFun = setInterval(() => {\r\n              workTime = addInMomentDate(workTime, 'hh:mm:ss', 1, \"seconds\", \"HH:mm:ss\")\r\n              setTimer(workTime);\r\n            }, 1000);\r\n            return () => clearInterval(intervalFun);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getCheckInCheckOutRes,\r\n    getCheckInCheckOutError,\r\n    getCheckInCheckOutPending\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!checkInCheckOutPending) {\r\n      if (checkInCheckOutError) {\r\n        return;\r\n      }\r\n      if (checkInCheckOutRes) {\r\n        if (checkInCheckOutRes?.data?.code === 200) {\r\n          dispatch(attendanceDashboardActions.handleClearAttendanceDashboardStore(\"HANDLE_CLEAR_CHECK_IN_CHECK_OUT_STORE\"))\r\n          getCheckInCheckOutdata()\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    checkInCheckOutRes,\r\n    checkInCheckOutError,\r\n    checkInCheckOutPending\r\n  ]);\r\n  \r\n  const checkInOutSave = (location, captureImage, attendanceTypes) => {\r\n    let data = {\r\n      log_type: checkInStatus ? 'OUT' : 'IN',\r\n      ip_address: \"\",\r\n      punch_time: currentDateAndTime(\"YYYY-MM-DD HH:mm:ss\"),\r\n      latitude: location?.latitude,\r\n      longitude: location?.longitude,\r\n      emp_img: captureImage,\r\n      device_from: \"web\",\r\n      user_agent: navigator.userAgent,\r\n      attendance_type: attendanceTypes\r\n    }\r\n    dispatch(attendanceDashboardActions.checkInCheckOutRequest(data))\r\n    CheckInCheckModel()\r\n  }\r\n  const data = null;\r\n  return (\r\n    <div className=\"row px-md-1\">\r\n      <div className=\"col-md-4 px-md-2 mb-3\">\r\n        <div className=\"cardBox h-100 pt-2\">\r\n          <div className=\"cardHead d-flex justify-content-between align-items-center border-bottom pb-2 mb-3\">\r\n            <h3 className=\"mb-0 fs-7\">Today</h3>\r\n            <span className=\"badge text-bg-success py-2 px-3 rounded-5 presentStatus\">\r\n              {/* Present */}\r\n            </span>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"presentContent\">\r\n                <img\r\n                  src=\"images/finger-print-icon.svg\"\r\n                  alt=\"\"\r\n                  width={25}\r\n                  className=\"mb-2\"\r\n                />\r\n                <p>You have not marked yourself as present today !</p>\r\n                <strong className=\"timerStrong\">\r\n                  <span>Time Left:</span>\r\n                  {timeLeft}\r\n                </strong>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-6 ps-0\">\r\n              <div className=\"presentGrphDiv\">\r\n\r\n                <ApexCharts options={options} series={series} type=\"radialBar\" height={300} />\r\n                <div className=\"presnedGraphTxt\">\r\n                  <strong>{workHoursPercentage}%</strong>\r\n                  <span>in office</span>\r\n                  <p>{workHoursPercentage < 50 ? \"POOR\" : \"GOOD\"}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary gradientBg mt-2 w-100\"\r\n            // data-bs-toggle=\"modal\"\r\n            // data-bs-target=\"#checkInModal\"\r\n            onClick={() => CheckInCheckModel()}\r\n          >\r\n            {checkInStatus ? \"Check Out\" : \"Check IN\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-4 px-md-2 mb-3\">\r\n        <div className=\"row px-md-1\">\r\n          <div className=\"col-6 px-md-2 mb-3\">\r\n            <div className=\"cardBox h-100 daysBox\" style={{minHeight: '110px'}}>\r\n              <div>\r\n                <span className=\"d-block\">Total Working Days</span>\r\n                <strong className=\"d-block\">{monthlyCount?.total_working_days}</strong>\r\n              </div>\r\n              <figure>\r\n                <img width={20} src=\"images/days-icon.svg\" alt=\"\" />\r\n              </figure>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6 px-md-2 mb-3\">\r\n            <div className=\"cardBox h-100 daysBox\" style={{minHeight: '110px'}}>\r\n              <div>\r\n                <span className=\"d-block\">\r\n                  Days <br />\r\n                  Present\r\n                </span>\r\n                <strong className=\"d-block\">{monthlyCount?.present_count}</strong>\r\n              </div>\r\n              <figure>\r\n                <img width={20} src=\"images/leaves-icon.svg\" alt=\"\" />\r\n              </figure>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6 px-md-2\">\r\n            <div className=\"cardBox h-100 daysBox\" style={{minHeight: '110px'}}>\r\n              <div>\r\n                <span className=\"d-block\">\r\n                  Days <br />\r\n                  Absent\r\n                </span>\r\n                <strong className=\"d-block\">{monthlyCount?.absent_count}</strong>\r\n              </div>\r\n              <figure>\r\n                <img width={20} src=\"images/days-icon.svg\" alt=\"\" />\r\n              </figure>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6 px-md-2\">\r\n            <div className=\"cardBox h-100 daysBox\" style={{minHeight: '110px'}}>\r\n              <div>\r\n                <span className=\"d-block\">\r\n                  Leave <br />\r\n                  Taken\r\n                </span>\r\n                <strong className=\"d-block\">{monthlyCount?.paid_count}</strong>\r\n              </div>\r\n              <figure>\r\n                <img width={20} src=\"images/leaves-icon.svg\" alt=\"\" />\r\n              </figure>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"logInmain\">\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"col-md-4 px-md-2 border-end\">\r\n              <div className=\"d-flex justify-content-between align-items-center logIn\">\r\n                <figure className=\"m-0\">\r\n                  <img\r\n                    src=\"images/weblogin.svg\"\r\n                    alt=\"\"\r\n                    width={22}\r\n                    height={22}\r\n                  />\r\n                </figure>\r\n                <div className=\"text-end\">\r\n                  <span className=\"d-block\">Web</span>\r\n                  <strong className=\"d-block\">{monthlyCount?.web_count}</strong>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 px-md-2 border-end\">\r\n              <div className=\"d-flex justify-content-between align-items-center logIn\">\r\n                <figure className=\"m-0\">\r\n                  <img\r\n                    src=\"images/mobilelogin.svg\"\r\n                    alt=\"\"\r\n                    width={22}\r\n                    height={22}\r\n                  />\r\n                </figure>\r\n                <div className=\"text-end\">\r\n                  <span className=\"d-block\">Mobile</span>\r\n                  <strong className=\"d-block\">{monthlyCount?.mobile_count}</strong>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4 px-md-2\">\r\n              <div className=\"d-flex justify-content-between align-items-center logIn\">\r\n                <figure className=\"m-0\">\r\n                  <img\r\n                    src=\"images/biometriclogin.svg\"\r\n                    alt=\"\"\r\n                    width={20}\r\n                    height={20}\r\n                  />\r\n                </figure>\r\n                <div className=\"text-end\">\r\n                  <span className=\"d-block\">Biometric</span>\r\n                  <strong className=\"d-block\">{monthlyCount?.biometric_count}</strong>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-4 px-md-2 mb-3 monthlyCard\">\r\n        <div className=\"cardBox h-100 pt-2 \">\r\n          <div className=\"cardHead border-bottom pb-2 mb-3\">\r\n            <h3 className=\"mb-0 fs-7 py-1\">Monthly hourly Attendance</h3>\r\n          </div>\r\n          <div className=\"row mb-5 align-items-center\">\r\n            <div className=\"col-6\">\r\n              <ul className=\"hrsChartInfo\">\r\n                <li className=\"mb-3\">\r\n                  {monthlyAttendanceDetails?.totalWorkingHours} <span>Working hrs</span>\r\n                </li>\r\n                <li className=\"mb-3\">\r\n                  00:00:00  <span>C-OFF hrs</span>\r\n                </li>\r\n                <li className=\"mb-3\">\r\n                  {monthlyAttendanceDetails?.totalBreakHours}  <span>Break hrs</span>\r\n                </li>\r\n                <li className=\"mb-3\">\r\n                  00:00:00 <span>Other</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <div className=\"presentGrphDiv\">\r\n                {/* <div id=\"hrsChart\" style={{ width: \"100%\", height: \"128px\" }} /> */}\r\n                {/* <ApexCharts \r\n                  options={chartOptions}\r\n                  series={seriess}\r\n                  type=\"donut\"\r\n                  width=\"160\"\r\n                /> */}\r\n                <div className=\"presnedGraphTxt\">\r\n                  <strong>{monthlyAttendanceDetails?.totalWorkingHours}</strong>\r\n                  <span>/{monthlyAttendanceDetails?.totalWorkingDuration}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"pt-3  border-top d-flex align-items-center justify-content-between\">\r\n            <strong className=\"timerStrong\">\r\n              <span>Average Login</span>\r\n              {monthlyAttendanceDetails?.averageWorkingHours}\r\n              {/* {`${data?.data?.attendance_basic_details?.average_login_time.split(\":\")[0]}hrs ${data?.data?.attendance_basic_details?.average_login_time.split(\":\")[1]}m ${data?.data?.attendance_basic_details?.average_login_time.split(\":\")[2]}s`} */}\r\n\r\n            </strong>\r\n            <strong className=\"timerStrong\">\r\n              <span>Average Break hrs</span>\r\n              {monthlyAttendanceDetails?.averageBreakHours}\r\n              {/* 1hr 01m */}\r\n            </strong>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {checkInModel && <CheckInCheckOutModel\r\n        checkInModel={checkInModel}\r\n        setCheckInModel={setCheckInModel}\r\n        checkInOutSave={checkInOutSave}\r\n        checkInStatus={checkInStatus}\r\n        attendanceType={attendanceType}\r\n      />}\r\n      {checkInCheckOutPending && <CustomSpinner isShow={checkInCheckOutPending} size=\"lg\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceIDetails;\r\n","import React from 'react'\r\n\r\nconst PunchNotAvailable = (props) => {\r\n    const {openModel,handleOpenClose}=props\r\n    return (\r\n        <div className={`modal fade attendanceLog ${openModel ? 'show' : ''}`} id=\"attenLogs\"\r\n            tabIndex=\"-1\"\r\n            style={{ display: openModel ? 'block' : 'none', }}\r\n            aria-hidden={!openModel}\r\n        >\r\n            <div className=\"modal-dialog modal-dialog-centered\">\r\n                <div className=\"modal-content rounded-0 border-0\">\r\n                    <div className=\"modal-header border-0\">\r\n                        <h1 className=\"modal-title fs-5 fw-bold text-primary\">\r\n                            Attendance Correction\r\n                        </h1>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn-close\"\r\n                            // data-bs-dismiss=\"modal\"\r\n                            // aria-label=\"Close\"\r\n                            onClick={() => handleOpenClose()}\r\n                        />\r\n                    </div>\r\n                    <div className=\"modal-body pt-0\">\r\n                        <div className=\"table-responsive tableDiv\">\r\n                            <p>\r\n                                No Punches were found through the machine or glueple.\r\n                                So, you are not eligible to apply for correction. Please contact your respective HR for updation\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PunchNotAvailable\r\n","import React, { useState } from \"react\";\r\nimport CorrectionApplication from \"../leave_management/attendanceCorrectionApplication/CorrectionApplication\";\r\nimport AttendanceLogs from \"../leave_management/attendanceLogsApplication/AttendanceLogs\";\r\nimport { isBeforeMoment } from \"../../utils/common\";\r\nimport { PunchNotAvailable } from \"./attendanceDashboard\";\r\nimport AttendanceLogsModal from \"./AttendanceLogsModal\";\r\nimport LeaveApplication from \"../leave_management/leaveApplication/LeaveApplication\";\r\nimport TourApplication from \"../leave_management/tourApplication/TourApplication\";\r\n\r\nconst SelectLeaveTypeModal = (props) => {\r\n  const { selectedCalenderData, isOpen, handleOpenClose } = props\r\n  const [isShowCorrectionModel, setIsShowCorrectionMode] = useState()\r\n  const [isShowAllBreak, setIsShowAllBreak] = useState(false)\r\n  const [viewModalType, setViewModalType] = useState('')\r\n  const [updatedLogsData, setUpdatedLogsData] = useState([])\r\n  const [isShowAttendanceLogs, setIsShowAttendanceLogs] = useState(false)\r\n  const [isOpenLeave, setIsOpenLeave] = useState(false)\r\n  const [isOpenTourModal, setIsOpenTourModal] = useState(false)\r\n\r\n  /* Apply Attendance Correction  */\r\n  const toggleCorrectionApplicationModal = () => {\r\n    setIsShowCorrectionMode(!isShowCorrectionModel)\r\n  }\r\n  const toggleShowAllBreakModal = (type) => {\r\n    if (type === \"showLogs\") {\r\n      setIsShowAllBreak(!isShowAllBreak)\r\n      setViewModalType(type)\r\n    } else {\r\n      setIsShowAllBreak(!isShowAllBreak)\r\n      setIsShowCorrectionMode(!isShowCorrectionModel)\r\n      setViewModalType('')\r\n    }\r\n  }\r\n  const toggleAttendanceLogs = () => {\r\n    setIsShowAttendanceLogs(!isShowAttendanceLogs)\r\n  }\r\n  const toggleLeaveApplyModal = () => {\r\n    setIsOpenLeave(!isOpenLeave)\r\n  }\r\n\r\n  const toggleTourApplicationModel = () => {\r\n    setIsOpenTourModal(!isOpenTourModal)\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"modal fade selectModal\" id=\"selectModal\" style={{ display: isOpen ? \"unset !important\" : \"none !important\", opacity: isOpen ? \"unset\" : \"0\" }}>\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content rounded-0 border-0\">\r\n            <div className=\"modal-header border-0 pb-0\">\r\n              <h1 className=\"modal-title fs-5 fw-bold text-primary\">Select</h1>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n                onClick={() => handleOpenClose()}\r\n              />\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"row px-md-1\">\r\n                {<div className=\"col-md-6 px-md-2 mb-3\" onClick={() => toggleLeaveApplyModal()}>\r\n                  <span\r\n\r\n                    className=\"totalBx h-100\"\r\n                  >\r\n                    <figure>\r\n                      <img src=\"images/totalleaves-icon.svg\" alt=\"\" width={50} />\r\n                    </figure>\r\n                    <h3 className=\"fw-bolder my-0\">Apply Leave</h3>\r\n                    <img\r\n                      src=\"images/totalattendance.svg\"\r\n                      className=\"cornerLine\"\r\n                      alt=\"\"\r\n                      width={95}\r\n                    />\r\n                  </span>\r\n                </div>}\r\n                <div className=\"col-md-6 px-md-2 mb-3\">\r\n                  <span\r\n\r\n                    className=\"totalBx h-100\"\r\n                    onClick={() => toggleTourApplicationModel()}\r\n                  >\r\n                    <figure>\r\n                      <img src=\"images/apply-tour.svg\" alt=\"\" width={50} />\r\n                    </figure>\r\n                    <h3 className=\"fw-bolder my-0\">Apply Tour</h3>\r\n                    <img\r\n                      src=\"images/totalattendance.svg\"\r\n                      className=\"cornerLine\"\r\n                      alt=\"\"\r\n                      width={80}\r\n                    />\r\n                  </span>\r\n                </div>\r\n                {\r\n                  isBeforeMoment(selectedCalenderData?.attendance_date)\r\n                  && selectedCalenderData?.attendance_status !== \"PR\" && <div className=\"col-md-6 px-md-2 mb-3\"\r\n                    onClick={() => toggleCorrectionApplicationModal()}\r\n                  >\r\n                    <span\r\n                      // data-bs-toggle=\"offcanvas\"\r\n                      className=\"totalBx h-100\"\r\n                    >\r\n                      <figure>\r\n                        <img\r\n                          src=\"images/attendance-correction.svg\"\r\n                          alt=\"\"\r\n                          width={50}\r\n                        />\r\n                      </figure>\r\n                      <h3 className=\"fw-bolder my-0\">Attendance Correction</h3>\r\n                      <img\r\n                        src=\"images/totalattendance.svg\"\r\n                        className=\"cornerLine\"\r\n                        alt=\"\"\r\n                        width={80}\r\n                      />\r\n                    </span>\r\n                  </div>\r\n                }\r\n                <div className=\"col-md-6 px-md-2 mb-3\">\r\n                  <span\r\n\r\n                    className=\"totalBx h-100\"\r\n                    onClick={() => toggleAttendanceLogs()}\r\n                  >\r\n                    <figure>\r\n                      <img src=\"images/attendance-logs.svg\" alt=\"\" width={50} />\r\n                    </figure>\r\n                    <h3 className=\"fw-bolder my-0\">Attendance Logs</h3>\r\n                    <img\r\n                      src=\"images/totalattendance.svg\"\r\n                      className=\"cornerLine\"\r\n                      alt=\"\"\r\n                      width={80}\r\n                    />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {selectedCalenderData?.last_check_out_time || selectedCalenderData?.first_check_in_time ?\r\n          isShowCorrectionModel && <CorrectionApplication\r\n            handleOpenClose={toggleCorrectionApplicationModal}\r\n            openModel={isShowCorrectionModel}\r\n            toggleShowAllBreakModal={toggleShowAllBreakModal}\r\n            selectedCalenderData={selectedCalenderData}\r\n            updatedLogsData={updatedLogsData}\r\n\r\n          /> :\r\n          <PunchNotAvailable\r\n            handleOpenClose={toggleCorrectionApplicationModal}\r\n            openModel={isShowCorrectionModel}\r\n          />\r\n        }\r\n        {isShowAllBreak && <AttendanceLogs\r\n          handleOpenClose={toggleShowAllBreakModal}\r\n          openModel={isShowAllBreak}\r\n          viewModalType={viewModalType}\r\n          selectedCalenderData={selectedCalenderData}\r\n          setUpdatedLogsData={setUpdatedLogsData}\r\n        />}\r\n        {isShowAttendanceLogs && <AttendanceLogsModal\r\n          isOpen={isShowAttendanceLogs}\r\n          handleOpenClose={toggleAttendanceLogs}\r\n          selectedData={selectedCalenderData}\r\n        />\r\n        }\r\n        {isOpenLeave && <LeaveApplication\r\n          openModel={isOpenLeave}\r\n          openLeaveApplicationModel={toggleLeaveApplyModal}\r\n        />}\r\n         {isOpenTourModal &&<TourApplication\r\n        openTourApplicationModel={toggleTourApplicationModel}\r\n        isOpenModal={isOpenTourModal}\r\n      />}\r\n      </div>\r\n     \r\n      {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SelectLeaveTypeModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AttendanceIDetails from \"../components/attendanceDashboard/AttendanceIDetails\";\r\nimport AttendanceStatusCount from \"../components/attendanceDashboard/AttendanceStatusCount\";\r\n\r\nimport Calender from \"../components/calendar/Calender\";\r\nimport SelectLeaveTypeModal from \"../components/modal/SelectLeaveTypeModal\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { attendanceDashboardActions } from '../core/resource/actions';\r\nimport moment from 'moment'\r\n\r\nconst AttendanceDashboard = () => {\r\n\r\n  const {\r\n    getMonthlyAttendancePending,\r\n    getMonthlyAttendanceRes,\r\n    getMonthlyAttendanceError,\r\n\r\n  } = useSelector(state => state.attendanceDashboard)\r\n\r\n  const [currentDate, setCurrentDate] = useState(moment());\r\n  const [attendanceDetails, setAttendanceDetails] = useState([])\r\n  const [selectedCalenderData, setSelectedCalenderData] = useState('')\r\n  const [isOpenSelectedLeaveType, setIsOpenSelectedLeaveType] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    getCheckInCheckOutdata()\r\n    getAttendanceDashboard()\r\n  }, [])\r\n  useEffect(() => {\r\n    getAttendance()\r\n    getAttendanceSummart()\r\n  }, [currentDate])\r\n\r\n  useEffect(() => {\r\n    if (!getMonthlyAttendancePending) {\r\n      if (getMonthlyAttendanceError) {\r\n        return;\r\n      }\r\n      if (getMonthlyAttendanceRes) {\r\n        if (getMonthlyAttendanceRes?.code === 200) {\r\n          setAttendanceDetails(getMonthlyAttendanceRes.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getMonthlyAttendanceRes,\r\n    getMonthlyAttendanceError,\r\n    getMonthlyAttendancePending\r\n  ]);\r\n\r\n  const getCheckInCheckOutdata = () => {\r\n    dispatch(attendanceDashboardActions.getCheckInCheckOutRequest())\r\n  }\r\n\r\n  const getAttendance = () => {\r\n    const data = {\r\n      month: currentDate.format('YYYY-MM')\r\n    }\r\n    dispatch(attendanceDashboardActions.getMonthlyAttendanceRequest(data))\r\n  }\r\n\r\n  const getAttendanceSummart = () => {\r\n    const data = {\r\n      month: currentDate.format('YYYY-MM')\r\n    }\r\n    dispatch(attendanceDashboardActions.getAttendanceSummaryRequest(data))\r\n  }\r\n  const getAttendanceDashboard = () => {\r\n    dispatch(attendanceDashboardActions.getAttendanceDashBoardRequest())\r\n  }\r\n  // useEffect(() => {\r\n  //   if (selectedCalenderData) {\r\n  //     setIsOpenSelectedLeaveType(!isOpenSelectedLeaveType)\r\n  //   }\r\n  // }, [selectedCalenderData])\r\n\r\n  const LeaveTypeModal = (data) => {\r\n    if(data){\r\n      setSelectedCalenderData(data)\r\n    }\r\n    setIsOpenSelectedLeaveType(!isOpenSelectedLeaveType)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <AttendanceIDetails\r\n        getCheckInCheckOutdata={getCheckInCheckOutdata} />\r\n      <AttendanceStatusCount />\r\n      <Calender\r\n        setCurrentDate={setCurrentDate}\r\n        currentDate={currentDate}\r\n        attendanceDetails={attendanceDetails}\r\n        handleOpenClose={LeaveTypeModal}\r\n        // setSelectedCalenderData={setSelectedCalenderData}\r\n      />\r\n      {isOpenSelectedLeaveType &&\r\n        <SelectLeaveTypeModal\r\n          selectedCalenderData={selectedCalenderData}\r\n          isOpen={isOpenSelectedLeaveType}\r\n          handleOpenClose={LeaveTypeModal}\r\n        />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttendanceDashboard;\r\n"],"names":["AttendanceStatusCount","getAttendanceSummary","setAttendanceSummary","useState","getAttendanceSummaryPending","getAttendanceSummaryRes","getAttendanceSummaryError","useSelector","state","attendanceDashboard","useEffect","code","data","today","Date","_jsx","_Fragment","children","className","_jsxs","src","alt","width","getDate","months","getMonth","getFullYear","weekDays","getDay","present_count","absent_count","week_count","paid_count","props","dispatch","useDispatch","isOpen","handleOpenClose","selectedData","attendanceLogsData","setAttendanceLogsData","currentPage","setCurrentPage","getAttendanceLogsPending","getAttendanceLogsRes","getAttendanceLogsError","attendanceCorrection","attendanceLogsScopedSlots","sn","_","index","punch_time","item","dateFormate","getAttendanceLogs","payload","date","attendance_date","emp_id","attendanceCorrectionActions","getAttendanceLogsRequest","class","id","style","display","opacity","type","onClick","day_of_week","total_working_hours","total_break_time","CustomTable","fields","key","label","isLoading","pagination","totalPages","isHeader","tableStyle","padding","boxShadow","scopedSlots","webcamRef","useRef","cameraRef","checkInModel","setCheckInModel","checkInOutSave","attendanceType","checkInStatus","isCamera","setIsCamera","isWebCamAvailable","setIsWebCamAvailable","captureImage","setCaptureImage","setIsOpen","loader","setloader","faceDetected","setFaceDetected","checkMediaAndAccess","async","navigator","mediaDevices","enumerateDevices","console","error","devices","some","device","kind","getUserMedia","video","then","catch","err","getMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","capture","useCallback","imageSrc","current","getScreenshot","checkInBtn","location","geolocation","getCurrentPosition","position","latitude","coords","longitude","videoElement","faceDetectionModel","FaceDetection","locateFile","file","setOptions","model","minDetectionConfidence","onResults","results","detections","length","camera","Camera","onFrame","send","image","height","start","stopCamera","stream","srcObject","getTracks","forEach","track","stop","attBtnOptions","getBtnOptions","color","textAlignLast","Webcam","audio","ref","screenshotFormat","videoConstraints","facingMode","margin","align","disabled","getCheckInCheckOutdata","getCheckInCheckOutPending","getCheckInCheckOutRes","getCheckInCheckOutError","checkInCheckOutPending","checkInCheckOutRes","checkInCheckOutError","getAttendanceDashBoardPending","getAttendanceDashBoardRes","getAttendanceDashBoardError","getAttendanceLog","setAttendacenLog","setCheckInStatus","setAttendanceType","timer","setTimer","shiftHours","setShiftHours","timeLeft","setTimeLeft","workHoursPercentage","setWorkHoursPercentage","monthlyCount","setMonthlyCount","monthlyAttendanceDetails","setmonthlyAttendanceDetails","options","chart","plotOptions","radialBar","hollow","size","background","dataLabels","show","name","value","fontSize","offsetY","formatter","val","total","fontWeight","textAlign","fill","colors","stroke","lineCap","series","CheckInCheckModel","subtractFromMomentDate","workHoursPercentages","_getAttendanceDashBoa","_getAttendanceDashBoa2","attendanceCount","_getCheckInCheckOutRe","_getCheckInCheckOutRe2","_getCheckInCheckOutRe3","_getCheckInCheckOutRe4","_getCheckInCheckOutRe5","checkInCheck","attendanceLog","log_type","firstEntryTime","workHours","workMinutes","workSeconds","shift_full_day_working_hours","attendanceTime","workTime","intervalFun","setInterval","addInMomentDate","clearInterval","_checkInCheckOutRes$d","attendanceDashboardActions","handleClearAttendanceDashboardStore","ApexCharts","minHeight","total_working_days","web_count","mobile_count","biometric_count","totalWorkingHours","totalBreakHours","totalWorkingDuration","averageWorkingHours","averageBreakHours","CheckInCheckOutModel","attendanceTypes","ip_address","currentDateAndTime","emp_img","device_from","user_agent","userAgent","attendance_type","checkInCheckOutRequest","CustomSpinner","isShow","openModel","tabIndex","selectedCalenderData","isShowCorrectionModel","setIsShowCorrectionMode","isShowAllBreak","setIsShowAllBreak","viewModalType","setViewModalType","updatedLogsData","setUpdatedLogsData","isShowAttendanceLogs","setIsShowAttendanceLogs","isOpenLeave","setIsOpenLeave","isOpenTourModal","setIsOpenTourModal","toggleCorrectionApplicationModal","toggleShowAllBreakModal","toggleAttendanceLogs","toggleLeaveApplyModal","toggleTourApplicationModel","React","isBeforeMoment","attendance_status","last_check_out_time","first_check_in_time","CorrectionApplication","PunchNotAvailable","AttendanceLogs","AttendanceLogsModal","LeaveApplication","openLeaveApplicationModel","TourApplication","openTourApplicationModel","isOpenModal","AttendanceDashboard","getMonthlyAttendancePending","getMonthlyAttendanceRes","getMonthlyAttendanceError","currentDate","setCurrentDate","moment","attendanceDetails","setAttendanceDetails","setSelectedCalenderData","isOpenSelectedLeaveType","setIsOpenSelectedLeaveType","getAttendanceDashboard","getAttendance","getAttendanceSummart","getCheckInCheckOutRequest","month","format","getMonthlyAttendanceRequest","getAttendanceSummaryRequest","getAttendanceDashBoardRequest","LeaveTypeModal","AttendanceIDetails","Calender","SelectLeaveTypeModal"],"sourceRoot":""}