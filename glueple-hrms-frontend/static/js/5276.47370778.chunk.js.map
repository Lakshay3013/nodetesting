{"version":3,"file":"static/js/5276.47370778.chunk.js","mappings":"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","sources":["components/admin/leave/LeaveSettingTable.js","components/admin/leave/EncashmentFormula.js","components/admin/leave/CreateUpdateLeave.js","components/admin/leave/LeaveBanner.js","components/admin/leave/LeaveTable.js","components/admin/leave/RuleRenderer.js","components/admin/leave/CreateUpdateLeaveSettings.js","components/admin/leave/Leave.js"],"sourcesContent":["import React, { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { CustomTable } from '../../reuseableComponents'\r\nimport { getBadgeColor } from '../../../utils/common'\r\nimport moment from 'moment'\r\nimport { CustomButton } from '../../globalComponents'\r\nimport { Icon } from '../../commanComponent'\r\n\r\nconst LeaveSettingTable = (props) => {\r\n  const {\r\n    allLeaveSettingData,\r\n    setSelectedLeaveData,\r\n    handleAddUpdateLeaveModal,\r\n    toggleDeleteSettingTypeModal,\r\n    currentPage,\r\n    setCurrentPage,\r\n    handleOpenClose\r\n  } = props\r\n\r\n  const { getAllLeaveSettingPending } = useSelector(state => state.leave)\r\n  const fields = [\r\n    { key: 'sn', label: 'S.N' },\r\n    { key: 'leave_type_name', label: 'Leave Name' },\r\n    { key: 'department_name', label: 'Department Name' },\r\n    { key: 'designation_name', label: 'Designation Name' },\r\n    { key: 'base_on_credit_name', label: 'Base On Credit Name' },\r\n    { key: 'is_allowed_on_notice', label: 'Allowed On Notice' },\r\n    { key: 'is_active', label: 'Status' },\r\n    // { key: 'created_at', label: 'Created At' },\r\n    { key: 'action', label: 'Action' }\r\n  ];\r\n\r\n  const scopedSlots = useMemo(() => ({\r\n    sn: (_, index) => (\r\n      <span>{index + 1}</span>\r\n    ),\r\n    is_active: item => (\r\n      <span\r\n        className={`badge ${getBadgeColor(item.is_active ? \"Active\" : \"Inactive\")}`}\r\n      >\r\n        {item.is_active ? \"Active\" : \"Inactive\"}\r\n      </span>\r\n    ),\r\n    is_allowed_on_notice: item => (\r\n      <span\r\n        className={`badge ${getBadgeColor(item.is_allowed_on_notice ? \"Active\" : \"Inactive\")}`}\r\n      >\r\n        {item.is_allowed_on_notice ? \"Yes\" : \"No\"}\r\n      </span>\r\n    ),\r\n\r\n    created_at: item => moment(item.created_at).format(\"DD-MM-YYYY\"),\r\n    action: item => (\r\n      <div className=\"btn-group actionDrp\">\r\n        <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n          data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n          <i className=\"bi bi-three-dots-vertical\"></i>\r\n        </button>\r\n        <ul className=\"dropdown-menu\">\r\n          <li>\r\n            <span className=\"dropdown-item\"\r\n              onClick={() => handleOpenClose(item)}\r\n            >\r\n              <Icon className={\"bi bi-pencil-square me-1\"} />Update</span>\r\n          </li>\r\n           <li>\r\n            <span className=\"dropdown-item\"\r\n              onClick={() => toggleDeleteSettingTypeModal(item._id)}\r\n            >\r\n              <Icon className={\"bi bi-trash me-1\"} />Delete</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }), [allLeaveSettingData]);\r\n\r\n  return (\r\n    <>\r\n      <CustomTable\r\n        data={allLeaveSettingData?.data}\r\n        fields={fields}\r\n        isLoading={getAllLeaveSettingPending}\r\n        pagination={true}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        totalPages={allLeaveSettingData?.totalPages}\r\n        tableName={\"Leave Setting\"}\r\n        // onSearch={handleSearch}\r\n        scopedSlots={scopedSlots}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LeaveSettingTable\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport {  Label, Textarea } from '../../commanComponent'\r\nimport CustomSelect from '../../commanComponent/CustomSelect'\r\nimport { CustomButton, CustomError } from '../../globalComponents'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { leaveAction } from '../../../core/resource/actions'\r\nimport { el } from 'date-fns/locale'\r\nimport { tuple } from 'yup'\r\nconst EncashmentFormula = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { toggleCreateFormula, allLeaveConstantData, setCreateUpdateLeaveFormData } = props\r\n    const {\r\n        checkLeaveEncashmentFormulaPending,\r\n        checkLeaveEncashmentFormulaRes,\r\n        checkLeaveEncashmentFormulaError\r\n    } = useSelector(state => state.leave)\r\n    const { t } = useCustomTranslation()\r\n    const [encashmentFormula, setEncashmentFormula] = useState({\r\n        brackets: '',\r\n        abbreviation: '',\r\n        operators: ''\r\n    })\r\n    const [validDescription, setValidDescription] = useState('')\r\n    const [isFillDesc, setIsFillDesc] = useState(false)\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName\r\n        const value = e;\r\n\r\n        setEncashmentFormula(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: value,\r\n            };\r\n            return updatedState;\r\n        });\r\n        setIsFillDesc(false)\r\n    };\r\n    const onAddFormulaField = () => {\r\n        const { brackets, abbreviation, operators } = encashmentFormula\r\n        let addFormulaFields =\r\n            (brackets?.value || '') +\r\n            (abbreviation?.value || '') +\r\n            (operators?.value || '');\r\n\r\n        setValidDescription((prev) => prev + addFormulaFields);\r\n        setEncashmentFormula({\r\n            brackets: '',\r\n            abbreviation: '',\r\n            operators: ''\r\n        })\r\n    }\r\n\r\n    const checkEncashmentFormula = () => {\r\n        if (validDescription) {\r\n            setIsFillDesc(false)\r\n            const payload = {\r\n                formula: validDescription\r\n            }\r\n            dispatch(leaveAction.checkLeaveEncashmentFormulaRequest(payload))\r\n        } else {\r\n            setIsFillDesc(true)\r\n        }\r\n    }\r\n    const saveEncashmentFormula = () => {\r\n        setCreateUpdateLeaveFormData((pre) => ({\r\n            ...pre,\r\n            [\"encashable_formula\"]: validDescription\r\n        }))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (!checkLeaveEncashmentFormulaPending) {\r\n            if (checkLeaveEncashmentFormulaRes) {\r\n                dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_CLEAR_CHECK_LEAVE_ENCASHMENT_FORMULA_STORE\"))\r\n                return;\r\n            }\r\n            if (checkLeaveEncashmentFormulaError) {\r\n                if (checkLeaveEncashmentFormulaError?.code === 200) {\r\n                    dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_CLEAR_CHECK_LEAVE_ENCASHMENT_FORMULA_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        checkLeaveEncashmentFormulaError,\r\n        checkLeaveEncashmentFormulaRes,\r\n        checkLeaveEncashmentFormulaPending\r\n    ]);\r\n\r\n\r\n    return (\r\n        <div className='border p-3' style={{ backgroundColor: \"#DCDCDC\" }}>\r\n            <div className='p-3' style={{ backgroundColor: \"white\" }}>\r\n                <div className=\"header ps-2 d-flex justify-content-between\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{t(\"headings.encashmentFormula\")}</h5>\r\n                    <button type=\"button\" className=\"btn-close\" onClick={() => toggleCreateFormula()}></button>\r\n                </div>\r\n                <hr className='m-1' />\r\n                <div className=\"body mt-2\">\r\n                    <div className=\"formPanel\">\r\n                        <div className='row'>\r\n                            <div className=\"col-md-3 form-group mb-3\">\r\n                                <Label text={t(\"labels.brackets\")}\r\n                                />\r\n                                <CustomSelect\r\n                                    data={allLeaveConstantData && allLeaveConstantData?.brackets}\r\n                                    placeholder={t(\"placeholders.select\")}\r\n                                    value={encashmentFormula?.brackets || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"brackets\")}\r\n                                    name=\"brackets\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-3 form-group mb-3\">\r\n                                <Label text={t(\"labels.abbreviation\")}\r\n                                />\r\n                                <CustomSelect\r\n                                    data={allLeaveConstantData && allLeaveConstantData?.abbreviations}\r\n                                    placeholder={t(\"placeholders.select\")}\r\n                                    value={encashmentFormula?.abbreviation || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"abbreviation\")}\r\n                                    name=\"abbreviation\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-3 form-group mb-3\">\r\n                                <Label text={t(\"labels.operators\")}\r\n                                />\r\n                                <CustomSelect\r\n                                    data={allLeaveConstantData && allLeaveConstantData?.operators}\r\n                                    placeholder={t(\"placeholders.select\")}\r\n                                    value={encashmentFormula?.operators || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"operators\")}\r\n                                    name=\"operators\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-3 form-group mb-3\">\r\n                                <CustomButton\r\n                                    text={t(\"btns.add\")}\r\n                                    classNames={\"btn btn-primary gradientBg mt-4\"}\r\n                                    handleClick={() => onAddFormulaField()}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className=\"col-md-9 form-group mb-3\">\r\n                                <Textarea\r\n                                    value={validDescription}\r\n                                    placeholder={t(\"placeholders.leaveExpression\")}\r\n                                    onChange={(e) => setValidDescription(e.target.value)}\r\n                                />\r\n                                {isFillDesc && (\r\n                                    <CustomError text={\"Place add formula to validate\"} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className=\"col-md-9  mb-3 d-flex justify-content-end\" >\r\n                                <CustomButton\r\n                                    text={t(\"btns.validate\")}\r\n                                    classNames={\"btn btn-success gradientBg \"}\r\n                                    handleClick={() => checkEncashmentFormula()}\r\n                                    isLoading={checkLeaveEncashmentFormulaPending}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={t(\"btns.save\")}\r\n                            classNames={\"btn btn-success gradientBg mt-2\"}\r\n                            handleClick={() => saveEncashmentFormula()}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default EncashmentFormula\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { createShortName, defaultMultiSelectOptions, getDataWithLabelValue } from '../../../utils/common'\r\nimport { validateSchema } from '../../../utils/ValidationHelper'\r\nimport { addLeaveSchema } from '../../../utils/ValidationSchema'\r\nimport { CustCheckbox, Input, Label } from '../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../globalComponents'\r\nimport CustomSelect from '../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport EncashmentFormula from './EncashmentFormula'\r\nimport { conforms } from 'lodash'\r\n\r\n\r\nconst CreateUpdateLeave = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        handleOpenClose,\r\n        openModel,\r\n        handleCreateUpdateLeave,\r\n        allLeaveConstantData,\r\n        selectedLeaveData,\r\n        appConstantData,\r\n        allEmployeeList\r\n    } = props\r\n    const [errors, setErrors] = useState('')\r\n    const {\r\n        addLeaveTypePending, updateLeaveTypePending\r\n    } = useSelector(state => state.leave);\r\n    const [activeTab, setActiveTab] = useState('basic')\r\n    const [isOpenFormula, setIsOpenFormula] = useState(false)\r\n    const [createUpdateLeaveFormData, setCreateUpdateLeaveFormData] = useState({\r\n        name: '',\r\n        short_name: '',\r\n        max_leave_per_year: '',\r\n        carry_forward_limit: '',\r\n        expire_on: null,\r\n        leave_unit: null,\r\n        leave_type: null,\r\n        is_carry_forwardable: false,\r\n        is_active: true,\r\n        can_view_on_probation: true,\r\n        is_credit_on_probation: false,\r\n        is_encashment: false,\r\n        is_expirable: false,\r\n        is_deduction: true,\r\n        is_allowed_on_notice: false,\r\n        balance_based_on: null,\r\n        validity_start_date: '',\r\n        validity_end_date: '',\r\n        effective_after_number: '',\r\n        effective_after_name: '',\r\n        effective_after_value: '',\r\n        minimum_days_for_request: '',\r\n        maximum_days_for_request: '',\r\n        minimum_interval_between_request: '',\r\n        applicable_gender: '',\r\n        applicable_marital_status: '',\r\n        applicable_employee: '',\r\n        is_applicable_for_esi_employee: false,\r\n        minimum_service_days_to_apply: '',\r\n        max_days_encashable: '',\r\n        encashable_formula: ''\r\n    })\r\n    useEffect(() => {\r\n        if (selectedLeaveData) {\r\n            const maritalData = getDataWithLabelValue(selectedLeaveData.applicable_marital_status)\r\n            const applicableGenderData = getDataWithLabelValue(selectedLeaveData.applicable_gender)\r\n            const applicableEmployee =defaultMultiSelectOptions(allEmployeeList,selectedLeaveData?.applicable_employee)\r\n            setCreateUpdateLeaveFormData({\r\n                name: selectedLeaveData.name,\r\n                short_name: selectedLeaveData.short_name,\r\n                is_carry_forwardable: selectedLeaveData.is_carry_forwardable,\r\n                is_active: selectedLeaveData.is_active,\r\n                can_view_on_probation: selectedLeaveData.can_view_on_probation,\r\n                is_credit_on_probation: selectedLeaveData.is_credit_on_probation,\r\n                is_encashment: selectedLeaveData.is_encashment,\r\n                is_expirable: selectedLeaveData.is_expirable,\r\n                is_deduction: selectedLeaveData.is_deduction,\r\n                validity_start_date: selectedLeaveData.validity_start_date,\r\n                leave_type: { value: selectedLeaveData.leave_type, label: selectedLeaveData.leave_type_name },\r\n                validity_end_date: selectedLeaveData.validity_end_date,\r\n                effective_after_number: selectedLeaveData.effective_after_number,\r\n                effective_after_name: { value: selectedLeaveData.effective_after_name, label: selectedLeaveData?.effective_after_name_name },\r\n                effective_after_value: { value: selectedLeaveData.effective_after_value, label: selectedLeaveData.effective_after_value_name },\r\n                minimum_days_for_request: selectedLeaveData.minimum_days_for_request,\r\n                maximum_days_for_request: selectedLeaveData.maximum_days_for_request,\r\n                minimum_interval_between_request: selectedLeaveData.minimum_interval_between_request,\r\n                applicable_gender: applicableGenderData,\r\n                applicable_marital_status: maritalData,\r\n                applicable_employee: applicableEmployee,\r\n                balance_based_on: { label: selectedLeaveData?.balance_based_on_name, value: selectedLeaveData?.balance_based_on },\r\n                expire_on: { value: selectedLeaveData?.expire_on, label: selectedLeaveData?.expire_on_name },\r\n                leave_unit: { value: selectedLeaveData?.leave_unit, label: selectedLeaveData?.leave_unit_name },\r\n                max_leave_per_year: selectedLeaveData?.max_leave_per_year,\r\n                carry_forward_limit: selectedLeaveData?.carry_forward_limit,\r\n                is_applicable_for_esi_employee: selectedLeaveData?.is_applicable_for_esi_employee,\r\n                minimum_service_days_to_apply: selectedLeaveData?.minimum_service_days_to_apply || '',\r\n                max_days_encashable: selectedLeaveData?.max_days_encashable,\r\n                encashable_formula: selectedLeaveData?.encashable_formula,\r\n\r\n            })\r\n        }\r\n    }, [selectedLeaveData])\r\n    const handleFromChange = (e, fieldName) => {\r\n        // For custom selects, use the value passed directly as `e`\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n\r\n        setCreateUpdateLeaveFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            if (name === 'name') {\r\n                updatedState.short_name = createShortName(value);\r\n            }\r\n            return updatedState;\r\n        });\r\n        // Reset error for this field\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n    const submitCreateUpdateLeave = async () => {\r\n        const validationResponse = await validateSchema(addLeaveSchema, createUpdateLeaveFormData);\r\n        const {\r\n            name,\r\n            short_name,\r\n            max_leave_per_year,\r\n            carry_forward_limit,\r\n            expire_on,\r\n            leave_unit,\r\n            is_carry_forwardable,\r\n            is_active,\r\n            can_view_on_probation,\r\n            is_credit_on_probation,\r\n            is_encashment,\r\n            is_expirable,\r\n            is_deduction,\r\n            leave_type,\r\n            balance_based_on,\r\n            validity_start_date,\r\n            validity_end_date,\r\n            effective_after_number,\r\n            effective_after_name,\r\n            effective_after_value,\r\n            minimum_days_for_request,\r\n            maximum_days_for_request,\r\n            minimum_interval_between_request,\r\n            applicable_gender,\r\n            applicable_marital_status,\r\n            applicable_employee,\r\n            is_applicable_for_esi_employee,\r\n            minimum_service_days_to_apply,\r\n            encashable_formula,\r\n            max_days_encashable,\r\n        } = createUpdateLeaveFormData\r\n        const applicableGender = setFilterValues(applicable_gender)\r\n        const applicableMaritalStatus = setFilterValues(applicable_marital_status)\r\n        const applicableEmployee = setFilterValues(applicable_employee)\r\n        if (validationResponse.isValid) {\r\n            setErrors({});\r\n            const params = {\r\n                name,\r\n                short_name,\r\n                is_carry_forwardable,\r\n                is_active,\r\n                can_view_on_probation,\r\n                is_credit_on_probation,\r\n                is_encashment,\r\n                is_expirable,\r\n                is_deduction,\r\n                validity_start_date,\r\n                leave_type: leave_type?.value || '',\r\n                validity_end_date,\r\n                encashable_formula,\r\n                max_days_encashable: max_days_encashable || 0,\r\n                effective_after_number: effective_after_number || 0,\r\n                effective_after_name: effective_after_name?.value || '',\r\n                effective_after_value: effective_after_value?.value || '',\r\n                minimum_days_for_request: minimum_days_for_request || 0,\r\n                maximum_days_for_request: maximum_days_for_request || 0,\r\n                minimum_interval_between_request: minimum_interval_between_request || 0,\r\n                applicable_gender: applicableGender || [],\r\n                applicable_marital_status: applicableMaritalStatus || [],\r\n                applicable_employee: applicableEmployee || [],\r\n                balance_based_on: balance_based_on?.value || '',\r\n                expire_on: expire_on?.value || '',\r\n                leave_unit: leave_unit?.value || '',\r\n                max_leave_per_year: max_leave_per_year || 0,\r\n                carry_forward_limit: carry_forward_limit || 0,\r\n                is_applicable_for_esi_employee,\r\n                minimum_service_days_to_apply: minimum_service_days_to_apply || 0\r\n            }\r\n            handleCreateUpdateLeave(params)\r\n\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setCreateUpdateLeaveFormData({\r\n            name: '',\r\n            short_name: '',\r\n            max_leave_per_year: '',\r\n            carry_forward_limit: '',\r\n            expire_on: null,\r\n            leave_unit: null,\r\n            is_carry_forwardable: false,\r\n            is_active: true,\r\n            can_view_on_probation: true,\r\n            is_credit_on_probation: false,\r\n            is_encashment: false,\r\n            is_expirable: false,\r\n            is_deduction: true,\r\n            leave_type: null,\r\n            balance_based_on: null,\r\n            validity_start_date: '',\r\n            validity_start_date: '',\r\n            validity_end_date: '',\r\n            effective_after_number: '',\r\n            effective_after_name: '',\r\n            effective_after_value: '',\r\n            minimum_days_for_request: '',\r\n            maximum_days_for_request: '',\r\n            minimum_interval_between_request: '',\r\n            applicable_gender: '',\r\n            applicable_marital_status: '',\r\n            applicable_employee: '',\r\n            is_applicable_for_esi_employee: false,\r\n            minimum_service_days_to_apply: '',\r\n            max_days_encashable: '',\r\n            encashable_formula: ''\r\n        })\r\n        setErrors({})\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            resetForm()\r\n        }\r\n    }, [openModel])\r\n\r\n    const setFilterValues = (data) => {\r\n        const tempData = []\r\n        data && data?.map((item) => {\r\n            tempData.push(item?.value)\r\n        })\r\n        return tempData\r\n    }\r\n\r\n    const handleActiveTab = (type) => {\r\n        setActiveTab(type)\r\n    }\r\n\r\n    const toggleCreateFormula = () => {\r\n        setIsOpenFormula(!isOpenFormula)\r\n    }\r\n\r\n    return (<>\r\n        <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n            tabIndex={-1}\r\n            style={{\r\n            visibility: openModel ? 'visible' : 'hidden',\r\n                width: \"800px\"\r\n            }}\r\n            id=\"interviewDetail\"\r\n        >\r\n            <div className=\"offcanvas-header\">\r\n                <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{selectedLeaveData ? t(\"headings.updateLeaveType\") : t(\"headings.addLeaveType\")}</h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                    onClick={() => handleOpenClose()}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"offcanvas-body myRequest \">\r\n                <div className=\"formPanel mrfMain\">\r\n                    <ul className=\"nav nav-tabs leaveTabs mb-4\">\r\n                        <li className=\"nav-item\">\r\n                            <button\r\n                                className={`nav-link ${activeTab === \"basic\" ? \"active\" : \"\"}`}\r\n                                data-bs-toggle=\"tab\"\r\n                                data-bs-target=\"#basic\"\r\n                                type=\"button\"\r\n                                onClick={() => handleActiveTab(\"basic\")}\r\n                            >\r\n                                Basic\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button\r\n                                className={`nav-link ${activeTab === \"rules\" ? \"active\" : \"\"}`}\r\n                                data-bs-toggle=\"tab\"\r\n                                data-bs-target=\"#rules\"\r\n                                type=\"button\"\r\n                                onClick={() => handleActiveTab(\"rules\")}\r\n                            >\r\n                                Rules\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button\r\n                                className={`nav-link ${activeTab === \"encashment\" ? \"active\" : \"\"}`}\r\n                                data-bs-toggle=\"tab\"\r\n                                data-bs-target=\"#encashment\"\r\n                                type=\"button\"\r\n                                onClick={() => handleActiveTab(\"encashment\")}\r\n                            >\r\n                                Encashment\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button\r\n                                className={`nav-link ${activeTab === \"applicability\" ? \"active\" : \"\"}`}\r\n                                data-bs-toggle=\"tab\"\r\n                                data-bs-target=\"#applicability\"\r\n                                type=\"button\"\r\n                                onClick={() => handleActiveTab(\"applicability\")}\r\n                            >\r\n                                Applicability\r\n                            </button>\r\n                        </li>\r\n\r\n                    </ul>\r\n                    <div className=\"tab-content\">\r\n                        <div className={`tab-pane fade ${activeTab === \"basic\" ? \"show active\" : \"\"}`} id=\"basic\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.leaveName\")} required={true}\r\n                                        tooltipText={t(\"tooltips.leaveName\")}\r\n                                    />\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.leaveName\")}\r\n                                        value={createUpdateLeaveFormData?.name}\r\n                                        name=\"name\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.name && (\r\n                                        <CustomError text={errors.name} />\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.abbreviation\")} required={true}\r\n                                        tooltipText={t(\"tooltips.leaveShortName\")}\r\n                                    />\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.abbreviation\")}\r\n                                        value={createUpdateLeaveFormData?.short_name}\r\n                                        name=\"short_name\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.short_name && (\r\n                                        <CustomError text={errors.short_name} />\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.maxLeavePerYear\")}\r\n                                        tooltipText={t(\"tooltips.maxLeavePerYear\")}\r\n                                    />\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.leavePerYear\")}\r\n                                        value={createUpdateLeaveFormData?.max_leave_per_year}\r\n                                        name=\"max_leave_per_year\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.leaveUnit\")} required={true}\r\n                                        tooltipText={t(\"tooltips.leaveUnit\")}\r\n                                    />\r\n                                    <CustomSelect\r\n                                        data={allLeaveConstantData?.[\"leaveUnit\"]}\r\n                                        placeholder={t(\"placeholders.selectLeaveUnit\")}\r\n                                        value={createUpdateLeaveFormData?.leave_unit || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"leave_unit\")}\r\n                                        name=\"leave_unit\"\r\n                                    />\r\n                                    {errors?.leave_unit && (\r\n                                        <CustomError text={errors.leave_unit} />\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.leaveBalanceBasedOn\")}\r\n                                        tooltipText={t(\"tooltips.leaveBalanceBasedOn\")}\r\n                                    />\r\n                                    <CustomSelect\r\n                                        data={allLeaveConstantData?.[\"leaveBalanceBasedOn\"]}\r\n                                        placeholder={t(\"placeholders.selectLeaveBalanceBasedOn\")}\r\n                                        value={createUpdateLeaveFormData?.balance_based_on || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"balance_based_on\")}\r\n                                        name=\"balance_based_on\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.leaveType\")} required={true}\r\n                                        tooltipText={t(\"tooltips.leaveType\")}\r\n                                    />\r\n                                    <CustomSelect\r\n                                        data={allLeaveConstantData?.[\"leaveType\"]}\r\n                                        placeholder={t(\"placeholders.selectLeaveType\")}\r\n                                        value={createUpdateLeaveFormData?.leave_type || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"leave_type\")}\r\n                                        name=\"leave_type\"\r\n                                    />\r\n                                    {errors?.leave_type && (\r\n                                        <CustomError text={errors.leave_type} />\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.validityStartDate\")}\r\n                                        tooltipText={t(\"tooltips.validityStartDate\")}\r\n                                    />\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        placeholder={t(\"placeholders.validity_start_date\")}\r\n                                        value={createUpdateLeaveFormData?.validity_start_date}\r\n                                        name=\"validity_start_date\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.validityEndDate\")}\r\n                                        tooltipText={t(\"tooltips.validityEndDate\")}\r\n                                    />\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        placeholder={t(\"placeholders.validity_end_date\")}\r\n                                        value={createUpdateLeaveFormData?.validity_end_date}\r\n                                        name=\"validity_end_date\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text=\"Active\"\r\n                                                tooltipText={t(\"tooltips.activeLeave\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustCheckbox\r\n                                                key={\"is_active\"}\r\n                                                id={`is_active`}\r\n                                                // label={\"Active\"}\r\n                                                checked={createUpdateLeaveFormData?.is_active}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"is_active\"}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.deduction\")}\r\n                                                tooltipText={t(\"tooltips.leaveDeduction\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustCheckbox\r\n                                                key={\"is_deduction\"}\r\n                                                id={`is_deduction`}\r\n                                                // label={\"Deduction\"}\r\n                                                checked={createUpdateLeaveFormData?.is_deduction}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"is_deduction\"}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.allowedOnNotice\")}\r\n                                                tooltipText={t(\"tooltips.allowedOnNotice\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustCheckbox\r\n                                                key={\"is_allowed_on_notice\"}\r\n                                                id={`is_allowed_on_notice`}\r\n                                                checked={createUpdateLeaveFormData?.is_allowed_on_notice}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"is_allowed_on_notice\"}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`tab-pane fade ${activeTab === \"rules\" ? \"show active\" : \"\"}`} id=\"rules\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.minDaysForRequest\")}\r\n                                        tooltipText={t(\"tooltips.minDaysForRequest\")}\r\n                                    />\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.minDaysForRequest\")}\r\n                                        value={createUpdateLeaveFormData?.minimum_days_for_request}\r\n                                        name=\"minimum_days_for_request\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.maxDaysForRequest\")}\r\n                                        tooltipText={t(\"tooltips.maxDaysForRequest\")}\r\n                                    />\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.maxDaysForRequest\")}\r\n                                        value={createUpdateLeaveFormData?.maximum_days_for_request}\r\n                                        name=\"maximum_days_for_request\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.minIntervalBetweenRequest\")}\r\n                                        tooltipText={t(\"tooltips.minIntervalBetweenRequest\")}\r\n                                    />\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.minIntervalBetweenRequest\")}\r\n                                        value={createUpdateLeaveFormData?.minimum_interval_between_request}\r\n                                        name=\"minimum_interval_between_request\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.minimumServiceDaysToApply\")}\r\n                                    // tooltipText={t(\"tooltips.maxLeavePerYear\")}\r\n                                    />\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.minimumServiceDaysToApply\")}\r\n                                        value={createUpdateLeaveFormData?.minimum_service_days_to_apply}\r\n                                        name=\"minimum_service_days_to_apply\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-12 form-group mb-3 row\">\r\n                                    <div className='col-md-2'>\r\n                                        <Label text={t(\"labels.effectiveAfter\")} className={\"mt-2\"}\r\n                                            tooltipText={t(\"tooltips.effectiveAfter\")} />\r\n                                    </div>\r\n                                    <div className='col-md-2'>\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder={t(\"placeholders.number\")}\r\n                                            value={createUpdateLeaveFormData?.effective_after_number}\r\n                                            name=\"effective_after_number\"\r\n                                            onChange={(e) => handleFromChange(e)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className='col-md-3'>\r\n                                        <CustomSelect\r\n                                            data={allLeaveConstantData?.[\"leaveEffectiveAfterName\"]}\r\n                                            placeholder={t(\"placeholders.effectiveName\")}\r\n                                            value={createUpdateLeaveFormData?.effective_after_name || ''}\r\n                                            handleChange={(selectedOption) => handleFromChange(selectedOption, \"effective_after_name\")}\r\n                                            name=\"effective_after_name\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className='col-md-1' style={{ border: \"1px solid lightgray\", borderRadius: \"4px\", backgroundColor: \"lightgray\", height: \"38px\" }}>\r\n                                        <Label text={\"From\"} className={\"mt-2\"} />\r\n                                    </div>\r\n                                    <div className='col-md-4'>\r\n                                        <CustomSelect\r\n                                            data={allLeaveConstantData?.[\"leaveEffectiveAfterValue\"]}\r\n                                            placeholder={t(\"placeholders.effectiveValue\")}\r\n                                            value={createUpdateLeaveFormData?.effective_after_value || ''}\r\n                                            handleChange={(selectedOption) => handleFromChange(selectedOption, \"effective_after_value\")}\r\n                                            name=\"effective_after_value\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.creditOnProbation\")}\r\n                                                tooltipText={t(\"tooltips.creditOnProbation\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustCheckbox\r\n                                                key={\"is_credit_on_probation\"}\r\n                                                id={`is_credit_on_probation`}\r\n                                                // label={\"Credit On Probation\"}\r\n                                                checked={createUpdateLeaveFormData?.is_credit_on_probation}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"is_credit_on_probation\"}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.viewOnProbation\")}\r\n                                                tooltipText={t(\"tooltips.viewOnProbation\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustCheckbox\r\n                                                key={\"can_view_on_probation\"}\r\n                                                id={`can_view_on_probation`}\r\n                                                // label={\"View on probation\"}\r\n                                                checked={createUpdateLeaveFormData?.can_view_on_probation}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"can_view_on_probation\"}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.expirable\")}\r\n                                                tooltipText={t(\"tooltips.expirable\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustCheckbox\r\n                                                key={\"is_expirable\"}\r\n                                                id={`is_expirable`}\r\n                                                checked={createUpdateLeaveFormData?.is_expirable}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"is_expirable\"}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {createUpdateLeaveFormData?.is_expirable && <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.expireOn\")} />\r\n                                    <CustomSelect\r\n                                        data={allLeaveConstantData?.expiresOn}\r\n                                        placeholder={t(\"placeholders.selectExpireOn\")}\r\n                                        value={createUpdateLeaveFormData?.expire_on || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"expire_on\")}\r\n                                        name=\"expire_on\"\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                        {/*Encashment Fields start*/}\r\n                        <div className={`tab-pane fade ${activeTab === \"encashment\" ? \"show active\" : \"\"}`} id=\"encashment\">\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"row \">\r\n                                    <div className=\"col-md-3\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.carryForwardable\")}\r\n                                                tooltipText={t(\"tooltips.carryForwardable\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustCheckbox\r\n                                                key={\"is_carry_forwardable\"}\r\n                                                id={`is_carry_forwardable`}\r\n                                                // label={\"Carry Forwardable\"}\r\n                                                checked={createUpdateLeaveFormData?.is_carry_forwardable}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"is_carry_forwardable\"}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                {createUpdateLeaveFormData?.is_carry_forwardable && <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.carryForwardLimit\")} />\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.carryForwardLimit\")}\r\n                                        value={createUpdateLeaveFormData?.carry_forward_limit}\r\n                                        name=\"carry_forward_limit\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>}\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.encashment\")}\r\n                                                tooltipText={t(\"tooltips.encashment\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustCheckbox\r\n                                                key={\"is_encashment\"}\r\n                                                id={`is_encashment`}\r\n                                                // label={\"Encashment\"}\r\n                                                checked={createUpdateLeaveFormData?.is_encashment}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"is_encashment\"}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {createUpdateLeaveFormData?.is_encashment && <div>\r\n                                    <div className=\"col-md-6 form-group mb-3\">\r\n                                        <Label text={t(\"labels.maxDaysEncashable\")}\r\n                                        />\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder={t(\"placeholders.maxDaysEncashable\")}\r\n                                            value={createUpdateLeaveFormData?.max_days_encashable}\r\n                                            name=\"max_days_encashable\"\r\n                                            onChange={(e) => handleFromChange(e)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-md-12 form-group mb-3\">\r\n                                        <Label text={t(\"labels.encashableFormula\")}\r\n                                        />\r\n                                        <div className='row'>\r\n\r\n                                            <div className=\"col-md-6\">\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    placeholder={t(\"placeholders.encashableFormula\")}\r\n                                                    value={createUpdateLeaveFormData?.encashable_formula}\r\n                                                    name=\"encashable_formula\"\r\n                                                    onChange={(e) => handleFromChange(e)}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <CustomButton\r\n                                                    classNames={\"btn btn-primary gradientBg ms-1\"}\r\n                                                    text={t(\"btns.createFormula\")}\r\n                                                    handleClick={() => toggleCreateFormula()}\r\n                                                />\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    {<div className=\"col-md-12 form-group mb-3\">\r\n\r\n                                        {isOpenFormula && <EncashmentFormula\r\n                                            isOpenFormula={isOpenFormula}\r\n                                            toggleCreateFormula={toggleCreateFormula}\r\n                                            allLeaveConstantData={allLeaveConstantData}\r\n                                            setCreateUpdateLeaveFormData={setCreateUpdateLeaveFormData}\r\n                                        />}\r\n                                    </div>}\r\n\r\n                                </div>}\r\n                            </div>\r\n                        </div>\r\n                        {/*Applicability Fields start*/}\r\n                        <div className={`tab-pane fade ${activeTab === \"applicability\" ? \"show active\" : \"\"}`} id=\"applicability\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.applicableMaritalStatus\")}\r\n                                        tooltipText={t(\"tooltips.applicableMaritalStatus\")}\r\n                                    />\r\n                                    <CustomSelect\r\n                                        data={appConstantData?.maritalStatus}\r\n                                        placeholder={t(\"placeholders.applicableMaritalStatus\")}\r\n                                        value={createUpdateLeaveFormData?.applicable_marital_status || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"applicable_marital_status\")}\r\n                                        name=\"applicable_marital_status\"\r\n                                        isMulti={true}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.applicableGender\")}\r\n                                        tooltipText={t(\"tooltips.applicableGender\")}\r\n                                    />\r\n                                    <CustomSelect\r\n                                        data={appConstantData?.gender}\r\n                                        placeholder={t(\"placeholders.applicableGender\")}\r\n                                        value={createUpdateLeaveFormData?.applicable_gender || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"applicable_gender\")}\r\n                                        name=\"applicable_gender\"\r\n                                        isMulti={true}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-md-12 form-group mb-3\">\r\n                                    <Label text={t(\"labels.applicableEmployee\")}\r\n                                        tooltipText={t(\"tooltips.applicableEmployee\")}\r\n                                    />\r\n                                    <CustomSelect\r\n                                        data={allEmployeeList}\r\n                                        placeholder={t(\"placeholders.applicableEmployee\")}\r\n                                        value={createUpdateLeaveFormData?.applicable_employee || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"applicable_employee\")}\r\n                                        name=\"applicable_employee\"\r\n                                        isMulti={true}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"row \">\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.isApplicableForEsiEmployee\")}\r\n                                            // tooltipText={t(\"tooltips.carryForwardable\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustCheckbox\r\n                                                key={\"is_applicable_for_esi_employee\"}\r\n                                                id={`is_applicable_for_esi_employee`}\r\n                                                // label={\"Carry Forwardable\"}\r\n                                                checked={createUpdateLeaveFormData?.is_applicable_for_esi_employee}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"is_applicable_for_esi_employee\"}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"offcanvas-footer\">\r\n                <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                    <CustomButton\r\n                        text={selectedLeaveData ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                        classNames={\"btn btn-org-gradient\"}\r\n                        handleClick={() => submitCreateUpdateLeave()}\r\n                        isLoading={selectedLeaveData ? updateLeaveTypePending : addLeaveTypePending}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateUpdateLeave\r\n","import React, { useMemo } from 'react'\r\n\r\nconst LeaveBanner = (props) => {\r\n    const { handleActiveTab } = props\r\n    return (\r\n        <>\r\n            <div className=\"cardBox leaveAppli h-100\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-4 selectModal position-relative z-1\">\r\n                        <div className=\"row px-md-1 \">\r\n                            <div className=\"col-md-6 px-md-2 mb-3\" onClick={() => handleActiveTab(\"leave\")}>\r\n                                <span\r\n                                    className=\"totalBx h-100\"\r\n                                >\r\n                                    <figure>\r\n                                        <img src=\"images/applyleavesIcon.svg\" alt=\"\" width={50} />\r\n                                    </figure>\r\n                                    <h3 className=\"fw-bolder my-0\">Leave</h3>\r\n                                    <img\r\n                                        src=\"images/firstlineBlue.svg\"\r\n                                        className=\"cornerLine\"\r\n                                        alt=\"\"\r\n                                        width={95}\r\n                                    />\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"col-md-6 px-md-2 mb-3\" onClick={() => handleActiveTab(\"leave_setting\")}>\r\n                                <span\r\n                                    className=\"totalBx h-100\"\r\n                                >\r\n                                    <figure>\r\n                                        <img src=\"images/attendancelogIcon.svg\" alt=\"\" width={50} />\r\n                                    </figure>\r\n                                    <h3 className=\"fw-bolder my-0\">Leave Setting</h3>\r\n                                    <img\r\n                                        src=\"images/secondlineBlue.svg\"\r\n                                        className=\"cornerLine\"\r\n                                        alt=\"\"\r\n                                        width={80}\r\n                                    />\r\n                                </span>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LeaveBanner\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { getBadgeColor } from '../../../utils/common'\r\nimport moment from 'moment'\r\nimport { CustomButton } from '../../globalComponents'\r\nimport { CustomTable } from '../../reuseableComponents'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { Icon } from '../../commanComponent'\r\n\r\nconst LeaveTable = (props) => {\r\n  const { t } = useCustomTranslation()\r\n  const {\r\n    allLeaveTypesData,\r\n    isLoading,\r\n    toggleAddUpdateLeaveModal,\r\n    toggleDeleteLeaveType,\r\n    currentPage,\r\n    setCurrentPage,\r\n  } = props\r\n\r\n\r\n  const handleUpdateLeave = (data) => {\r\n    toggleAddUpdateLeaveModal(data)\r\n  }\r\n\r\n\r\n  const scopedSlots = useMemo(() => ({\r\n    sn: (_, index) => (\r\n      <span>{index + 1}</span>\r\n    ),\r\n    is_active: item => (\r\n      <span\r\n        className={`badge ${getBadgeColor(item.is_active ? \"Active\" : \"Inactive\")}`}\r\n      >\r\n        {item.is_active ? \"Active\" : \"Inactive\"}\r\n      </span>\r\n    ),\r\n\r\n    created_at: item => moment(item.created_at).format(\"DD-MM-YYYY\"),\r\n    action: item => (\r\n      <div className=\"btn-group actionDrp\">\r\n        <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n          data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n          <i className=\"bi bi-three-dots-vertical\"></i>\r\n        </button>\r\n        <ul className=\"dropdown-menu\">\r\n          <li>\r\n            <span className=\"dropdown-item\"\r\n              onClick={() => handleUpdateLeave(item)}\r\n            >\r\n              <Icon className={\"bi bi-pencil-square me-1\"} />Update</span>\r\n          </li>\r\n          <li>\r\n            <span className=\"dropdown-item\"\r\n              onClick={() => toggleDeleteLeaveType(item.id || item._id)}\r\n            >\r\n              <Icon className={\"bi bi-trash me-1\"} />Delete</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n    )\r\n  }), [allLeaveTypesData]);\r\n\r\n\r\n  const fields = [\r\n    { key: 'sn', label: 'S.N' },\r\n    { key: 'name', label: 'Name' },\r\n    { key: 'short_name', label: 'Short Name' },\r\n    { key: 'expire_on', label: 'Expire On' },\r\n    { key: 'leave_unit', label: 'Leave Unit' },\r\n    { key: 'is_active', label: 'Status' },\r\n    { key: 'created_at', label: 'Created At' },\r\n    { key: 'action', label: 'Action' }\r\n  ];\r\n  return (\r\n    <>\r\n      <CustomTable\r\n        data={allLeaveTypesData?.data}\r\n        fields={fields}\r\n        isLoading={isLoading}\r\n        pagination={true}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        totalPages={allLeaveTypesData?.totalPages}\r\n        tableName={t(\"headings.leave\")}\r\n        scopedSlots={scopedSlots}\r\n      />\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LeaveTable\r\n","import { Input, Label } from \"../../commanComponent\";\r\nimport CustomSelect from \"../../commanComponent/CustomSelect\";\r\nimport Image from \"../../commanComponent/Image\";\r\nimport { useCustomTranslation } from \"../../../translation\";\r\nexport const RuleRenderer = ({ rules, addRule, deleteRule, handleChange, allLeaveConstantData }) => {\r\n    const { t } = useCustomTranslation()\r\n    return (\r\n        <>\r\n            {rules && rules?.map((rule, index) => (\r\n                <div className=\"row\" key={index}>\r\n                    <div className=\"col-md-3 form-group mt-2 mrfViewOnly\">\r\n                        <Label text={t(\"labels.date\")} />\r\n                    </div>\r\n                    <div className=\"col-md-3 form-group mb-3\">\r\n                        <CustomSelect\r\n                            data={allLeaveConstantData?.dateConstants}\r\n                            placeholder={t(\"placeholders.from\")}\r\n                            value={rule?.from}\r\n                            handleChange={(selectedOption) => handleChange(selectedOption, \"from\", index)}\r\n                            name=\"from\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 form-group mb-3\">\r\n                        <CustomSelect\r\n                            data={allLeaveConstantData?.dateConstants}\r\n                            placeholder={t(\"placeholders.to\")}\r\n                            value={rule?.to}\r\n                            handleChange={(selectedOption) => handleChange(selectedOption, \"to\", index)}\r\n                            name=\"to\"\r\n                        />\r\n\r\n                    </div>\r\n                    <div className=\"col-md-3 form-group mb-3\">\r\n                        <Input\r\n                            type=\"number\"\r\n                            placeholder={t(\"placeholders.leaveCredit\")}\r\n                            value={rule?.leave_credit}\r\n                            name=\"leave_credit\"\r\n                            onChange={(e) => handleChange(e, null, index)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end mb-3\">\r\n                        {rules.length - 1 === index && (\r\n                            <div className=\"me-2\" onClick={addRule}>\r\n                                <Image imgSrc={\"images/add-icon3.svg\"} altText={\"\"} width={32} />\r\n                            </div>\r\n                        )}\r\n                        {rules.length > 1 && (\r\n                            <div onClick={() => deleteRule(index)}>\r\n                                <Image imgSrc={\"images/deletebg-Icon.svg\"} altText={\"\"} width={32} />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { validateSchema } from '../../../utils/ValidationHelper'\r\nimport { addLeaveSettingSchema } from '../../../utils/ValidationSchema'\r\nimport CustomSelect from '../../commanComponent/CustomSelect'\r\nimport { CustomButton, CustomError } from '../../globalComponents'\r\nimport { CustCheckbox, Input, Label } from '../../commanComponent'\r\nimport Image from '../../commanComponent/Image'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { RuleRenderer } from './RuleRenderer'\r\nimport { defaultMultiSelectOptions, getDataWithLabelValue } from '../../../utils/common'\r\n\r\n\r\nconst CreateUpdateLeaveSettings = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const { handleOpenClose, openModel,\r\n        allLeaveConstantData,\r\n        selectedLeaveData,\r\n        allDepartments,\r\n        handleDepartmentByDesignation,\r\n        allDesignations,\r\n        allLeaveTypeList,\r\n        handleAddUpdateLeaveSetting,\r\n        selectedLeaveSetting\r\n    } = props\r\n    const [errors, setErrors] = useState('')\r\n    const { addLeaveSettingPending, updateLeaveSettingPending } = useSelector(state => state.leave)\r\n    const [activeTab, setActiveTab] = useState('basic')\r\n    const [leaveSettingFormData, setLeaveSettingFormData] = useState({\r\n        leave_type: null,\r\n        department: null,\r\n        designation: null,\r\n        consider_present_status: [],\r\n        base_on_credit: '',\r\n        is_active: true,\r\n        count_weekend_as_leave: false,\r\n        count_holiday_as_leave: false,\r\n        allow_request_for: null,\r\n        allow_request_days: '',\r\n        allow_request_value: '',\r\n        administration_management: false,\r\n        enable_file_option: false,\r\n        leave_exceed_for_file: '',\r\n        count_leave_for_preceding_weekends: false,\r\n        count_leave_for_succeeding_weekends: false,\r\n        count_leave_for_preceding_holiday: false,\r\n        count_leave_for_succeeding_holiday: false,\r\n        not_allowed_clubbing_with: ''\r\n    })\r\n    const [leaveRules, setLeaveRules] = useState([{\r\n        operator: '',\r\n        working_days: '',\r\n        leave_credit: ''\r\n\r\n    }])\r\n    const [firstMonthRules, setFirstMonthRules] = useState([{\r\n        from: '',\r\n        to: '',\r\n        leave_credit: ''\r\n\r\n    }])\r\n    const [lastMonthRules, setLastMonthRules] = useState([{\r\n        from: '',\r\n        to: '',\r\n        leave_credit: ''\r\n\r\n    }])\r\n    const handleFromChange = (e, fieldName) => {\r\n        // For custom selects, use the value passed directly as `e`\r\n        const name = fieldName || e?.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n\r\n        if (fieldName === \"department\") {\r\n            handleDepartmentByDesignation(value?.value)\r\n            setLeaveSettingFormData(prevState => ({\r\n                ...prevState,\r\n                [\"designation\"]: null,\r\n            }));\r\n        }\r\n\r\n        setLeaveSettingFormData(prevState => ({\r\n            ...prevState,\r\n            [name]: type === 'checkbox' ? checked : value,\r\n        }));\r\n\r\n        // Reset error for this field\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n\r\n    const handleChangeLeaveRule = (e, fieldName, index) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value } = e?.target ? e?.target : { value: e };\r\n\r\n        setLeaveRules((prevState) =>\r\n            prevState?.map((rule, idx) =>\r\n                idx === index\r\n                    ? { ...rule, [name]: value } // Update specific rule at index\r\n                    : rule\r\n            )\r\n        );\r\n    }\r\n\r\n    const deleteLeaveRule = (index) => {\r\n        const updateLeaveRule = leaveRules.filter((_, i) => i !== index);\r\n        setLeaveRules(updateLeaveRule);\r\n    };\r\n\r\n    const addLeaveRule = () => {\r\n        setLeaveRules((prevState) => [\r\n            ...prevState,\r\n            {\r\n                operator: '',\r\n                working_days: '',\r\n                leave_credit: '',\r\n            },\r\n        ]);\r\n    };\r\n\r\n    const renderLeaveRules = useMemo(() => {\r\n        return (\r\n            leaveRules && leaveRules?.map((rule, index) => <div className='row' key={index}>\r\n                <div className=\"col-md-3 form-group mt-2 mrfViewOnly\">\r\n                    <Label text={t(\"labels.presentStatus\")}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 form-group mb-3\">\r\n                    <CustomSelect\r\n                        data={allLeaveConstantData?.leaveOperators}\r\n                        placeholder={t(\"placeholders.selectOperation\")}\r\n                        value={rule?.operator}\r\n                        handleChange={(selectedOption) => handleChangeLeaveRule(selectedOption, \"operator\", index)}\r\n                        name=\"operator\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 form-group mb-3\">\r\n                    <Input\r\n                        type=\"number\"\r\n                        placeholder={t(\"placeholders.workingDays\")}\r\n                        value={rule?.working_days}\r\n                        name=\"working_days\"\r\n                        onChange={(e) => handleChangeLeaveRule(e, null, index)}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 form-group mb-3\">\r\n                    <Input\r\n                        type=\"number\"\r\n                        placeholder={t(\"placeholders.leaveCredit\")}\r\n                        value={rule?.leave_credit}\r\n                        name=\"leave_credit\"\r\n                        onChange={(e) => handleChangeLeaveRule(e, null, index)}\r\n                    />\r\n                </div>\r\n                <div className=\"d-flex justify-content-end mb-3\">\r\n                    {leaveRules.length - 1 == index &&\r\n                        <div className='me-2' onClick={addLeaveRule} >\r\n                            <Image imgSrc={\"images/add-icon3.svg\"} altText={\"\"} width={32}></Image>\r\n                        </div>\r\n                    }\r\n                    {leaveRules.length > 1 && <div onClick={() => deleteLeaveRule(index)}>\r\n                        <Image imgSrc={\"images/deletebg-Icon.svg\"} altText={\"\"} width={32}></Image>\r\n                    </div>}\r\n                </div>\r\n            </div>)\r\n        )\r\n    }, [leaveRules, allLeaveConstantData])\r\n\r\n    const submitCreateUpdateLeaveSetting = async () => {\r\n        const {\r\n            leave_type,\r\n            department,\r\n            designation,\r\n            consider_present_status,\r\n            base_on_credit,\r\n            is_active,\r\n            count_weekend_as_leave,\r\n            count_holiday_as_leave,\r\n            allow_request_for,\r\n            allow_request_days,\r\n            allow_request_value,\r\n            administration_management,\r\n            enable_file_option,\r\n            leave_exceed_for_file,\r\n            count_leave_for_preceding_weekends,\r\n            count_leave_for_succeeding_weekends,\r\n            count_leave_for_preceding_holiday,\r\n            count_leave_for_succeeding_holiday,\r\n            not_allowed_clubbing_with,\r\n\r\n        } = leaveSettingFormData\r\n        const validationResponse = await validateSchema(addLeaveSettingSchema, leaveSettingFormData);\r\n        if (validationResponse.isValid) {\r\n            const presentStatus = getValuesPresentStatus(consider_present_status)\r\n            const updateLeaveRules = handleLeaveRules(leaveRules)\r\n            const updateFirstMonthRule = handleLeaveMonthRules(firstMonthRules)\r\n            const updateLastMonthRule = handleLeaveMonthRules(lastMonthRules)\r\n            const notAllowedClubbingWith = setFilterValues(not_allowed_clubbing_with)\r\n            const payload = {\r\n                leave_type_id: leave_type?.value,\r\n                department_id: department?.value,\r\n                designation_id: designation?.value,\r\n                leave_rules: updateLeaveRules,\r\n                consider_present_status: presentStatus,\r\n                base_on_credit: base_on_credit?.value,\r\n                is_active: is_active,\r\n                count_weekend_as_leave: count_weekend_as_leave || 0,\r\n                count_holiday_as_leave: count_holiday_as_leave || 0,\r\n                allow_request_for: allow_request_for?.value,\r\n                allow_request_days: allow_request_days || 0,\r\n                allow_request_value,\r\n                administration_management,\r\n                enable_file_option,\r\n                leave_exceed_for_file: leave_exceed_for_file || 0,\r\n                first_month_rules: updateFirstMonthRule,\r\n                last_month_rules: updateLastMonthRule,\r\n                count_leave_for_preceding_weekends,\r\n                count_leave_for_succeeding_weekends,\r\n                count_leave_for_preceding_holiday,\r\n                count_leave_for_succeeding_holiday,\r\n                not_allowed_clubbing_with: notAllowedClubbingWith || [],\r\n            }\r\n\r\n            setErrors({});\r\n            handleAddUpdateLeaveSetting(payload)\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n\r\n        }\r\n    }\r\n\r\n    const setFilterValues = (data) => {\r\n        const tempData = []\r\n        data && data?.map((item) => {\r\n            tempData.push(item?.value)\r\n        })\r\n        return tempData\r\n    }\r\n\r\n    const getValuesPresentStatus = (data) => {\r\n        let tempPresentStatus = []\r\n        data && data?.length > 1 && data?.map((item) => {\r\n            tempPresentStatus.push(item?.value)\r\n        })\r\n        return tempPresentStatus\r\n    }\r\n    const handleLeaveRules = (data) => {\r\n        return data && data?.map((item, index) => ({\r\n            ...item,\r\n            operator: item?.operator?.value,\r\n        }))\r\n    }\r\n    const handleLeaveMonthRules = (data) => {\r\n        return data && data?.map((item, index) => ({\r\n            ...item,\r\n            from: item?.from?.value,\r\n            to: item?.to?.value,\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (selectedLeaveSetting) {\r\n            const tempConsiderPresentStatus = getDataWithLabelValue(selectedLeaveSetting?.consider_present_status)\r\n            const notAllowedClubbingWith =defaultMultiSelectOptions(allLeaveTypeList,selectedLeaveSetting.not_allowed_clubbing_with)\r\n            setLeaveSettingFormData({\r\n                leave_type: { value: selectedLeaveSetting?.leave_type_id, label: selectedLeaveSetting?.leave_type_name },\r\n                department: { value: selectedLeaveSetting?.department_id, label: selectedLeaveSetting?.department_name },\r\n                designation: { value: selectedLeaveSetting?.designation_id, label: selectedLeaveSetting?.designation_name },\r\n                consider_present_status: tempConsiderPresentStatus,\r\n                base_on_credit: { value: selectedLeaveSetting?.base_on_credit, label: selectedLeaveSetting?.base_on_credit_name },\r\n                is_active: selectedLeaveSetting?.is_active,\r\n                count_weekend_as_leave: selectedLeaveSetting?.count_weekend_as_leave || '',\r\n                count_holiday_as_leave: selectedLeaveSetting?.count_holiday_as_leave || '',\r\n                allow_request_for: { value: selectedLeaveSetting?.allow_request_for, label: selectedLeaveSetting?.allow_request_for_name },\r\n                allow_request_days: selectedLeaveSetting?.allow_request_days || '',\r\n                allow_request_value: selectedLeaveSetting?.allow_request_value,\r\n                administration_management: selectedLeaveSetting?.administration_management,\r\n                enable_file_option: selectedLeaveSetting?.enable_file_option,\r\n                leave_exceed_for_file: selectedLeaveSetting?.leave_exceed_for_file || '',\r\n                count_leave_for_preceding_weekends: selectedLeaveSetting?.count_leave_for_preceding_weekends,\r\n                count_leave_for_succeeding_weekends: selectedLeaveSetting?.count_leave_for_succeeding_weekends,\r\n                count_leave_for_preceding_holiday: selectedLeaveSetting?.count_leave_for_preceding_holiday,\r\n                count_leave_for_succeeding_holiday: selectedLeaveSetting?.count_leave_for_succeeding_holiday,\r\n                not_allowed_clubbing_with: notAllowedClubbingWith,\r\n            })\r\n            setLeaveRules((prev) =>\r\n                selectedLeaveSetting?.leave_rules?.map((item) => ({\r\n                    ...item,\r\n                    operator: { value: item?.operator, label: item?.operator }\r\n                }))\r\n            );\r\n            if (selectedLeaveSetting?.first_month_rules) {\r\n                setFirstMonthRules((prev) =>\r\n                    selectedLeaveSetting?.first_month_rules?.map((item) => ({\r\n                        ...item,\r\n                        from: { value: item?.from, label: item?.from },\r\n                        to: { value: item?.to, label: item?.to }\r\n                    })))\r\n            }\r\n            if (selectedLeaveSetting?.last_month_rules) {\r\n                setLastMonthRules((prev) =>\r\n                    selectedLeaveSetting?.last_month_rules?.map((item) => ({\r\n                        ...item,\r\n                        from: { value: item?.from, label: item?.from },\r\n                        to: { value: item?.to, label: item?.to }\r\n                    })))\r\n            }\r\n\r\n        }\r\n    }, [selectedLeaveSetting])\r\n\r\n    const resetForm = () => {\r\n        setLeaveSettingFormData({\r\n            leave_type: null,\r\n            department: null,\r\n            designation: null,\r\n            consider_present_status: [],\r\n            base_on_credit: '',\r\n            is_active: true,\r\n            count_weekend_as_leave: false,\r\n            count_holiday_as_leave: false,\r\n            allow_request_for: null,\r\n            allow_request_days: '',\r\n            allow_request_value: '',\r\n            administration_management: false,\r\n            enable_file_option: false,\r\n            leave_exceed_for_file: '',\r\n            count_leave_for_preceding_weekends: false,\r\n            count_leave_for_succeeding_weekends: false,\r\n            count_leave_for_preceding_holiday: false,\r\n            count_leave_for_succeeding_holiday: false,\r\n            not_allowed_clubbing_with: ''\r\n        })\r\n        setLeaveRules([{\r\n            operator: '',\r\n            working_days: '',\r\n            leave_credit: ''\r\n        }])\r\n        setLastMonthRules([{\r\n            from: '',\r\n            to: '',\r\n            leave_credit: ''\r\n\r\n        }])\r\n        setFirstMonthRules([{\r\n            from: '',\r\n            to: '',\r\n            leave_credit: ''\r\n        }])\r\n        setErrors({})\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            resetForm()\r\n        }\r\n    }, [openModel])\r\n\r\n    const handleChangeLeaveMonthRule = (e, field, index, setRules, rules) => {\r\n        const newRules = [...rules];\r\n        newRules[index][field || e.target.name] = field ? e : e.target.value;\r\n        setRules(newRules); // Update the state with the modified rules\r\n    };\r\n\r\n    const addLeaveMonthRule = (setRules, rules) => {\r\n        setRules([...rules, { from: '', to: '', leave_credit: '' }]);\r\n    };\r\n\r\n    const deleteLeaveMonthRule = (index, setRules, rules) => {\r\n        const updatedRules = rules.filter((_, i) => i !== index);\r\n        setRules(updatedRules);\r\n    };\r\n\r\n    const handleActiveTab = (type) => {\r\n        setActiveTab(type)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n            tabIndex={-1}\r\n            style={{\r\n                visibility: openModel ? 'visible' : 'hidden',\r\n                width: \"800px\"\r\n            }}\r\n            id=\"interviewDetail\"\r\n        >\r\n            <div className=\"offcanvas-header\">\r\n                <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{selectedLeaveSetting ? \"Update\" : \"Add\"} Leave Setting</h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                    onClick={() => handleOpenClose()}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"offcanvas-body myRequest \">\r\n                <div className=\"formPanel mrfMain\">\r\n                    <ul className=\"nav nav-tabs leaveTabs mb-4\">\r\n                        <li className=\"nav-item\">\r\n                            <button\r\n                                className={`nav-link ${activeTab === \"basic\" ? \"active\" : \"\"}`}\r\n                                data-bs-toggle=\"tab\"\r\n                                data-bs-target=\"#basic\"\r\n                                type=\"button\"\r\n                                onClick={() => handleActiveTab(\"basic\")}\r\n                            >\r\n                                Basic\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button\r\n                                className={`nav-link ${activeTab === \"credit\" ? \"active\" : \"\"}`}\r\n                                data-bs-toggle=\"tab\"\r\n                                data-bs-target=\"#credit\"\r\n                                type=\"button\"\r\n                                onClick={() => handleActiveTab(\"credit\")}\r\n                            >\r\n                                Credit\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <button\r\n                                className={`nav-link ${activeTab === \"sandwich\" ? \"active\" : \"\"}`}\r\n                                data-bs-toggle=\"tab\"\r\n                                data-bs-target=\"#sandwich\"\r\n                                type=\"button\"\r\n                                onClick={() => handleActiveTab(\"sandwich\")}\r\n                            >\r\n                                Sandwich\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"tab-content\">\r\n\r\n                        {/* Basic Fields Start*/}\r\n                        <div className={`tab-pane fade ${activeTab === \"basic\" ? \"show active\" : \"\"}`} id=\"basic\">\r\n                            <div className=\"row\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6 form-group mb-3\">\r\n                                        <Label text={t(\"labels.department\")} required={true}\r\n                                            tooltipText={t(\"tooltips.leaveSettingDepartment\")}\r\n                                        />\r\n                                        <CustomSelect\r\n                                            data={allDepartments}\r\n                                            placeholder={t(\"placeholders.selectDepartment\")}\r\n                                            value={leaveSettingFormData?.department || ''}\r\n                                            handleChange={(selectedOption) => {\r\n                                                handleFromChange(selectedOption, \"department\");\r\n\r\n                                            }\r\n                                            }\r\n                                            name=\"department\"\r\n                                        />\r\n\r\n                                        {errors?.department && (\r\n                                            <CustomError text={errors.department} />\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"col-md-6 form-group mb-3\">\r\n                                        <Label text={t(\"labels.designation\")} required={true}\r\n                                            tooltipText={t(\"tooltips.leaveSettingDesignation\")}\r\n                                        />\r\n                                        <CustomSelect\r\n                                            data={allDesignations}\r\n                                            placeholder={t(\"placeholders.selectDesignation\")}\r\n                                            value={leaveSettingFormData?.designation || ''}\r\n                                            handleChange={(selectedOption) => handleFromChange(selectedOption, \"designation\")}\r\n                                            name=\"designation\"\r\n                                        />\r\n\r\n                                        {errors?.designation && (\r\n                                            <CustomError text={errors.designation} />\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"col-md-6 form-group mb-3\">\r\n                                        <Label text={t(\"labels.leaveType\")} required={true}\r\n                                            tooltipText={t(\"tooltips.leaveSettingType\")}\r\n                                        />\r\n                                        <CustomSelect\r\n                                            data={allLeaveTypeList}\r\n                                            placeholder={t(\"placeholders.selectLeaveType\")}\r\n                                            value={leaveSettingFormData?.leave_type || ''}\r\n                                            handleChange={(selectedOption) => handleFromChange(selectedOption, \"leave_type\")}\r\n                                            name=\"leave_type\"\r\n                                        />\r\n                                        {errors?.leave_type && (\r\n                                            <CustomError text={errors.leave_type} />\r\n                                        )}\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-6 form-group mb-3\">\r\n                                        <Label text={t(\"labels.notAllowedClubbingWith\")}\r\n                                            tooltipText={t(\"tooltips.notAllowedClubbingWith\")}\r\n                                        />\r\n                                        <CustomSelect\r\n                                            data={allLeaveTypeList}\r\n                                            placeholder={t(\"placeholders.notAllowedClubbingWith\")}\r\n                                            value={leaveSettingFormData?.not_allowed_clubbing_with || ''}\r\n                                            handleChange={(selectedOption) => handleFromChange(selectedOption, \"not_allowed_clubbing_with\")}\r\n                                            name=\"not_allowed_clubbing_with\"\r\n                                            isMulti={true}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-6 form-group mb-3\">\r\n                                        <Label text={t(\"labels.allowRequestFor\")}\r\n                                            tooltipText={t(\"tooltips.allowRequestFor\")}\r\n                                        />\r\n                                        <CustomSelect\r\n                                            data={allLeaveConstantData?.leaveAllowRequestsFor}\r\n                                            placeholder={t(\"placeholders.allowRequestFor\")}\r\n                                            value={leaveSettingFormData?.allow_request_for || ''}\r\n                                            handleChange={(selectedOption) => handleFromChange(selectedOption, \"allow_request_for\")}\r\n                                            name=\"allow_request_for\"\r\n                                        />\r\n                                    </div>\r\n                                    {leaveSettingFormData?.allow_request_for && <div className=\"col-md-6 form-group mb-3\">\r\n                                        <Label text={t(\"labels.allowRequestDays\")}\r\n                                            tooltipText={t(\"tooltips.allowRequestDays\")}\r\n                                        />\r\n                                        <Input\r\n                                            type=\"number\"\r\n                                            placeholder={t(\"placeholders.allowRequestDays\")}\r\n                                            value={leaveSettingFormData?.allow_request_days}\r\n                                            name=\"allow_request_days\"\r\n                                            onChange={(e) => handleFromChange(e)}\r\n                                        />\r\n                                    </div>}\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-4\">\r\n                                            <div className=\"form-group mb-4\">\r\n                                                <Label text={t(\"labels.isActive\")}\r\n                                                    tooltipText={t(\"tooltips.LeaveSettingIsActive\")}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-8\">\r\n                                            <div className=\"form-group mb-3\">\r\n                                                <CustCheckbox\r\n                                                    key={\"is_active\"}\r\n                                                    id={`is_active`}\r\n                                                    // label={\"Active\"}\r\n                                                    checked={leaveSettingFormData?.is_active}\r\n                                                    handleChange={(e) => handleFromChange(e)}\r\n                                                    name={\"is_active\"}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* Credit Fields Start*/}\r\n                        <div className={`tab-pane fade ${activeTab === \"credit\" ? \"show active\" : \"\"}`} id=\"credit\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6 form-group mb-3\">\r\n                                    <Label text={t(\"labels.baseOnCredit\")}\r\n                                        tooltipText={t(\"tooltips.baseOnCredit\")}\r\n                                    />\r\n                                    <CustomSelect\r\n                                        data={allLeaveConstantData?.leaveCreditBasis}\r\n                                        placeholder={t(\"placeholders.selectBaseOnCredit\")}\r\n                                        value={leaveSettingFormData?.base_on_credit || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"base_on_credit\")}\r\n                                        name=\"base_on_credit\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-12 form-group mb-3\">\r\n                                    <Label text={t(\"labels.considerPresentStatus\")}\r\n                                        tooltipText={t(\"tooltips.considerPresentStatus\")}\r\n                                    />\r\n                                    <CustomSelect\r\n                                        data={allLeaveConstantData?.presentStatus}\r\n                                        placeholder={t(\"placeholders.selectConsiderPresentStatus\")}\r\n                                        value={leaveSettingFormData?.consider_present_status || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"consider_present_status\")}\r\n                                        name=\"consider_present_status\"\r\n                                        isMulti={true}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"col-md-12 form-group mb-3 row\">\r\n                                    <Label text={t(\"labels.leaveRule\")}\r\n                                        tooltipText={t(\"tooltips.leaveRule\")}\r\n                                    />\r\n                                    {renderLeaveRules}\r\n                                </div>\r\n                                <div className=\"col-md-12 form-group mb-3 row\">\r\n                                    <Label text={t(\"labels.firstMonthRules\")}\r\n                                        tooltipText={t(\"tooltips.firstMonthRules\")}\r\n                                    />\r\n\r\n                                    <RuleRenderer\r\n                                        rules={firstMonthRules}\r\n                                        addRule={() => addLeaveMonthRule(setFirstMonthRules, firstMonthRules)}\r\n                                        deleteRule={(index) => deleteLeaveMonthRule(index, setFirstMonthRules, firstMonthRules)}\r\n                                        handleChange={(e, field, index) => handleChangeLeaveMonthRule(e, field, index, setFirstMonthRules, firstMonthRules)}\r\n                                        allLeaveConstantData={allLeaveConstantData}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-12 form-group mb-3 row\">\r\n                                    <Label text={t(\"labels.lastMonthRules\")}\r\n                                        tooltipText={t(\"tooltips.lastMonthLeaveRule\")}\r\n                                    />\r\n                                    <RuleRenderer\r\n                                        rules={lastMonthRules}\r\n                                        addRule={() => addLeaveMonthRule(setLastMonthRules, lastMonthRules)}\r\n                                        deleteRule={(index) => deleteLeaveMonthRule(index, setLastMonthRules, lastMonthRules)}\r\n                                        handleChange={(e, field, index) => handleChangeLeaveMonthRule(e, field, index, setLastMonthRules, lastMonthRules)}\r\n                                        allLeaveConstantData={allLeaveConstantData}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* Sandwich fields Start*/}\r\n                        <div className={`tab-pane fade ${activeTab === \"sandwich\" ? \"show active\" : \"\"}`} id=\"sandwich\">\r\n                            <div className=\"row\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.countWeekendLeave\")}\r\n                                                tooltipText={t(\"tooltips.countWeekendAsLeave\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustCheckbox\r\n                                                key={\"count_weekend_as_leave\"}\r\n                                                id={`count_weekend_as_leave`}\r\n                                                // label={\"Active\"}\r\n                                                checked={leaveSettingFormData?.count_weekend_as_leave}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"count_weekend_as_leave\"}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.countHolidayLeave\")}\r\n                                                tooltipText={t(\"tooltips.countHolidayAsLeave\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustCheckbox\r\n                                                key={\"count_holiday_as_leave\"}\r\n                                                id={`count_holiday_as_leave`}\r\n                                                // label={\"Active\"}\r\n                                                checked={leaveSettingFormData?.count_holiday_as_leave}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"count_holiday_as_leave\"}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.countLeaveForPrecedingWeekends\")}\r\n                                            // tooltipText={t(\"tooltips.countWeekendAsLeave\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustCheckbox\r\n                                                key={\"count_leave_for_preceding_weekends\"}\r\n                                                id={`count_leave_for_preceding_weekends`}\r\n                                                checked={leaveSettingFormData?.count_leave_for_preceding_weekends}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"count_leave_for_preceding_weekends\"}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.countLeaveForSucceedingWeekends\")}\r\n                                            // tooltipText={t(\"tooltips.countWeekendAsLeave\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustCheckbox\r\n                                                key={\"count_leave_for_succeeding_weekends\"}\r\n                                                id={`count_leave_for_succeeding_weekends`}\r\n                                                checked={leaveSettingFormData?.count_leave_for_succeeding_weekends}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"count_leave_for_succeeding_weekends\"}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.countLeaveForPrecedingHoliday\")}\r\n                                            // tooltipText={t(\"tooltips.countWeekendAsLeave\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustCheckbox\r\n                                                key={\"count_leave_for_preceding_holiday\"}\r\n                                                id={`count_leave_for_preceding_holiday`}\r\n                                                checked={leaveSettingFormData?.count_leave_for_preceding_holiday}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"count_leave_for_preceding_holiday\"}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.countLeaveForSucceedingHoliday\")}\r\n                                            // tooltipText={t(\"tooltips.countWeekendAsLeave\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-8\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustCheckbox\r\n                                                key={\"count_leave_for_succeeding_holiday\"}\r\n                                                id={`count_leave_for_succeeding_holiday`}\r\n                                                checked={leaveSettingFormData?.count_leave_for_succeeding_holiday}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"count_leave_for_succeeding_holiday\"}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"offcanvas-footer\">\r\n                <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                    <CustomButton\r\n                        text={selectedLeaveSetting ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                        classNames={\"btn btn-org-gradient\"}\r\n                        handleClick={() => submitCreateUpdateLeaveSetting()}\r\n                        isLoading={selectedLeaveData ? updateLeaveSettingPending : addLeaveSettingPending}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n         {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateUpdateLeaveSettings\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustomButton } from '../../globalComponents'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { commonActions, departmentAction, designationAction, employeeActions, leaveAction } from '../../../core/resource/actions'\r\nimport { pagination } from '../../../utils/Constants.config'\r\nimport ApproveRejectModal from '../../modal/ApproveRejectModal'\r\nimport LeaveSettingTable from './LeaveSettingTable'\r\nimport CreateUpdateLeave from './CreateUpdateLeave'\r\nimport LeaveBanner from \"./LeaveBanner\"\r\nimport LeaveTable from \"./LeaveTable\"\r\nimport CreateUpdateLeaveSettings from './CreateUpdateLeaveSettings'\r\nimport { useCustomTranslation } from '../../../translation'\r\n\r\nconst Leave = () => {\r\n    const dispatch = useDispatch()\r\n    const { t } = useCustomTranslation()\r\n    const [openCloseAddLeaveModal, setOpenCloseAddLeave] = useState(false)\r\n    const {\r\n        addLeaveTypePending,\r\n        addLeaveTypeRes,\r\n        addLeaveTypeError,\r\n\r\n        getLeaveConstantDataPending,\r\n        getLeaveConstantDataRes,\r\n        getLeaveConstantDataError,\r\n\r\n        getAllLeaveTypesPending,\r\n        getAllLeaveTypesRes,\r\n        getAllLeaveTypesError,\r\n\r\n        updateLeaveTypePending,\r\n        updateLeaveTypeRes,\r\n        updateLeaveTypeError,\r\n\r\n        deleteLeaveTypePending,\r\n        deleteLeaveTypeRes,\r\n        deleteLeaveTypeError,\r\n\r\n        getLeaveTypeListPending,\r\n        getLeaveTypeListRes,\r\n        getLeaveTypeListError,\r\n\r\n        addLeaveSettingPending,\r\n        addLeaveSettingRes,\r\n        addLeaveSettingError,\r\n\r\n        getAllLeaveSettingPending,\r\n        getAllLeaveSettingRes,\r\n        getAllLeaveSettingError,\r\n\r\n        updateLeaveSettingPending,\r\n        updateLeaveSettingRes,\r\n        updateLeaveSettingError,\r\n\r\n        deleteLeaveSettingPending,\r\n        deleteLeaveSettingRes,\r\n        deleteLeaveSettingError,\r\n\r\n\r\n    } = useSelector(state => state.leave);\r\n    const {\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    } = useSelector(state => state.department)\r\n    const {\r\n        getDesignationsByDepartmentRes,\r\n        getDesignationsByDepartmentPending,\r\n        getDesignationsByDepartmentError\r\n    } = useSelector(state => state.designation)\r\n\r\n    const {\r\n        getAppConstantDataPending,\r\n        getAppConstantDataRes,\r\n        getAppConstantDataError,\r\n    } = useSelector(state => state.common)\r\n\r\n    const {\r\n        getAllEmployeePending,\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n    } = useSelector(state => state.employee)\r\n\r\n    const [allLeaveConstantData, setAllLeaveConstantData] = useState('')\r\n    const [allLeaveTypesData, setLeaveTypesData] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [selectedLeaveData, setSelectedLeaveData] = useState('')\r\n    const [isShowDeleteLeaveTypeModal, setIsShowDeleteLeaveTypeModal] = useState(false)\r\n    const [deleteLeaveTypeId, setDeleteLeaveTypeId] = useState('')\r\n    const [activeTabType, setActiveTabType] = useState('leave')\r\n    const [openCloseLeaveSettingModal, setOpenCloseLeaveSettingModal] = useState(false)\r\n    const [allDepartments, setAllDepartments] = useState('')\r\n    const [allDesignations, setAllDesignations] = useState('')\r\n    const [allLeaveTypeList, setAllLeaveTypeList] = useState('')\r\n    const [allLeaveSettingData, setAllLeaveSettingData] = useState('')\r\n    const [isShowDeleteLeaveSettingModal, setIsShowDeleteLeaveSettingModal] = useState(false)\r\n    const [deleteLeaveSettingId, setDeleteLeaveSettingId] = useState()\r\n    const [selectedLeaveSetting, setSelectedLeaveSetting] = useState('')\r\n    const [leaveSettingId, setLeaveSettingId] = useState('')\r\n    const [appConstantData, setAppConstantData] = useState()\r\n    const [allEmployeeList,setAllEmployeeList]=useState('')\r\n\r\n\r\n    /* Add Leave Type */\r\n    const toggleAddUpdateLeaveModal = (data) => {\r\n        if (!data) {\r\n            setSelectedLeaveData('')\r\n        } else {\r\n            setSelectedLeaveData(data)\r\n        }\r\n        setOpenCloseAddLeave(!openCloseAddLeaveModal);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getLeaveConstantData()\r\n        getAllDepartments()\r\n        handleGetLeaveTypeList()\r\n        getAppConstantData()\r\n        getAllEmployee()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        handleGetAllSetting()\r\n        getAllLeaveTypes()\r\n    }, [currentPage])\r\n\r\n    /* Create Update Leave Type */\r\n    const handleCreateUpdateLeave = (params) => {\r\n        if (selectedLeaveData) {\r\n            params['_id'] = selectedLeaveData?.id || selectedLeaveData?._id\r\n            dispatch(leaveAction.updateLeaveTypeRequest(params));\r\n        }\r\n        else {\r\n            dispatch(leaveAction.addLeaveTypeRequest(params));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!addLeaveTypePending) {\r\n            if (addLeaveTypeError) {\r\n                dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_CLEAR_ADD_LEAVE_TYPE_STORE\"))\r\n                return;\r\n            }\r\n            if (addLeaveTypeRes) {\r\n                if (addLeaveTypeRes?.code === 200) {\r\n                    dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_CLEAR_ADD_LEAVE_TYPE_STORE\"))\r\n                    getAllLeaveTypes()\r\n                    setOpenCloseAddLeave(!openCloseAddLeaveModal);\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addLeaveTypeRes,\r\n        addLeaveTypeError,\r\n        addLeaveTypePending\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!updateLeaveTypePending) {\r\n            if (updateLeaveTypeError) {\r\n                dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_CLEAR_UPDATE_LEAVE_TYPE_STORE\"))\r\n                return;\r\n            }\r\n            if (updateLeaveTypeRes) {\r\n                if (updateLeaveTypeRes?.code === 200) {\r\n                    dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_CLEAR_UPDATE_LEAVE_TYPE_STORE\"))\r\n                    getAllLeaveTypes()\r\n                    setOpenCloseAddLeave(!openCloseAddLeaveModal);\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updateLeaveTypeRes,\r\n        updateLeaveTypeError,\r\n        updateLeaveTypePending\r\n    ]);\r\n\r\n    /* Get Leave Constant Data */\r\n    const getLeaveConstantData = (params) => {\r\n        dispatch(leaveAction.getLeaveConstantDataRequest(params));\r\n    }\r\n    useEffect(() => {\r\n        if (!getLeaveConstantDataPending) {\r\n            if (getLeaveConstantDataError) {\r\n                return;\r\n            }\r\n            if (getLeaveConstantDataRes) {\r\n                if (getLeaveConstantDataRes?.code === 200) {\r\n                    const getLeaveConstantData = getLeaveConstantDataRes?.data\r\n                    setAllLeaveConstantData(getLeaveConstantData)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getLeaveConstantDataRes,\r\n        getLeaveConstantDataError,\r\n        getLeaveConstantDataPending\r\n    ]);\r\n\r\n    /* Get All Leave Data */\r\n    const getAllLeaveTypes = () => {\r\n        const params = {\r\n            page: currentPage,\r\n            limit: pagination.limit,\r\n        }\r\n        dispatch(leaveAction.getAllLeaveTypesRequest(params));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (!getAllLeaveTypesPending) {\r\n            if (getAllLeaveTypesError) {\r\n                return;\r\n            }\r\n            if (getAllLeaveTypesRes) {\r\n                if (getAllLeaveTypesRes?.code === 200) {\r\n                    const getAllLeaveTypesResData = getAllLeaveTypesRes?.data\r\n                    setLeaveTypesData(getAllLeaveTypesResData)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllLeaveTypesRes,\r\n        getAllLeaveTypesError,\r\n        getAllLeaveTypesPending\r\n    ]);\r\n\r\n    /* Delete Leave Type */\r\n    const toggleDeleteLeaveType = (id) => {\r\n        if (id) {\r\n            setDeleteLeaveTypeId(id)\r\n        }\r\n        setIsShowDeleteLeaveTypeModal(!isShowDeleteLeaveTypeModal)\r\n    }\r\n\r\n    const deleteLeaveType = (type) => {\r\n        if (type) {\r\n            const params = {\r\n                _id: deleteLeaveTypeId\r\n            }\r\n            dispatch(leaveAction?.deleteLeaveTypeRequest(params))\r\n\r\n        } else {\r\n            toggleDeleteLeaveType()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!deleteLeaveTypePending) {\r\n            if (deleteLeaveTypeError) {\r\n                dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_CLEAR_DELETE_LEAVE_TYPE_STORE\"))\r\n                return;\r\n            }\r\n            if (deleteLeaveTypeRes) {\r\n                if (deleteLeaveTypeRes?.code === 200) {\r\n                    dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_CLEAR_DELETE_LEAVE_TYPE_STORE\"))\r\n                    if (currentPage > 1 && allLeaveTypesData?.data?.length === 1) {\r\n                        setCurrentPage((pre => pre -= 1))\r\n                    } else {\r\n                        getAllLeaveTypes()\r\n                    }\r\n                    toggleDeleteLeaveType()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        deleteLeaveTypeRes,\r\n        deleteLeaveTypeError,\r\n        deleteLeaveTypePending\r\n    ]);\r\n\r\n    const handleActiveTab = (type) => {\r\n        setActiveTabType(type)\r\n    }\r\n\r\n\r\n\r\n    /* Get All Departments */\r\n    const getAllDepartments = () => {\r\n        if (!getDepartmentListRes?.data?.length) {\r\n            dispatch(departmentAction.getDepartmentListRequest());\r\n        } else {\r\n            setAllDepartments(getDepartmentListRes?.data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getDepartmentListPending) {\r\n            if (getDepartmentListError) {\r\n                return;\r\n            }\r\n            if (getDepartmentListRes) {\r\n                if (getDepartmentListRes?.code === 200) {\r\n                    const departmentResponse = getDepartmentListRes?.data\r\n                    setAllDepartments(departmentResponse)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    ]);\r\n\r\n    /* Department by Designation  */\r\n    const handleDepartmentByDesignation = (id) => {\r\n        const params = {\r\n            department_id: id\r\n        }\r\n        dispatch(designationAction.getDesignationsByDepartmentRequest(params));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getDesignationsByDepartmentPending) {\r\n            if (getDesignationsByDepartmentError) {\r\n                return;\r\n            }\r\n            if (getDesignationsByDepartmentRes) {\r\n                if (getDesignationsByDepartmentRes?.code === 200) {\r\n                    const designationResponse = getDesignationsByDepartmentRes?.data || []\r\n                    setAllDesignations(designationResponse)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDesignationsByDepartmentRes,\r\n        getDesignationsByDepartmentError,\r\n        getDesignationsByDepartmentPending\r\n    ]);\r\n\r\n\r\n    // GET LEAVE TYPE.... \r\n    const handleGetLeaveTypeList = () => {\r\n        dispatch(leaveAction.getLeaveTypeListRequest());\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getLeaveTypeListPending) {\r\n            if (getLeaveTypeListError) {\r\n                return;\r\n            }\r\n            if (getLeaveTypeListRes) {\r\n                if (getLeaveTypeListRes?.code === 200) {\r\n                    const getLeaveTypeListResData = getLeaveTypeListRes?.data\r\n                    setAllLeaveTypeList(getLeaveTypeListResData)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getLeaveTypeListRes,\r\n        getLeaveTypeListError,\r\n        getLeaveTypeListPending\r\n    ]);\r\n\r\n\r\n    /* Add Update Setting Type */\r\n    const toggleAddUpdateLeaveSettingModal = (selectedData) => {\r\n        if (selectedData) {\r\n            setSelectedLeaveSetting(selectedData)\r\n            setLeaveSettingId(selectedData?._id)\r\n        } else {\r\n            setSelectedLeaveSetting('')\r\n        }\r\n        setOpenCloseLeaveSettingModal(!openCloseLeaveSettingModal);\r\n    };\r\n\r\n    const handleAddUpdateLeaveSetting = (payload) => {\r\n        if (selectedLeaveSetting) {\r\n            payload[\"_id\"] = leaveSettingId || ''\r\n            dispatch(leaveAction.updateLeaveSettingRequest(payload));\r\n        } else {\r\n            dispatch(leaveAction.addLeaveSettingRequest(payload));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!addLeaveSettingPending) {\r\n            if (addLeaveSettingError) {\r\n                dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_CLEAR_ADD_LEAVE_SETTING_STORE\"))\r\n                return;\r\n            }\r\n            if (addLeaveSettingRes) {\r\n                if (addLeaveSettingRes?.code === 200) {\r\n                    setOpenCloseLeaveSettingModal(!openCloseLeaveSettingModal);\r\n                    handleGetAllSetting()\r\n                    dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_CLEAR_ADD_LEAVE_SETTING_STORE\"))\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addLeaveSettingRes,\r\n        addLeaveSettingError,\r\n        addLeaveSettingPending\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!updateLeaveSettingPending) {\r\n            if (updateLeaveSettingError) {\r\n                dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_CLEAR_UPDATE_LEAVE_SETTING_STORE\"))\r\n                return;\r\n            }\r\n            if (updateLeaveSettingRes) {\r\n                if (updateLeaveSettingRes?.code === 200) {\r\n                    setOpenCloseLeaveSettingModal(!openCloseLeaveSettingModal);\r\n                    handleGetAllSetting()\r\n                    dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_CLEAR_UPDATE_LEAVE_SETTING_STORE\"))\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updateLeaveSettingRes,\r\n        updateLeaveSettingError,\r\n        updateLeaveSettingPending\r\n    ]);\r\n\r\n    /* Get Leave Settings */\r\n    const handleGetAllSetting = () => {\r\n        const params = {\r\n            page: currentPage,\r\n            limit: pagination?.limit,\r\n        }\r\n        dispatch(leaveAction.getAllLeaveSettingRequest(params));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getAllLeaveSettingPending) {\r\n            if (getAllLeaveSettingError) {\r\n                return;\r\n            }\r\n            if (getAllLeaveSettingRes) {\r\n                if (getAllLeaveSettingRes?.code === 200) {\r\n                    setAllLeaveSettingData(getAllLeaveSettingRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllLeaveSettingRes,\r\n        getAllLeaveSettingError,\r\n        getAllLeaveSettingPending\r\n    ]);\r\n\r\n    /* Delete Leave Settings */\r\n    const toggleDeleteSettingTypeModal = (id) => {\r\n        if (id) {\r\n            setDeleteLeaveSettingId(id)\r\n        }\r\n        setIsShowDeleteLeaveSettingModal(!isShowDeleteLeaveSettingModal)\r\n    }\r\n\r\n    const handleDeleteSettingType = (type) => {\r\n        if (type) {\r\n            const params = {\r\n                _id: deleteLeaveSettingId\r\n            }\r\n            dispatch(leaveAction?.deleteLeaveSettingRequest(params))\r\n\r\n        } else {\r\n            toggleDeleteSettingTypeModal()\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!deleteLeaveSettingPending) {\r\n            if (deleteLeaveSettingError) {\r\n                dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_CLEAR_DELETE_LEAVE_SETTING_STORE\"))\r\n                return;\r\n            }\r\n            if (deleteLeaveSettingRes) {\r\n                if (deleteLeaveSettingRes?.code === 200) {\r\n                    toggleDeleteSettingTypeModal()\r\n                    if (currentPage > 1 && allLeaveSettingData?.data?.length === 1) {\r\n                        setCurrentPage((pre => pre -= 1))\r\n                    } else {\r\n                        handleGetAllSetting()\r\n                    }\r\n                    dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_CLEAR_DELETE_LEAVE_SETTING_STORE\"))\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        deleteLeaveSettingRes,\r\n        deleteLeaveSettingError,\r\n        deleteLeaveSettingPending\r\n    ]);\r\n\r\n\r\n   \r\n    /* Get All Employee List*/\r\n    const getAllEmployee = () => {\r\n        dispatch(employeeActions.getAllEmployeeRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getAllEmployeePending) {\r\n            if (getAllEmployeeError) {\r\n                return;\r\n            }\r\n            if (getAllEmployeeRes) {\r\n                if (getAllEmployeeRes?.code === 200) {\r\n\r\n                    setAllEmployeeList(getAllEmployeeRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n        getAllEmployeePending\r\n    ]);\r\n\r\n\r\n     /*Get App Constant Data */\r\n    const getAppConstantData = () => {\r\n        dispatch(commonActions.getAppConstantDataRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getAppConstantDataPending) {\r\n            if (getAppConstantDataError) {\r\n                return;\r\n            }\r\n            if (getAppConstantDataRes) {\r\n                if (getAppConstantDataRes?.code === 200) {\r\n                    setAppConstantData(getAppConstantDataRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAppConstantDataRes,\r\n        getAppConstantDataError,\r\n        getAppConstantDataPending\r\n    ]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <LeaveBanner handleActiveTab={handleActiveTab} />\r\n            {activeTabType === \"leave\" && <>\r\n                <div className=\"d-flex  justify-content-end \">\r\n                    <CustomButton\r\n                        classNames={\"btn btn-primary gradientBg mt-3\"}\r\n                        text={t(\"btns.addLeaveType\")}\r\n                        handleClick={() => toggleAddUpdateLeaveModal()}\r\n                    />\r\n                </div>\r\n                <LeaveTable\r\n                    allLeaveTypesData={allLeaveTypesData}\r\n                    setSelectedLeaveData={setSelectedLeaveData}\r\n                    toggleAddUpdateLeaveModal={toggleAddUpdateLeaveModal}\r\n                    toggleDeleteLeaveType={toggleDeleteLeaveType}\r\n                    setCurrentPage={setCurrentPage}\r\n                    isLoading={getAllLeaveTypesPending}\r\n                    currentPage={currentPage}\r\n                />\r\n                <CreateUpdateLeave\r\n                    openModel={openCloseAddLeaveModal}\r\n                    handleOpenClose={toggleAddUpdateLeaveModal}\r\n                    handleCreateUpdateLeave={handleCreateUpdateLeave}\r\n                    allLeaveConstantData={allLeaveConstantData}\r\n                    selectedLeaveData={selectedLeaveData}\r\n                    allLeaveTypeList={allLeaveTypeList}\r\n                    appConstantData={appConstantData}\r\n                    allEmployeeList={allEmployeeList}\r\n                />\r\n                {isShowDeleteLeaveTypeModal && (\r\n                    <ApproveRejectModal\r\n                        onApproveReject={deleteLeaveType}\r\n                        isShow={isShowDeleteLeaveTypeModal}\r\n                        desc={t(\"alerts.deletePopup.desc\").replace('$1',\"Leave Type\")}\r\n                        btnRightLoading={deleteLeaveTypePending}\r\n                        btnTextRight={t(\"btns.delete\")}\r\n                        btnTextLeft={t(\"btns.cancel\")}\r\n\r\n                    />)\r\n                }\r\n            </>}\r\n\r\n            {activeTabType === \"leave_setting\" && <>\r\n                <div className=\"d-flex  justify-content-end \">\r\n                    <CustomButton\r\n                        classNames={\"btn btn-primary gradientBg mt-3\"}\r\n                        text={t(\"btns.addLeaveSetting\")}\r\n                        handleClick={() => toggleAddUpdateLeaveSettingModal()}\r\n                    />\r\n                </div>\r\n\r\n                <CreateUpdateLeaveSettings\r\n                    openModel={openCloseLeaveSettingModal}\r\n                    handleOpenClose={toggleAddUpdateLeaveSettingModal}\r\n                    allDepartments={allDepartments}\r\n                    handleDepartmentByDesignation={handleDepartmentByDesignation}\r\n                    allDesignations={allDesignations}\r\n                    allLeaveConstantData={allLeaveConstantData}\r\n                    allLeaveTypeList={allLeaveTypeList}\r\n                    handleAddUpdateLeaveSetting={handleAddUpdateLeaveSetting}\r\n                    selectedLeaveSetting={selectedLeaveSetting}\r\n                />\r\n\r\n                <LeaveSettingTable\r\n                    currentPage={currentPage}\r\n                    allLeaveSettingData={allLeaveSettingData}\r\n                    handleOpenClose={toggleAddUpdateLeaveSettingModal}\r\n                    toggleDeleteSettingTypeModal={toggleDeleteSettingTypeModal}\r\n                    setCurrentPage={setCurrentPage}\r\n\r\n                />\r\n                {isShowDeleteLeaveSettingModal && (\r\n                    <ApproveRejectModal\r\n                        onApproveReject={handleDeleteSettingType}\r\n                        isShow={isShowDeleteLeaveSettingModal}\r\n                        desc={t(\"alerts.deletePopup.desc\").replace('$1',\"Leave Setting\")}\r\n                        btnRightLoading={deleteLeaveSettingPending}\r\n                        btnTextRight={t(\"btns.delete\")}\r\n                        btnTextLeft={t(\"btns.cancel\")}\r\n                    />)\r\n                }\r\n\r\n            </>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Leave\r\n"],"names":["props","allLeaveSettingData","setSelectedLeaveData","handleAddUpdateLeaveModal","toggleDeleteSettingTypeModal","currentPage","setCurrentPage","handleOpenClose","getAllLeaveSettingPending","useSelector","state","leave","scopedSlots","useMemo","sn","_","index","_jsx","children","is_active","item","className","getBadgeColor","is_allowed_on_notice","created_at","moment","format","action","_jsxs","type","onClick","Icon","_id","_Fragment","CustomTable","data","fields","key","label","isLoading","pagination","totalPages","tableName","dispatch","useDispatch","toggleCreateFormula","allLeaveConstantData","setCreateUpdateLeaveFormData","checkLeaveEncashmentFormulaPending","checkLeaveEncashmentFormulaRes","checkLeaveEncashmentFormulaError","t","useCustomTranslation","encashmentFormula","setEncashmentFormula","useState","brackets","abbreviation","operators","validDescription","setValidDescription","isFillDesc","setIsFillDesc","handleFromChange","e","fieldName","name","value","prevState","useEffect","leaveAction","handleClearLeaveStore","code","style","backgroundColor","Label","text","CustomSelect","placeholder","handleChange","selectedOption","abbreviations","CustomButton","classNames","handleClick","onAddFormulaField","addFormulaFields","prev","Textarea","onChange","target","CustomError","checkEncashmentFormula","payload","formula","checkLeaveEncashmentFormulaRequest","pre","openModel","handleCreateUpdateLeave","selectedLeaveData","appConstantData","allEmployeeList","errors","setErrors","addLeaveTypePending","updateLeaveTypePending","activeTab","setActiveTab","isOpenFormula","setIsOpenFormula","createUpdateLeaveFormData","short_name","max_leave_per_year","carry_forward_limit","expire_on","leave_unit","leave_type","is_carry_forwardable","can_view_on_probation","is_credit_on_probation","is_encashment","is_expirable","is_deduction","balance_based_on","validity_start_date","validity_end_date","effective_after_number","effective_after_name","effective_after_value","minimum_days_for_request","maximum_days_for_request","minimum_interval_between_request","applicable_gender","applicable_marital_status","applicable_employee","is_applicable_for_esi_employee","minimum_service_days_to_apply","max_days_encashable","encashable_formula","maritalData","getDataWithLabelValue","applicableGenderData","applicableEmployee","defaultMultiSelectOptions","leave_type_name","effective_after_name_name","effective_after_value_name","balance_based_on_name","expire_on_name","leave_unit_name","_e$target","checked","updatedState","createShortName","prevErrors","undefined","setFilterValues","tempData","map","push","handleActiveTab","tabIndex","visibility","width","id","required","tooltipText","Input","CustCheckbox","border","borderRadius","height","expiresOn","EncashmentFormula","maritalStatus","isMulti","gender","async","validationResponse","validateSchema","addLeaveSchema","applicableGender","applicableMaritalStatus","isValid","params","submitCreateUpdateLeave","src","alt","allLeaveTypesData","toggleAddUpdateLeaveModal","toggleDeleteLeaveType","RuleRenderer","_ref","rules","addRule","deleteRule","rule","dateConstants","from","to","leave_credit","length","Image","imgSrc","altText","allDepartments","handleDepartmentByDesignation","allDesignations","allLeaveTypeList","handleAddUpdateLeaveSetting","selectedLeaveSetting","addLeaveSettingPending","updateLeaveSettingPending","leaveSettingFormData","setLeaveSettingFormData","department","designation","consider_present_status","base_on_credit","count_weekend_as_leave","count_holiday_as_leave","allow_request_for","allow_request_days","allow_request_value","administration_management","enable_file_option","leave_exceed_for_file","count_leave_for_preceding_weekends","count_leave_for_succeeding_weekends","count_leave_for_preceding_holiday","count_leave_for_succeeding_holiday","not_allowed_clubbing_with","leaveRules","setLeaveRules","operator","working_days","firstMonthRules","setFirstMonthRules","lastMonthRules","setLastMonthRules","handleChangeLeaveRule","_e$target2","idx","addLeaveRule","renderLeaveRules","leaveOperators","updateLeaveRule","filter","i","deleteLeaveRule","getValuesPresentStatus","tempPresentStatus","handleLeaveRules","_item$operator","handleLeaveMonthRules","_item$from","_item$to","tempConsiderPresentStatus","notAllowedClubbingWith","leave_type_id","department_id","department_name","designation_id","designation_name","base_on_credit_name","allow_request_for_name","_selectedLeaveSetting","leave_rules","first_month_rules","_selectedLeaveSetting2","last_month_rules","_selectedLeaveSetting3","handleChangeLeaveMonthRule","field","setRules","newRules","addLeaveMonthRule","deleteLeaveMonthRule","leaveAllowRequestsFor","leaveCreditBasis","presentStatus","addLeaveSettingSchema","updateLeaveRules","updateFirstMonthRule","updateLastMonthRule","submitCreateUpdateLeaveSetting","Leave","openCloseAddLeaveModal","setOpenCloseAddLeave","addLeaveTypeRes","addLeaveTypeError","getLeaveConstantDataPending","getLeaveConstantDataRes","getLeaveConstantDataError","getAllLeaveTypesPending","getAllLeaveTypesRes","getAllLeaveTypesError","updateLeaveTypeRes","updateLeaveTypeError","deleteLeaveTypePending","deleteLeaveTypeRes","deleteLeaveTypeError","getLeaveTypeListPending","getLeaveTypeListRes","getLeaveTypeListError","addLeaveSettingRes","addLeaveSettingError","getAllLeaveSettingRes","getAllLeaveSettingError","updateLeaveSettingRes","updateLeaveSettingError","deleteLeaveSettingPending","deleteLeaveSettingRes","deleteLeaveSettingError","getDepartmentListRes","getDepartmentListError","getDepartmentListPending","getDesignationsByDepartmentRes","getDesignationsByDepartmentPending","getDesignationsByDepartmentError","getAppConstantDataPending","getAppConstantDataRes","getAppConstantDataError","common","getAllEmployeePending","getAllEmployeeRes","getAllEmployeeError","employee","setAllLeaveConstantData","setLeaveTypesData","isShowDeleteLeaveTypeModal","setIsShowDeleteLeaveTypeModal","deleteLeaveTypeId","setDeleteLeaveTypeId","activeTabType","setActiveTabType","openCloseLeaveSettingModal","setOpenCloseLeaveSettingModal","setAllDepartments","setAllDesignations","setAllLeaveTypeList","setAllLeaveSettingData","isShowDeleteLeaveSettingModal","setIsShowDeleteLeaveSettingModal","deleteLeaveSettingId","setDeleteLeaveSettingId","setSelectedLeaveSetting","leaveSettingId","setLeaveSettingId","setAppConstantData","setAllEmployeeList","getLeaveConstantData","getAllDepartments","handleGetLeaveTypeList","getAppConstantData","getAllEmployee","handleGetAllSetting","getAllLeaveTypes","getLeaveConstantDataRequest","page","limit","getAllLeaveTypesRequest","getAllLeaveTypesResData","_allLeaveTypesData$da","_getDepartmentListRes","departmentAction","getDepartmentListRequest","departmentResponse","designationResponse","getLeaveTypeListRequest","getLeaveTypeListResData","toggleAddUpdateLeaveSettingModal","selectedData","getAllLeaveSettingRequest","_allLeaveSettingData$","employeeActions","getAllEmployeeRequest","commonActions","getAppConstantDataRequest","LeaveBanner","LeaveTable","CreateUpdateLeave","updateLeaveTypeRequest","addLeaveTypeRequest","ApproveRejectModal","onApproveReject","deleteLeaveTypeRequest","isShow","desc","replace","btnRightLoading","btnTextRight","btnTextLeft","CreateUpdateLeaveSettings","designationAction","getDesignationsByDepartmentRequest","updateLeaveSettingRequest","addLeaveSettingRequest","LeaveSettingTable","deleteLeaveSettingRequest"],"sourceRoot":""}