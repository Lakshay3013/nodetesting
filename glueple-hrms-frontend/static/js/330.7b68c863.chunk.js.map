{"version":3,"file":"static/js/330.7b68c863.chunk.js","mappings":"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","sources":["components/globalComponents/CustomError.js","utils/ValidattionTranslation.js","utils/ValidationHelper.js","utils/ValidationSchema.js","components/modal/hrDeshboard/CandidateCreate.js","components/hrDeshboard/Requisition.js","view/hrDeshboard.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst CustomError = ({text,style}) => {\r\n  return (\r\n    <>\r\n      <small \r\n      className=\"p-error text-danger\" \r\n      style={style ||{}}\r\n      >\r\n        {text}\r\n    </small>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomError\r\n","\r\nconst ValidattionTranslation = {\r\n    \"validations.fieldReq\": \"$FIELD is required.\",\r\n    \"minLength\": \"Minimum length is $1 characters.\",\r\n    \"maxLength\": \"Maximum length is $1 characters.\",\r\n    \"emailInvalid\": \"The email address is invalid.\",\r\n    \"mobileNum\": \"Mobile Number\",\r\n    \"emailAddress\": \"Email Address\",\r\n    \"allFieldReq\": \"All $FIELD are required.\",\r\n    \"onlyDigit\":\"Mobile Number is only Digit\",\r\n    \"reqField\":\"$REQUIREDFIELD is required.\",\r\n\r\n    //mrf validation \r\n    \"department\": \"Department is required.\",\r\n    \"designation\": \"Designation is required.\",\r\n    \"position\": \"Position is required.\",\r\n    \"priority\": \"Priority is required.\",\r\n    \"minQualififcation\": \"Minimum qualification is required.\",\r\n    \"preferredQualification\": \"Preferred qualification is required.\",\r\n    \"businessImpact\": \"Business impact is required.\",\r\n    \"hiringFor\": \"Hiring for is required.\",\r\n    \"vacantPosition\": \"Vacant position is required.\",\r\n    \"yearOfExperience\": \"Years of experience is required.\",\r\n    \"mrfJustification\": \"Mrf justification is required.\",\r\n\r\n    // job description \r\n    \"responsiblities\": \"Responsiblities is required.\",\r\n    \"domainKnowledge\": \"Domain Knowledge is required.\",\r\n    \"roleSummary\": \"Role Summary is required.\",\r\n\r\n    //intervewer \r\n    \"interviewStage\": \"InterviewStage is required.\",\r\n    \"interviewer\": \"Interviewer is required.\",\r\n    \"nterviewer\": \"Interview Type is required.\",\r\n\r\n    // //candidate \r\n    // \"employeeName\": \"Employee Name is required.\",\r\n    // \"employeeEmail\": \"Employee Email is required.\",\r\n    // \"employeeMobile\":\"Employee Mobile is required.\",\r\n    // \"location\":\"Employee Location is required.\",\r\n    // \"source\": \"Source is required.\",\r\n    // \"experience\":\"Experience is required.\",\r\n    // \"address\": \"Address is optional.\",\r\n    // \"pincode\": \"Pincode is optional.\",\r\n    // \"skills\": \"Skills is optional.\",\r\n\r\n};\r\nexport default ValidattionTranslation\r\n","// import {\r\n//   addOrganizationSchema,\r\n//   addOrgBranchSchema,\r\n//   organizationSettingSchema,\r\n//   addInvoiceSchema,\r\n// } from \"./ValidationSchema\";\r\n\r\nimport ValidattionTranslation from './ValidattionTranslation';\r\n\r\nconst trans = (key,replacements = {}) => {\r\nlet translation = ValidattionTranslation[key] || key;\r\nfor (const [placeholder, value] of Object.entries(replacements)) {\r\n  translation = translation.replace(new RegExp(`\\\\$${placeholder}`, 'g'), value);\r\n}\r\nreturn translation;\r\n}\r\nconst emailRegix =\r\n  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nconst panNumRegex = new RegExp(/^[A-Z]{5}[0-9]{4}[A-Z]{1}$/);\r\nconst onlyDigitRegix = /^\\d+$/;\r\n\r\nconst isFieldValid = (formik, name) =>\r\n  !!(formik.touched[name] && formik.errors[name]);\r\n\r\nconst getFieldErrorMsg = (formik, name) => {\r\n  return (\r\n    isFieldValid(formik, name) && (\r\n      <small className=\"p-error\">{formik.errors[name]}</small>\r\n    )\r\n  );\r\n};\r\n\r\nconst digitsOnly = (value) => {\r\n  return onlyDigitRegix.test(value);\r\n};\r\n\r\nconst validateResponse = () => {\r\n  return { status: 401, msg_code: 401, msg: \"\", isValid: false, errors: null };\r\n};\r\n\r\nconst isBlank = (value) => {\r\n  return value === \"\" || false;\r\n};\r\n\r\nconst isNull = (value) => {\r\n  return value === null || false;\r\n};\r\n\r\nconst isNun = (value) => {\r\n  return Number.isNaN(value) || false;\r\n};\r\n\r\nconst isBlankOrNull = (value) => {\r\n  return value === undefined || isBlank(value) || isNull(value) || false;\r\n};\r\n\r\nconst validateMobile = (mobile) => {\r\n  if (mobile.length === 0) {\r\n    return {\r\n      isValid: false,\r\n      msg: trans(\"validations.fieldReq\").replace(\r\n        \"$FIELD\",\r\n        trans(\"label.mobileNum\")\r\n      ),\r\n    };\r\n  }\r\n  if (mobile.length < 10) {\r\n    return {\r\n      isValid: false,\r\n      msg: trans(\"validations.minLength\").replace(\"$1\", 10),\r\n    };\r\n  }\r\n  if (mobile.length > 10) {\r\n    return {\r\n      isValid: false,\r\n      msg: trans(\"validations.maxLength\").replace(\"$1\", 10),\r\n    };\r\n  }\r\n  return { isValid: true, msg: \"\" };\r\n};\r\n\r\nconst validateEmail = (email) => {\r\n  if (email.length === 0) {\r\n    return {\r\n      isValid: false,\r\n      msg: trans(\"validations.fieldReq\").replace(\r\n        \"$FIELD\",\r\n        trans(\"label.emailAddress\")\r\n      ),\r\n    };\r\n  }\r\n  if (!emailRegix.test(email)) {\r\n    return { isValid: false, msg: trans(\"validations.emailInvalid\") };\r\n  }\r\n  return { isValid: true, msg: \"\" };\r\n};\r\n\r\nconst validateSchema = async (schema, data) => {\r\n  const validateDataRes = validateResponse();\r\n  if (!schema) {\r\n    validateDataRes.msg_code = 401;\r\n    validateDataRes.msg = trans(\"validations.allFieldReq\");\r\n    return validateDataRes;\r\n  }\r\n\r\n  const result = await schema.isValid(data);\r\n  const errorsList = {};\r\n  if (!result) {\r\n    await schema.validate(data, { abortEarly: false }).catch((err) => {\r\n      const errors = err.inner.reduce((acc, error) => {\r\n        return (errorsList[error.path] = error.message);\r\n      }, {});\r\n    });\r\n    validateDataRes.errors = errorsList;\r\n    return validateDataRes;\r\n  }\r\n  validateDataRes.msg_code = 200;\r\n  validateDataRes.status = 200;\r\n  validateDataRes.isValid = true;\r\n  return validateDataRes;\r\n};\r\n\r\nconst validateAddBranch = async (body) => {\r\n  const validateDataRes = await validateSchema(\"addOrgBranchSchema\", body);\r\n  return validateDataRes;\r\n};\r\nconst validateAddOrganization = async (body) => {\r\n  const validateDataRes = await validateSchema(\"addOrganizationSchema\", body);\r\n  return validateDataRes;\r\n};\r\n\r\nconst validateOrgSettings = async (body) => {\r\n  const validateDataRes = await validateSchema(\"organizationSettingSchema\", body);\r\n  return validateDataRes;\r\n};\r\n\r\nconst validateAddInvoice = async (body) => {\r\n  const validateDataRes = await validateSchema(\"addInvoiceSchema\", body);\r\n  return validateDataRes;\r\n};\r\n\r\nconst validateField = (value, type, minLength = 3) => {\r\n  if (type === \"mobile\") {\r\n    if (value.length < 10) {\r\n      return trans(\"minLength\").replace(\"$1\", 10);\r\n    }\r\n    if (value.length > 10) {\r\n      return trans(\"maxLength\").replace(\"$1\", 10);\r\n    }\r\n    if(!onlyDigitRegix.test(value)){\r\n      return trans(\"onlyDigit\")\r\n    }\r\n    \r\n  } else if (type === \"email\") {\r\n    if (!emailRegix.test(value)) {\r\n      return trans(\"emailInvalid\");\r\n    }\r\n  } else if (type === \"string\") {\r\n    if (value.length < minLength) {\r\n      return trans(\"minLength\").replace(\"$1\", minLength);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport {\r\n  trans,\r\n  digitsOnly,\r\n  isFieldValid,\r\n  getFieldErrorMsg,\r\n  validateAddBranch,\r\n  validateMobile,\r\n  validateAddOrganization,\r\n  validateOrgSettings,\r\n  validateAddInvoice,\r\n  validateSchema,\r\n  validateField,\r\n};\r\n","import * as yup from \"yup\";\r\nimport { digitsOnly, trans ,validateField} from './ValidationHelper';\r\n\r\n// // Extend Yup with the combined custom validation method\r\nyup.addMethod(yup.string, \"validateField\", function (type, minLength = 3) {\r\n  return this.test(\"validate-field\", trans(\"invalid input\"), function (value) {\r\n    const { path, createError } = this;\r\n    const validationResponse = validateField(value, type, minLength);\r\n    return validationResponse === true || createError({ path, message: validationResponse });\r\n  });\r\n});\r\n\r\nconst employeeLoginSchema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .required(trans(\"validations.emailReq\"))\r\n    .email(trans(\"validations.invalidEmail\"))\r\n    .min(3, trans(\"validations.minLength\").replace(\"$1\", 3))\r\n    .max(50, trans(\"validations.maxLength\").replace(\"$1\", 50)),\r\n  password: yup\r\n    .string()\r\n    .required(trans(\"validations.passwordReq\"))\r\n    .min(8, trans(\"validations.minLength\").replace(\"$1\", 8))\r\n    .max(20, trans(\"validations.maxLength\").replace(\"$1\", 20)),\r\n\r\n});\r\nconst addEmployeeSchema = yup.object().shape({\r\n  first_name: yup\r\n    .string()\r\n    .required(trans(\"validations.firstnameReq\"))\r\n    .min(2, trans(\"validations.minLength\").replace(\"$1\", 2))\r\n    .max(20, trans(\"validations.maxLength\").replace(\"$1\", 20)),\r\n  last_name: yup\r\n    .string()\r\n    .required(trans(\"validations.lastnameReq\"))\r\n    .min(2, trans(\"validations.minLength\").replace(\"$1\", 2))\r\n    .max(20, trans(\"validations.maxLength\").replace(\"$1\", 20)),\r\n  email_id: yup\r\n    .string()\r\n    .required(trans(\"validations.emailReq\"))\r\n    .email(trans(\"validations.invalidEmail\"))\r\n    .min(2, trans(\"validations.minLength\").replace(\"$1\", 2))\r\n    .max(50, trans(\"validations.maxLength\").replace(\"$1\", 50)),\r\n  contact_number: yup\r\n    .string()\r\n    .required(trans(\"validations.contactNumberReq\"))\r\n    .min(10, trans(\"validations.minLength\").replace(\"$1\", 10))\r\n    .max(10, trans(\"validations.maxLength\").replace(\"$1\", 10)),\r\n  pan: yup\r\n    .string()\r\n    .required(trans(\"validations.panReq\"))\r\n    .min(5, trans(\"validations.minLength\").replace(\"$1\", 5))\r\n    .max(10, trans(\"validations.maxLength\").replace(\"$1\", 10)),\r\n  currency: yup\r\n    .string()\r\n    .required(trans(\"validations.currencyReq\")),\r\n  address_line_1: yup\r\n    .string()\r\n    .required(trans(\"validations.addressLine1Req\"))\r\n    .min(2, trans(\"validations.minLength\").replace(\"$1\", 2))\r\n    .max(50, trans(\"validations.maxLength\").replace(\"$1\", 50)),\r\n  address_line_2: yup\r\n    .string()\r\n    .required(trans(\"validations.addressLine2Req\"))\r\n    .min(2, trans(\"validations.minLength\").replace(\"$1\", 2))\r\n    .max(50, trans(\"validations.maxLength\").replace(\"$1\", 50)),\r\n  city: yup\r\n    .string()\r\n    .required(trans(\"validations.cityReq\"))\r\n    .min(4, trans(\"validations.minLength\").replace(\"$1\", 4))\r\n    .max(20, trans(\"validations.maxLength\").replace(\"$1\", 20)),\r\n  state: yup\r\n    .string().required(trans(\"validations.stateReq\"))\r\n    .max(50, trans(\"validations.maxLength\").replace(\"$1\", 50)),\r\n  country: yup\r\n    .string().required(trans(\"validations.countryReq\")),\r\n  postal_code: yup\r\n    .number()\r\n    .typeError(trans(\"validations.numberReq\"))\r\n    .required(trans(\"validations.postalCodeReq\"))\r\n    .min(100000, trans(\"validations.minPostalCodeLength\"))\r\n    .max(999999, trans(\"validations.maxPostalCodeLength\")),\r\n});\r\nconst addCountry = yup.object().shape({\r\n  country_name: yup.string().required(trans(\"validations.country_name\")),\r\n  country_code: yup\r\n    .string()\r\n    .required(trans(\"validations.country_code\"))\r\n    .max(3, trans(\"validations.maxLength\").replace(\"$1\", 3)),\r\n});\r\n\r\nconst addDepartmentSchema = yup.object().shape({\r\n  depName: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Department Name\"})),\r\n  \r\n  shortName: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Short Name\"}))\r\n});\r\n\r\n// Designation Schema\r\nconst addDesignationSchema = yup.object().shape({\r\n\r\n  departmentId: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Department Name\"})),\r\n\r\n  designationName: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Designation Name\"})),\r\n  \r\n  shortName: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Short Name\"}))\r\n});\r\n// mrf form schema\r\n\r\nconst MrfCreateSchema = yup.object().shape({\r\n  department: yup\r\n    .string()\r\n    .required(trans(\"department\")),\r\n  designation: yup\r\n    .string()\r\n    .required(trans(\"designation\")),\r\n\r\n  position: yup\r\n    .string()\r\n    .required(trans(\"position\")),\r\n  priority: yup\r\n    .string()\r\n    .required(trans(\"priority\")),\r\n  minQualififcation: yup\r\n    .string()\r\n    .required(trans(\"minQualififcation\")),\r\n\r\n  preferredQualification: yup\r\n    .string()\r\n    .optional(),\r\n\r\n  businessImpact: yup\r\n    .string()\r\n    .required(trans(\"businessImpact\")),\r\n  hiringFor: yup\r\n    .string()\r\n    .required(trans(\"hiringFor\")),\r\n  vacantPosition: yup\r\n    .string()\r\n    .required(trans(\"vacantPosition\")),\r\n  yearOfExperience: yup\r\n    .string()\r\n    .required(trans(\"yearOfExperience\")),\r\n  mrfJustification: yup\r\n    .string()\r\n    .required(trans(\"mrfJustification\")),\r\n});\r\n\r\nconst MrfJobDescSchema = yup.object().shape({\r\n  responsiblities: yup\r\n    .string()\r\n    .required(trans(\"reqField\",{REQUIREDFIELD:\"Responsiblities\"})),\r\n  domainKnowledge: yup\r\n    .string()\r\n    .required(trans(\"reqField\",{REQUIREDFIELD:\"Domain Knowledge\"})),\r\n\r\n  roleSummary: yup\r\n    .string()\r\n    .required(trans(\"reqField\",{REQUIREDFIELD:\"Role Summary\"})),\r\n\r\n  otherSkills: yup\r\n    .string()\r\n    .optional(),\r\n  trainingCertificates: yup\r\n    .string()\r\n    .optional(),\r\n});\r\nconst MrfInterviewSchema = yup.object().shape({\r\n  department: yup\r\n    .string()\r\n    .required(trans(\"reqField\",{REQUIREDFIELD:\"Department\"})),\r\n  designation: yup\r\n    .string()\r\n    .required(trans(\"reqField\",{REQUIREDFIELD:\"Designation\"})),\r\n\r\n  interviewStage: yup\r\n    .string()\r\n    .required(trans(\"reqField\",{REQUIREDFIELD:\"Interview Stage\"})),\r\n\r\n  interviewer: yup\r\n    .string()\r\n    .required(trans(\"reqField\",{REQUIREDFIELD:\"Interviewer\"})),\r\n  interviewType: yup\r\n    .string()\r\n    .required(trans(\"reqField\",{REQUIREDFIELD:\"Interview Type\"})),\r\n\r\n});\r\n\r\n\r\n// candidate form \r\nconst candidateSchema = yup.object().shape({\r\n  employeeName: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Employee Name\"})),\r\n\r\n  employeeEmail: yup.\r\n  string()\r\n  .validateField(\"email\")\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Employee Email\"})),\r\n\r\n  employeeMobile: yup\r\n  .string()\r\n  .validateField(\"mobile\")\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Employee Mobile\"})),\r\n\r\n  location: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Location\"})),\r\n\r\n  source: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Source\"})),\r\n\r\n  experience: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Experience\"})),\r\n \r\n  address: yup\r\n  .string()\r\n  .optional(),\r\n\r\n  pincode: yup\r\n  .string()\r\n  .optional(),\r\n\r\n  skills: yup\r\n  .string()\r\n  .optional(),\r\n\r\n});\r\nexport {\r\n  employeeLoginSchema,\r\n  addEmployeeSchema,\r\n  addCountry,\r\n  addDepartmentSchema,\r\n  MrfCreateSchema,\r\n  MrfJobDescSchema,\r\n  MrfInterviewSchema,\r\n  candidateSchema,\r\n  addDesignationSchema\r\n};\r\n","import React, { useState } from 'react'\r\nimport Button from '../../commanComponent/Button';\r\nimport { candidateSchema } from '../../../utils/ValidationSchema';\r\nimport { validateSchema,validateMobile } from '../../../utils/ValidationHelper';\r\nimport CustomError from '../../globalComponents/CustomError';\r\n\r\nconst CandidateCreate = () => {\r\n    const [errors, setErrors] = useState({});\r\n    const [candidate, setCandidate] = useState(\r\n        {\r\n            \"employeeName\": \"\",\r\n            \"employeeEmail\": \"\",\r\n            \"employeeMobile\": \"\",\r\n            \"location\": \"\",\r\n            \"source\": \"\",\r\n            \"experience\": \"\",\r\n            \"address\": \"\",\r\n            \"pincode\": \"\",\r\n            \"skills\": '',\r\n        })\r\n    const handleFormData = async (e) => {\r\n        errors && setErrors({});\r\n        const { name, value } = e.target\r\n        setCandidate({ ...candidate, [name]: value })\r\n\r\n    }\r\n\r\n    const onSubmitForm = async () => {\r\n        const validationResponse = await validateSchema(candidateSchema, candidate);\r\n        if (validationResponse.isValid) {\r\n            setErrors({});\r\n            console.log(\"testing\", candidate)\r\n\r\n\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n            console.log(validationResponse.errors, \"validationResponse.errors\")\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"offcanvas offcanvas-end\" id=\"CandidateCreate\">\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">Create Candidate </h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"row\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <label>Employee Name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"employeeName\"\r\n                                    value={candidate.employeeName || \"\"}\r\n                                    placeholder=\"Enter Name\"\r\n                                    onChange={handleFormData}\r\n                                />\r\n                                {errors.employeeName &&\r\n                                    <CustomError\r\n                                        text={errors.employeeName}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <label>Employee Email</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"employeeEmail\"\r\n                                    value={candidate.employeeEmail || \"\"}\r\n                                    placeholder=\"Enter Email\"\r\n                                    onChange={handleFormData}\r\n                                />\r\n                                 {errors.employeeEmail &&\r\n                                    <CustomError\r\n                                        text={errors.employeeEmail}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <label>Employee Mobile No</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"employeeMobile\"\r\n                                    value={candidate.employeeMobile || \"\"}\r\n                                    placeholder=\"Please Enter Mobile No\"\r\n                                    onChange={handleFormData}\r\n                                />\r\n                                {errors.employeeMobile &&\r\n                                    <CustomError\r\n                                        text={errors.employeeMobile}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <label>Location*</label>\r\n                                <select\r\n                                    className=\"form-select\"\r\n                                    name=\"location\"\r\n                                    value={candidate.location || \"\"}\r\n                                    onChange={handleFormData}\r\n                                >\r\n                                    <option value=\"\">Please Select</option>\r\n                                    <option value=\"jaipur\">Jaipur</option>\r\n                                    <option value=\"jodhpur\">Jodhpur</option>\r\n                                </select>\r\n                                {errors.location &&\r\n                                    <CustomError\r\n                                        text={errors.location}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <label>Source</label>\r\n                                <select\r\n                                    className=\"form-select\"\r\n                                    name=\"source\"\r\n                                    value={candidate.source || \"\"}\r\n                                    onChange={handleFormData}\r\n                                >\r\n                                    <option value=\"\">Please Select</option>\r\n                                    <option value=\"linkedin\">Linked In</option>\r\n                                    <option value=\"indeed\">Indeed</option>\r\n                                </select>\r\n                                {errors.source &&\r\n                                    <CustomError\r\n                                        text={errors.source}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <label>Year Of Experience</label>\r\n                                <select\r\n                                    className=\"form-select\"\r\n                                    name=\"experience\"\r\n                                    value={candidate.experience || \"\"}\r\n                                    onChange={handleFormData}\r\n                                >\r\n                                    <option value=\"\">Please Select</option>\r\n                                    <option value=\"0-0.6 Years\">0-0.6 Years</option>\r\n                                    <option value=\"1-2 Years\">1-2 Years</option>\r\n                                    <option value=\"2-3 Years\">2-3 Years</option>\r\n                                    <option value=\"3-4 Years\">3-4 Years</option>\r\n                                </select>\r\n                                {errors.experience &&\r\n                                    <CustomError\r\n                                        text={errors.experience}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <label>Skills</label>\r\n                                <select\r\n                                    className=\"form-select\"\r\n                                    name=\"skills\"\r\n                                    value={candidate.skills || \"\"}\r\n                                    onChange={handleFormData}\r\n                                >\r\n                                    <option value=\"\">Please Select</option>\r\n                                    <option value=\"React\">React</option>\r\n                                    <option value=\"Node\">Node</option>\r\n                                    <option value=\"PHP\">PHP</option>\r\n                                    <option value=\"UI UX\">UI UX</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <label>Address</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    name=\"address\"\r\n                                    value={candidate.address || \"\"}\r\n                                    placeholder=\"Please Enter Address\"\r\n                                    onChange={handleFormData}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <label>Pincode</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    className=\"form-control\"\r\n                                    name=\"pincode\"\r\n                                    value={candidate.pincode || \"\"}\r\n                                    placeholder=\"Please Enter Pincode\"\r\n                                    onChange={handleFormData}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <Button\r\n                            btnClassName={\"btn btn-primary gradientBg\"}\r\n                            onClickFun={onSubmitForm}\r\n                        >Create</Button>\r\n                        <button type=\"button\" className=\"btn btn-secondary\">Reset</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CandidateCreate\r\n","import React from 'react'\r\nimport Button from '../commanComponent/Button'\r\nimport CandidateCreate from '../modal/hrDeshboard/CandidateCreate'\r\n\r\nconst Requisition = () => {\r\n  return (\r\n    <>\r\n      <div class=\"cardBox mb-3 \">\r\n        <div className=\"cardHead d-flex justify-content-between align-items-center border-bottom pb-2 mb-3\">\r\n          <h3 className=\"mb-0 fs-7\">Hr Deshboard</h3>\r\n          <Button\r\n            btnClassName=\"btn btn-primary gradientBg me-2\"\r\n            // onClickFun={() => onSubmitJobDescription()} \r\n                        dataBsToggle={\"offcanvas\"} \r\n                        dataBsTarget={\"#CandidateCreate\"}\r\n          >\r\n           Create Candidate\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <CandidateCreate/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Requisition\r\n","import React from 'react'\r\nimport { Requisition } from '../components/hrDeshboard'\r\n\r\nconst HrDeshboard = () => {\r\n  return (\r\n    <div>\r\n      <Requisition/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HrDeshboard\r\n"],"names":["_ref","text","style","_jsx","_Fragment","children","className","trans","key","replacements","arguments","length","undefined","translation","ValidattionTranslation","placeholder","value","Object","entries","replace","RegExp","concat","emailRegix","onlyDigitRegix","validateSchema","async","schema","data","validateDataRes","status","msg_code","msg","isValid","errors","result","errorsList","validate","abortEarly","catch","err","inner","reduce","acc","error","path","message","validateField","type","minLength","test","yup","this","createError","validationResponse","shape","username","required","email","min","max","password","first_name","last_name","email_id","contact_number","pan","currency","address_line_1","address_line_2","city","state","country","postal_code","typeError","country_name","country_code","addDepartmentSchema","depName","REQUIREDFIELD","shortName","addDesignationSchema","departmentId","designationName","MrfCreateSchema","department","designation","position","priority","minQualififcation","preferredQualification","optional","businessImpact","hiringFor","vacantPosition","yearOfExperience","mrfJustification","MrfJobDescSchema","responsiblities","domainKnowledge","roleSummary","otherSkills","trainingCertificates","MrfInterviewSchema","interviewStage","interviewer","interviewType","candidateSchema","employeeName","employeeEmail","employeeMobile","location","source","experience","address","pincode","skills","CandidateCreate","setErrors","useState","candidate","setCandidate","handleFormData","name","e","target","_jsxs","id","onChange","CustomError","Button","btnClassName","onClickFun","console","log","Requisition","class","dataBsToggle","dataBsTarget","HrDeshboard"],"sourceRoot":""}