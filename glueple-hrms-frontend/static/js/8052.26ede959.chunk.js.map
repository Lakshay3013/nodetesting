{"version":3,"file":"static/js/8052.26ede959.chunk.js","mappings":"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","sources":["components/admin/permissions/AllPermissions.js","components/admin/permissions/PermissionFilters.js","components/admin/permissions/CreateUpdatePermission.js","components/admin/permissions/Permissions.js","components/reuseableComponents/customTable/CustomTableWithSubTable.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustCheckbox, CustomError } from '../../commanComponent'\r\nimport { CustomTable } from '../../reuseableComponents'\r\nimport CustomTableWithSubTable from '../../reuseableComponents/customTable/CustomTableWithSubTable'\r\nimport { CustomButton, CustomSpinner } from '../../globalComponents'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { useSelector } from 'react-redux'\r\nimport { toTitleCase } from '../../../utils/common'\r\nimport BlankTableError from '../../commanComponent/BlankTableError'\r\nconst AllPermissions = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const { categoryWisePermissionData, roleOrUserWisePermissionData, updatePermissions } = props\r\n    const { getCategoryWisePermissionPending, updatePermissionPending } = useSelector(state => state.permission)\r\n    const [permissionIds, setPermissionIds] = useState(new Set([]))\r\n\r\n    useEffect(() => {\r\n        if (roleOrUserWisePermissionData) {\r\n            const { permission_ids } = roleOrUserWisePermissionData\r\n            setPermissionIds(new Set(permission_ids));\r\n        }\r\n    }, [roleOrUserWisePermissionData])\r\n\r\n    /* Routes Permission Code*/\r\n    const routesField = [\r\n        { key: 'sn', label: 'S.No' },\r\n        { key: 'permission', label: 'Permission' },\r\n        { key: 'title', label: 'Title' },\r\n        { key: 'route_key', label: 'Route key' },\r\n    ];\r\n    const handlePermissionChecked = (e, item) => {\r\n        let tempPermission = new Set(permissionIds)\r\n        if (e.target.checked) {\r\n            tempPermission.add(item?._id)\r\n        } else {\r\n            tempPermission.delete(item?._id)\r\n        }\r\n        setPermissionIds(tempPermission)\r\n\r\n    }\r\n\r\n\r\n \r\n    const renderedPermissions = () => {\r\n        return (\r\n            <div className=\"accordion px-3\" id=\"parameteroneFlush\">\r\n                {categoryWisePermissionData &&categoryWisePermissionData?.length>0? categoryWisePermissionData?.map((data, index) => (\r\n                    <div className=\"accordion-item mb-3\" key={index}>\r\n                        <button\r\n                            className=\"accordion-button parameterName collapsed d-flex justify-content-between align-items-center\"\r\n                            type=\"button\"\r\n                            data-bs-toggle=\"collapse\"\r\n                            data-bs-target={`#policy${index}`}\r\n                        >\r\n                            <b>{index + 1}.</b>\r\n                            <div className=\"w-100 parameterinner\">\r\n                                <span>\r\n                                    Assign Permission<strong style={{ textTransform: \"capitalize\" }}>{toTitleCase(data?.distinct_category)}</strong>\r\n                                </span>\r\n                            </div>\r\n                        </button>\r\n                        <div\r\n                            id={`policy${index}`}\r\n                            className=\"accordion-collapse collapse accordion-body py-0\"\r\n                            data-bs-parent=\"#parameteroneFlush\"\r\n                        >\r\n                            <CustomTable\r\n                                data={data?.items}\r\n                                fields={routesField}\r\n                                isHeader={false}\r\n                                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                                scopedSlots={{\r\n                                    sn: (_, index) => (\r\n                                        <span>{index + 1}</span>\r\n                                    ),\r\n                                    permission: (item, index) => (\r\n                                        <span>\r\n                                            <CustCheckbox\r\n                                                key={\"is_active\"}\r\n                                                id={`is_active`}\r\n                                                // label={\"Active\"}\r\n                                                checked={permissionIds.has(item?._id)}\r\n                                                handleChange={(e) => handlePermissionChecked(e, item)}\r\n                                                name={\"is_active\"}\r\n                                            /></span>\r\n                                    ),\r\n\r\n\r\n                                }}\r\n                            />\r\n                            <div className='d-flex justify-content-end mb-2'>\r\n                                <CustomButton\r\n                                    text={t(\"btns.update\")}\r\n                                    isLoading={updatePermissionPending}\r\n                                    classNames=\"btn btn-primary\"\r\n                                    handleClick={() => {\r\n                                        updatePermissions(permissionIds);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                ))\r\n                    : <p><CustomError /></p>\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n    return (\r\n        <div className='mt-3'>\r\n            <div className=\"\">\r\n                <h5>All Permissions</h5>\r\n            </div>\r\n            {/* Menu Permission */}\r\n\r\n            <hr />\r\n            {getCategoryWisePermissionPending\r\n                ?\r\n                <CustomSpinner isShow={getCategoryWisePermissionPending} size=\"xl\" />\r\n                :\r\n                renderedPermissions()}\r\n\r\n            <hr />\r\n            <div className='d-flex justify-content-end'>\r\n                <CustomButton\r\n                    text={t(\"btns.update\")}\r\n                    isLoading={updatePermissionPending}\r\n                    classNames=\"btn btn-primary\"\r\n                    handleClick={() => {\r\n                        updatePermissions(permissionIds);\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllPermissions\r\n","import React, { useState } from 'react'\r\nimport { CustCheckbox, Label } from '../../commanComponent'\r\nimport CustomSelect from '../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../translation'\r\nconst PermissionFilters = (props) => {\r\n    const {t}=useCustomTranslation()\r\n    const {allRolesData,getUserOnRole,usersOnRoleData,getRoleOrUserWisePermission,setFilters,filters}=props\r\n    const [roleChecked, setRoleChecked] = useState(true)\r\n    const [userChecked, setUserChecked] = useState(false)\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e?.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n\r\n        setFilters(prevState => ({\r\n            ...prevState,\r\n            [name]: type === 'checkbox' ? checked : value,\r\n        }));\r\n\r\n        if(fieldName === \"role\" && value ) {\r\n            const params={\r\n                role_id:value?.value\r\n            }\r\n            getRoleOrUserWisePermission(params)\r\n            getUserOnRole(value?.value)\r\n            setFilters(prevState => ({\r\n                ...prevState,\r\n                [\"user\"]: null,\r\n            }));\r\n        }\r\n        if(fieldName === \"user\"){\r\n            const params={\r\n                role_id:filters?.role?.value,\r\n                user_id:value?.value\r\n            }\r\n            getRoleOrUserWisePermission(params)\r\n        }\r\n\r\n    };\r\n    return (<>\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n                <div className=\"form-group mb-3 \">\r\n                    <CustCheckbox\r\n                        key={\"role\"}\r\n                        id={`role`}\r\n                        label={t(\"labels.role\")}\r\n                        checked={roleChecked}\r\n                        handleChange={(e) => setRoleChecked(e.target.checked)}\r\n                        name={\"role\"}\r\n                    />\r\n                </div>\r\n                {roleChecked &&<div className=\"form-group mb-3 \">\r\n                    <div className=\"col-md-12 form-group mb-3\">\r\n                        <Label text={t(\"labels.role\")}\r\n                        />\r\n                        <CustomSelect\r\n                            data={allRolesData}\r\n                            placeholder={t(\"placeholders.role\")}\r\n                            value={filters?.role }\r\n                            handleChange={(selectedOption) => handleFromChange(selectedOption, \"role\")}\r\n                            name=\"role\"\r\n                        />\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n                <div className=\"form-group mb-3\">\r\n                    <CustCheckbox\r\n                        key={\"user\"}\r\n                        id={`user`}\r\n                        label={t(\"labels.user\")}\r\n                        checked={userChecked}\r\n                        handleChange={(e) => setUserChecked(e.target.checked)}\r\n                        name={\"user\"}\r\n                    />\r\n                </div>\r\n                {userChecked &&<div className=\"form-group mb-3 \">\r\n                    <div className=\"col-md-12 form-group mb-3\">\r\n                        <Label text={\"User\"}\r\n                        />\r\n                        <CustomSelect\r\n                            data={usersOnRoleData}\r\n                            placeholder={t(\"placeholders.user\")}\r\n                            value={filters?.user || ''}\r\n                            handleChange={(selectedOption) => handleFromChange(selectedOption, \"user\")}\r\n                            name=\"user\"\r\n                        />\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default PermissionFilters\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { validateSchema } from '../../../utils/ValidationHelper'\r\nimport { createUpdatePermissionSchema } from '../../../utils/ValidationSchema'\r\nimport { createShortName } from '../../../utils/common'\r\nimport { CustCheckbox, Input, Label } from '../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../globalComponents'\r\nimport CustomSelect from '../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../translation'\r\n\r\nconst CreateUpdatePermission = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const { createPermissionPending } = useSelector(state => state?.permission)\r\n    const {\r\n        openModel,\r\n        handleOpenClose,\r\n        handleCreateUpdatePermission,\r\n        menuPermissionData,\r\n        permissionConstantData\r\n\r\n    } = props\r\n    const [errors, setErrors] = useState({})\r\n    const [createUpdatePermissionFormData, setCreateUpdatePermissionFormData] = useState({\r\n        route_key: '',\r\n        routes: '',\r\n        permission_type: null,\r\n        title: '',\r\n        parent: null,\r\n        sort_order: '',\r\n        icon: '',\r\n        sub_title: '',\r\n        category: null\r\n    })\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n    \r\n        setCreateUpdatePermissionFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n\r\n        // Reset error for this field\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitCreateUpdatePermission = async () => {\r\n        const validationResponse = await validateSchema(createUpdatePermissionSchema, createUpdatePermissionFormData);\r\n        if (validationResponse.isValid) {\r\n            const {\r\n                route_key,\r\n                routes,\r\n                permission_type,\r\n                title,\r\n                parent,\r\n                sort_order,\r\n                icon,\r\n                sub_title,\r\n                category\r\n            } = createUpdatePermissionFormData\r\n            const params = {\r\n                route_key,\r\n                routes,\r\n                permission_type:permission_type?.value,\r\n                title,\r\n                parent:parent?.value,\r\n                sort_order:sort_order||0,\r\n                icon,\r\n                sub_title,\r\n                category:category?.value\r\n            }\r\n            handleCreateUpdatePermission(params)\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetForm()\r\n        })\r\n    }, [openModel])\r\n\r\n    const resetForm = () => {\r\n        setCreateUpdatePermissionFormData({\r\n            route_key: '',\r\n            routes: '',\r\n            permission_type: null,\r\n            title: '',\r\n            parent: null,\r\n            sort_order: '',\r\n            icon: '',\r\n            sub_title: '',\r\n            category: null\r\n        })\r\n        setErrors({})\r\n    }\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{\"Create\"} Permission</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose()}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"offcanvas-body myRequest \">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.permissionTitle\")} required={true} />\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.permissionTitle\")}\r\n                                        value={createUpdatePermissionFormData?.title}\r\n                                        name=\"title\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n                                {errors?.title && (\r\n                                    <CustomError text={errors.title} />\r\n                                )}\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.permissionSubTitle\")} />\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.permissionSubTitle\")}\r\n                                        value={createUpdatePermissionFormData?.sub_title}\r\n                                        name=\"sub_title\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.permissionType\")} required={true} />\r\n                                    <CustomSelect\r\n                                        data={permissionConstantData?.permissionType}\r\n                                        placeholder={t(\"placeholders.permissionType\")}\r\n                                        value={createUpdatePermissionFormData?.permission_type || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"permission_type\")}\r\n                                        name=\"permission_type\"\r\n                                    />\r\n                                </div>\r\n                                {errors?.permission_type && (\r\n                                    <CustomError text={errors.permission_type} />\r\n                                )}\r\n                            </div>\r\n                            { createUpdatePermissionFormData?.permission_type?.value===\"submenu\" && <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.permissionParent\")} />\r\n                                    <CustomSelect\r\n                                        data={menuPermissionData}\r\n                                        placeholder={t(\"placeholders.permissionParent\")}\r\n                                        value={createUpdatePermissionFormData?.parent || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"parent\")}\r\n                                        name=\"parent\"\r\n                                    />\r\n                                </div>\r\n                            </div>}\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.routeKey\")} required={true} />\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.routeKey\")}\r\n                                        value={createUpdatePermissionFormData?.route_key}\r\n                                        name=\"route_key\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.route_key && (\r\n                                        <CustomError text={errors.route_key} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                           \r\n                      { !(createUpdatePermissionFormData?.permission_type===\"route\") &&<>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.routes\")} required={true} />\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.routes\")}\r\n                                        value={createUpdatePermissionFormData?.routes}\r\n                                        name=\"routes\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n                                {errors?.routes && (\r\n                                    <CustomError text={errors.routes} />\r\n                                )}\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.permissionSortOrder\")} />\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.permissionSortOrder\")}\r\n                                        value={createUpdatePermissionFormData?.sort_order}\r\n                                        name=\"sort_order\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.permissionIcon\")} />\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.permissionIcon\")}\r\n                                        value={createUpdatePermissionFormData?.icon}\r\n                                        name=\"icon\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            </>}\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.permissionCategory\")} />\r\n                                    <CustomSelect\r\n                                        data={permissionConstantData?.category}\r\n                                        placeholder={t(\"placeholders.permissionType\")}\r\n                                        value={createUpdatePermissionFormData?.category || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"category\")}\r\n                                        name=\"category\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={t(\"btns.submit\")}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitCreateUpdatePermission()}\r\n                            isLoading={createPermissionPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateUpdatePermission\r\n","import React, { useEffect, useState } from 'react'\r\nimport AllPermissions from './AllPermissions'\r\nimport PermissionFilters from './PermissionFilters'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { employeeActions, permissionActions, rolesActions } from '../../../core/resource/actions'\r\nimport { CustomButton } from '../../globalComponents'\r\nimport CreateUpdatePermission from './CreateUpdatePermission'\r\n\r\nconst Permissions = () => {\r\n    const [categoryWisePermissionData, setCategoryWisePermissionData] = useState('')\r\n    const [isShowPermission, setIsShowPermission] = useState(false)\r\n    const [allRolesData, setAllRolesData] = useState('')\r\n    const [usersOnRoleData, setUsersOnRoleData] = useState('')\r\n    const [permissionConstantData, setPermissionConstantData] = useState('')\r\n    const [menuPermissionData, setMenuPermissionData] = useState('')\r\n    const [roleOrUserWisePermissionData, setRoleOrUserWisePermissionData] = useState('')\r\n    const [filters, setFilters] = useState({\r\n        role: null,\r\n        user: null\r\n    })\r\n    const dispatch = useDispatch()\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        getPermissionConstantPending,\r\n        getPermissionConstantRes,\r\n        getPermissionConstantError,\r\n\r\n        getMenuPermissionPending,\r\n        getMenuPermissionRes,\r\n        getMenuPermissionError,\r\n\r\n        getCategoryWisePermissionPending,\r\n        getCategoryWisePermissionRes,\r\n        getCategoryWisePermissionError,\r\n\r\n        createPermissionPending,\r\n        createPermissionRes,\r\n        createPermissionError,\r\n\r\n        updatePermissionPending,\r\n        updatePermissionRes,\r\n        updatePermissionError,\r\n\r\n        getRoleOrUserWisePermissionPending,\r\n        getRoleOrUserWisePermissionRes,\r\n        getRoleOrUserWisePermissionError,\r\n\r\n    } = useSelector(state => state.permission)\r\n    const {\r\n        getAllRolesPending,\r\n        getAllRolesRes,\r\n        getAllRolesError,\r\n    } = useSelector(state => state.roles)\r\n    const {\r\n        getUserOnRolePending,\r\n        getUserOnRoleRes,\r\n        getUserOnRoleError,\r\n    } = useSelector(state => state.employee)\r\n\r\n    useEffect(() => {\r\n        getCategoryWisePermission()\r\n        getAllRoles()\r\n        getPermissionConstant()\r\n        getMenuPermission()\r\n        dispatch(permissionActions.handleClearPermissionStore(\"HANDLE_GET_ROLE_OR_USER_WISE_PERMISSION_STORE\"))\r\n    }, [])\r\n\r\n    /* Get Category Wise Permission*/\r\n    const getCategoryWisePermission = () => {\r\n        dispatch(permissionActions.getCategoryWisePermissionRequest())\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getCategoryWisePermissionPending) {\r\n            if (getCategoryWisePermissionError) {\r\n                return;\r\n            }\r\n            if (getCategoryWisePermissionRes) {\r\n                if (getCategoryWisePermissionRes?.code === 200) {\r\n                    setCategoryWisePermissionData(getCategoryWisePermissionRes.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getCategoryWisePermissionRes,\r\n        getCategoryWisePermissionError,\r\n        getCategoryWisePermissionPending\r\n    ]);\r\n\r\n\r\n    /* Create Update Permission */\r\n    const toggleCreateUpdatePermissionModal = () => {\r\n        setIsShowPermission(!isShowPermission)\r\n    }\r\n\r\n    const handleCreateUpdatePermission = (params) => {\r\n        dispatch(permissionActions.createPermissionRequest(params))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!createPermissionPending) {\r\n            if (createPermissionError) {\r\n                dispatch(permissionActions.handleClearPermissionStore(\"HANDLE_CREATE_PERMISSION_STORE\"))\r\n                return;\r\n            }\r\n            if (createPermissionRes) {\r\n                if (createPermissionRes?.code === 200) {\r\n                    // toggleCreateUpdatePermissionModal()\r\n                    getCategoryWisePermission()\r\n                    dispatch(permissionActions.handleClearPermissionStore(\"HANDLE_CREATE_PERMISSION_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        createPermissionRes,\r\n        createPermissionError,\r\n        createPermissionPending\r\n    ]);\r\n\r\n    /* Get All Roles  */\r\n    const getAllRoles = () => {\r\n        dispatch(rolesActions.getAllRolesRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getAllRolesPending) {\r\n            if (getAllRolesError) {\r\n                return;\r\n            }\r\n            if (getAllRolesRes) {\r\n                if (getAllRolesRes?.code === 200) {\r\n                    setAllRolesData(getAllRolesRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllRolesRes,\r\n        getAllRolesError,\r\n        getAllRolesPending\r\n    ]);\r\n\r\n    /* Get User On Role  */\r\n    const getUserOnRole = (roleId) => {\r\n        const payload = {\r\n            role_id: roleId\r\n        }\r\n        dispatch(employeeActions.getUserOnRoleRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!getUserOnRolePending) {\r\n            if (getUserOnRoleError) {\r\n                return;\r\n            }\r\n            if (getUserOnRoleRes) {\r\n                if (getUserOnRoleRes?.code === 200) {\r\n                    setUsersOnRoleData(getUserOnRoleRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getUserOnRoleRes,\r\n        getUserOnRoleError,\r\n        getUserOnRolePending\r\n    ]);\r\n\r\n\r\n    /* Get Permission Constant */\r\n    const getPermissionConstant = (roleId) => {\r\n        dispatch(permissionActions.getPermissionConstantRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getPermissionConstantPending) {\r\n            if (getPermissionConstantError) {\r\n                return;\r\n            }\r\n            if (getPermissionConstantRes) {\r\n                if (getPermissionConstantRes?.code === 200) {\r\n                    setPermissionConstantData(getPermissionConstantRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getPermissionConstantRes,\r\n        getPermissionConstantError,\r\n        getPermissionConstantPending\r\n    ]);\r\n\r\n    /* Get Menu Permission */\r\n    const getMenuPermission = (roleId) => {\r\n        dispatch(permissionActions.getMenuPermissionRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getMenuPermissionPending) {\r\n            if (getMenuPermissionError) {\r\n                return;\r\n            }\r\n            if (getMenuPermissionRes) {\r\n                if (getMenuPermissionRes?.code === 200) {\r\n                    setMenuPermissionData(getMenuPermissionRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getMenuPermissionRes,\r\n        getMenuPermissionError,\r\n        getMenuPermissionPending\r\n    ]);\r\n\r\n    /* Update Permission */\r\n    const updatePermissions = (permissionIds) => {\r\n        const params = {\r\n            user_id: filters?.user?.value || '',\r\n            role_id: filters?.role?.value || '',\r\n            permission_ids: Array.from(permissionIds) || []\r\n        }\r\n        dispatch(permissionActions.updatePermissionRequest(params))\r\n    }\r\n    useEffect(() => {\r\n        if (!updatePermissionPending) {\r\n            if (updatePermissionError) {\r\n                dispatch(permissionActions.handleClearPermissionStore(\"HANDLE_UPDATE_PERMISSION_STORE\"))\r\n                dispatch(permissionActions.handleClearPermissionStore(\"HANDLE_GET_ROLE_OR_USER_WISE_PERMISSION_STORE\"))\r\n                return;\r\n            }\r\n            if (updatePermissionRes) {\r\n                if (updatePermissionRes?.code === 200) {\r\n                    dispatch(permissionActions.handleClearPermissionStore(\"HANDLE_UPDATE_PERMISSION_STORE\"))\r\n                    dispatch(permissionActions.handleClearPermissionStore(\"HANDLE_GET_ROLE_OR_USER_WISE_PERMISSION_STORE\"))\r\n                    // setFilters({\r\n                    //     role:null,\r\n                    //     user:null\r\n                    // })\r\n                    getCategoryWisePermission()\r\n                    // dispatch(permissionActions.getMenuRoutesPermissionRequest())\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updatePermissionRes,\r\n        updatePermissionError,\r\n        updatePermissionPending\r\n    ]);\r\n\r\n    /* Get  Role Or User Wise Permission */\r\n    const getRoleOrUserWisePermission = (prams) => {\r\n        dispatch(permissionActions.getRoleOrUserWisePermissionRequest(prams))\r\n    }\r\n    useEffect(() => {\r\n        if (!getRoleOrUserWisePermissionPending) {\r\n            if (getRoleOrUserWisePermissionError) {\r\n                return;\r\n            }\r\n            if (getRoleOrUserWisePermissionRes) {\r\n                if (getRoleOrUserWisePermissionRes?.code === 200) {\r\n                    setRoleOrUserWisePermissionData(getRoleOrUserWisePermissionRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getRoleOrUserWisePermissionRes,\r\n        getRoleOrUserWisePermissionError,\r\n        getRoleOrUserWisePermissionPending\r\n    ]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex  justify-content-end mb-3\">\r\n                <CustomButton\r\n                    classNames={\"btn btn-primary gradientBg \"}\r\n                    handleClick={() => toggleCreateUpdatePermissionModal()}\r\n                    text={t(\"btns.createPermission\")}\r\n                />\r\n            </div>\r\n            <div className=\"cardBox myRequest\">\r\n                <div className=\"cardHead\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <img\r\n                            src=\"images/team-rating.svg\"\r\n                            alt=\"\"\r\n                            width={40}\r\n                            className=\"me-2 fw-bold\"\r\n                        />\r\n                        <div className=\"\">\r\n                            <h3> {t(\"headings.assignPermission\")}</h3>\r\n                            {/* <p>Lorem Ipsum is simply dummy text of the printing</p> */}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <PermissionFilters\r\n                    allRolesData={allRolesData}\r\n                    getUserOnRole={getUserOnRole}\r\n                    usersOnRoleData={usersOnRoleData}\r\n                    getRoleOrUserWisePermission={getRoleOrUserWisePermission}\r\n                    filters={filters}\r\n                    setFilters={setFilters}\r\n                />\r\n                <AllPermissions\r\n                    categoryWisePermissionData={categoryWisePermissionData}\r\n                    roleOrUserWisePermissionData={roleOrUserWisePermissionData}\r\n                    updatePermissions={updatePermissions}\r\n                />\r\n                {isShowPermission &&<CreateUpdatePermission\r\n                    openModel={isShowPermission}\r\n                    handleOpenClose={toggleCreateUpdatePermissionModal}\r\n                    handleCreateUpdatePermission={handleCreateUpdatePermission}\r\n                    permissionConstantData={permissionConstantData}\r\n                    menuPermissionData={menuPermissionData}\r\n\r\n                />}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Permissions\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableDataHeader from './TableDataHeader';\r\nimport { CustomButton, CustomSpinner } from '../../globalComponents';\r\nimport TableName from './TableName';\r\nimport BlankTableError from '../../commanComponent/BlankTableError';\r\nimport CustomTd from './CustomTd';\r\nimport CustomPagination from '../../commanComponent/CustomPagination';\r\nimport { getCustomTableSN } from '../../../utils/common';\r\n\r\nconst CustomTableWithSubTable = ({ data,\r\n    fields,\r\n    isLoading,\r\n    scopedSlots = {},\r\n    onSearch,\r\n    pagination,\r\n    setCurrentPage,\r\n    totalPages,\r\n    currentPage,\r\n    tableName,\r\n    isHeader = true,\r\n    tableStyle,\r\n    isShowSubMenu\r\n}) => {\r\n    const renderTableBody = () => (\r\n        data && data.length > 0 ? (\r\n            data.map((item, index) => {\r\n                const indexValue = getCustomTableSN(index, currentPage); // Get serial number\r\n\r\n                return (\r\n                    <React.Fragment key={index}>\r\n                        {/* Main Row */}\r\n                        <tr>\r\n                            {fields.map((field) => (\r\n                                field.key !== \"sub_table\" ? <CustomTd key={field.key}\r\n                                    style={{ width: field.width || 'auto' }}\r\n                                >\r\n                                    {scopedSlots[field.key] ? scopedSlots[field.key](item, indexValue) : item[field.key]}\r\n                                </CustomTd> : <CustomTd key={field.key} style={{ width: field.width || 'auto' }} />\r\n                            ))}\r\n                        </tr>\r\n\r\n                        {/* Submenu Row */}\r\n                        {scopedSlots['sub_table'] && isShowSubMenu.includes(index) && (\r\n                            <tr>\r\n                                <td colSpan={fields.length} style={{ padding: '3px 20px', backgroundColor: '#f9f9f9' }}>\r\n                                    {scopedSlots['sub_table'](item, indexValue)}\r\n                                </td>\r\n                            </tr>\r\n\r\n                        )}\r\n                    </React.Fragment>\r\n                );\r\n            })\r\n        ) : (\r\n            !isLoading && <BlankTableError totalField={fields?.length} />\r\n        )\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"cardBox mb-3 mt-3\" style={tableStyle || {}}>\r\n            {isHeader && <div className=\"cardHead d-flex align-items-center justify-content-between\">\r\n                <TableName name={tableName} />\r\n\r\n                <div className=\"d-flex\">\r\n                    <div className=\"ticketFilter\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control fs-7\"\r\n                            placeholder=\"Filter..\"\r\n                        // onChange={e => onSearch(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <CustomButton\r\n                        text=\"Search\"\r\n                        classNames=\"btn btn-primary p-1 ms-3\"\r\n                    />\r\n                </div>\r\n            </div>}\r\n            <div className=\"table-responsive tableDiv\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <TableDataHeader tableHeader={fields} />\r\n                    </thead>\r\n                    <tbody>\r\n                        {isLoading ? <tr>\r\n                            <td colSpan={fields?.length}>\r\n                                <CustomSpinner isShow={isLoading} size=\"xl\" />\r\n                            </td>\r\n                        </tr>\r\n                            :\r\n                            renderTableBody()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            {/* Pagination Controls */}\r\n            {(totalPages > 1 && pagination) && <CustomPagination\r\n                currentPage={currentPage}\r\n                totalPages={totalPages}\r\n                onPageChange={(pageNumber) => setCurrentPage(pageNumber)}\r\n            />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomTableWithSubTable\r\n"],"names":["props","t","useCustomTranslation","categoryWisePermissionData","roleOrUserWisePermissionData","updatePermissions","getCategoryWisePermissionPending","updatePermissionPending","useSelector","state","permission","permissionIds","setPermissionIds","useState","Set","useEffect","permission_ids","routesField","key","label","_jsxs","className","children","_jsx","CustomSpinner","isShow","size","id","length","map","data","index","type","style","textTransform","toTitleCase","distinct_category","CustomTable","items","fields","isHeader","tableStyle","padding","boxShadow","scopedSlots","sn","_","item","CustCheckbox","checked","has","_id","handleChange","e","handlePermissionChecked","tempPermission","target","add","delete","name","CustomButton","text","isLoading","classNames","handleClick","CustomError","allRolesData","getUserOnRole","usersOnRoleData","getRoleOrUserWisePermission","setFilters","filters","roleChecked","setRoleChecked","userChecked","setUserChecked","handleFromChange","fieldName","_e$target","value","prevState","params","role_id","_filters$role","role","user_id","_Fragment","Label","CustomSelect","placeholder","selectedOption","user","_createUpdatePermissi","createPermissionPending","openModel","handleOpenClose","handleCreateUpdatePermission","menuPermissionData","permissionConstantData","errors","setErrors","createUpdatePermissionFormData","setCreateUpdatePermissionFormData","route_key","routes","permission_type","title","parent","sort_order","icon","sub_title","category","prevErrors","undefined","resetForm","tabIndex","visibility","width","onClick","required","Input","onChange","permissionType","async","validationResponse","validateSchema","createUpdatePermissionSchema","isValid","submitCreateUpdatePermission","Permissions","setCategoryWisePermissionData","isShowPermission","setIsShowPermission","setAllRolesData","setUsersOnRoleData","setPermissionConstantData","setMenuPermissionData","setRoleOrUserWisePermissionData","dispatch","useDispatch","getPermissionConstantPending","getPermissionConstantRes","getPermissionConstantError","getMenuPermissionPending","getMenuPermissionRes","getMenuPermissionError","getCategoryWisePermissionRes","getCategoryWisePermissionError","createPermissionRes","createPermissionError","updatePermissionRes","updatePermissionError","getRoleOrUserWisePermissionPending","getRoleOrUserWisePermissionRes","getRoleOrUserWisePermissionError","getAllRolesPending","getAllRolesRes","getAllRolesError","roles","getUserOnRolePending","getUserOnRoleRes","getUserOnRoleError","employee","getCategoryWisePermission","getAllRoles","getPermissionConstant","getMenuPermission","permissionActions","handleClearPermissionStore","getCategoryWisePermissionRequest","code","toggleCreateUpdatePermissionModal","rolesActions","getAllRolesRequest","roleId","getPermissionConstantRequest","getMenuPermissionRequest","src","alt","PermissionFilters","payload","employeeActions","getUserOnRoleRequest","prams","getRoleOrUserWisePermissionRequest","AllPermissions","_filters$user","Array","from","updatePermissionRequest","CreateUpdatePermission","createPermissionRequest","_ref","onSearch","pagination","setCurrentPage","totalPages","currentPage","tableName","isShowSubMenu","TableName","TableDataHeader","tableHeader","colSpan","indexValue","getCustomTableSN","React","field","CustomTd","includes","backgroundColor","BlankTableError","totalField","CustomPagination","onPageChange","pageNumber"],"sourceRoot":""}