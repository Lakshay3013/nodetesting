{"version":3,"file":"static/js/4554.8b9834a4.chunk.js","mappings":"qOAQA,MAyFA,EAzF6BA,IACzB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,KACRC,GAAyBC,EAAAA,EAAAA,IAAa,kCACtC,UACFC,EAAS,gCACTC,EAA+B,YAC/BC,EAAW,eACXC,EAAc,mBACdC,EAAkB,wBAClBC,GACAV,GACGW,EAAoBC,IAAyBC,EAAAA,EAAAA,UAAS,KAG7DC,EAAAA,EAAAA,YAAU,KACNF,EAAsBH,EAAmB,GAC1C,CAACA,IAGJ,MAAMM,GAAcC,EAAAA,EAAAA,UAAQ,MACxBC,GAAIA,CAACC,EAAGC,KACJC,EAAAA,EAAAA,KAAA,QAAAC,SAAOF,EAAM,IAEjBG,UAAWC,IACPH,EAAAA,EAAAA,KAAA,QACII,UAAW,UAASC,EAAAA,EAAAA,IAAcF,EAAKD,UAAY,SAAW,cAAcD,SAE3EE,EAAKD,UAAY,SAAW,aAIrCI,WAAYH,GAAQI,IAAOJ,EAAKG,YAAYE,OAAO,cACnDC,OAAQN,IACJO,EAAAA,EAAAA,MAAA,OAAKN,UAAU,sBAAqBH,SAAA,EACpCD,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAASP,UAAU,4BAC5B,iBAAe,WAAW,gBAAc,QAAOH,UAC/CD,EAAAA,EAAAA,KAAA,KAAGI,UAAU,iCAEjBJ,EAAAA,EAAAA,KAAA,MAAII,UAAU,gBAAeH,SACzBlB,IAA2BiB,EAAAA,EAAAA,KAAA,MAAAC,UACvBD,EAAAA,EAAAA,KAAA,QAAMI,UAAU,gBACZQ,QAASA,IAAMtB,EAA4B,OAAJa,QAAI,IAAJA,OAAI,EAAJA,EAAMU,KAAKZ,SACrD,qBAMb,CAACV,IAECuB,EAAS,CACX,CAAEC,IAAK,KAAMC,MAAO,OACpB,CAAED,IAAK,gBAAiBC,MAAO,mBAC/B,CAAED,IAAK,cAAeC,MAAO,gBAC7B,CAAED,IAAK,YAAaC,MAAO,UAC3B,CAAED,IAAK,aAAcC,MAAO,cAC7BjC,GAA4B,CAAEgC,IAAK,SAAUC,MAAO,WAGvD,OACIN,EAAAA,EAAAA,MAAA,OAAKN,UAAU,yCAAwCH,SAAA,EACnDS,EAAAA,EAAAA,MAAA,OAAKN,UAAU,0DAAyDH,SAAA,EACpES,EAAAA,EAAAA,MAAA,OAAKN,UAAU,kBAAiBH,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,OAAKiB,IAAI,4BAA4BC,IAAI,GAAGC,MAAO,MACnDnB,EAAAA,EAAAA,KAAA,MAAII,UAAU,YAAWH,SAAEpB,EAAE,iCAEjCmB,EAAAA,EAAAA,KAACoB,EAAAA,GAAY,CACTC,KAAM,sBACNC,WAAY,kBACZC,YAAaA,IAAMjC,IACnBkC,KAAM,4BAGdxB,EAAAA,EAAAA,KAACyB,EAAAA,GAAW,CACRC,KAAwB,OAAlBnC,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBmC,KAC1BZ,OAAQA,EACR7B,UAAWA,EACX0C,YAAY,EACZxC,YAAaA,EACbC,eAAgBA,EAChBwC,WAA8B,OAAlBrC,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBqC,WAChCC,UAAU,EACVC,WAAY,CAAEC,QAAS,MAAOC,UAAW,QACzCrC,YAAaA,MAEf,E,gDCvFd,MA2DA,EA3DwBsC,KACtB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACVlD,EAAaC,IAAkBK,EAAAA,EAAAA,UAAS,IACxCJ,EAAmBiD,IAAuB7C,EAAAA,EAAAA,UAAS,KASpD,yBACJ8C,EAAwB,qBACxBC,EAAoB,uBACpBC,IAEEC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,UA2B/B,OAxBAlD,EAAAA,EAAAA,YAAU,KACR,IAAK6C,EAA0B,CAC7B,GAAIE,EACF,OAEED,GACiC,OAAX,OAApBA,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBK,OACxBP,EAA0C,OAApBE,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBd,KAGlD,IACC,CACDc,EACAC,EACAF,KAGF7C,EAAAA,EAAAA,YAAU,KACR,MAAMoD,EAAU,CACdC,KAAM5D,EACN6D,MAAOrB,EAAAA,GAAWqB,OAEpBd,EAASe,EAAAA,GAAeC,yBAAyBJ,GAAS,GACzD,CAAC3D,KAEFa,EAAAA,EAAAA,KAAA,OAAAC,UAEED,EAAAA,EAAAA,KAACmD,EAAmB,CAClB7D,wBA5C2B8D,IAE7BhB,EADCgB,EACQ,2CAA0CA,EAAK,IAAIA,IAAO,IAE1D,0CACX,EAwCIhE,eAAgBA,EAChBD,YAAaA,EACbE,mBAAoBA,EACpBJ,UAAWsD,KAET,C","sources":["components/payrollAdmin/salaryTemplate/SalaryTemplateTable.js","components/payrollAdmin/salaryTemplate/SalaryTemplates.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomTable } from '../../reuseableComponents'\r\nimport { getBadgeColor, isPermission } from '../../../utils/common'\r\nimport { CustomButton } from '../../globalComponents'\r\nimport moment from 'moment'\r\nimport { useCustomTranslation } from '../../../translation'\r\n\r\n\r\nconst SalaryTemplateTable = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const updateSalaryTemplatePer =isPermission(\"update_salary_template_action\")\r\n    const {\r\n        isLoading,\r\n        toggleSalaryTemplateDeleteModal,\r\n        currentPage,\r\n        setCurrentPage,\r\n        allSalaryTemplates,\r\n        navigateSalaryTempModal\r\n    } = props\r\n    const [salaryTemplateList, setSalaryTemplateList] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n        setSalaryTemplateList(allSalaryTemplates)\r\n    }, [allSalaryTemplates])\r\n\r\n\r\n    const scopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index+1}</span>\r\n        ),\r\n        is_active: item => (\r\n            <span\r\n                className={`badge ${getBadgeColor(item.is_active ? \"Active\" : \"Inactive\")}`}\r\n            >\r\n                {item.is_active ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n        ),\r\n       \r\n        created_at: item => moment(item.created_at).format(\"DD-MM-YYYY\"),\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n            <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                <i className=\"bi bi-three-dots-vertical\"></i>\r\n            </button>\r\n            <ul className=\"dropdown-menu\">\r\n               {updateSalaryTemplatePer && <li>\r\n                    <span className=\"dropdown-item\"\r\n                        onClick={() => navigateSalaryTempModal(item?._id)}\r\n                    >\r\n                        Update</span>\r\n                </li>}\r\n            </ul>\r\n        </div>\r\n        )\r\n    }), [salaryTemplateList]);\r\n\r\n    const fields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'template_name', label: 'Salary Template' },\r\n        { key: 'description', label: 'Description ' },\r\n        { key: 'is_active', label: 'Status' },\r\n        { key: 'created_at', label: 'Created At' },\r\n      (updateSalaryTemplatePer &&  { key: 'action', label: 'Action' })\r\n    ];\r\n\r\n    return (\r\n        <div className='cardBox myRequest mb-3 employeeHistory'>\r\n            <div className=\"d-flex align-items-center justify-content-between gap-3\">\r\n                <div className=\"cardHead d-flex\">\r\n                    <img src=\"images/myrequest-icon.svg\" alt=\"\" width={35} />\r\n                    <h3 className=\"ms-2 mt-2\">{t(\"headings.salaryTemplate\")}</h3>\r\n                </div>\r\n                <CustomButton\r\n                    text={\"Add Salary Template\"}\r\n                    classNames={\"btn btn-primary\"}\r\n                    handleClick={() => navigateSalaryTempModal()}\r\n                    slug={\"add_salary_template\"}\r\n                />\r\n            </div>\r\n            <CustomTable\r\n                data={salaryTemplateList?.data}\r\n                fields={fields}\r\n                isLoading={isLoading}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={salaryTemplateList?.totalPages}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={scopedSlots}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalaryTemplateTable\r\n","import React, { useEffect, useState } from 'react'\r\nimport SalaryTemplateTable from './SalaryTemplateTable'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { payrollActions } from '../../../core/resource/actions'\r\nimport { pagination } from '../../../utils/Constants.config'\r\nconst SalaryTemplates = () => {\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [allSalaryTemplates,satAllSalaryTemplates]=useState('')\r\n  const navigateSalaryTempModal = (id) => {\r\n    if(id){\r\n      navigate(`/salary-template/update-salary-template${id ? `/${id}` : ''}`);\r\n    }else{\r\n      navigate(`/salary-template/create-salary-template`);\r\n    }\r\n  }\r\n\r\n  const {\r\n    getSalaryTemplatePending,\r\n    getSalaryTemplateRes,\r\n    getSalaryTemplateError,\r\n\r\n  } = useSelector(state => state.payroll)\r\n\r\n  /* Get Salary Template Data */\r\n  useEffect(() => {\r\n    if (!getSalaryTemplatePending) {\r\n      if (getSalaryTemplateError) {\r\n        return;\r\n      }\r\n      if (getSalaryTemplateRes) {\r\n        if (getSalaryTemplateRes?.code === 200) {\r\n          satAllSalaryTemplates(getSalaryTemplateRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getSalaryTemplateRes,\r\n    getSalaryTemplateError,\r\n    getSalaryTemplatePending\r\n  ])\r\n\r\n  useEffect(() => {\r\n    const payload = {\r\n      page: currentPage,\r\n      limit: pagination.limit,\r\n    }\r\n    dispatch(payrollActions.getSalaryTemplateRequest(payload))\r\n  }, [currentPage])\r\n  return (\r\n    <div>\r\n\r\n      <SalaryTemplateTable\r\n        navigateSalaryTempModal={navigateSalaryTempModal}\r\n        setCurrentPage={setCurrentPage}\r\n        currentPage={currentPage}\r\n        allSalaryTemplates={allSalaryTemplates}\r\n        isLoading={getSalaryTemplatePending}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SalaryTemplates\r\n"],"names":["props","t","useCustomTranslation","updateSalaryTemplatePer","isPermission","isLoading","toggleSalaryTemplateDeleteModal","currentPage","setCurrentPage","allSalaryTemplates","navigateSalaryTempModal","salaryTemplateList","setSalaryTemplateList","useState","useEffect","scopedSlots","useMemo","sn","_","index","_jsx","children","is_active","item","className","getBadgeColor","created_at","moment","format","action","_jsxs","type","onClick","_id","fields","key","label","src","alt","width","CustomButton","text","classNames","handleClick","slug","CustomTable","data","pagination","totalPages","isHeader","tableStyle","padding","boxShadow","SalaryTemplates","dispatch","useDispatch","navigate","useNavigate","satAllSalaryTemplates","getSalaryTemplatePending","getSalaryTemplateRes","getSalaryTemplateError","useSelector","state","payroll","code","payload","page","limit","payrollActions","getSalaryTemplateRequest","SalaryTemplateTable","id"],"sourceRoot":""}