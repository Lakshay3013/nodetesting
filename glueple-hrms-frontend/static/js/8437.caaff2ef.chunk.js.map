{"version":3,"file":"static/js/8437.caaff2ef.chunk.js","mappings":"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","sources":["components/commanComponent/BackIcon.js","components/payrollAdmin/payRuns/arrears/Arrears.js","components/payrollAdmin/payRuns/arrears/AddArrears.js","components/payrollAdmin/payRuns/loans/Loans.js","components/payrollAdmin/payRuns/loans/AddLoans.js","components/payrollAdmin/payRuns/payrollHistory/payrollHistory.js","components/payrollAdmin/payRuns/RunAttendance.js/RunAttendance.js","components/payrollAdmin/payRuns/attendanceTracking/EmpAttendanceTrackingTable.js","components/payrollAdmin/payRuns/attendanceTracking/AttendanceFilters.js","components/payrollAdmin/payRuns/attendanceTracking/AttendanceTracking.js","components/payrollAdmin/payRuns/PayRuns.js","components/payrollAdmin/payRuns/RunAttendance.js/CreatePayrun.js","components/payrollAdmin/payRuns/loans/InstallmentTable.js","components/reuseableComponents/customTable/CustomTableWithSubTable.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst BackIcon = () => {\r\n    return (\r\n        <div >\r\n            <svg\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                x={0}\r\n                y={0}\r\n                viewBox=\"0 0 512 512\"\r\n                xmlSpace=\"preserve\"\r\n                className=\"icon icon-xlg me-2\"\r\n                style={{\r\n                    height: \"23px\",\r\n                    width: \"23px\",\r\n                    cursor: \"pointer\",\r\n                }}\r\n            >\r\n                <circle id=\"Oval-3\" opacity=\".1\" fill=\"#2B76D2\" cx={256} cy={256} r={256} />\r\n                <path\r\n                    fill=\"#2B76D2\"\r\n                    d=\"M277.3 362.7c-5.3 0-10.6-2-14.7-5.9l-85.3-81.5c-4.1-3.9-6.5-9.3-6.6-15-.1-5.7 2-11.1 5.9-15.2l85.3-89.1c8.1-8.5 21.7-8.8 30.2-.7 8.5 8.1 8.8 21.6.7 30.2l-70.6 73.7 69.9 66.8c8.5 8.1 8.8 21.6.7 30.1-4.2 4.4-9.8 6.6-15.5 6.6z\"\r\n                />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackIcon\r\n","import React, { useMemo, useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport CustomTable from '../../../reuseableComponents/customTable/CustomTable'\r\nimport CustomTableWithSubTable from '../../../reuseableComponents/customTable/CustomTableWithSubTable'\r\nimport { isPermission } from '../../../../utils/common'\r\n\r\nconst Arrears = (props) => {\r\n    const { toggleAddArrearsModal, allArrearsList, isLoading, setCurrentPage, currentPage } = props\r\n    const { t } = useCustomTranslation()\r\n    const [isShowSubMenu, setIsShowSubMenu] = useState([]);\r\n    const updateArrearPer =isPermission(\"update_arrear\")\r\n    const employeeArrearDetailPer =isPermission(\"employee_arrear_detail\")\r\n    const subTableFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'emp_code', label: 'Employee Code ' },\r\n        { key: 'name', label: 'Employee Name' },\r\n        { key: 'pay_days', label: 'Pay Days' },\r\n        { key: 'bonus', label: 'Bonus' },\r\n        { key: 'total_employee', label: 'Employee Contribution' },\r\n        { key: 'total_employer', label: ' Employer Contribution' },\r\n        { key: 'gross', label: 'Gross' },\r\n        { key: 'ctc', label: 'CTC' },\r\n    ];\r\n\r\n    const arrearsEmployeeFields = [\r\n        { key: 'sn', label: 'S.N' ,width: '20%' },\r\n        { key: 'name', label: 'Arrear Name',width: '30%'  },\r\n        { key: 'arrear_for', label: 'Arrear For',width: '20%'  },\r\n        { key: 'year_mon', label: 'Pay Month',width: '20%'  },\r\n        ((employeeArrearDetailPer||updateArrearPer) &&{ key: 'action', label: 'Action',width: '20%'  }),\r\n        { key: 'sub_table', label: '',width: '20%'  },\r\n\r\n    ]\r\n    const arrearsEmployeeScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n      \r\n        pay_days: (item, index) => (\r\n            <span>{item?.present}</span>\r\n        ),\r\n        bonus: (item, index) => (\r\n            <span>{item?.bonus?.real}</span>\r\n        ),\r\n        total_employee: (item, index) => (\r\n            <span>{item?.total_employee?.real}</span>\r\n        ),\r\n        total_employer: (item, index) => (\r\n            <span>{item?.total_employer?.real}</span>\r\n        ),\r\n        gross: (item, index) => (\r\n            <span>{item?.gross?.real}</span>\r\n        ),\r\n\r\n        ctc: (item, index) => (\r\n            <span>{item?.ctc?.real}</span>\r\n        ),\r\n\r\n\r\n\r\n        action: (item,index) => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                   {updateArrearPer&& <li className=\"dropdown-item\" onClick={() => toggleAddArrearsModal(item)} >\r\n\r\n                        Update Arrear\r\n                    </li>}\r\n\r\n                   {employeeArrearDetailPer && <li className=\"dropdown-item\" onClick={() => handleSubMenuToggle(index)} >\r\n\r\n                        Employee Detail\r\n                    </li>}\r\n\r\n                </ul>\r\n            </div>\r\n        ),\r\n        sub_table: (item) => (\r\n            <CustomTable\r\n            data={item?.employees}\r\n            fields={subTableFields}\r\n            // isLoading={isLoading}\r\n            // pagination={true}\r\n            currentPage={currentPage}\r\n            setCurrentPage={(pageNo) => setCurrentPage(pageNo, \"addArrears\")}\r\n            totalPages={allArrearsList?.totalPages}\r\n            tableName={\"Employees\"}\r\n            // onSearch={handleSearch}\r\n            isHeader={true}\r\n            // tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n            scopedSlots={arrearsEmployeeScopedSlots}\r\n        />\r\n          ),\r\n    }), []);\r\n\r\n    const handleSubMenuToggle = (index) => {\r\n        if (isShowSubMenu.includes(index)) {\r\n            setIsShowSubMenu(isShowSubMenu.filter((i) => i !== index));\r\n        } else {\r\n            setIsShowSubMenu([...isShowSubMenu, index]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Arrears</h3>\r\n                <CustomButton\r\n                    classNames={\"btn btn-primary gradientBg\"}\r\n                    handleClick={() => toggleAddArrearsModal()}\r\n                    text={\"Add Arrear\"}\r\n                    slug={\"add_arrear\"}\r\n                />\r\n            </div>\r\n\r\n\r\n            {/* <CustomTable\r\n                data={allArrearsList?.data}\r\n                fields={arrearsEmployeeFields}\r\n                isLoading={isLoading}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={(pageNo) => setCurrentPage(pageNo, \"addArrears\")}\r\n                totalPages={allArrearsList?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={arrearsEmployeeScopedSlots}\r\n            /> */}\r\n            <CustomTableWithSubTable\r\n                data={allArrearsList?.data}\r\n                fields={arrearsEmployeeFields}\r\n                isLoading={isLoading}\r\n                scopedSlots={arrearsEmployeeScopedSlots}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                totalPages={allArrearsList?.totalPages}\r\n                setCurrentPage={(pageNo) => setCurrentPage(pageNo, \"addArrears\")}\r\n                // tableName=\"My Custom Table\"\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                isShowSubMenu={isShowSubMenu}\r\n            />\r\n\r\n\r\n\r\n\r\n\r\n            {/* <CustomButton\r\n                classNames={\"btn btn-primary gradientBg mt-2\"}\r\n                // handleClick={() => ()}\r\n                text={\"Save\"}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Arrears\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { Input, Label, Textarea } from '../../../commanComponent'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport { addArrearsSchema } from '../../../../utils/ValidationSchema'\r\n\r\nconst AddArrears = (props) => {\r\n    const { isOpen, toggleOpenClose, allEmployeeList, handleAddArrears, selectedArrear } = props\r\n    const { addArrearsPending } = props\r\n    const { t } = useCustomTranslation()\r\n    // const [payDays, setPayDays] = useState('')\r\n    const [errors, setErrors] = useState({})\r\n    const [selectedEmployees, setSelectedEmployees] = useState('')\r\n    const [arrearFormData, setArrearFormData] = useState({\r\n        arrearName: '',\r\n        arrearFor: '',\r\n        payMonth: '',\r\n        description: '',\r\n        employees: [],\r\n\r\n    })\r\n    const addArrearsFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'pay_days', label: 'Pay Days' },\r\n        { key: 'emp_code', label: 'Emp Code' },\r\n        { key: 'name', label: 'Emp Name' },\r\n        { key: 'department_name', label: 'Department  ' },\r\n        { key: 'designation_name', label: 'Designation' },\r\n    ];\r\n\r\n    const addEmployeesPayDays = (e, item) => {\r\n        const { value } = e?.target;\r\n        setArrearFormData((prev) => ({\r\n            ...prev,\r\n            employees: prev.employees.map((emp) =>\r\n                emp?.value === item?.value\r\n                    ? { ...emp, pay_days: value }\r\n                    : emp\r\n            ),\r\n        }));\r\n    };\r\n\r\n\r\n    const addArrearsScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        pay_days: (item, index) => (\r\n            <span>\r\n\r\n                <Input\r\n                    type=\"number\"\r\n                    value={item?.pay_days || ''}\r\n                    name=\"pay_days\"\r\n                    onChange={(e) => addEmployeesPayDays(e, item)}\r\n                />\r\n            </span>\r\n        ),\r\n\r\n\r\n    }), [arrearFormData]);\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n        setArrearFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n        if (\"employees\" == name) {\r\n            setSelectedEmployees(value)\r\n        }\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitFormData = async () => {\r\n        const validationResponse = await validateSchema(addArrearsSchema, arrearFormData);\r\n        if (validationResponse.isValid) {\r\n            const payload = {\r\n                name: arrearFormData?.arrearName,\r\n                description: arrearFormData?.description,\r\n                year_mon: arrearFormData?.payMonth,\r\n                arrear_for: arrearFormData?.arrearFor,\r\n                employees: arrearFormData?.employees\r\n            }\r\n            handleAddArrears(payload)\r\n\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (selectedArrear) {\r\n            setArrearFormData({\r\n                arrearName:selectedArrear?.name,\r\n                arrearFor: selectedArrear?.arrear_for,\r\n                payMonth: selectedArrear?.year_mon,\r\n                description:selectedArrear?.description,\r\n                employees: selectedArrear?.employees,\r\n            })\r\n        }\r\n    }, [selectedArrear])\r\n    return (<>\r\n        <div className={`offcanvas offcanvas-end creatNewTicketOff ${isOpen ? 'show' : ''}`} tabIndex={-1}\r\n            style={{ visibility: isOpen ? 'visible' : 'hidden', width: \"800px\" }}\r\n        >\r\n            <div className=\"offcanvas-header\">\r\n                <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\"> {selectedArrear ?\"Update\":\"Add\"} Arrears </h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                    onClick={() => toggleOpenClose()}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"offcanvas-body\">\r\n                <div className=\"formPanel\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.arrearName\")} required={true} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.arrearName\")}\r\n                                    value={arrearFormData?.arrearName || ''}\r\n                                    name=\"arrearName\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.arrearName && (\r\n                                    <CustomError text={errors.arrearName} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.arrearFor\")} required={true} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Input\r\n                                    type=\"month\"\r\n                                    value={arrearFormData?.arrearFor || ''}\r\n                                    name=\"arrearFor\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.arrearFor && (\r\n                                    <CustomError text={errors.arrearFor} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.payMonth\")} required={true} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Input\r\n                                    type=\"month\"\r\n                                    value={arrearFormData?.payMonth || ''}\r\n                                    name=\"payMonth\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.payMonth && (\r\n                                    <CustomError text={errors.payMonth} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.description\")} required={true} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Textarea\r\n                                    name=\"description\"\r\n                                    value={arrearFormData?.description}\r\n                                    placeholder={t(\"placeholders.description\")}\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.description && (\r\n                                    <CustomError text={errors.description} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.employee\")} required={true} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <CustomSelect\r\n                                    data={allEmployeeList}\r\n                                    placeholder={t(\"placeholders.employee\")}\r\n                                    value={arrearFormData?.employees || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"employees\")}\r\n                                    name=\"employees\"\r\n                                    isMulti={true}\r\n                                />\r\n                                {errors?.employees && (\r\n                                    <CustomError text={errors.employees} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <CustomTable\r\n                        data={arrearFormData?.employees}\r\n                        fields={addArrearsFields}\r\n                        // isLoading={isLoading}\r\n                        pagination={true}\r\n                        // currentPage={currentPage}\r\n                        // setCurrentPage={setCurrentPage}\r\n                        // totalPages={depList?.totalPages}\r\n                        // tableName={\"\"}\r\n                        // onSearch={handleSearch}\r\n                        isHeader={false}\r\n                        tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                        scopedSlots={addArrearsScopedSlots}\r\n                    />\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"offcanvas-footer\">\r\n                <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                    <CustomButton\r\n                        text={selectedArrear ?\"Update\":\"Add\"}\r\n                        classNames={\"btn btn-org-gradient\"}\r\n                        handleClick={() => submitFormData()}\r\n                        isLoading={addArrearsPending}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <div></div>\r\n        {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default AddArrears\r\n\r\n\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport InstallmentTable from './InstallmentTable';\r\nimport { useSelector } from 'react-redux';\r\nimport { dateFormate, isPermission } from '../../../../utils/common';\r\n\r\n\r\nconst Loans = (props) => {\r\n    const { getLoansPending}=useSelector(state =>state?.payroll)\r\n    const { toggleAddLoanModal,loansData,currentPage,setCurrentPage} = props\r\n    const [installmentData, setInstallmentData] = useState()\r\n    const empLoanDetailPer =isPermission(\"employee_loan_detail\")\r\n\r\n    const loanFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'name', label: 'Employee Name' },\r\n        { key: 'emp_code', label: 'Employee ID' },\r\n        { key: 'department_name', label: 'Department' },\r\n        { key: 'loan_type_name', label: 'Loan Type' },\r\n        { key: 'amount', label: 'Loan Amount' },\r\n        { key: 'tenure_duration', label: 'EMI Duration' },\r\n        { key: 'start_date', label: 'Effective Date' },\r\n        { key: 'end_date', label: 'End Date' },\r\n        (empLoanDetailPer && { key: 'action', label: 'Action' }),\r\n    ]\r\n\r\n    const loanScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        start_date: (item, index) => (\r\n            <span>{dateFormate(item?.start_date)}</span>\r\n        ),\r\n        end_date: (item, index) => (\r\n            <span>{dateFormate(item?.end_date)}</span>\r\n        ),\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    {empLoanDetailPer &&<li>\r\n                        <span className=\"dropdown-item\"\r\n                        onClick={() => toggleAddLoanModal(item ,\"view\")} \r\n                        >\r\n                        View Details</span>\r\n                    </li>}\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n\r\n    }), [loansData]);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Loans</h3>\r\n                <CustomButton\r\n                    classNames={\"btn btn-primary gradientBg\"}\r\n                    handleClick={() => toggleAddLoanModal()}\r\n                    text={\"Add Loan\"}\r\n                    slug={\"add_loan\"}\r\n\r\n                />\r\n            </div>\r\n            <CustomTable\r\n                data={loansData?.data}\r\n                fields={loanFields}\r\n                isLoading={getLoansPending}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={(pageNo) => setCurrentPage(pageNo, \"loan\")}\r\n                totalPages={loansData?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={loanScopedSlots}\r\n            />\r\n            {/* {installmentData && installmentData?.length > 0 &&\r\n                <div className=\"col-12\">\r\n                    <div className='card text-center p-1 m-o' style={{ backgroundColor: \"#3c82e9\", color: \"white\" }}> <h6 >Edit Installment </h6></div>\r\n                    <InstallmentTable\r\n                        installmentData={installmentData}\r\n                        setInstallmentData={setInstallmentData}\r\n                        loanData={loan}\r\n                    />\r\n                </div>} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loans\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { Input, Label } from '../../../commanComponent'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport moment from 'moment'\r\nimport InstallmentTable from './InstallmentTable'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport { addUpdateLoanSchema } from '../../../../utils/ValidationSchema'\r\nimport { dateFormate } from '../../../../utils/common'\r\n\r\nconst AddLoans = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const { toggleOpenClose, isOpen, allEmployeeList, filteredDropdownData, handleAddUpdateLoan ,openLoanTypeModal ,selectedLoanData} = props\r\n\r\n    const [loanFormData, setLoanFormData] = useState({\r\n        employee: null,\r\n        loanType: null,\r\n        amount: '',\r\n        emiDuration: null,\r\n        effectiveDate: '',\r\n        endDate: '',\r\n    })\r\n    const [errors, setErrors] = useState('')\r\n    const [installmentData, setInstallmentData] = useState([])\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n        if (name === \"effectiveDate\") {\r\n            setInstallmentData([])\r\n            calculateEndDate(value)\r\n        }\r\n        if (name === \"emiDuration\") {\r\n            setLoanFormData(prevState => ({\r\n                ...prevState,\r\n                [\"effectiveDate\"]: '',\r\n                [\"endDate\"]: '',\r\n            }));\r\n            setInstallmentData([])\r\n        }\r\n        if (name === \"amount\") {\r\n            setLoanFormData(prevState => ({\r\n                ...prevState,\r\n                [\"emiDuration\"]: null,\r\n                [\"effectiveDate\"]: '',\r\n                [\"endDate\"]: '',\r\n            }));\r\n            setInstallmentData([])\r\n        }\r\n        setLoanFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n        // Reset error for this field\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const calculateEndDate = effectiveDate => {\r\n        const newDate = moment(effectiveDate)\r\n            .add(Number(loanFormData.emiDuration.category_value) - 1, 'M')\r\n            .format('YYYY-MM-DD');\r\n\r\n        setLoanFormData(prevState => ({\r\n            ...prevState,\r\n            endDate: newDate, \r\n        }));\r\n    \r\n        calculateEmiInstallment(effectiveDate);\r\n    };\r\n    \r\n\r\n    const calculateEmiInstallment = (effectiveDate) => {\r\n        let duration = parseInt(loanFormData?.emiDuration?.category_value);\r\n        let emi = parseFloat(loanFormData?.amount / duration).toFixed(2);\r\n        let temp = [];\r\n        let date = moment(effectiveDate).format('YYYY-MM-DD');\r\n        for (let i = 1; i <= duration; i++) {\r\n            temp.push({ installment: i, payment_date: date, emi_amount: emi, });\r\n            let len = temp.length;\r\n            //   subCompanyDetails?.length && subCompanyDetails?.map((item,index)=>{\r\n            //     if(index === 0){\r\n            //     temp[len-1].subcompany.push({[item.value]:100});\r\n            //     }else{\r\n            //       temp[len-1].subcompany.push({[item.value]:0});\r\n            //     }\r\n            //   })\r\n            date = moment(date)\r\n                .add(1, 'month')\r\n                .format('YYYY-MM-DD');\r\n        }\r\n        setInstallmentData(temp);\r\n    };\r\n\r\n    const onSubmitLoanData = async () => {\r\n        const validationResponse = await validateSchema(addUpdateLoanSchema, loanFormData);\r\n        if (validationResponse.isValid) {\r\n            const {\r\n                employee,\r\n                loanType,\r\n                amount,\r\n                emiDuration,\r\n                effectiveDate,\r\n                endDate, \r\n            } = loanFormData\r\n            setErrors({});\r\n            const params = {\r\n                employee_id:employee?.value,\r\n                loan_type:loanType?.value,\r\n                amount :amount||0,\r\n                tenure_duration:emiDuration?.value,\r\n                start_date:effectiveDate,\r\n                end_date:endDate,\r\n                installments:installmentData\r\n            }\r\n            handleAddUpdateLoan(params)\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n\r\nuseEffect(()=>{\r\nif(selectedLoanData){\r\n    setInstallmentData(selectedLoanData?.installments)\r\n    setLoanFormData({\r\n        employee: {label:selectedLoanData?.name,value:selectedLoanData?.value},\r\n        loanType: {label:selectedLoanData?.loan_type_name,value:selectedLoanData?.loan_type_value},\r\n        amount: selectedLoanData?.amount,\r\n        emiDuration: {value:selectedLoanData?.tenure_duration,label:''},\r\n        effectiveDate: selectedLoanData?.start_date,\r\n        endDate: selectedLoanData?.end_date,\r\n    })\r\n}\r\n},[selectedLoanData])\r\n\r\n    return (<>\r\n        <div className={`offcanvas offcanvas-end creatNewTicketOff ${isOpen ? 'show' : ''}`} tabIndex={-1}\r\n            style={{\r\n                visibility: isOpen ? 'visible' : 'hidden',\r\n                width: \"800px\"\r\n            }}\r\n        >\r\n            <div className=\"offcanvas-header\">\r\n                <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\"> Add Loans </h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                    onClick={() => toggleOpenClose()}\r\n                />\r\n            </div>\r\n            <div className=\"offcanvas-body\">\r\n                <div className=\"formPanel\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.employee\")} required={true} />\r\n                                <CustomSelect\r\n                                    data={allEmployeeList}\r\n                                    placeholder={t(\"placeholders.employee\")}\r\n                                    value={loanFormData?.employee || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"employee\")}\r\n                                    name=\"employee\"\r\n                                />\r\n                            </div>\r\n                            {errors?.employee && (\r\n                                <CustomError text={errors.employee} />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.loanType\")} required={true} />\r\n                                <CustomSelect\r\n                                    data={filteredDropdownData?.loan_type}\r\n                                    placeholder={t(\"placeholders.loanType\")}\r\n                                    value={loanFormData?.loanType || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"loanType\")}\r\n                                    name=\"loanType\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.amount\")} required={true} />\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.amount\")}\r\n                                    value={loanFormData?.amount}\r\n                                    name=\"amount\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.amount && (\r\n                                    <CustomError text={errors.amount} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.emiDuration\")} required={true} />\r\n\r\n                                <CustomSelect\r\n                                    data={filteredDropdownData?.emi_duration}\r\n                                    placeholder={t(\"placeholders.emiDuration\")}\r\n                                    value={loanFormData?.emiDuration || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"emiDuration\")}\r\n                                    name=\"emiDuration\"\r\n                                />\r\n                            </div>\r\n                            {errors?.emiDuration && (\r\n                                <CustomError text={errors.emiDuration} />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.effectiveDate\")} required={true} />\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    value={dateFormate(loanFormData?.effectiveDate,\"YYYY-MM-DD\")}\r\n                                    isDisabled={!(loanFormData?.emiDuration) ? true : false}\r\n                                    name=\"effectiveDate\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n\r\n                            </div>\r\n                            {errors?.effectiveDate && (\r\n                                <CustomError text={errors.effectiveDate} />\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.endDate\")} required={true} />\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    value={dateFormate(loanFormData?.endDate,\"YYYY-MM-DD\")}\r\n                                    isDisabled={true}\r\n                                    name=\"endDate\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.endDate && (\r\n                                    <CustomError text={errors.endDate} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <hr />\r\n                        {installmentData && installmentData?.length > 0 &&\r\n                            <div className=\"col-12\">\r\n                                <div className='card text-center p-1 m-o' style={{ backgroundColor: \"#3c82e9\", color: \"white\" }}> <h6 >Pending Installment </h6></div>\r\n                                <InstallmentTable\r\n                                    installmentData={installmentData}\r\n                                    setInstallmentData={setInstallmentData}\r\n                                    loanData={loanFormData}\r\n                                />\r\n                            </div>}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"offcanvas-footer\">\r\n                <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                    <CustomButton\r\n                        text={\"Add\"}\r\n                        classNames={\"btn btn-org-gradient\"}\r\n                        handleClick={() => onSubmitLoanData()}\r\n                    // isLoading={selectedDepartmentData ? updateDepartmentPending : addDepartmentPending}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default AddLoans\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { values } from 'lodash';\r\n\r\nconst payRunHistoryData = [\r\n  {\r\n    salaryForMonth: \"May 2024\",\r\n    paymentMonth: \"June 2024\",\r\n    paymentDate: \"2024-06-07\",\r\n  },\r\n  {\r\n    salaryForMonth: \"June 2024\",\r\n    paymentMonth: \"July 2024\",\r\n    paymentDate: \"2024-07-07\",\r\n  },\r\n  {\r\n    salaryForMonth: \"February 2024\",\r\n    paymentMonth: \"March 2024\",\r\n    paymentDate: \"2024-03-07\",\r\n  },\r\n  {\r\n    salaryForMonth: \"March 2024\",\r\n    paymentMonth: \"April 2024\",\r\n    paymentDate: \"2024-04-07\",\r\n  },\r\n  {\r\n    salaryForMonth: \"April 2024\",\r\n    paymentMonth: \"May 2024\",\r\n    paymentDate: \"2024-05-07\",\r\n  },\r\n  {\r\n    salaryForMonth: \"September 2024\",\r\n    paymentMonth: \"October 2024\",\r\n    paymentDate: \"2024-10-07\",\r\n  },\r\n];\r\n\r\nconst PayrollHistory = (props) => {\r\n  const { payRunHistoryData, currentPage, setCurrentPage } = props\r\n  const payrollHistoryField = [\r\n    { key: \"pay_month\", label: \"Payment Month\" },\r\n    { key: \"pay_date\", label: \"Payment Date\" },\r\n    { key: \"employee_no\", label: \"Pay Employees\" },\r\n    { key: \"payroll_cost\", label: \"Payroll Cost\" },\r\n    { key: \"payroll_netPay\", label: \"Payroll Net Pay\" },\r\n    { key: \"action\", label: \"Action\" },\r\n  ]\r\n  const payrollHistoryScopedSlots = useMemo(() => ({\r\n    sn: (_, index) => (\r\n      <span>{index + 1}</span>\r\n    ),\r\n\r\n    action: item => (\r\n      <div className=\"btn-group actionDrp\">\r\n        <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n          data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n          <i className=\"bi bi-three-dots-vertical\"></i>\r\n        </button>\r\n        <ul className=\"dropdown-menu\">\r\n          <li>\r\n            <span \r\n            className=\"dropdown-item\"\r\n            >\r\n              View Details</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    )\r\n}), [payRunHistoryData]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n        <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Payroll History</h3>\r\n\r\n      </div>\r\n      <CustomTable\r\n        data={payRunHistoryData}\r\n        fields={payrollHistoryField}\r\n        // isLoading={isLoading}\r\n        pagination={true}\r\n        currentPage={currentPage}\r\n        setCurrentPage={(pageNo) => setCurrentPage(pageNo, \"loan\")}\r\n        totalPages={payRunHistoryData?.totalPages}\r\n        // tableName={\"\"}\r\n        // onSearch={handleSearch}\r\n        isHeader={false}\r\n        tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n        scopedSlots={payrollHistoryScopedSlots}\r\n      />\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default PayrollHistory\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { dateFormate, getBadgeColor, isPermission } from '../../../../utils/common'\r\n\r\nconst RunAttendance = (props) => {\r\n    const { payRollNotificationData } = props\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\" d-flex justify-content-between align-items-center mb-2\">\r\n                <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Run Attendance</h3>\r\n\r\n            </div>\r\n            <div className='card'>\r\n                <div className=\" payroll-card-body-css  p-3 border-left border-dark\">\r\n                    <div className=\"payruns-cards d-flex align-items-center justify-content-around\">\r\n                        <div className=\"col\">\r\n                            <small className=\"text-secondary\">PAYMENT MONTH{\" \"}\r\n                                <span\r\n                                    className={`badge ${getBadgeColor(payRollNotificationData?.status)}`}\r\n                                >\r\n                                    {payRollNotificationData?.status}\r\n                                </span>\r\n                            </small>\r\n                            <h5 className=\"py-3\">{dateFormate(payRollNotificationData?.pay_month,\"MMM YYYY\")}</h5>\r\n                        </div>\r\n                      \r\n                        <div className=\"col\">\r\n                           {isPermission(\"create_pay_run_btn\") && <Link to={`/pay-runs/create-pay-run/${payRollNotificationData?.pay_month}`}> <button\r\n                                className=\"btn btn-primary\"\r\n                            >\r\n                                Create Pay Run\r\n                            </button>\r\n                            </Link>}\r\n                            &nbsp;&nbsp;\r\n                           {isPermission(\"view_pay_run_detail\") && <Link to={`/regular-payroll/${payRollNotificationData?.pay_month}`}>\r\n                                <button className=\"btn btn-primary\"\r\n                                >\r\n                                    View Details\r\n                                </button>\r\n                            </Link>}\r\n                        </div>\r\n                    \r\n                    </div>\r\n                    <i class=\"bi bi-info-circle\"></i>{\" \"}\r\n                    <span>\r\n                        <small className=\"text-secondary\">\r\n                            Please approve this payroll before{' '}\r\n                            {dateFormate(payRollNotificationData?.pay_date)}\r\n                        </small>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default RunAttendance\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { getBadgeColor } from '../../../../utils/common';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { payrollActions } from '../../../../core/resource/actions';\r\n\r\nconst EmpAttendanceTrackingTable = (props) => {\r\n    const dispatch =useDispatch()    \r\n    \r\n    const {currentPage,setCurrentPage ,getAllEmployeeDetailsByPayDays,monthYear} = props\r\n    const {\r\n        getEmployeeDetailsByPayDaysPending,\r\n    } = useSelector(state => state.payroll)\r\n    // const selectedEmployeeAttendanceDetail =(id)=>{\r\n    //     navigate()\r\n    // }\r\n    const employeeField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'emp_id', label: 'Emp Id' },\r\n        { key: 'name', label: 'Full Name' },\r\n        { key: 'present_days', label: 'Present Days' },\r\n    { key: 'absent_days', label: 'Absent Days' },\r\n        { key: 'pay_days', label: 'Pay Days' },\r\n        { key: 'account_status', label: 'Account Status' },\r\n        { key: 'action', label: 'Action'}\r\n    ];\r\n    const setSelectedEmpData =(data)=>{\r\n        dispatch(payrollActions.selectedEmployeeData(data))\r\n    }\r\n    \r\n    const employeeScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        account_status: item =>(\r\n            <span\r\n            className={`badge ${getBadgeColor(item.account_status)}`}\r\n          >\r\n            {item.account_status}\r\n          </span>\r\n        ) ,\r\n        \r\n\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                        <Link className=\"dropdown-item\" to={`employee-attendance-tracking/${item?._id}/${monthYear}`}\r\n                        onClick={() => setSelectedEmpData(item)} \r\n                        >\r\n                            View Details</Link>\r\n                    </li>\r\n                    {/* <li>\r\n                        <span className=\"dropdown-item\"\r\n                        // onClick={() => handleCreateUpdateEmployeeModal()}\r\n                        >Update</span>\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }), [getAllEmployeeDetailsByPayDays,currentPage]);\r\n    return (\r\n        <>\r\n            <CustomTable\r\n                data={getAllEmployeeDetailsByPayDays?.data}\r\n                fields={employeeField}\r\n                isLoading={getEmployeeDetailsByPayDaysPending}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={(currentNum)=>setCurrentPage(currentNum,\"attendanceTracking\")}\r\n                totalPages={getAllEmployeeDetailsByPayDays?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={employeeScopedSlots}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmpAttendanceTrackingTable\r\n","import React, { useState } from 'react'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { Icon, Input, Label } from '../../../commanComponent'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport moment from 'moment'\r\nimport { multiSelectIDs } from '../../../../utils/common'\r\n\r\nconst AttendanceFilters = (props) => {\r\n    const {\r\n        allEmployeeList,\r\n        allDepartments,\r\n        allDesignations,\r\n        handleDepartmentByDesignation,\r\n        getEmployeeDetailsByPayDays,\r\n        setMonthYear\r\n    } = props\r\n    const { t } = useCustomTranslation()\r\n    const [filterFormData, setFilterFormData] = useState({\r\n        department: null,\r\n        designation: null,\r\n        employees:'',\r\n        month_year:moment().format(\"YYYY-MM\")\r\n    })\r\n\r\n    const handleFilterFormData = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n\r\n\r\n        if (name === \"department\") {\r\n            value && value?.value && handleDepartmentByDesignation(value?.value)\r\n            setFilterFormData(prevState => ({\r\n                ...prevState,\r\n                [\"designation\"]: null,\r\n            })\r\n            );\r\n        }\r\n        if(name ===\"month_year\") setMonthYear(value)\r\n        setFilterFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n    }\r\n    const handleFilterEmployees =()=>{\r\n        const filterFields={};\r\n\r\n        if(filterFormData?.department?.value)  filterFields[\"department_id\"] = filterFormData?.department?.value;\r\n        if(filterFormData?.designation?.value)  filterFields[\"designation_id\"] = filterFormData?.designation?.value;\r\n        if(filterFormData?.employees?.length>0) filterFields[\"employee_ids\"]=multiSelectIDs(filterFormData?.employees)\r\n        filterFields[\"month_year\"]=filterFormData?.month_year\r\n        getEmployeeDetailsByPayDays(filterFields)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"formPanel cardBox\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-2\">\r\n                            <Label text={t(\"labels.department\")} />\r\n                            <CustomSelect\r\n                                data={allDepartments}\r\n                                placeholder={t(\"placeholders.selectDepartment\")}\r\n                                value={filterFormData?.department || ''}\r\n                                handleChange={(selectedOption) => handleFilterFormData(selectedOption, \"department\")}\r\n                                name=\"department\"\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-2\">\r\n                            <Label text={t(\"labels.designation\")} />\r\n                            <CustomSelect\r\n                                data={allDesignations}\r\n                                placeholder={t(\"placeholders.selectDesignation\")}\r\n                                value={filterFormData?.designation || ''}\r\n                                handleChange={(selectedOption) => handleFilterFormData(selectedOption, \"designation\")}\r\n                                name=\"designation\"\r\n                                isDisabled={!(filterFormData?.department) ? true : false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-2\">\r\n                            <Label text={t(\"labels.employees\")} />\r\n                            <CustomSelect\r\n                                data={allEmployeeList}\r\n                                placeholder={t(\"placeholders.employees\")}\r\n                                value={filterFormData?.employees || ''}\r\n                                handleChange={(selectedOption) => handleFilterFormData(selectedOption, \"employees\")}\r\n                                name=\"employees\"\r\n                                isMulti={true}\r\n                                selectAllText={t(\"labels.selectAll\")}\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-2\">\r\n                            <Label text={t(\"labels.monthYear\")} />\r\n                            <Input\r\n                               type={\"month\"}\r\n                               value={filterFormData?.month_year||''}\r\n                               onChange={(e)=>handleFilterFormData(e)}\r\n                               name=\"month_year\"\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='d-flex justify-content-end'>\r\n\r\n                    <CustomButton\r\n                        classNames={\"btn btn-primary gradientBg\"}\r\n                        handleClick={() => handleFilterEmployees()}\r\n                        text={t(\"btns.filter\")}\r\n                        icon={<Icon className={\"fa fa-search\"}/>}\r\n                    />\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttendanceFilters\r\n","import React, { useState } from 'react'\r\nimport AttendanceTrackingTable from './AttendanceTrackingTable'\r\nimport EmpAttendanceTrackingTable from './EmpAttendanceTrackingTable'\r\nimport AttendanceFilters from './AttendanceFilters';\r\nimport moment from 'moment';\r\n\r\nconst AttendanceTracking = (props) => {\r\n    \r\n    const {\r\n        allEmployeeList,\r\n        allDepartments,\r\n        allDesignations,\r\n        handleDepartmentByDesignation,\r\n        getAllEmployeeDetailsByPayDays,\r\n        getEmployeeDetailsByPayDays,\r\n        currentPage, \r\n        setCurrentPage\r\n    } = props\r\n    const [monthYear,setMonthYear]=useState(moment().format(\"YYYY-MM\"))\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Attendance Tracking</h3>\r\n            </div>\r\n            <AttendanceFilters\r\n                allEmployeeList={allEmployeeList}\r\n                allDepartments={allDepartments}\r\n                allDesignations={allDesignations}\r\n                handleDepartmentByDesignation={handleDepartmentByDesignation}\r\n                getEmployeeDetailsByPayDays={getEmployeeDetailsByPayDays}\r\n                setMonthYear={setMonthYear}\r\n            />\r\n            <EmpAttendanceTrackingTable\r\n                setCurrentPage={setCurrentPage}\r\n                currentPage={currentPage}\r\n                allEmployeeData={allEmployeeList}\r\n                getAllEmployeeDetailsByPayDays={getAllEmployeeDetailsByPayDays}\r\n                monthYear={monthYear}\r\n\r\n            />\r\n            {/* <AttendanceTrackingTable/> */}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AttendanceTracking\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { CustomTabs } from '../../reuseableComponents';\r\nimport Arrears from './arrears/Arrears';\r\nimport AddArrears from './arrears/AddArrears';\r\nimport Loans from './loans/Loans';\r\nimport AddLoans from './loans/AddLoans';\r\nimport PayrollHistory from './payrollHistory/payrollHistory';\r\nimport RunAttendance from './RunAttendance.js/RunAttendance';\r\nimport AttendanceTracking from './attendanceTracking/AttendanceTracking';\r\nimport CreatePayrun from './RunAttendance.js/CreatePayrun';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useCustomTranslation } from '../../../translation';\r\nimport { departmentAction, designationAction, dropdownMasterActions, employeeActions, payrollActions } from '../../../core/resource/actions';\r\nimport { pagination } from '../../../utils/Constants.config';\r\nimport { use } from 'i18next';\r\nimport moment from 'moment';\r\nimport { activeTabPermission, setFilterDropdownData } from '../../../utils/common';\r\n\r\nconst PayRuns = () => {\r\n    const dispatch = useDispatch()\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    } = useSelector(state => state.department)\r\n    const {\r\n        getDesignationsByDepartmentRes,\r\n        getDesignationsByDepartmentPending,\r\n        getDesignationsByDepartmentError\r\n    } = useSelector(state => state.designation)\r\n\r\n    const {\r\n        getAllEmployeePending,\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n    } = useSelector(state => state.employee)\r\n\r\n    const {\r\n        getFilteredDropdownDataError,\r\n        getFilteredDropdownDataRes,\r\n        getFilteredDropdownDataPending\r\n    } = useSelector(state => state.dropdownMaster)\r\n    const {\r\n\r\n        getEmployeeDetailsByPayDaysPending,\r\n        getEmployeeDetailsByPayDaysRes,\r\n        getEmployeeDetailsByPayDaysError,\r\n\r\n        addArrearsPending,\r\n        addArrearsRes,\r\n        addArrearsError,\r\n\r\n        getArrearsPending,\r\n        getArrearsRes,\r\n        getArrearsError,\r\n\r\n        addLoansPending,\r\n        addLoansRes,\r\n        addLoansError,\r\n\r\n        getLoansPending,\r\n        getLoansRes,\r\n        getLoansError,\r\n\r\n        getPayRunHistoryPending,\r\n        getPayRunHistoryRes,\r\n        getPayRunHistoryError,\r\n\r\n        payRollNotificationPending,\r\n        payRollNotificationRes,\r\n        payRollNotificationError,\r\n\r\n    } = useSelector(state => state.payroll)\r\n\r\n    const [isOpenAddArrears, setIsOpenAddArrears] = useState(false)\r\n    const [isOpenAddLoans, setIsOpenAddLoans] = useState(false)\r\n    const [openLoanTypeModal, setOpenLoanTypeModal] = useState('')\r\n    const [allEmployeeList, setAllEmployeeList] = useState('')\r\n    const [allDepartments, setAllDepartments] = useState('')\r\n    const [allDesignations, setAllDesignations] = useState('')\r\n    const [getAllEmployeeDetailsByPayDays, setGetAllEmployeeDetailsByPayDays] = useState([])\r\n    const [attendanceStatusData, setAttendanceStatusData] = useState([])\r\n    const [allArrearsList, setAllArrearsList] = useState('')\r\n    const [selectedArrear, setSelectedArrear] = useState('')\r\n    const [filteredDropdownData, setFilteredDropdownData] = useState({})\r\n    const [loansData, setLoansData] = useState('')\r\n    const [selectedLoanData, setSelectedLoanData] = useState('')\r\n    const [payRunHistoryData, setPayRunHistoryData] = useState('')\r\n    const [payRollNotificationData, setPayRollNotificationData] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(\r\n        {\r\n            attendanceTrackCurrentPage: 1,\r\n            arrearCurrentPage: 1,\r\n            loanCurrentPage: 1,\r\n            payRunHistoryCurrentPage: 1\r\n        }\r\n    )\r\n\r\n\r\n\r\n    const tableTabsRequest = [\r\n        { name: \"Run Attendance\", onClickFun: (id) => getPayRunsData(id), id: \"runAttendance\",permissionId:\"run_attendance\" },\r\n        { name: \"Attendance Tracking\", onClickFun: (id) => getPayRunsData(id), id: \"attendanceTracking\" ,permissionId:\"attendance_tracking\"},\r\n        { name: \"Add Arrears\", onClickFun: (id) => getPayRunsData(id), id: \"addArrears\",permissionId:\"arrears\" },\r\n        { name: \"Loans\", onClickFun: (id) => getPayRunsData(id), id: \"loans\",permissionId:\"loans\" },\r\n        { name: \"Payroll History\", onClickFun: (id) => getPayRunsData(id), id: \"payRollHistory\",permissionId:\"payroll_history\" },\r\n    ];\r\n    const activePayRunsTab =activeTabPermission(tableTabsRequest)\r\n    useEffect(() => {\r\n        getPayRunsData(\"runAttendance\")\r\n    }, [])\r\n    const getPayRunsData = (id) => {\r\n        if (\"runAttendance\" === id) {\r\n            getPayRollNotificationData()\r\n        }\r\n        if (id === \"attendanceTracking\") {\r\n            getEmployeeDetailsByPayDays()\r\n        }\r\n        else if (id === \"addArrears\") {\r\n            getAllArrearsList()\r\n        }\r\n        else if (id === \"loans\") {\r\n            getLoansData()\r\n        }\r\n        else if (id === \"payRollHistory\") {\r\n            getPayRunHistoryData()\r\n        }\r\n\r\n    }\r\n    const toggleAddArrearsModal = (data) => {\r\n        if (data) {\r\n            setSelectedArrear(data)\r\n        }\r\n        setIsOpenAddArrears(!isOpenAddArrears)\r\n    }\r\n    const toggleAddLoanModal = (item, type) => {\r\n        if (type) {\r\n            setOpenLoanTypeModal(type)\r\n            setSelectedLoanData(item)\r\n        }\r\n        setIsOpenAddLoans(!isOpenAddLoans)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllDepartments()\r\n        getAllEmployee()\r\n        getDropdownFilteredData()\r\n    }, [])\r\n    /* Get All Employee List*/\r\n    const getAllEmployee = () => {\r\n        dispatch(employeeActions.getAllEmployeeRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getAllEmployeePending) {\r\n            if (getAllEmployeeError) {\r\n                return;\r\n            }\r\n            if (getAllEmployeeRes) {\r\n                if (getAllEmployeeRes?.code === 200) {\r\n\r\n                    setAllEmployeeList(getAllEmployeeRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n        getAllEmployeePending\r\n    ]);\r\n\r\n\r\n\r\n    /* Get All Departments */\r\n    const getAllDepartments = () => {\r\n        if (!getDepartmentListRes?.data?.length) {\r\n            dispatch(departmentAction.getDepartmentListRequest());\r\n        } else {\r\n            setAllDepartments(getDepartmentListRes?.data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getDepartmentListPending) {\r\n            if (getDepartmentListError) {\r\n                return;\r\n            }\r\n            if (getDepartmentListRes) {\r\n                if (getDepartmentListRes?.code === 200) {\r\n                    const departmentResponse = getDepartmentListRes?.data\r\n                    setAllDepartments(departmentResponse)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    ]);\r\n\r\n    /* Department by Designation  */\r\n    const handleDepartmentByDesignation = (id) => {\r\n        const params = {\r\n            department_id: id\r\n        }\r\n        dispatch(designationAction.getDesignationsByDepartmentRequest(params));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getDesignationsByDepartmentPending) {\r\n            if (getDesignationsByDepartmentError) {\r\n                return;\r\n            }\r\n            if (getDesignationsByDepartmentRes) {\r\n                if (getDesignationsByDepartmentRes?.code === 200) {\r\n                    const designationResponse = getDesignationsByDepartmentRes?.data || []\r\n                    setAllDesignations(designationResponse)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDesignationsByDepartmentRes,\r\n        getDesignationsByDepartmentError,\r\n        getDesignationsByDepartmentPending\r\n    ]);\r\n\r\n\r\n    /* Get Employee Details By Pay Days  */\r\n    const getEmployeeDetailsByPayDays = (pageNo, param) => {\r\n        const payload = {\r\n            page: pageNo || currentPage?.attendanceTrackCurrentPage,\r\n            limit: pagination.limit,\r\n            //     month_year: moment().format(\"YYYY-MM\"),\r\n            //     ...param\r\n        }\r\n        dispatch(payrollActions.getEmployeeDetailsByPayDaysRequest(payload));\r\n        // dispatch(payrollActions.getEmployeeDetailsByPayDaysRequest());\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getEmployeeDetailsByPayDaysPending) {\r\n            if (getEmployeeDetailsByPayDaysError) {\r\n                return;\r\n            }\r\n            if (getEmployeeDetailsByPayDaysRes) {\r\n                if (getEmployeeDetailsByPayDaysRes?.code === 200) {\r\n                    const getEmployeeDetailsByPayDaysData = getEmployeeDetailsByPayDaysRes?.data\r\n                    setGetAllEmployeeDetailsByPayDays(getEmployeeDetailsByPayDaysData)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getEmployeeDetailsByPayDaysRes,\r\n        getEmployeeDetailsByPayDaysError,\r\n        getEmployeeDetailsByPayDaysPending\r\n    ]);\r\n\r\n\r\n    /*  Handle Add Arrears*/\r\n    const handleAddArrears = (payload) => {\r\n        dispatch(payrollActions.addArrearsRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!addArrearsPending) {\r\n            if (addArrearsError) {\r\n                dispatch(payrollActions?.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_ARREARS_STORE\"))\r\n                return;\r\n            }\r\n            if (addArrearsRes) {\r\n                if (addArrearsRes?.code === 200) {\r\n                    toggleAddArrearsModal()\r\n                    getAllArrearsList()\r\n                    dispatch(payrollActions?.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_ARREARS_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addArrearsRes,\r\n        addArrearsError,\r\n        addArrearsPending\r\n    ]);\r\n\r\n    /*  Handle  Get Arrears*/\r\n\r\n    const getAllArrearsList = (pageNo) => {\r\n        const payload = {\r\n            page: pageNo || currentPage?.arrearCurrentPage,\r\n            limit: pagination?.limit,\r\n        }\r\n        dispatch(payrollActions.getArrearsRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!getArrearsPending) {\r\n            if (getArrearsError) {\r\n                dispatch(payrollActions?.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_ARREARS_STORE\"))\r\n                return;\r\n            }\r\n            if (getArrearsRes) {\r\n                if (getArrearsRes?.code === 200) {\r\n                    setAllArrearsList(getArrearsRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getArrearsRes,\r\n        getArrearsError,\r\n        getArrearsPending\r\n    ]);\r\n\r\n\r\n    const handlePageChange = (pageNo, type) => {\r\n        if (\"attendanceTracking\" === type) {\r\n            setCurrentPage((pre) => ({\r\n                ...pre,\r\n                attendanceTrackCurrentPage: pageNo\r\n            }))\r\n            getEmployeeDetailsByPayDays(pageNo)\r\n        } else if (\"addArrears\" === type) {\r\n            setCurrentPage((pre) => ({\r\n                ...pre,\r\n                arrearCurrentPage: pageNo\r\n            }))\r\n            getAllArrearsList(pageNo)\r\n        }\r\n        else if (\"loans\" === type) {\r\n            setCurrentPage((pre) => ({\r\n                ...pre,\r\n                loanCurrentPage: pageNo\r\n            }))\r\n            getLoansData(pageNo)\r\n        } else if (\"payRollHistory\" === type) {\r\n            setCurrentPage((pre) => ({\r\n                ...pre,\r\n                payRunHistoryCurrentPage: pageNo\r\n            }))\r\n            getPayRunHistoryData(pageNo)\r\n        }\r\n    }\r\n    /* Dropdown Master Filter */\r\n    const getDropdownFilteredData = () => {\r\n        const categories = ['loan_type', 'emi_duration']\r\n        let params = { category: categories }\r\n\r\n        dispatch(dropdownMasterActions.getFilteredDropdownDataRequest(params))\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getFilteredDropdownDataPending) {\r\n            if (getFilteredDropdownDataError) {\r\n                return;\r\n            }\r\n            if (getFilteredDropdownDataRes) {\r\n                if (getFilteredDropdownDataRes?.code === 200) {\r\n                    const updateData = setFilterDropdownData(getFilteredDropdownDataRes?.data?.data)\r\n                    setFilteredDropdownData(updateData);\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getFilteredDropdownDataRes,\r\n        getFilteredDropdownDataError,\r\n        getFilteredDropdownDataPending\r\n    ]);\r\n\r\n    /* Loan  API's */\r\n    const handleAddUpdateLoan = (payload) => {\r\n        dispatch(payrollActions?.addLoansRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!addLoansPending) {\r\n            if (addLoansError) {\r\n                dispatch(payrollActions?.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_LOANS_STORE\"))\r\n                return;\r\n            }\r\n            if (addLoansRes) {\r\n                if (addLoansRes?.code === 200) {\r\n                    dispatch(payrollActions?.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_LOANS_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addLoansRes,\r\n        addLoansError,\r\n        addLoansPending\r\n    ]);\r\n\r\n    /* Get All Loans Data */\r\n    const getLoansData = (pageNo) => {\r\n        const payload = {\r\n            page: pageNo || currentPage?.loanCurrentPage,\r\n            limit: pagination?.limit,\r\n        }\r\n        dispatch(payrollActions.getLoansRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!getLoansPending) {\r\n            if (getLoansError) {\r\n                return;\r\n            }\r\n            if (getLoansRes) {\r\n                if (getLoansRes?.code === 200) {\r\n                    setLoansData(getLoansRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getLoansRes,\r\n        getLoansError,\r\n        getLoansPending\r\n    ]);\r\n\r\n\r\n    /* Get Pay Run History Data Data */\r\n    const getPayRunHistoryData = (pageNo) => {\r\n        const payload = {\r\n            page: pageNo || currentPage?.payRunHistoryCurrentPage,\r\n            limit: pagination?.limit,\r\n        }\r\n        dispatch(payrollActions.getPayRunHistoryRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!getPayRunHistoryPending) {\r\n            if (getPayRunHistoryError) {\r\n                return;\r\n            }\r\n            if (getPayRunHistoryRes) {\r\n                if (getPayRunHistoryRes?.code === 200) {\r\n                    setPayRunHistoryData(getPayRunHistoryRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getPayRunHistoryRes,\r\n        getPayRunHistoryError,\r\n        getPayRunHistoryPending\r\n    ]);\r\n\r\n    /* Get Pay Run History Data Data */\r\n    const getPayRollNotificationData = () => {\r\n        dispatch(payrollActions.payRollNotificationRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!payRollNotificationPending) {\r\n            if (payRollNotificationError) {\r\n                return;\r\n            }\r\n            if (payRollNotificationRes) {\r\n                if (payRollNotificationRes?.code === 200) {\r\n                    setPayRollNotificationData(payRollNotificationRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        payRollNotificationRes,\r\n        payRollNotificationError,\r\n        payRollNotificationPending\r\n    ]);\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"tab-pane fade show active\" id=\"receivedFeedback\">\r\n                <div className=\"cardBox myRequest mb-3\">\r\n                    <div className=\"cardHead d-flex justify-content-between\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <img\r\n                                src=\"images/kpi-guidline.svg\"\r\n                                alt=\"\"\r\n                                width={40}\r\n                                className=\"me-2 fw-bold\"\r\n                            />\r\n                            <div className=\"\">\r\n                                <h3> Pay Runs</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"searchB me-0 \">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control w-100 fs-7\"\r\n                                placeholder=\"Search\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <CustomTabs tabs={tableTabsRequest} type=\"rayRuns\" />\r\n                    <div className=\"tab-content mykpiMain\">\r\n                        <div className={`tab-pane fade ${activePayRunsTab===\"runAttendance\"&&\"active show\"}`} id=\"runAttendance\">\r\n                            <RunAttendance\r\n                                payRollNotificationData={payRollNotificationData}\r\n                            />\r\n                        </div>\r\n                        <div className={`tab-pane fade ${activePayRunsTab===\"attendanceTracking\"&&\"active show\"}`} id=\"attendanceTracking\">\r\n                            <AttendanceTracking\r\n                                allEmployeeList={allEmployeeList}\r\n                                allDepartments={allDepartments}\r\n                                allDesignations={allDesignations}\r\n                                handleDepartmentByDesignation={handleDepartmentByDesignation}\r\n                                getAllEmployeeDetailsByPayDays={getAllEmployeeDetailsByPayDays}\r\n                                getEmployeeDetailsByPayDays={getEmployeeDetailsByPayDays}\r\n                                attendanceStatusData={attendanceStatusData}\r\n                                currentPage={currentPage?.attendanceTrackCurrentPage}\r\n                                setCurrentPage={handlePageChange}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className={`tab-pane fade ${activePayRunsTab===\"addArrears\"&&\"active show\"}`} id=\"addArrears\">\r\n                            <Arrears\r\n                                toggleAddArrearsModal={toggleAddArrearsModal}\r\n                                allArrearsList={allArrearsList}\r\n                                isLoading={getArrearsPending}\r\n                                currentPage={currentPage?.arrearCurrentPage}\r\n                                setCurrentPage={handlePageChange}\r\n                            />\r\n                        </div>\r\n                        <div className={`tab-pane fade ${activePayRunsTab===\"addArrears\"&&\"active show\"}`} id=\"loans\">\r\n                            <Loans\r\n                                toggleAddLoanModal={toggleAddLoanModal}\r\n                                loansData={loansData}\r\n                                currentPage={currentPage?.arrearCurrentPage}\r\n                                setCurrentPage={handlePageChange}\r\n\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"tab-pane fade\" id=\"payRollHistory\">\r\n                            <PayrollHistory\r\n                                payRunHistoryData={payRunHistoryData}\r\n                                currentPage={currentPage?.payRunHistoryCurrentPage}\r\n                                setCurrentPage={handlePageChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                isOpenAddArrears && <AddArrears\r\n                    isOpen={isOpenAddArrears}\r\n                    toggleOpenClose={toggleAddArrearsModal}\r\n                    allEmployeeList={allEmployeeList}\r\n                    handleAddArrears={handleAddArrears}\r\n                    selectedArrear={selectedArrear}\r\n\r\n                />}\r\n            {\r\n                isOpenAddLoans &&\r\n                <AddLoans\r\n                    isOpen={isOpenAddLoans}\r\n                    toggleOpenClose={toggleAddLoanModal}\r\n                    allEmployeeList={allEmployeeList}\r\n                    filteredDropdownData={filteredDropdownData}\r\n                    handleAddUpdateLoan={handleAddUpdateLoan}\r\n                    openLoanTypeModal={openLoanTypeModal}\r\n                    selectedLoanData={selectedLoanData}\r\n\r\n                />\r\n            }\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PayRuns\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { CustCheckbox, DynamicFilter, Label } from '../../../commanComponent'\r\nimport { CustomButton, CustomSpinner } from '../../../globalComponents'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport BackIcon from '../../../commanComponent/BackIcon'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { pagination } from '../../../../utils/Constants.config'\r\nimport { departmentAction, employeeActions, payrollActions } from '../../../../core/resource/actions'\r\nimport { dateFormate } from '../../../../utils/common'\r\n\r\nconst CreatePayrun = () => {\r\n    const dispatch = useDispatch()\r\n    const {payMonth} =useParams()\r\n    const {\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    } = useSelector(state => state.department)\r\n    const {\r\n        getAllEmployeePending,\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n    } = useSelector(state => state.employee)\r\n    const {\r\n        getEmployeeSalaryPending,\r\n        getEmployeeSalaryRes,\r\n        getEmployeeSalaryError,\r\n\r\n        addPayRunPending,\r\n        addPayRunRes,\r\n        addPayRunError,\r\n\r\n    } = useSelector(state => state.payroll)\r\n\r\n    const { t } = useCustomTranslation()\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [createdSalaryEmpList, setCreatedSalaryEmpList] = useState('')\r\n    const [allActiveSalaryCreate, setAllActiveSalaryCreate] = useState(true)\r\n    const [tempSalaryEmpData, setTempSalaryEmpData] = useState('')\r\n    const [allDepartments, setAllDepartments] = useState('')\r\n    const [allEmployeeList, setAllEmployeeList] = useState('')\r\n    const [filterFormData, setFilterFormData] = useState({\r\n        employeeName: '',\r\n        department: '',\r\n    });\r\n\r\n    const createPayRunFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'hold_salary', label: 'Hold Salary' },\r\n        { key: 'create_salary', label: 'Create Salary' },\r\n        { key: 'emp_code', label: 'Emp ID' },\r\n        { key: 'employee_name', label: 'Emp Name' },\r\n        { key: 'email', label: 'Email' },\r\n        { key: 'department', label: 'Department  ' },\r\n        { key: 'designation', label: 'Designation' },\r\n    ];\r\n\r\n    const createPayRunScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        hold_salary: (item) => (\r\n            <span>\r\n                <CustCheckbox\r\n                    key={\"is_hold\"}\r\n                    id={`is_hold`}\r\n                    checked={item?.is_hold}\r\n                    handleChange={(e) => handleCheckedUncheck(e, null, item)}\r\n                    name={\"is_hold\"}\r\n                />\r\n            </span>\r\n        ),\r\n        create_salary: (item) => (\r\n            <span>\r\n                <CustCheckbox\r\n                    key={\"create_salary\"}\r\n                    id={`create_salary`}\r\n                    checked={item?.create_salary}\r\n                    handleChange={(e) => handleCheckedUncheck(e, null, item)}\r\n                    name={\"create_salary\"}\r\n                />\r\n            </span>\r\n        ),\r\n\r\n\r\n    }), [allActiveSalaryCreate, createdSalaryEmpList]);\r\n\r\n    useEffect(() => {\r\n        getAllDepartments()\r\n    }, [])\r\n\r\n    const employeeFilters = [\r\n        {\r\n            name: 'employeeName',\r\n            label: 'Select Employee / ID',\r\n            type: 'select',\r\n            value: filterFormData.employeeName,\r\n            data: allEmployeeList,\r\n            placeholder: 'Enter Employee Name',\r\n            isMulti: true\r\n        },\r\n        {\r\n            name: 'department',\r\n            label: 'Department',\r\n            type: 'select',\r\n            data: allDepartments,\r\n            value: filterFormData.department,\r\n            placeholder: 'Select Department',\r\n        },\r\n\r\n    ];\r\n\r\n    const handleFilterFormData = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n\r\n        setFilterFormData((prevState) => ({\r\n            ...prevState,\r\n            [name]: type === 'checkbox' ? checked : value,\r\n        }));\r\n    };\r\n\r\n    const handleFilterEmployees = () => {\r\n        const filterFields = {};\r\n        if (filterFormData?.department?.value) filterFields[\"department_id\"] = filterFormData?.department?.value;\r\n        if (filterFormData?.designation?.value) filterFields[\"designation_id\"] = filterFormData?.designation?.value;\r\n        if (filterFormData?.employeeName) filterFields[\"employee_name\"] = filterFormData?.employeeName\r\n        // searchFilterData(filterFields, tempSalaryEmpData?.data)\r\n    }\r\n   \r\n    const handleCheckedUncheck = (e, fieldName, checkedEmp) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n    \r\n        setCreatedSalaryEmpList((prevState) => {\r\n            const updatedData = prevState?.map((item) =>\r\n                item?._id === checkedEmp?._id\r\n                    ? { ...item, [name]: type === 'checkbox' ? checked : value }\r\n                    : item\r\n            );\r\n            \r\n            const allChecked = updatedData.every((item) => item.create_salary);\r\n            setAllActiveSalaryCreate(allChecked);\r\n            return updatedData; \r\n        });\r\n    };\r\n    \r\n\r\n    /* Get Employee Salary Data */\r\n\r\n    useEffect(() => {\r\n        getEmployeeSalary()\r\n    }, [currentPage])\r\n\r\n    const getEmployeeSalary = () => {\r\n        // const payload = {\r\n        //     page: currentPage,\r\n        //     limit: 1,\r\n        // }\r\n        dispatch(payrollActions?.getEmployeeSalaryRequest())\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getEmployeeSalaryPending) {\r\n            if (getEmployeeSalaryError) {\r\n                return;\r\n            }\r\n            if (getEmployeeSalaryRes) {\r\n                if (getEmployeeSalaryRes?.code === 200) {\r\n                    setCreatedSalaryEmpList(getEmployeeSalaryRes?.data)\r\n                    setTempSalaryEmpData(getEmployeeSalaryRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getEmployeeSalaryRes,\r\n        getEmployeeSalaryError,\r\n        getEmployeeSalaryPending\r\n    ]);\r\n\r\n    const handleCheckedUnCheckedAll = (e) => {\r\n        const { checked } = e?.target;\r\n        setAllActiveSalaryCreate(checked);\r\n        setCreatedSalaryEmpList((prevState) =>\r\n            prevState.map((item) => ({\r\n                ...item,\r\n                create_salary: checked,\r\n            }))\r\n        );\r\n    };\r\n    \r\n\r\n    // useEffect(() => {\r\n    //     setCreatedSalaryEmpList((prevState) => ({\r\n    //         ...prevState,\r\n    //         data: prevState?.data?.map((item) => ({\r\n    //             ...item,\r\n    //             create_salary: allActiveSalaryCreate,\r\n    //         })),\r\n    //     }));\r\n    // }, []);\r\n\r\n    // useEffect(()=>{\r\n    //     if(currentPage >1){\r\n    //         setCreatedSalaryEmpList((prevState) => ({\r\n    //             ...prevState,\r\n    //             data: prevState?.data?.map((item) => ({\r\n    //                 ...item,\r\n    //                 create_salary: item?.create_salary ||allActiveSalaryCreate,\r\n    //             })),\r\n    //         })); \r\n    //     }\r\n    // },[currentPage])\r\n    const searchFilterData = (searchFiled, data) => {\r\n        let tempCreatedSalaryEmpData = data\r\n        if (Object.keys(data)?.length > 0) {\r\n            let filterData = tempCreatedSalaryEmpData.filter((item, index) => item?.employee_name?.includes(searchFiled?.employee_name))\r\n            setCreatedSalaryEmpList((prevState) => ({\r\n                ...prevState,\r\n                data: filterData,\r\n            }));\r\n        }\r\n        else {\r\n            setCreatedSalaryEmpList()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /* Get All Departments */\r\n    const getAllDepartments = () => {\r\n        if (!getDepartmentListRes?.data?.length) {\r\n            dispatch(departmentAction.getDepartmentListRequest());\r\n        } else {\r\n            setAllDepartments(getDepartmentListRes?.data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getDepartmentListPending) {\r\n            if (getDepartmentListError) {\r\n                return;\r\n            }\r\n            if (getDepartmentListRes) {\r\n                if (getDepartmentListRes?.code === 200) {\r\n                    const departmentResponse = getDepartmentListRes?.data\r\n                    setAllDepartments(departmentResponse)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    ]);\r\n\r\n    /* Get All Employee List*/\r\n    const getAllEmployee = () => {\r\n        dispatch(employeeActions.getAllEmployeeRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getAllEmployeePending) {\r\n            if (getAllEmployeeError) {\r\n                return;\r\n            }\r\n            if (getAllEmployeeRes) {\r\n                if (getAllEmployeeRes?.code === 200) {\r\n\r\n                    setAllEmployeeList(getAllEmployeeRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n        getAllEmployeePending\r\n    ]);\r\n\r\n    const submitCreatePayRun = () => {   \r\n        const payload = {\r\n            month:dateFormate(payMonth,\"YYYY-MM\"),\r\n            employee_ids: setPayRunEmpData()\r\n        }\r\n        dispatch(payrollActions?.addPayRunRequest(payload))\r\n    }\r\n\r\n    const setPayRunEmpData =()=>{\r\n        const createSalaryData =  createdSalaryEmpList\r\n        ?.filter(item => item?.create_salary === true)\r\n        .map(item => ({ id: item?.employee_id, is_hold: item?.is_hold })) || [];\r\n        return createSalaryData\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!addPayRunPending) {\r\n            if (addPayRunError) {\r\n                dispatch(payrollActions?.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_PAY_RUN_STORE\"))\r\n                return;\r\n            }\r\n            if (addPayRunRes) {\r\n                if (addPayRunRes?.code === 200) {\r\n                    dispatch(payrollActions?.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_PAY_RUN_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addPayRunRes,\r\n        addPayRunError,\r\n        addPayRunPending\r\n    ]);\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={`cardBox  creatNewTicketOff `}\r\n            >\r\n                <div className=\"header d-flex\">\r\n                    <Link to={\"/pay-runs\"} ><BackIcon /></Link>\r\n                    <h5 className=\"title  fs-5 fw-bold text-primary\">\r\n                        Create Pay Run </h5>\r\n\r\n                </div>\r\n                <div className=\"body \">\r\n                    <DynamicFilter\r\n                        filters={employeeFilters}\r\n                        handleFilterFormData={handleFilterFormData}\r\n                        onSubmitHandleFilter={handleFilterEmployees}\r\n                    />\r\n\r\n                    <div className='mt-3'>\r\n                        {/* <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Employees</h3> */}\r\n                        <div className=\"row ms-2\">\r\n                            <CustCheckbox\r\n                                key={\"allActiveCreatedSalary\"}\r\n                                id={`allActiveCreatedSalary`}\r\n                                checked={allActiveSalaryCreate}\r\n                                handleChange={(e) => handleCheckedUnCheckedAll(e)}\r\n                                name={\"allActiveCreatedSalary\"}\r\n                                label={\"Create Salary For All\"}\r\n                            />\r\n                        </div>\r\n                        <div style={createdSalaryEmpList?.length > 9 ? { height: \"539px\", overflowX: \"scroll\" } : {}}>\r\n                            <CustomTable\r\n                                data={createdSalaryEmpList}\r\n                                fields={createPayRunFields}\r\n                                isLoading={getEmployeeSalaryPending}\r\n                                // pagination={true}\r\n                                // currentPage={currentPage}\r\n                                // setCurrentPage={setCurrentPage}\r\n                                // totalPages={createdSalaryEmpList?.totalPages}\r\n                                // tableName={\"\"}\r\n                                // onSearch={handleSearch}\r\n                                isHeader={false}\r\n                                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                                scopedSlots={createPayRunScopedSlots}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={\"Submit\"}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitCreatePayRun()}\r\n                        // isLoading={selectedDepartmentData ? updateDepartmentPending : addDepartmentPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {addPayRunPending && <CustomSpinner isShow={addPayRunPending} size=\"lg\" />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreatePayrun\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { Input } from '../../../commanComponent'\r\n\r\nconst InstallmentTable = (props) => {\r\n    const {  installmentData, setInstallmentData,loanData } = props\r\n    const installmentFields = [\r\n        { key: 'installment', label: 'Installment' },\r\n        { key: 'payment_date', label: 'Payment Date' },\r\n        { key: 'emi_amount', label: 'Amount' },\r\n    ]\r\n\r\n    const calculateEMIAfterChanges = (amount, index) => {\r\n        let temp = installmentData;\r\n        temp[index]['amount'] = parseFloat(amount).toFixed(2);\r\n        let remEMI;\r\n        let totalEMI = 0;\r\n        temp.forEach((data, index1) => {\r\n          totalEMI = totalEMI + parseFloat(data['amount']);\r\n          if (index1 === index) {\r\n            remEMI =\r\n              parseFloat(loanData?.amount) - totalEMI >= 0\r\n                ? parseFloat(loanData?.amount) - totalEMI\r\n                : 0;\r\n            remEMI = remEMI / (temp.length - 1 - index).toFixed(2);\r\n          } else if (index1 > index) {\r\n            data['amount'] = JSON.stringify(remEMI);\r\n          }\r\n          return data;\r\n        });\r\n    \r\n        setInstallmentData(temp);\r\n      };\r\n    const installmentScopedSlots = useMemo(() => ({\r\n        amount: (item, index) => (\r\n            <span> \r\n                <Input\r\n                type=\"number\"\r\n                className=\"form-control border border-black text-center\"\r\n                id=\"instl_amt\"\r\n                placeholder=\"Installment Amount\"\r\n                onChange={e =>\r\n                    calculateEMIAfterChanges(e.target.value, index)\r\n                }\r\n                value={parseFloat(item?.amount)}\r\n            />\r\n            </span>\r\n        ),\r\n    }), [installmentData]);\r\n    return (\r\n        <React.Fragment>\r\n            <div className='text-center'>\r\n            <CustomTable\r\n                data={installmentData}\r\n                fields={installmentFields}\r\n                // isLoading={isLoading}\r\n                pagination={true}\r\n                // currentPage={currentPage}\r\n                // setCurrentPage={setCurrentPage}\r\n                // totalPages={depList?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\",marginTop:\"0px !important\" }}\r\n                scopedSlots={installmentScopedSlots}\r\n            />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default InstallmentTable\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TableDataHeader from './TableDataHeader';\r\nimport { CustomButton, CustomSpinner } from '../../globalComponents';\r\nimport TableName from './TableName';\r\nimport BlankTableError from '../../commanComponent/BlankTableError';\r\nimport CustomTd from './CustomTd';\r\nimport CustomPagination from '../../commanComponent/CustomPagination';\r\nimport { getCustomTableSN } from '../../../utils/common';\r\n\r\nconst CustomTableWithSubTable = ({ data,\r\n    fields,\r\n    isLoading,\r\n    scopedSlots = {},\r\n    onSearch,\r\n    pagination,\r\n    setCurrentPage,\r\n    totalPages,\r\n    currentPage,\r\n    tableName,\r\n    isHeader = true,\r\n    tableStyle,\r\n    isShowSubMenu\r\n}) => {\r\n    const renderTableBody = () => (\r\n        data && data.length > 0 ? (\r\n            data.map((item, index) => {\r\n                const indexValue = getCustomTableSN(index, currentPage); // Get serial number\r\n\r\n                return (\r\n                    <React.Fragment key={index}>\r\n                        {/* Main Row */}\r\n                        <tr>\r\n                            {fields.map((field) => (\r\n                                field.key !== \"sub_table\" ? <CustomTd key={field.key}\r\n                                    style={{ width: field.width || 'auto' }}\r\n                                >\r\n                                    {scopedSlots[field.key] ? scopedSlots[field.key](item, indexValue) : item[field.key]}\r\n                                </CustomTd> : <CustomTd key={field.key} style={{ width: field.width || 'auto' }} />\r\n                            ))}\r\n                        </tr>\r\n\r\n                        {/* Submenu Row */}\r\n                        {scopedSlots['sub_table'] && isShowSubMenu.includes(index) && (\r\n                            <tr>\r\n                                <td colSpan={fields.length} style={{ padding: '3px 20px', backgroundColor: '#f9f9f9' }}>\r\n                                    {scopedSlots['sub_table'](item, indexValue)}\r\n                                </td>\r\n                            </tr>\r\n\r\n                        )}\r\n                    </React.Fragment>\r\n                );\r\n            })\r\n        ) : (\r\n            !isLoading && <BlankTableError totalField={fields?.length} />\r\n        )\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"cardBox mb-3 mt-3\" style={tableStyle || {}}>\r\n            {isHeader && <div className=\"cardHead d-flex align-items-center justify-content-between\">\r\n                <TableName name={tableName} />\r\n\r\n                <div className=\"d-flex\">\r\n                    <div className=\"ticketFilter\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control fs-7\"\r\n                            placeholder=\"Filter..\"\r\n                        // onChange={e => onSearch(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <CustomButton\r\n                        text=\"Search\"\r\n                        classNames=\"btn btn-primary p-1 ms-3\"\r\n                    />\r\n                </div>\r\n            </div>}\r\n            <div className=\"table-responsive tableDiv\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <TableDataHeader tableHeader={fields} />\r\n                    </thead>\r\n                    <tbody>\r\n                        {isLoading ? <tr>\r\n                            <td colSpan={fields?.length}>\r\n                                <CustomSpinner isShow={isLoading} size=\"xl\" />\r\n                            </td>\r\n                        </tr>\r\n                            :\r\n                            renderTableBody()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            {/* Pagination Controls */}\r\n            {(totalPages > 1 && pagination) && <CustomPagination\r\n                currentPage={currentPage}\r\n                totalPages={totalPages}\r\n                onPageChange={(pageNumber) => setCurrentPage(pageNumber)}\r\n            />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomTableWithSubTable\r\n"],"names":["BackIcon","_jsx","children","_jsxs","version","id","x","y","viewBox","xmlSpace","className","style","height","width","cursor","opacity","fill","cx","cy","r","d","props","toggleAddArrearsModal","allArrearsList","isLoading","setCurrentPage","currentPage","t","useCustomTranslation","isShowSubMenu","setIsShowSubMenu","useState","updateArrearPer","isPermission","employeeArrearDetailPer","subTableFields","key","label","arrearsEmployeeFields","arrearsEmployeeScopedSlots","useMemo","sn","_","index","pay_days","item","present","bonus","_item$bonus","real","total_employee","_item$total_employee","total_employer","_item$total_employer","gross","_item$gross","ctc","_item$ctc","action","type","onClick","handleSubMenuToggle","sub_table","CustomTable","data","employees","fields","pageNo","totalPages","tableName","isHeader","scopedSlots","includes","filter","i","fontSize","CustomButton","classNames","handleClick","text","slug","CustomTableWithSubTable","pagination","tableStyle","padding","boxShadow","isOpen","toggleOpenClose","allEmployeeList","handleAddArrears","selectedArrear","addArrearsPending","errors","setErrors","selectedEmployees","setSelectedEmployees","arrearFormData","setArrearFormData","arrearName","arrearFor","payMonth","description","addArrearsScopedSlots","Input","value","name","onChange","e","addEmployeesPayDays","target","prev","map","emp","handleFromChange","fieldName","_e$target","checked","prevState","prevErrors","undefined","useEffect","arrear_for","year_mon","_Fragment","tabIndex","visibility","Label","required","placeholder","CustomError","Textarea","CustomSelect","handleChange","selectedOption","isMulti","async","validationResponse","validateSchema","addArrearsSchema","isValid","payload","submitFormData","getLoansPending","useSelector","state","payroll","toggleAddLoanModal","loansData","installmentData","setInstallmentData","empLoanDetailPer","loanFields","loanScopedSlots","start_date","dateFormate","end_date","filteredDropdownData","handleAddUpdateLoan","openLoanTypeModal","selectedLoanData","loanFormData","setLoanFormData","employee","loanType","amount","emiDuration","effectiveDate","endDate","calculateEndDate","newDate","moment","add","Number","category_value","format","calculateEmiInstallment","_loanFormData$emiDura","duration","parseInt","emi","parseFloat","toFixed","temp","date","push","installment","payment_date","emi_amount","length","installments","loan_type_name","loan_type_value","tenure_duration","loan_type","emi_duration","isDisabled","backgroundColor","color","InstallmentTable","loanData","addUpdateLoanSchema","params","employee_id","onSubmitLoanData","payRunHistoryData","payrollHistoryScopedSlots","React","payRollNotificationData","getBadgeColor","status","pay_month","Link","to","class","pay_date","dispatch","useDispatch","getAllEmployeeDetailsByPayDays","monthYear","getEmployeeDetailsByPayDaysPending","employeeScopedSlots","account_status","_id","setSelectedEmpData","payrollActions","selectedEmployeeData","currentNum","allDepartments","allDesignations","handleDepartmentByDesignation","getEmployeeDetailsByPayDays","setMonthYear","filterFormData","setFilterFormData","department","designation","month_year","handleFilterFormData","selectAllText","handleFilterEmployees","_filterFormData$depar","_filterFormData$depar2","_filterFormData$desig","_filterFormData$desig2","_filterFormData$emplo","filterFields","multiSelectIDs","icon","Icon","AttendanceFilters","EmpAttendanceTrackingTable","allEmployeeData","PayRuns","getDepartmentListRes","getDepartmentListError","getDepartmentListPending","getDesignationsByDepartmentRes","getDesignationsByDepartmentPending","getDesignationsByDepartmentError","getAllEmployeePending","getAllEmployeeRes","getAllEmployeeError","getFilteredDropdownDataError","getFilteredDropdownDataRes","getFilteredDropdownDataPending","dropdownMaster","getEmployeeDetailsByPayDaysRes","getEmployeeDetailsByPayDaysError","addArrearsRes","addArrearsError","getArrearsPending","getArrearsRes","getArrearsError","addLoansPending","addLoansRes","addLoansError","getLoansRes","getLoansError","getPayRunHistoryPending","getPayRunHistoryRes","getPayRunHistoryError","payRollNotificationPending","payRollNotificationRes","payRollNotificationError","isOpenAddArrears","setIsOpenAddArrears","isOpenAddLoans","setIsOpenAddLoans","setOpenLoanTypeModal","setAllEmployeeList","setAllDepartments","setAllDesignations","setGetAllEmployeeDetailsByPayDays","attendanceStatusData","setAttendanceStatusData","setAllArrearsList","setSelectedArrear","setFilteredDropdownData","setLoansData","setSelectedLoanData","setPayRunHistoryData","setPayRollNotificationData","attendanceTrackCurrentPage","arrearCurrentPage","loanCurrentPage","payRunHistoryCurrentPage","tableTabsRequest","onClickFun","getPayRunsData","permissionId","activePayRunsTab","activeTabPermission","getPayRollNotificationData","getAllArrearsList","getLoansData","getPayRunHistoryData","getAllDepartments","getAllEmployee","getDropdownFilteredData","employeeActions","getAllEmployeeRequest","code","_getDepartmentListRes","departmentAction","getDepartmentListRequest","departmentResponse","designationResponse","param","page","limit","getEmployeeDetailsByPayDaysRequest","getEmployeeDetailsByPayDaysData","handleClearPayrollStore","getArrearsRequest","handlePageChange","pre","category","dropdownMasterActions","getFilteredDropdownDataRequest","_getFilteredDropdownD","updateData","setFilterDropdownData","getLoansRequest","getPayRunHistoryRequest","payRollNotificationRequest","src","alt","CustomTabs","tabs","RunAttendance","AttendanceTracking","department_id","designationAction","getDesignationsByDepartmentRequest","Arrears","Loans","PayrollHistory","AddArrears","addArrearsRequest","AddLoans","addLoansRequest","CreatePayrun","useParams","getEmployeeSalaryPending","getEmployeeSalaryRes","getEmployeeSalaryError","addPayRunPending","addPayRunRes","addPayRunError","createdSalaryEmpList","setCreatedSalaryEmpList","allActiveSalaryCreate","setAllActiveSalaryCreate","tempSalaryEmpData","setTempSalaryEmpData","employeeName","createPayRunScopedSlots","hold_salary","CustCheckbox","is_hold","handleCheckedUncheck","create_salary","employeeFilters","checkedEmp","_e$target2","updatedData","allChecked","every","getEmployeeSalary","getEmployeeSalaryRequest","setPayRunEmpData","DynamicFilter","filters","onSubmitHandleFilter","handleCheckedUnCheckedAll","overflowX","submitCreatePayRun","month","employee_ids","addPayRunRequest","CustomSpinner","isShow","size","installmentScopedSlots","calculateEMIAfterChanges","remEMI","totalEMI","forEach","index1","JSON","stringify","marginTop","_ref","onSearch","TableName","TableDataHeader","tableHeader","colSpan","indexValue","getCustomTableSN","field","CustomTd","BlankTableError","totalField","CustomPagination","onPageChange","pageNumber"],"sourceRoot":""}