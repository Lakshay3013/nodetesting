{"version":3,"file":"static/js/6477.7a580325.chunk.js","mappings":"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","sources":["components/teamAttendance/TeamAttendanceTable.js","components/teamAttendance/PunchDetails.js","components/teamAttendance/TeamAttendances.js"],"sourcesContent":["import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../reuseableComponents';\r\nimport { Input, Label } from '../commanComponent';\r\nimport { dateFormate, todayDate } from '../../utils/common';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { employeeActions } from '../../core/resource/actions';\r\n\r\nconst TeamAttendanceTable = (props) => {\r\n    const { myTeamAttendancePending } = useSelector(state => state.otherAttendance)\r\n    const navigate = useNavigate()\r\n    const dispatch =useDispatch()\r\n    const {\r\n        currentPage,\r\n        setCurrentPage,\r\n        allEmployeeData,\r\n        filterDate,\r\n        setFilterDate,\r\n        toggleShowPunchDetail,\r\n        myTeamAttendanceData\r\n    } = props\r\n    const allEmployeeField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'emp_id', label: 'Emp Id' },\r\n        { key: 'name', label: 'Employee Name' },\r\n        { key: 'department_name', label: 'Department' },\r\n        { key: 'designation_name', label: 'Designation' },\r\n        { key: 'date', label: 'Date' },\r\n        { key: 'check_in', label: 'Check IN' },\r\n        { key: 'total_login_hours', label: 'Total Login Hours' },\r\n        { key: 'total_break_time', label: 'Total Break Time' },\r\n        { key: 'action', label: 'Action' }\r\n    ];\r\n\r\n    const navigateToAttendanceCalender = (item) => {\r\n        dispatch(employeeActions.selectedEmployeeData(item))\r\n        navigate(`/team-attendance/attendance-calender${item?._id? `/${item?._id}` : ''}`)   \r\n    }\r\n\r\n    const scopedSlotsAllEmployee = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        date: (item) => (\r\n            <span>{dateFormate(item?.date)}</span>\r\n        ),\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => toggleShowPunchDetail()}\r\n                        >\r\n                            Show Detail</span>\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => navigateToAttendanceCalender(item)}\r\n                        >\r\n                            Attendance Calender</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }), [allEmployeeData]);\r\n    \r\n    return (\r\n        <div className=\"cardBox myRequest mb-3\">\r\n            <div className=\"cardHead\">\r\n                <img src=\"images/myrequest-icon.svg\" alt=\"\" width=\"35\" />\r\n                <h3 className=\"ms-2\">Team Attendance</h3>\r\n            </div>\r\n            <div className='row d-flex justify-content-end'>\r\n                <div className=\"col-md-2 form-group \">\r\n                    <Input\r\n                        type=\"date\"\r\n                        value={filterDate || todayDate()}\r\n                        name=\"filterDate\"\r\n                        max={todayDate()}\r\n                        onChange={(e) => setFilterDate(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"table-responsive tableDiv text-nowrap overflowTable\">\r\n                <CustomTable\r\n                    data={myTeamAttendanceData?.data || []}\r\n                    fields={allEmployeeField}\r\n                    isLoading={myTeamAttendancePending}\r\n                    pagination={true}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    totalPages={allEmployeeData?.totalPages}\r\n                    isHeader={false}\r\n                    tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                    scopedSlots={scopedSlotsAllEmployee}\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamAttendanceTable\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../reuseableComponents';\r\nimport { dateFormate } from '../../utils/common';\r\nconst data =[]\r\nconst PunchDetails = (props) => {\r\n    const {openModel,handleOpenClose,currentPage,setCurrentPage,punchData,isLoading}=props\r\n    \r\n    const punchDataField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'emp_id', label: 'Emp Id' },\r\n        { key: 'date', label: 'Date' },\r\n        { key: 'time', label: 'time' },\r\n        { key: 'device_name', label: 'Device Name' },\r\n        { key: 'I/O', label: 'I/O' },\r\n        { key: 'platform', label: 'Platform' },\r\n        { key: 'location', label: 'Location' },\r\n    ];\r\n    const scopedSlotsPunchData = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        date: (item) => (\r\n            <span>{dateFormate(item?.date)}</span>\r\n        ),\r\n       \r\n    }), [punchData]);\r\n  return (\r\n    <>\r\n     <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"700px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">\r\n                    Punch Details \r\n                    </h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose()}\r\n                    />\r\n                </div>\r\n           \r\n\r\n                <div className=\"offcanvas-body myRequest \">\r\n                    <div className=\"formPanel\">\r\n\r\n                    <div className=\"table-responsive tableDiv text-nowrap overflowTable\">\r\n                <CustomTable\r\n                    data={data || []}\r\n                    fields={punchDataField}\r\n                    isLoading={isLoading}\r\n                    pagination={true}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    totalPages={punchData?.totalPages}\r\n                    isHeader={false}\r\n                    tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                    scopedSlots={scopedSlotsPunchData}\r\n                />\r\n\r\n            </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n  )\r\n}\r\n\r\nexport default PunchDetails\r\n","import React, { useEffect, useState } from 'react'\r\nimport TeamAttendanceTable from './TeamAttendanceTable'\r\nimport { CustomButton } from '../globalComponents'\r\nimport { Icon } from '../commanComponent'\r\nimport PunchDetails from './PunchDetails'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { otherAttendanceActions } from '../../core/resource/actions'\r\n\r\nconst TeamAttendances = () => {\r\n    const dispatch = useDispatch()\r\n    const [filterDate, setFilterDate] = useState('')\r\n    const [isShowPunchDetail, setIsShowPunchDetail] = useState(false)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [myTeamAttendanceData, setMyTeamAttendanceData] = useState({})\r\n    const {\r\n\r\n        myTeamAttendanceRes,\r\n        myTeamAttendanceError,\r\n        myTeamAttendancePending,\r\n\r\n    } = useSelector(state => state.otherAttendance)\r\n\r\n    const toggleShowPunchDetail = () => {\r\n        setIsShowPunchDetail(!isShowPunchDetail)\r\n    }\r\n    useEffect(() => {\r\n        teamAttendanceData()\r\n    }, [currentPage])\r\n\r\n    const teamAttendanceData = () => {\r\n        dispatch(otherAttendanceActions.myTeamAttendanceRequest())\r\n    }\r\n\r\n    /*Get My Team Attendance */\r\n    useEffect(() => {\r\n        if (!myTeamAttendancePending) {\r\n            if (myTeamAttendanceError) {\r\n                return;\r\n            }\r\n            if (myTeamAttendanceRes) {\r\n                if (myTeamAttendanceRes?.code === 200) {\r\n                    setMyTeamAttendanceData(myTeamAttendanceRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        myTeamAttendanceRes,\r\n        myTeamAttendanceError,\r\n        myTeamAttendancePending\r\n    ]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cardBox mb-3 createNewMrf newMrfProcess \">\r\n                <div className=\"row align-items-center d-flex justify-content-end\">\r\n                    <div className=\"col-md-3 col-xl-2\">\r\n                        <CustomButton\r\n                            classNames=\"btn btn-info w-100 mb-2\"\r\n                            text=\"Download Report\"\r\n                            icon={<Icon className=\"fa fa-download \" />}\r\n                        // handleClick={() => createMrfProcess(\"vacancy\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 col-xl-2\">\r\n                        <CustomButton\r\n                            classNames=\"btn btn-primary w-100 mb-2\"\r\n                            text=\"Refresh\"\r\n                            icon={<Icon className=\"fa fa-refresh\" />}\r\n                            handleClick={() => teamAttendanceData()}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <TeamAttendanceTable\r\n                setCurrentPage={setCurrentPage}\r\n                currentPage={currentPage}\r\n                filterDate={filterDate}\r\n                setFilterDate={setFilterDate}\r\n                toggleShowPunchDetail={toggleShowPunchDetail}\r\n                myTeamAttendanceData={myTeamAttendanceData}\r\n            />\r\n\r\n            <PunchDetails\r\n                openModel={isShowPunchDetail}\r\n                handleOpenClose={toggleShowPunchDetail}\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TeamAttendances\r\n"],"names":["props","myTeamAttendancePending","useSelector","state","otherAttendance","navigate","useNavigate","dispatch","useDispatch","currentPage","setCurrentPage","allEmployeeData","filterDate","setFilterDate","toggleShowPunchDetail","myTeamAttendanceData","scopedSlotsAllEmployee","useMemo","sn","_","index","_jsx","children","date","item","dateFormate","action","_jsxs","className","type","onClick","employeeActions","selectedEmployeeData","_id","navigateToAttendanceCalender","src","alt","width","Input","value","todayDate","name","max","onChange","e","target","CustomTable","data","fields","key","label","isLoading","pagination","totalPages","isHeader","tableStyle","padding","boxShadow","scopedSlots","openModel","handleOpenClose","punchData","scopedSlotsPunchData","_Fragment","tabIndex","style","visibility","id","TeamAttendances","useState","isShowPunchDetail","setIsShowPunchDetail","setMyTeamAttendanceData","myTeamAttendanceRes","myTeamAttendanceError","useEffect","teamAttendanceData","otherAttendanceActions","myTeamAttendanceRequest","code","CustomButton","classNames","text","icon","Icon","handleClick","TeamAttendanceTable","PunchDetails"],"sourceRoot":""}