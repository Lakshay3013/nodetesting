{"version":3,"file":"static/js/7646.fad24fa7.chunk.js","mappings":"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","sources":["components/admin/mapping/MappingHeader.js","components/admin/mapping/functions/CreateUpdateFunction.js","components/admin/mapping/functions/Functions.js","components/admin/mapping/projects/CreateUpdateProject.js","components/admin/mapping/projects/Projects.js","components/admin/mapping/skills/CreateUpdateSkill.js","components/admin/mapping/skills/Skills.js","components/admin/mapping/department/DepartmentTable.js","components/admin/mapping/department/CreateUpdateDepartment.js","components/admin/mapping/department/Department.js","components/admin/mapping/designation/CreateUpdateDesignation.js","components/admin/mapping/designation/Designation.js","components/admin/mapping/Mapping.js","components/admin/mapping/designation/DesignationTable.js"],"sourcesContent":["import React from 'react'\r\nimport { isPermission } from '../../../utils/common'\r\nconst mappingData = [\r\n    {\r\n        label: \"Department\",\r\n        value: \"department\",\r\n        totalCount: 2,\r\n        imgUrl: 'networking.png',\r\n        permissionId:\"department\"\r\n        \r\n    },\r\n    {\r\n        label: \"Functions\",\r\n        value: \"functions\",\r\n        totalCount: 2,\r\n        imgUrl: 'settings.png',\r\n         permissionId:\"functions\"\r\n    },\r\n    {\r\n        label: \"Projects\",\r\n        value: \"projects\",\r\n        totalCount: 1,\r\n        imgUrl: 'projectIcon.png',\r\n        permissionId:\"project\"  \r\n    },\r\n    {\r\n        label: \"Designation\",\r\n        value: \"designation\",\r\n        totalCount: 1,\r\n        imgUrl: 'designation.png',\r\n        permissionId:\"designation\"  \r\n    },\r\n\r\n    {\r\n        label: \"Skills\",\r\n        value: \"skills\",\r\n        totalCount: 1,\r\n        imgUrl: 'skills.png',\r\n        permissionId:\"skills\"\r\n    }\r\n\r\n\r\n]\r\nconst MappingHeader = ({setIsActiveTab,isActiveTab}) => {\r\n    const renderMappingHeaders = () => {\r\n        return (mappingData?.map((item, ind) => (\r\n        \r\n        isPermission(item?.permissionId) &&<div className=\"col-2 px-md-2 mb-3\">\r\n            <div className={`cardBox h-100 daysBox `} style={{\r\n                minHeight: '80px',\r\n                background: \"#D8E8F7\",\r\n                ...(item?.value ==isActiveTab && { border: \"1px solid #60848d\" })\r\n            }}\r\n            onClick={()=>setIsActiveTab(item?.value)}\r\n            >\r\n                <figure>\r\n                    <img width={30} src={`images/${item?.imgUrl}`} alt=\"\" />\r\n                </figure>\r\n                <div>\r\n                    <span className=\"d-block \" style={{ fontSize: \"16px\" }}>{item?.label}</span>\r\n                    <strong className=\"d-block \" style={{ float: \"inline-end\" }}>{item?.totalCount}</strong>\r\n                </div>\r\n\r\n            </div>\r\n        </div>)\r\n        ))\r\n    }\r\n    return (\r\n        <div className=\"row px-md-1 mb-3\">\r\n            {renderMappingHeaders()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MappingHeader\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { createShortName } from '../../../../utils/common'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { CustCheckbox, Input, Label } from '../../../commanComponent'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport { addUpdateFunctionSchema } from '../../../../utils/ValidationSchema'\r\nimport { useSelector } from 'react-redux'\r\nimport { useCustomTranslation } from '../../../../translation'\r\n\r\nconst CreateUpdateFunction = (props) => {\r\n    const { addFunctionPending, updateFunctionPending } = useSelector(state => state?.position)\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        selectedFunctionData,\r\n        openModel,\r\n        handleOpenClose,\r\n        allDepartments,\r\n        allEmployeeList,\r\n        handleCreateUpdateFunction\r\n    } = props\r\n    const [errors, setErrors] = useState({})\r\n    const [createUpdateFunctionFormData, setCreateUpdateFunctionFormData] = useState({\r\n        department: null,\r\n        functional_head: null,\r\n        name: '',\r\n        short_name: '',\r\n        is_active: true\r\n    })\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e.target ? e.target : { value: e };\r\n        setCreateUpdateFunctionFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            if (name === 'name') {\r\n                updatedState.short_name = createShortName(value);\r\n            }\r\n            return updatedState;\r\n        });\r\n\r\n        // Reset error for this field\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitCreateUpdateFunction = async () => {\r\n        const validationResponse = await validateSchema(addUpdateFunctionSchema, createUpdateFunctionFormData);\r\n        if (validationResponse.isValid) {\r\n            const {\r\n                department,\r\n                name,\r\n                short_name,\r\n                is_active,\r\n                functional_head,\r\n            } = createUpdateFunctionFormData\r\n            const params = {\r\n                name,\r\n                short_name,\r\n                is_active,\r\n                [\"department_id\"]: department?.value,\r\n                [\"function_head_id\"]: functional_head?.value,\r\n            }\r\n            setErrors({})\r\n\r\n            handleCreateUpdateFunction(params)\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetForm()\r\n        })\r\n    }, [openModel])\r\n\r\n    useEffect(() => {\r\n        if (selectedFunctionData) {\r\n            setCreateUpdateFunctionFormData({\r\n                department: { value: selectedFunctionData?.department_id, label: selectedFunctionData?.department_name },\r\n                functional_head: { value: selectedFunctionData?.function_head_id, label: selectedFunctionData?.function_head_name },\r\n                name: selectedFunctionData?.name,\r\n                short_name: selectedFunctionData?.short_name,\r\n                is_active: selectedFunctionData?.is_active\r\n            })\r\n        }\r\n    }, [selectedFunctionData])\r\n\r\n    const resetForm = () => {\r\n        setCreateUpdateFunctionFormData({\r\n            department: null,\r\n            name: '',\r\n            short_name: '',\r\n            functional_head: null,\r\n            is_active: true\r\n        })\r\n        setErrors({})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">\r\n                        {selectedFunctionData ? t(\"headings.updateFunction\") : t(\"headings.createFunction\")}\r\n                    </h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose()}\r\n                    />\r\n                </div>\r\n\r\n\r\n                <div className=\"offcanvas-body myRequest \">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.selectDepartment\")} required={true} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustomSelect\r\n                                        data={allDepartments}\r\n                                        placeholder={t(\"placeholders.selectDepartment\")}\r\n                                        value={createUpdateFunctionFormData?.department || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"department\")}\r\n                                        name=\"department\"\r\n                                    />\r\n                                    {errors?.department && (\r\n                                        <CustomError text={errors.department} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                           \r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.functionName\")} required={true} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.functionName\")}\r\n                                        value={createUpdateFunctionFormData?.name}\r\n                                        name=\"name\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.name && (\r\n                                        <CustomError text={errors.name} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.shortName\")} required={true} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.shortName\")}\r\n                                        value={createUpdateFunctionFormData?.short_name}\r\n                                        name=\"short_name\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.short_name && (\r\n                                        <CustomError text={errors.short_name} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.selectFunctionalHead\")} required={true} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustomSelect\r\n                                        data={allEmployeeList}\r\n                                        placeholder={t(\"placeholders.selectDesignation\")}\r\n                                        value={createUpdateFunctionFormData?.functional_head || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"functional_head\")}\r\n                                        name=\"functional_head\"\r\n                                    />\r\n                                    {errors?.functional_head && (\r\n                                        <CustomError text={errors.functional_head} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.isActive\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"is_active\"}\r\n                                        id={`is_active`}\r\n                                        // label={\"Active\"}\r\n                                        checked={createUpdateFunctionFormData?.is_active}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"is_active\"}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={selectedFunctionData ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitCreateUpdateFunction()}\r\n                            isLoading={selectedFunctionData ? updateFunctionPending : addFunctionPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateUpdateFunction\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {  departmentAction } from '../../../../core/resource/actions'\r\nimport { pagination } from '../../../../utils/Constants.config'\r\nimport ApproveRejectModal from '../../../modal/ApproveRejectModal'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport CreateUpdateFunction from './CreateUpdateFunction'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { Icon } from '../../../commanComponent'\r\nimport { dateFormate, getBadgeColor } from '../../../../utils/common'\r\nimport { isPermission } from '../../../../utils/common'\r\n\r\nconst Functions = (props) => {\r\n    const {allDepartments,allEmployeeList} =props\r\n    const dispatch = useDispatch()\r\n    const { t } = useCustomTranslation();\r\n\r\n    const {\r\n        createSubDepartmentPending,\r\n        createSubDepartmentRes,\r\n        createSubDepartmentError,\r\n\r\n        getSubDepartmentPending,\r\n        getSubDepartmentRes,\r\n        getSubDepartmentError,\r\n\r\n        updateSubDepartmentPending,\r\n        updateSubDepartmentRes,\r\n        updateSubDepartmentError,\r\n\r\n        deleteFunctionPending,\r\n        deleteFunctionRes,\r\n        deleteFunctionError,\r\n    } = useSelector(state => state.department)\r\n\r\n    const [isOpenCreateUpdateFunction, setIsOpenCreateUpdateFunction] = useState(false)\r\n    const [selectedFunctionData, setSelectedFunctionData] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [allFunctions, setAllFunctions] = useState({})\r\n    const [isShowDeleteFunctionModal, setIsShowDeleteFunctionModal] = useState(false)\r\n    const [deleteFunctionId, setDeleteFunctionId] = useState('')\r\n    const deleteSubDepartment =isPermission(\"delete_sub_department\")\r\n    const updateSubDepartment =isPermission(\"update_sub_department\")\r\n\r\n\r\n    /* Create Update Function */\r\n    const toggleCreateUpdateFunctionModal = (data) => {\r\n        if (!data) {\r\n            setSelectedFunctionData('')\r\n        } else {\r\n            setSelectedFunctionData(data)\r\n        }\r\n        setIsOpenCreateUpdateFunction(!isOpenCreateUpdateFunction)\r\n    }\r\n\r\n    const handleCreateUpdateFunction = (params) => {\r\n        if (selectedFunctionData) {\r\n            params['_id'] = selectedFunctionData?._id || selectedFunctionData?.id\r\n            dispatch(departmentAction.updateSubDepartmentRequest(params));\r\n        }\r\n        else {\r\n            dispatch(departmentAction.createSubDepartmentRequest(params));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!createSubDepartmentPending) {\r\n            if (createSubDepartmentError) {\r\n                dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_CREATE_SUB_DEPARTMENT_STORE\"))\r\n                return;\r\n            }\r\n            if (createSubDepartmentRes) {\r\n                if (createSubDepartmentRes?.code === 200) {\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_CREATE_SUB_DEPARTMENT_STORE\"))\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_GET_SUB_DEPARTMENT_STORE\"))\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_GET_ALL_SUB_DEPARTMENT_LIST_STORE\"))\r\n                    getAllFunctions()\r\n                    toggleCreateUpdateFunctionModal()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        createSubDepartmentRes,\r\n        createSubDepartmentError,\r\n        createSubDepartmentPending\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!updateSubDepartmentPending) {\r\n            if (updateSubDepartmentError) {\r\n                dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_UPDATE_SUB_DEPARTMENT_STORE\"))\r\n                return;\r\n            }\r\n            if (updateSubDepartmentRes) {\r\n                if (updateSubDepartmentRes?.code === 200) {\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_UPDATE_SUB_DEPARTMENT_STORE\"))\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_GET_SUB_DEPARTMENT_STORE\"))\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_GET_ALL_SUB_DEPARTMENT_LIST_STORE\"))\r\n                    getAllFunctions()\r\n                    toggleCreateUpdateFunctionModal()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updateSubDepartmentRes,\r\n        updateSubDepartmentError,\r\n        updateSubDepartmentPending\r\n    ]);\r\n\r\n   \r\n    useEffect(() => {\r\n        getAllFunctions()\r\n    }, [currentPage])\r\n\r\n    /* Get All Functions Data */\r\n    const getAllFunctions = () => {\r\n        const params = {\r\n            page: currentPage,\r\n            limit: pagination.limit,\r\n        }\r\n        dispatch(departmentAction.getSubDepartmentRequest(params));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getSubDepartmentPending) {\r\n            if (getSubDepartmentError) {\r\n                return;\r\n            }\r\n            if (getSubDepartmentRes) {\r\n                if (getSubDepartmentRes?.code === 200) {\r\n                    const getAllFunctionData = getSubDepartmentRes?.data\r\n                    setAllFunctions(getAllFunctionData)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getSubDepartmentRes,\r\n        getSubDepartmentError,\r\n        getSubDepartmentPending\r\n    ]);\r\n\r\n\r\n    /*  Delete Function   */\r\n    const handleFunctionDeleteModal = (id) => {\r\n        if (id) {\r\n            setDeleteFunctionId(id)\r\n        }\r\n        setIsShowDeleteFunctionModal(!isShowDeleteFunctionModal)\r\n    }\r\n\r\n    const handleDeleteFunction = (type) => {\r\n        if (type) {\r\n            const params = {\r\n                _id: deleteFunctionId\r\n            }\r\n\r\n            // dispatch(departmentAction?.deleteFunctionRequest(params))\r\n\r\n        } else {\r\n            handleFunctionDeleteModal()\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!deleteFunctionPending) {\r\n            if (deleteFunctionError) {\r\n                // dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_DELETE_FUNCTION_STORE\"))\r\n                return;\r\n            }\r\n            if (deleteFunctionRes) {\r\n                if (deleteFunctionRes?.code === 200) {\r\n                    handleFunctionDeleteModal()\r\n                    if (currentPage > 1 && allFunctions?.data?.length === 1) {\r\n                        setCurrentPage((pre => pre -= 1))\r\n                    } else {\r\n                        getAllFunctions()\r\n                    }\r\n                    // dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_DELETE_FUNCTION_STORE\"))\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        deleteFunctionRes,\r\n        deleteFunctionError,\r\n        deleteFunctionPending\r\n    ]);\r\n\r\n    const scopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        is_active: item => (\r\n            <span\r\n                className={`badge ${getBadgeColor(item.is_active ? \"Active\" : \"Inactive\")}`}\r\n            >\r\n                {item.is_active ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n        ),\r\n        created_at: item => dateFormate(item.created_at),\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    {updateSubDepartment &&<li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => toggleCreateUpdateFunctionModal(item)}\r\n                        >\r\n                            <Icon className={\"bi bi-pencil-square me-1\"} />Update</span>\r\n                    </li>}\r\n                    {/* {item?.emp_count === 0 && <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => handleFunctionDeleteModal(item._id)}\r\n                        >\r\n                            <Icon className={\"bi bi-trash me-1\"} />Delete</span>\r\n                    </li>} */}\r\n                </ul>\r\n            </div>\r\n\r\n        )\r\n    }), [toggleCreateUpdateFunctionModal]);\r\n\r\n\r\n    const fields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'department_name', label: 'Departments' },\r\n        { key: 'name', label: 'Function Name' },\r\n        { key: 'short_name', label: 'Short Name' },\r\n        { key: 'emp_count', label: 'Total Employees' },\r\n        { key: 'is_active', label: 'Status' },\r\n        { key: 'created_at', label: 'Created At' },\r\n        ((updateSubDepartment ||deleteSubDepartment) &&{ key: 'action', label: 'Action' })\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <div className='cardBox myRequest mb-3 employeeHistory'>\r\n                <div className=\"d-flex align-items-center justify-content-between gap-3\">\r\n                    \r\n                    <div className=\"cardHead d-flex\">\r\n                        <img src=\"images/myrequest-icon.svg\" alt=\"\" width={35} />\r\n                        <h4 className=\"ms-2 \">Functions</h4>\r\n                    </div>\r\n                    <div>\r\n                        <CustomButton\r\n                            classNames={\"btn btn-primary gradientBg\"}\r\n                            handleClick={() => toggleCreateUpdateFunctionModal()}\r\n                            text={t(\"btns.createNewFunction\")}\r\n                            icon={<Icon className={\"fa fa-plus\"}/>}\r\n                            slug={\"create_sub_department\"}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n                <CustomTable\r\n                    data={allFunctions?.data}\r\n                    fields={fields}\r\n                    isLoading={getSubDepartmentPending}\r\n                    pagination={true}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    totalPages={allFunctions?.totalPages}\r\n                    isHeader={false}\r\n                    tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                    scopedSlots={scopedSlots}\r\n                />\r\n            </div>\r\n\r\n            <CreateUpdateFunction\r\n                openModel={isOpenCreateUpdateFunction}\r\n                handleOpenClose={toggleCreateUpdateFunctionModal}\r\n                handleCreateUpdateFunction={handleCreateUpdateFunction}\r\n                selectedFunctionData={selectedFunctionData}\r\n                allDepartments={allDepartments}\r\n                allEmployeeList={allEmployeeList}\r\n            />\r\n            {isShowDeleteFunctionModal && (\r\n                <ApproveRejectModal\r\n                    onApproveReject={handleDeleteFunction}\r\n                    isShow={isShowDeleteFunctionModal}\r\n                    desc={t(\"alerts.deletePopup.desc\").replace('$1', \"Function\")}\r\n                    btnRightLoading={deleteFunctionPending}\r\n                    btnTextRight={t(\"btns.delete\")}\r\n                    btnTextLeft={t(\"btns.cancel\")}\r\n\r\n                />)\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Functions\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { createShortName } from '../../../../utils/common'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { CustCheckbox, Input, Label } from '../../../commanComponent'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport { addUpdateProjectSchema } from '../../../../utils/ValidationSchema'\r\nimport { useSelector } from 'react-redux'\r\nimport { useCustomTranslation } from '../../../../translation'\r\n\r\nconst CreateUpdateProject = (props) => {\r\n    const { createProjectPending, updateProjectPending } = useSelector(state => state?.department)\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        selectedProjectData,\r\n        openModel,\r\n        handleOpenClose,\r\n        allDepartments,\r\n        allEmployeeList,\r\n        getSubDepartmentByDepartment,\r\n        subDepartmentByDepartmentData,\r\n        handleCreateUpdateProject\r\n    } = props\r\n    const [errors, setErrors] = useState({})\r\n    const [createUpdateProjectFormData, setCreateUpdateProjectFormData] = useState({\r\n        department: null,\r\n        sub_department:null,\r\n        project_manager:null,\r\n        function_head: null,\r\n        name: '',\r\n        short_name: '',\r\n        is_active: true\r\n    })\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e.target ? e.target : { value: e };\r\n        if (name === 'department') {\r\n            getSubDepartmentByDepartment(value?.value);\r\n        }\r\n        setCreateUpdateProjectFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            if (name === 'name') {\r\n                updatedState.short_name = createShortName(value);\r\n            }\r\n            return updatedState;\r\n        });\r\n\r\n        // Reset error for this field\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitCreateUpdateProject = async () => {\r\n        const validationResponse = await validateSchema(addUpdateProjectSchema, createUpdateProjectFormData);\r\n        if (validationResponse.isValid) {\r\n            const {\r\n                department,\r\n                name,\r\n                short_name,\r\n                is_active,\r\n                sub_department,\r\n                project_manager,\r\n                function_head,\r\n            } = createUpdateProjectFormData\r\n            const params = {\r\n                name,\r\n                short_name,\r\n                [\"department_id\"]: department?.value,\r\n                [\"sub_department_id\"]: sub_department?.value,\r\n                project_manager_id:project_manager?.value,\r\n                function_head_id:function_head?.value,\r\n                is_active,\r\n            }\r\n            setErrors({})\r\n            handleCreateUpdateProject(params)\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetForm()\r\n        })\r\n    }, [openModel])\r\n\r\n    useEffect(() => {\r\n        if (selectedProjectData) {\r\n            setCreateUpdateProjectFormData({\r\n                department: { value: selectedProjectData?.department_id, label: selectedProjectData?.department_name },\r\n                function_head: { value: selectedProjectData?.function_head_id, label: selectedProjectData?.function_head_name },\r\n                name: selectedProjectData?.name,\r\n                short_name: selectedProjectData?.short_name,\r\n                is_active: selectedProjectData?.is_active,\r\n                sub_department:{ value: selectedProjectData?.function_id, label: selectedProjectData?.function_name },\r\n                project_manager: { value: selectedProjectData?.project_manager_id, label: selectedProjectData?.project_manager_name },\r\n            })\r\n        }\r\n    }, [selectedProjectData])\r\n\r\n    const resetForm = () => {\r\n        setCreateUpdateProjectFormData({\r\n            department: null,\r\n            sub_department:null,\r\n            project_manager:null,\r\n            function_head: null,\r\n            name: '',\r\n            short_name: '',\r\n            is_active: true\r\n        })\r\n        setErrors({})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">\r\n                        {selectedProjectData ? t(\"headings.updateProject\") : t(\"headings.createProject\")}\r\n                    </h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose()}\r\n                    />\r\n                </div>\r\n\r\n\r\n                <div className=\"offcanvas-body myRequest \">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <Label text={t(\"labels.selectDepartment\")} required={true} />\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustomSelect\r\n                                        data={allDepartments}\r\n                                        placeholder={t(\"placeholders.selectDepartment\")}\r\n                                        value={createUpdateProjectFormData?.department || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"department\")}\r\n                                        name=\"department\"\r\n                                    />\r\n                                    {errors?.department && (\r\n                                        <CustomError text={errors.department} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <Label text={t(\"labels.selectFunction\")} required={true} />\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustomSelect\r\n                                        data={subDepartmentByDepartmentData}\r\n                                        placeholder={t(\"placeholders.selectFunction\")}\r\n                                        value={createUpdateProjectFormData?.sub_department || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"sub_department\")}\r\n                                        name=\"sub_department\"\r\n                                    />\r\n                                    {errors?.sub_department && (\r\n                                        <CustomError text={errors.sub_department} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <Label text={t(\"labels.projectName\")} required={true} />\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.projectName\")}\r\n                                        value={createUpdateProjectFormData?.name}\r\n                                        name=\"name\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.name && (\r\n                                        <CustomError text={errors.name} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <Label text={t(\"labels.shortName\")} required={true} />\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.shortName\")}\r\n                                        value={createUpdateProjectFormData?.short_name}\r\n                                        name=\"short_name\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.short_name && (\r\n                                        <CustomError text={errors.short_name} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <Label text={t(\"labels.projectManager\")} required={true} />\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustomSelect\r\n                                        data={allEmployeeList}\r\n                                        placeholder={t(\"placeholders.projectManager\")}\r\n                                        value={createUpdateProjectFormData?.project_manager || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"project_manager\")}\r\n                                        name=\"project_manager\"\r\n                                    />\r\n                                    {errors?.project_manager && (\r\n                                        <CustomError text={errors.project_manager} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <Label text={t(\"labels.functionalManager\")} required={true} />\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustomSelect\r\n                                        data={allEmployeeList}\r\n                                        placeholder={t(\"placeholders.functionalManager\")}\r\n                                        value={createUpdateProjectFormData?.function_head || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"function_head\")}\r\n                                        name=\"function_head\"\r\n                                    />\r\n                                    {errors?.function_head && (\r\n                                        <CustomError text={errors.function_head} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.isActive\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"is_active\"}\r\n                                        id={`is_active`}\r\n                                        // label={\"Active\"}\r\n                                        checked={createUpdateProjectFormData?.is_active}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"is_active\"}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={selectedProjectData ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitCreateUpdateProject()}\r\n                            isLoading={selectedProjectData ? updateProjectPending : createProjectPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateUpdateProject\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { departmentAction } from '../../../../core/resource/actions'\r\nimport { pagination } from '../../../../utils/Constants.config'\r\nimport ApproveRejectModal from '../../../modal/ApproveRejectModal'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport CreateUpdateProject from './CreateUpdateProject'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { Icon } from '../../../commanComponent'\r\nimport { dateFormate, getBadgeColor } from '../../../../utils/common'\r\nimport { isPermission } from '../../../../utils/common'\r\n\r\nconst Projects = (props) => {\r\n    const { allDepartments,allEmployeeList,getSubDepartmentByDepartment ,subDepartmentByDepartmentData} = props\r\n    const dispatch = useDispatch()\r\n    const { t } = useCustomTranslation();\r\n\r\n    const {\r\n        createProjectPending,\r\n        createProjectRes,\r\n        createProjectError,\r\n\r\n        addProjectPending,\r\n        getProjectRes,\r\n        getProjectError,\r\n\r\n        updateProjectPending,\r\n        updateProjectRes,\r\n        updateProjectError,\r\n\r\n        deleteProjectPending,\r\n        deleteProjectRes,\r\n        deleteProjectError,\r\n    } = useSelector(state => state.department)\r\n\r\n    const [isOpenCreateUpdateProject, setIsOpenCreateUpdateProject] = useState(false)\r\n    const [selectedProjectData, setSelectedProjectData] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [allProjects, setAllProjects] = useState({})\r\n    const [isShowDeleteProjectModal, setIsShowDeleteProjectModal] = useState(false)\r\n    const [deleteProjectId, setDeleteProjectId] = useState('')\r\n    const updateProject =isPermission(\"update_project\")\r\n    const deleteProject =isPermission(\"delete_project\")\r\n\r\n\r\n    /* Create Update Project */\r\n    const toggleCreateUpdateProjectModal = (data) => {\r\n        if (!data) {\r\n            setSelectedProjectData('')\r\n        } else {\r\n            setSelectedProjectData(data)\r\n        }\r\n        setIsOpenCreateUpdateProject(!isOpenCreateUpdateProject)\r\n    }\r\n\r\n    const handleCreateUpdateProject = (params) => {\r\n        if (selectedProjectData) {\r\n            params['_id'] = selectedProjectData?._id || selectedProjectData?.id\r\n            dispatch(departmentAction.updateProjectRequest(params));\r\n        }\r\n        else {\r\n            dispatch(departmentAction.createProjectRequest(params));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!createProjectPending) {\r\n            if (createProjectError) {\r\n                dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_CREATE_PROJECT_STORE\"))\r\n                return;\r\n            }\r\n            if (createProjectRes) {\r\n                if (createProjectRes?.code === 200) {\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_CREATE_PROJECT_STORE\"))\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_GET_ALL_PROJECT_LIST_STORE\"))\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_GET_PROJECT_STORE\"))\r\n                    toggleCreateUpdateProjectModal()\r\n                    getAllProjects()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        createProjectRes,\r\n        createProjectError,\r\n        createProjectPending\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!updateProjectPending) {\r\n            if (updateProjectError) {\r\n                dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_UPDATE_PROJECT_STORE\"))\r\n                return;\r\n            }\r\n            if (updateProjectRes) {\r\n                if (updateProjectRes?.code === 200) {\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_UPDATE_PROJECT_STORE\"))\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_CREATE_PROJECT_STORE\"))\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_GET_PROJECT_STORE\"))\r\n                    getAllProjects()\r\n                    toggleCreateUpdateProjectModal()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updateProjectRes,\r\n        updateProjectError,\r\n        updateProjectPending\r\n    ]);\r\n\r\n\r\n    useEffect(() => {\r\n        getAllProjects()\r\n    }, [currentPage])\r\n\r\n    /* Get All Projects Data */\r\n    const getAllProjects = () => {\r\n        const params = {\r\n            page: currentPage,\r\n            limit: pagination.limit,\r\n        }\r\n        dispatch(departmentAction.getProjectRequest(params));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!addProjectPending) {\r\n            if (getProjectError) {\r\n                return;\r\n            }\r\n            if (getProjectRes) {\r\n                if (getProjectRes?.code === 200) {\r\n                    const getAllProjectData = getProjectRes?.data\r\n                    setAllProjects(getAllProjectData)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getProjectRes,\r\n        getProjectError,\r\n        addProjectPending\r\n    ]);\r\n\r\n\r\n    /*  Delete Project   */\r\n    const handleProjectDeleteModal = (id) => {\r\n        if (id) {\r\n            setDeleteProjectId(id)\r\n        }\r\n        setIsShowDeleteProjectModal(!isShowDeleteProjectModal)\r\n    }\r\n\r\n    const handleDeleteProject = (type) => {\r\n        if (type) {\r\n            const params = {\r\n                _id: deleteProjectId\r\n            }\r\n\r\n            // dispatch(departmentAction?.deleteProjectRequest(params))\r\n\r\n        } else {\r\n            handleProjectDeleteModal()\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!deleteProjectPending) {\r\n            if (deleteProjectError) {\r\n                // dispatch(departmentAction.handleClearProjectStore(\"HANDLE_CLEAR_DELETE_FUNCTION_STORE\"))\r\n                return;\r\n            }\r\n            if (deleteProjectRes) {\r\n                if (deleteProjectRes?.code === 200) {\r\n                    handleProjectDeleteModal()\r\n                    if (currentPage > 1 && allProjects?.data?.length === 1) {\r\n                        setCurrentPage((pre => pre -= 1))\r\n                    } else {\r\n                        getAllProjects()\r\n                    }\r\n                    // dispatch(departmentAction.handleClearProjectStore(\"HANDLE_CLEAR_DELETE_FUNCTION_STORE\"))\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        deleteProjectRes,\r\n        deleteProjectError,\r\n        deleteProjectPending\r\n    ]);\r\n\r\n    const scopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        is_active: item => (\r\n            <span\r\n                className={`badge ${getBadgeColor(item.is_active ? \"Active\" : \"Inactive\")}`}\r\n            >\r\n                {item.is_active ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n        ),\r\n        created_at: item => dateFormate(item.created_at),\r\n        action: item => (\r\n            \r\n            (item?.emp_count === 0||updateProject)\r\n            && <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    {updateProject &&<li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => toggleCreateUpdateProjectModal(item)}\r\n                        >\r\n                            <Icon className={\"bi bi-pencil-square me-1\"} />Update</span>\r\n                    </li>}\r\n                    {item?.emp_count === 0&&deleteProject && <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => handleProjectDeleteModal(item._id)}\r\n                        >\r\n                            <Icon className={\"bi bi-trash me-1\"} />Delete</span>\r\n                    </li>}\r\n                </ul>\r\n            </div>\r\n\r\n        )\r\n    }), [toggleCreateUpdateProjectModal]);\r\n\r\n\r\n    const fields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'department_name', label: 'Departments' },\r\n        { key: 'name', label: 'Project Name' },\r\n        { key: 'short_name', label: 'Short Name' },\r\n        { key: 'emp_count', label: 'Total Employees' },\r\n        { key: 'is_active', label: 'Status' },\r\n        { key: 'created_at', label: 'Created At' },\r\n       ((updateProject||deleteProject)&& { key: 'action', label: 'Action' })\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <div className='cardBox myRequest mb-3 employeeHistory'>\r\n                <div className=\"d-flex align-items-center justify-content-between gap-3\">\r\n                    <div className=\"cardHead d-flex\">\r\n                        <img src=\"images/myrequest-icon.svg\" alt=\"\" width={35} />\r\n                        <h4 className=\"ms-2 \">Projects</h4>\r\n                    </div>\r\n                    <div>\r\n                        <CustomButton\r\n                            classNames={\"btn btn-primary gradientBg\"}\r\n                            handleClick={() => toggleCreateUpdateProjectModal()}\r\n                            text={t(\"btns.createNewProject\")}\r\n                            icon={<Icon className={\"fa fa-plus\"} />}\r\n                            slug={\"create_project\"}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n                <CustomTable\r\n                    data={allProjects?.data}\r\n                    fields={fields}\r\n                    isLoading={addProjectPending}\r\n                    pagination={true}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    totalPages={allProjects?.totalPages}\r\n                    isHeader={false}\r\n                    tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                    scopedSlots={scopedSlots}\r\n                />\r\n            </div>\r\n\r\n            <CreateUpdateProject\r\n                openModel={isOpenCreateUpdateProject}\r\n                handleOpenClose={toggleCreateUpdateProjectModal}\r\n                handleCreateUpdateProject={handleCreateUpdateProject}\r\n                selectedProjectData={selectedProjectData}\r\n                allDepartments={allDepartments}\r\n                allEmployeeList={allEmployeeList}\r\n                getSubDepartmentByDepartment={getSubDepartmentByDepartment}\r\n                subDepartmentByDepartmentData={subDepartmentByDepartmentData}\r\n            />\r\n            {isShowDeleteProjectModal && (\r\n                <ApproveRejectModal\r\n                    onApproveReject={handleDeleteProject}\r\n                    isShow={isShowDeleteProjectModal}\r\n                    desc={t(\"alerts.deletePopup.desc\").replace('$1', \"Project\")}\r\n                    btnRightLoading={deleteProjectPending}\r\n                    btnTextRight={t(\"btns.delete\")}\r\n                    btnTextLeft={t(\"btns.cancel\")}\r\n\r\n                />)\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Projects\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { createShortName } from '../../../../utils/common'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { CustCheckbox, Input, Label } from '../../../commanComponent'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport { addUpdateSkillSchema } from '../../../../utils/ValidationSchema'\r\nimport { useSelector } from 'react-redux'\r\nimport { useCustomTranslation } from '../../../../translation'\r\n\r\nconst CreateUpdateSkill = (props) => {\r\n    const { createSkillPending, updateSkillPending } = useSelector(state => state?.department)\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        selectedSkillData,\r\n        openModel,\r\n        handleOpenClose,\r\n        handleCreateUpdateSkill\r\n    } = props\r\n    const [errors, setErrors] = useState({})\r\n    const [createUpdateSkillFormData, setCreateUpdateSkillFormData] = useState({\r\n        name: '',\r\n        short_name: '',\r\n        is_active: true\r\n    })\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e.target ? e.target : { value: e };\r\n        setCreateUpdateSkillFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            if (name === 'name') {\r\n                updatedState.short_name = createShortName(value);\r\n            }\r\n            return updatedState;\r\n        });\r\n\r\n        // Reset error for this field\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitCreateUpdateSkill = async () => {\r\n        const validationResponse = await validateSchema(addUpdateSkillSchema, createUpdateSkillFormData);\r\n        if (validationResponse.isValid) {\r\n            const {\r\n                name,\r\n                short_name,\r\n                is_active,\r\n            } = createUpdateSkillFormData\r\n            const params = {\r\n                name,\r\n                short_name,\r\n                is_active,\r\n            }\r\n            setErrors({})\r\n            handleCreateUpdateSkill(params)\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetForm()\r\n        })\r\n    }, [openModel])\r\n\r\n    useEffect(() => {\r\n        if (selectedSkillData) {\r\n            setCreateUpdateSkillFormData({\r\n                name: selectedSkillData?.name,\r\n                short_name: selectedSkillData?.short_name,\r\n                is_active: selectedSkillData?.is_active\r\n            })\r\n        }\r\n    }, [selectedSkillData])\r\n\r\n    const resetForm = () => {\r\n        setCreateUpdateSkillFormData({\r\n            name: '',\r\n            short_name: '',\r\n            is_active: true\r\n        })\r\n        setErrors({})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">\r\n                        {selectedSkillData ? t(\"headings.updateSkill\") : t(\"headings.createSkill\")}\r\n                    </h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose()}\r\n                    />\r\n                </div>\r\n\r\n\r\n                <div className=\"offcanvas-body myRequest \">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"row\">\r\n\r\n\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.skillName\")} required={true} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.skillName\")}\r\n                                        value={createUpdateSkillFormData?.name}\r\n                                        name=\"name\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.name && (\r\n                                        <CustomError text={errors.name} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.shortName\")} required={true} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.shortName\")}\r\n                                        value={createUpdateSkillFormData?.short_name}\r\n                                        name=\"short_name\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.short_name && (\r\n                                        <CustomError text={errors.short_name} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.isActive\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"is_active\"}\r\n                                        id={`is_active`}\r\n                                        // label={\"Active\"}\r\n                                        checked={createUpdateSkillFormData?.is_active}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"is_active\"}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={selectedSkillData ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitCreateUpdateSkill()}\r\n                            isLoading={selectedSkillData ? updateSkillPending : createSkillPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateUpdateSkill\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {  departmentAction } from '../../../../core/resource/actions'\r\nimport { pagination } from '../../../../utils/Constants.config'\r\nimport ApproveRejectModal from '../../../modal/ApproveRejectModal'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport CreateUpdateSkill from './CreateUpdateSkill'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { Icon } from '../../../commanComponent'\r\nimport { dateFormate, getBadgeColor } from '../../../../utils/common'\r\nimport { isPermission } from '../../../../utils/common'\r\n\r\nconst Skills = (props) => {\r\n    const {allDepartments} =props\r\n    const dispatch = useDispatch()\r\n    const { t } = useCustomTranslation();\r\n\r\n    const {\r\n        createSkillPending,\r\n        createSkillRes,\r\n        createSkillError,\r\n\r\n        getSkillPending,\r\n        getSkillRes,\r\n        getSkillError,\r\n\r\n        updateSkillPending,\r\n        updateSkillRes,\r\n        updateSkillError,\r\n\r\n        deleteSkillPending,\r\n        deleteSkillRes,\r\n        deleteSkillError,\r\n    } = useSelector(state => state.department)\r\n\r\n    const [isOpenCreateUpdateSkill, setIsOpenCreateUpdateSkill] = useState(false)\r\n    const [selectedSkillData, setSelectedSkillData] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [allSkills, setAllSkills] = useState({})\r\n    const [isShowDeleteSkillModal, setIsShowDeleteSkillModal] = useState(false)\r\n    const [deleteSkillId, setDeleteSkillId] = useState('')\r\n    const updateSkillPer =isPermission(\"update_skill\")\r\n\r\n    /* Create Update Skill */\r\n    const toggleCreateUpdateSkillModal = (data) => {\r\n        if (!data) {\r\n            setSelectedSkillData('')\r\n        } else {\r\n            setSelectedSkillData(data)\r\n        }\r\n        setIsOpenCreateUpdateSkill(!isOpenCreateUpdateSkill)\r\n    }\r\n\r\n    const handleCreateUpdateSkill = (params) => {\r\n        if (selectedSkillData) {\r\n            params['_id'] = selectedSkillData?._id || selectedSkillData?.id\r\n            dispatch(departmentAction.updateSkillRequest(params));\r\n        }\r\n        else {\r\n            dispatch(departmentAction.createSkillRequest(params));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!createSkillPending) {\r\n            if (createSkillError) {\r\n                dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_CREATE_SKILL_STORE\"))\r\n                return;\r\n            }\r\n            if (createSkillRes) {\r\n                if (createSkillRes?.code === 200) {\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_CREATE_SKILL_STORE\"))\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_GET_SKILL_STORE\"))\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_GET_ALL_SKILL_LIST_STORE\"))\r\n                    toggleCreateUpdateSkillModal()\r\n                    getAllSkills()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        createSkillPending,\r\n        createSkillRes,\r\n        createSkillError,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!updateSkillPending) {\r\n            if (updateSkillError) {\r\n                dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_UPDATE_SKILL_STORE\"))\r\n                return;\r\n            }\r\n            if (updateSkillRes) {\r\n                if (updateSkillRes?.code === 200) {\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_UPDATE_SKILL_STORE\"))\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_GET_SKILL_STORE\"))\r\n                    dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_GET_ALL_SKILL_LIST_STORE\"))\r\n                    getAllSkills()\r\n                    toggleCreateUpdateSkillModal()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updateSkillRes,\r\n        updateSkillError,\r\n        updateSkillPending\r\n    ]);\r\n\r\n   \r\n    useEffect(() => {\r\n        getAllSkills()\r\n    }, [currentPage])\r\n\r\n    /* Get All Skills Data */\r\n    const getAllSkills = () => {\r\n        const params = {\r\n            page: currentPage,\r\n            limit: pagination.limit,\r\n        }\r\n        dispatch(departmentAction.getSkillRequest(params));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getSkillPending) {\r\n            if (getSkillError) {\r\n                return;\r\n            }\r\n            if (getSkillRes) {\r\n                if (getSkillRes?.code === 200) {\r\n                    const getSkillData = getSkillRes?.data\r\n                    setAllSkills(getSkillData)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getSkillPending,\r\n        getSkillRes,\r\n        getSkillError,\r\n    ]);\r\n\r\n\r\n    /*  Delete Skill   */\r\n    const handleSkillDeleteModal = (id) => {\r\n        if (id) {\r\n            setDeleteSkillId(id)\r\n        }\r\n        setIsShowDeleteSkillModal(!isShowDeleteSkillModal)\r\n    }\r\n\r\n    const handleDeleteSkill = (type) => {\r\n        if (type) {\r\n            const params = {\r\n                _id: deleteSkillId\r\n            }\r\n            // dispatch(departmentAction?.deleteSkillRequest(params))\r\n\r\n        } else {\r\n            handleSkillDeleteModal()\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!deleteSkillPending) {\r\n            if (deleteSkillError) {\r\n                // dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_DELETE_FUNCTION_STORE\"))\r\n                return;\r\n            }\r\n            if (deleteSkillRes) {\r\n                if (deleteSkillRes?.code === 200) {\r\n                    handleSkillDeleteModal()\r\n                    // if (currentPage > 1 && allSkills?.data?.length === 1) {\r\n                    //     setCurrentPage((pre => pre -= 1))\r\n                    // } else {\r\n                    //     // getAllSkills()\r\n                    // }\r\n                    // dispatch(departmentAction.handleClearDepartmentStore(\"HANDLE_CLEAR_DELETE_FUNCTION_STORE\"))\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        deleteSkillRes,\r\n        deleteSkillError,\r\n        deleteSkillPending\r\n    ]);\r\n\r\n    const scopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        is_active: item => (\r\n            <span\r\n                className={`badge ${getBadgeColor(item.is_active ? \"Active\" : \"Inactive\")}`}\r\n            >\r\n                {item.is_active ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n        ),\r\n        created_at: item => dateFormate(item.created_at),\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                  {updateSkillPer &&  <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => toggleCreateUpdateSkillModal(item)}\r\n                        >\r\n                            <Icon className={\"bi bi-pencil-square me-1\"} />Update</span>\r\n                    </li>}\r\n                    {/* {item?.emp_count === 0 && <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => handleSkillDeleteModal(item._id)}\r\n                        >\r\n                            <Icon className={\"bi bi-trash me-1\"} />Delete</span>\r\n                    </li>} */}\r\n                </ul>\r\n            </div>\r\n\r\n        )\r\n    }), [toggleCreateUpdateSkillModal]);\r\n\r\n\r\n    const fields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'name', label: 'Skill Name' },\r\n        { key: 'short_name', label: 'Short Name' },\r\n        { key: 'is_active', label: 'Status' },\r\n        { key: 'created_at', label: 'Created At' },\r\n       (updateSkillPer && { key: 'action', label: 'Action' })\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <div className='cardBox myRequest mb-3 employeeHistory'>\r\n                <div className=\"d-flex align-items-center justify-content-between gap-3\">\r\n                    <div className=\"cardHead d-flex\">\r\n                        <img src=\"images/myrequest-icon.svg\" alt=\"\" width={35} />\r\n                        <h4 className=\"ms-2 \">Skills</h4>\r\n                    </div>\r\n                    <div>\r\n                        <CustomButton\r\n                            classNames={\"btn btn-primary gradientBg\"}\r\n                            handleClick={() => toggleCreateUpdateSkillModal()}\r\n                            text={t(\"btns.createNewSkill\")}\r\n                            icon={<Icon className={\"fa fa-plus\"}/>}\r\n                            slug={\"create_skill\"}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n                <CustomTable\r\n                    data={allSkills?.data}\r\n                    fields={fields}\r\n                    isLoading={getSkillPending}\r\n                    pagination={true}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={(no)=>setCurrentPage(no)}\r\n                    totalPages={allSkills?.totalPages}\r\n                    isHeader={false}\r\n                    tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                    scopedSlots={scopedSlots}\r\n                />\r\n            </div>\r\n\r\n           { isOpenCreateUpdateSkill &&<CreateUpdateSkill\r\n                openModel={isOpenCreateUpdateSkill}\r\n                handleOpenClose={toggleCreateUpdateSkillModal}\r\n                handleCreateUpdateSkill={handleCreateUpdateSkill}\r\n                selectedSkillData={selectedSkillData}\r\n                allDepartments={allDepartments}\r\n            />}\r\n            {isShowDeleteSkillModal && (\r\n                <ApproveRejectModal\r\n                    onApproveReject={handleDeleteSkill}\r\n                    isShow={isShowDeleteSkillModal}\r\n                    desc={t(\"alerts.deletePopup.desc\").replace('$1', \"Skill\")}\r\n                    btnRightLoading={deleteSkillPending}\r\n                    btnTextRight={t(\"btns.delete\")}\r\n                    btnTextLeft={t(\"btns.cancel\")}\r\n\r\n                />)\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skills\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport moment from 'moment-timezone'\r\nimport CustomTable from '../../../reuseableComponents/customTable/CustomTable'\r\nimport { getBadgeColor } from '../../../../utils/common'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { Icon } from '../../../commanComponent'\r\nimport { isPermission } from '../../../../utils/common'\r\nconst DepartmentTable = (props) => {\r\n  const { t } = useCustomTranslation()\r\n  const {\r\n    departmentList,\r\n    isLoading,\r\n    setSelectedDepartmentData,\r\n    toggleDepartmentModal,\r\n    toggleDeleteModal,\r\n    currentPage,\r\n    setCurrentPage,\r\n  } = props\r\n  const [depList, setDepList] = useState(departmentList)\r\n  const permissionUpdateDep =isPermission(\"update_department\")\r\n  const permissionDeleteDep =isPermission(\"delete_department\")\r\n\r\n\r\n  const updateDepartment = (data) => {\r\n    toggleDepartmentModal(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDepList(departmentList)\r\n  }, [departmentList])\r\n\r\n\r\n  const scopedSlots = useMemo(() => ({\r\n    sn: (_, index) => (\r\n      <span>{index + 1}</span>\r\n    ),\r\n    is_active: item => (\r\n      <span\r\n        className={`badge ${getBadgeColor(item.is_active ? \"Active\" : \"Inactive\")}`}\r\n      >\r\n        {item.is_active ? \"Active\" : \"Inactive\"}\r\n      </span>\r\n    ),\r\n    created_at: item => moment(item.created_at).format(\"DD-MM-YYYY\"),\r\n    action: item => (\r\n      (item?.emp_count === 0||permissionUpdateDep)&&  <div className=\"btn-group actionDrp\">\r\n        <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n          data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n          <i className=\"bi bi-three-dots-vertical\"></i>\r\n        </button>\r\n        <ul className=\"dropdown-menu\">\r\n          {permissionUpdateDep&&<li>\r\n            <span className=\"dropdown-item\"\r\n              onClick={() => {\r\n                updateDepartment(item);\r\n              }}\r\n            >\r\n              <Icon className={\"bi bi-pencil-square me-1\"} />Update</span>\r\n          </li>}\r\n          { permissionDeleteDep &&item?.emp_count === 0 && <li>\r\n            <span className=\"dropdown-item\"\r\n              onClick={() => toggleDeleteModal(item._id)}\r\n            >\r\n              <Icon className={\"bi bi-trash me-1\"} />Delete</span>\r\n          </li>}\r\n        </ul>\r\n      </div>\r\n\r\n    )\r\n  }), [setSelectedDepartmentData, toggleDepartmentModal, toggleDeleteModal]);\r\n\r\n\r\n  const fields = [\r\n    { key: 'sn', label: 'S.N' },\r\n    { key: 'name', label: 'Name' },\r\n    { key: 'short_name', label: 'Short Name' },\r\n    { key: 'emp_count', label: 'Total Employees' },\r\n    { key: 'is_active', label: 'Status' },\r\n    { key: 'created_at', label: 'Created At' },\r\n    ((permissionDeleteDep||permissionUpdateDep )&&{ key: 'action', label: 'Action' })\r\n  \r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <CustomTable\r\n        data={depList?.data}\r\n        fields={fields}\r\n        isLoading={isLoading}\r\n        pagination={true}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        totalPages={depList?.totalPages}\r\n        // tableName={\"Department\"}\r\n        isHeader={false}\r\n        tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n        // onSearch={handleSearch}\r\n        scopedSlots={scopedSlots}\r\n      />\r\n\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default DepartmentTable\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { CustomButton } from '../../../globalComponents';\r\nimport { addDepartmentSchema } from '../../../../utils/ValidationSchema';\r\nimport { validateSchema } from '../../../../utils/ValidationHelper';\r\nimport CustomError from '../../../globalComponents/CustomError';\r\nimport { CustCheckbox, Input, Label } from '../../../commanComponent';\r\nimport { useCustomTranslation } from '../../../../translation';\r\n\r\nconst CreateUpdateDepartment = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        openCreateUpdateDepModal,\r\n        toggleDepartmentModal,\r\n        selectedDepartmentData,\r\n        handleCreateUpdateDepartment\r\n    } = props\r\n    const [errors, setErrors] = useState({});\r\n    const {\r\n        addDepartmentPending,\r\n        updateDepartmentPending,\r\n    } = useSelector(state => state.department);\r\n    const [isActive, setIsActive] = useState(true);\r\n    const [depData, setDepData] = useState({\r\n        depName: '',\r\n        shortName: '',\r\n    })\r\n\r\n    const submitCreateUpdateDepartment = async () => {\r\n        const validationResponse = await validateSchema(addDepartmentSchema, depData);\r\n        if (validationResponse.isValid) {\r\n            setErrors({});\r\n            const params = {\r\n                name: depData?.depName || '',\r\n                short_name: depData?.shortName || '',\r\n                is_active: isActive ? true : false\r\n            }\r\n            handleCreateUpdateDepartment(params)\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        errors && setErrors({});\r\n        const { name, value } = event.target\r\n        setDepData({ ...depData, [name]: value })\r\n    }\r\n\r\n    // Update Department \r\n    useEffect(() => {\r\n        if (selectedDepartmentData) {\r\n            setDepData({\r\n                depName: selectedDepartmentData?.name || '',\r\n                shortName: selectedDepartmentData?.short_name || '',\r\n            })\r\n            setIsActive(selectedDepartmentData?.is_active)\r\n        }\r\n    }, [selectedDepartmentData])\r\n\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetDepartmentData()\r\n        })\r\n    }, [openCreateUpdateDepModal])\r\n\r\n\r\n    const resetDepartmentData = () => {\r\n        setDepData({\r\n            depName: '',\r\n            shortName: '',\r\n        })\r\n        setErrors({});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end creatNewTicketOff ${openCreateUpdateDepModal ? 'show' : ''}`} tabIndex={-1}\r\n                style={{ visibility: openCreateUpdateDepModal ? 'visible' : 'hidden' ,\r\n                      width: \"800px\"\r\n                }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\"> {selectedDepartmentData ? \"Update\" : \"Create New\"} Department</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => toggleDepartmentModal()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.name\")} required={true} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.departmentName\")}\r\n                                        value={depData?.depName || ''}\r\n                                        name=\"depName\"\r\n                                        onChange={(e) => handleChange(e)}\r\n                                    />\r\n                                    {errors?.depName && (\r\n                                        <CustomError text={errors.depName} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group\">\r\n                                    <Label text={t(\"labels.shortName\")} required={true} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.shortName\")}\r\n                                        value={depData?.shortName}\r\n                                        name=\"shortName\"\r\n                                        onChange={(e) => handleChange(e)}\r\n                                    />\r\n\r\n                                    {errors?.shortName && (\r\n                                        <CustomError text={errors.shortName} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.isActive\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"is_active\"}\r\n                                        id={`is_active`}\r\n                                        // label={\"Active\"}\r\n                                        checked={isActive}\r\n                                        handleChange={(e) => setIsActive(!isActive)}\r\n                                        name={\"is_active\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={selectedDepartmentData ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitCreateUpdateDepartment()}\r\n                            isLoading={selectedDepartmentData ? updateDepartmentPending : addDepartmentPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {openCreateUpdateDepModal && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateUpdateDepartment\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { departmentAction } from '../../../../core/resource/actions'\r\nimport CreateUpdateDepartment from './CreateUpdateDepartment'\r\nimport { pagination } from '../../../../utils/Constants.config'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport ApproveRejectModal from '../../../modal/ApproveRejectModal'\r\nimport DepartmentTable from \"./DepartmentTable\"\r\nimport { useCustomTranslation } from '../../../../translation'\r\n\r\nconst Department = () => {\r\n  const { t } = useCustomTranslation()\r\n  const dispatch = useDispatch();\r\n  const {\r\n    getAllDepartmentRes,\r\n    getAllDepartmentError,\r\n    getAllDepartmentPending,\r\n\r\n    deleteDepartmentPending,\r\n    deleteDepartmentRes,\r\n    deleteDepartmentError,\r\n\r\n    addDepartmentPending,\r\n    addDepartmentRes,\r\n    addDepartmentError,\r\n\r\n    updateDepartmentPending,\r\n    updateDepartmentRes,\r\n    updateDepartmentError\r\n  } = useSelector(state => state.department);\r\n\r\n  const [departmentList, setDepartmentList] = useState('')\r\n  const [selectedDepartmentData, setSelectedDepartmentData] = useState('')\r\n  const [openCreateUpdateDepModal, setOpenCreateUpdateDepModal] = useState(false);\r\n  const [deleteDepId, setDeleteDepId] = useState()\r\n  const [isShowDeleteModal, setIsShowDeleteModal] = useState(false)\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n\r\n  /* Create Update Department */\r\n  const toggleDepartmentModal = (data) => {\r\n    if (!data) {\r\n      setSelectedDepartmentData('')\r\n    } else {\r\n      setSelectedDepartmentData(data)\r\n    }\r\n    setOpenCreateUpdateDepModal(!openCreateUpdateDepModal)\r\n  }\r\n\r\n  const handleCreateUpdateDepartment = (params) => {\r\n    if (selectedDepartmentData) {\r\n      params['_id'] = selectedDepartmentData?._id\r\n      dispatch(departmentAction.updateDepartmentRequest(params));\r\n    }\r\n    else {\r\n      dispatch(departmentAction.addDepartmentRequest(params));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!addDepartmentPending) {\r\n      if (addDepartmentError) {\r\n        dispatch(departmentAction.handleClearDepartmentStore('HANDLE_CLEAR_ADD_DEPARTMENT_STORE'))\r\n        return;\r\n      }\r\n      if (addDepartmentRes) {\r\n        if (addDepartmentRes?.code == 200) {\r\n          dispatch(departmentAction.handleClearDepartmentStore('HANDLE_CLEAR_ADD_DEPARTMENT_STORE'))\r\n          dispatch(departmentAction.handleClearDepartmentStore('HANDLE_CLEAR_GET_DEPARTMENT_LIST_STORE'))\r\n          toggleDepartmentModal()\r\n          getAllDepartments();\r\n\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    addDepartmentPending,\r\n    addDepartmentRes,\r\n    addDepartmentError,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!updateDepartmentPending) {\r\n      if (updateDepartmentError) {\r\n        dispatch(departmentAction.handleClearDepartmentStore('HANDLE_CLEAR_UPDATE_DEPARTMENT_STORE'))\r\n        return;\r\n      }\r\n      if (updateDepartmentRes) {\r\n        if (updateDepartmentRes?.code == 200) {\r\n          dispatch(departmentAction.handleClearDepartmentStore('HANDLE_CLEAR_UPDATE_DEPARTMENT_STORE'))\r\n          dispatch(departmentAction.handleClearDepartmentStore('HANDLE_CLEAR_GET_DEPARTMENT_LIST_STORE'))\r\n          getAllDepartments();\r\n          toggleDepartmentModal();\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    updateDepartmentPending,\r\n    updateDepartmentRes,\r\n    updateDepartmentError\r\n  ]);\r\n\r\n  /* Get All Departments */\r\n  useEffect(() => {\r\n    getAllDepartments()\r\n  }, [currentPage])\r\n\r\n  const getAllDepartments = () => {\r\n    const params = {\r\n      page: currentPage,\r\n      limit: pagination.limit,\r\n    }\r\n    dispatch(departmentAction.getAllDepartmentRequest(params));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getAllDepartmentPending) {\r\n      if (getAllDepartmentError) {\r\n        return;\r\n      }\r\n      if (getAllDepartmentRes) {\r\n        if (getAllDepartmentRes?.code === 200) {\r\n          setDepartmentList(getAllDepartmentRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllDepartmentRes,\r\n    getAllDepartmentError,\r\n    getAllDepartmentPending\r\n  ]);\r\n\r\n  /* Delete Department */\r\n  const onDeleteCancelDepartment = (type) => {\r\n    if (type) {\r\n      const params = {\r\n        _id: deleteDepId\r\n      }\r\n      dispatch(departmentAction?.deleteDepartmentRequest(params))\r\n    } else {\r\n      toggleDeleteModal()\r\n    }\r\n  }\r\n  const toggleDeleteModal = (id) => {\r\n    if (id) {\r\n      setDeleteDepId(id)\r\n    }\r\n    setIsShowDeleteModal(!isShowDeleteModal)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!deleteDepartmentPending) {\r\n      if (deleteDepartmentError) {\r\n        dispatch(departmentAction.handleClearDepartmentStore('HANDLE_CLEAR_DELETE_DEPARTMENT_STORE'))\r\n        return;\r\n      }\r\n      if (deleteDepartmentRes) {\r\n        if (deleteDepartmentRes?.code == 200) {\r\n          dispatch(departmentAction.handleClearDepartmentStore('HANDLE_CLEAR_DELETE_DEPARTMENT_STORE'))\r\n          dispatch(departmentAction.handleClearDepartmentStore('HANDLE_CLEAR_GET_DEPARTMENT_LIST_STORE'))\r\n          toggleDeleteModal()\r\n          if (currentPage > 1 && departmentList?.data?.length === 1) {\r\n            setCurrentPage((pre => pre -= 1))\r\n          } else {\r\n            getAllDepartments()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    deleteDepartmentRes,\r\n    deleteDepartmentError,\r\n    deleteDepartmentPending\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      <div className='cardBox myRequest mb-3 employeeHistory'>\r\n        <div className=\"d-flex align-items-center justify-content-between gap-3\">\r\n          <div className=\"cardHead d-flex\">\r\n            <img src=\"images/myrequest-icon.svg\" alt=\"\" width={35} />\r\n            <h4 className=\"ms-2 \">Department</h4>\r\n          </div>\r\n          <div className='d-flex gap-2'>\r\n            <CustomButton\r\n              classNames={\"btn btn-primary gradientBg\"}\r\n              handleClick={() => toggleDepartmentModal()}\r\n              text={t(\"btns.createDepartment\")}\r\n              slug={\"create_department\"}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <DepartmentTable\r\n          isLoading={getAllDepartmentPending}\r\n          toggleDepartmentModal={toggleDepartmentModal}\r\n          setSelectedDepartmentData={setSelectedDepartmentData}\r\n          toggleDeleteModal={toggleDeleteModal}\r\n          currentPage={currentPage}\r\n          setCurrentPage={setCurrentPage}\r\n          departmentList={departmentList}\r\n        />\r\n         </div>\r\n\r\n        {openCreateUpdateDepModal && <CreateUpdateDepartment\r\n          getAllDepartments={getAllDepartments}\r\n          openCreateUpdateDepModal={openCreateUpdateDepModal}\r\n          toggleDepartmentModal={toggleDepartmentModal}\r\n          selectedDepartmentData={selectedDepartmentData}\r\n          handleCreateUpdateDepartment={handleCreateUpdateDepartment}\r\n        />}\r\n\r\n        {isShowDeleteModal && (\r\n          <ApproveRejectModal\r\n            onApproveReject={onDeleteCancelDepartment}\r\n            isShow={isShowDeleteModal}\r\n            desc={t(\"alerts.deletePopup.desc\").replace('$1', \"Department\")}\r\n            btnRightLoading={deleteDepartmentPending}\r\n            btnTextRight={t(\"btns.delete\")}\r\n            btnTextLeft={t(\"btns.cancel\")}\r\n          />)\r\n        }\r\n      </div>\r\n      )\r\n}\r\n\r\n      export default Department\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CustomButton, CustomError } from '../../../globalComponents';\r\nimport { departmentAction, designationAction } from '../../../../core/resource/actions';\r\nimport { addDesignationSchema } from '../../../../utils/ValidationSchema';\r\nimport { validateSchema } from '../../../../utils/ValidationHelper';\r\nimport { useCustomTranslation } from '../../../../translation';\r\nimport { CustCheckbox, Input, Label } from '../../../commanComponent';\r\nimport { createShortName } from '../../../../utils/common';\r\n\r\nconst CreateUpdateDesignation = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        getAllDesignation,\r\n        setSelectedDesignation,\r\n        isOpen,\r\n        toggleDesignation,\r\n        selectedDesignation,\r\n    } = props\r\n    const [errors, setErrors] = useState({});\r\n    const dispatch = useDispatch();\r\n    const { addDesignationPending, addDesignationRes, addDesignationError } = useSelector(state => state.designation);\r\n    const { getDepartmentListPending, getDepartmentListRes, getDepartmentListError } = useSelector(state => state.department);\r\n    const { updateDesignationPending, updateDesignationRes, updateDesignationError } = useSelector(state => state.designation);\r\n    const [departmentList, setDepartmentList] = useState([])\r\n    const [isActive, setIsActive] = useState(true);\r\n    const [designaitonId, setDesignationId] = useState('')\r\n    const [designationFromData, setDesignationFromData] = useState({\r\n        departmentId: '',\r\n        designationName: '',\r\n        shortName: '',\r\n    })\r\n\r\n    useEffect(() => {\r\n        getAllDepartment()\r\n    }, [])\r\n\r\n    const getAllDepartment = () => {\r\n        dispatch(departmentAction.getDepartmentListRequest());\r\n    }\r\n    useEffect(() => {\r\n        if (!getDepartmentListPending) {\r\n            if (getDepartmentListError) {\r\n                return;\r\n            }\r\n            if (getDepartmentListRes) {\r\n                if (getDepartmentListRes?.code === 200) {\r\n                    const departmentResposnse = getDepartmentListRes?.data\r\n                    setDepartmentList(departmentResposnse)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    ]);\r\n\r\n\r\n    const createDesignation = async () => {\r\n        const validationResponse = await validateSchema(addDesignationSchema, designationFromData);\r\n        if (validationResponse.isValid) {\r\n            setErrors({});\r\n            let params = {\r\n                department_id: designationFromData?.departmentId,\r\n                name: designationFromData?.designationName || '',\r\n                short_name: designationFromData?.shortName || '',\r\n                is_active: isActive\r\n\r\n            }\r\n            if (selectedDesignation) {\r\n                params[\"_id\"] = designaitonId\r\n                dispatch(designationAction.updateDesignationRequest(params));\r\n            } else {\r\n\r\n                dispatch(designationAction.addDesignationRequest(params));\r\n            }\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!addDesignationPending) {\r\n            if (addDesignationError) {\r\n                dispatch(designationAction.handleClearDesignationStore('HANDLE_CLEAR_ADD_DESIGNATION_STORE'))\r\n                return;\r\n            }\r\n            if (addDesignationRes) {\r\n                if (addDesignationRes?.code == 200) {\r\n                    dispatch(designationAction.handleClearDesignationStore('HANDLE_CLEAR_ADD_DESIGNATION_STORE'))\r\n                    toggleDesignation()\r\n                    getAllDesignation()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addDesignationPending,\r\n        addDesignationRes,\r\n        addDesignationError,\r\n    ]);\r\n\r\n    const handleChange = (event) => {\r\n        errors && setErrors({});\r\n        const { name, value } = event.target\r\n\r\n        setDesignationFromData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: value,\r\n            };\r\n            if (name === 'designationName') {\r\n                updatedState.shortName = createShortName(value);\r\n            }\r\n            return updatedState;\r\n        });\r\n\r\n    }\r\n\r\n    //update designation \r\n    useEffect(() => {\r\n        setDesignationFromData({\r\n            departmentId: selectedDesignation?.department_id,\r\n            designationName: selectedDesignation?.name || '',\r\n            shortName: selectedDesignation?.short_name || '',\r\n        })\r\n        setIsActive(selectedDesignation?.is_active)\r\n        setDesignationId(selectedDesignation?._id)\r\n    }, [selectedDesignation])\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateDesignationPending) {\r\n            if (updateDesignationError) {\r\n                dispatch(designationAction.handleClearDesignationStore('HANDLE_CLEAR_UPDATE_DESIGNATION_STORE'))\r\n                return;\r\n            }\r\n            if (updateDesignationRes) {\r\n                if (updateDesignationRes?.code == 200) {\r\n                    dispatch(designationAction.handleClearDesignationStore('HANDLE_CLEAR_UPDATE_DESIGNATION_STORE'))\r\n                    toggleDesignation();\r\n                    getAllDesignation();\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updateDesignationPending,\r\n        updateDesignationRes,\r\n        updateDesignationError\r\n    ]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (isOpen == false) {\r\n            setDesignationFromData({\r\n                departmentId: '',\r\n                designationName: '',\r\n                shortName: ''\r\n            })\r\n            setSelectedDesignation('')\r\n            setErrors({});\r\n            // setDesignationId()\r\n        }\r\n    }, [isOpen])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end creatNewTicketOff ${isOpen ? 'show' : ''}`} tabIndex={-1}\r\n                style={{ visibility: isOpen ? 'visible' : 'hidden' }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{selectedDesignation ? \"Update\" : \"Create New\"} Designation</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => toggleDesignation()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.selectDepartment\")} required={true} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <select className=\"form-select\"\r\n                                        name='departmentId'\r\n                                        value={designationFromData?.departmentId}\r\n                                        onChange={(e) => handleChange(e)}\r\n                                        disabled=''\r\n                                    >\r\n                                        <option value=\"\" hidden selected>Select Department...</option>\r\n                                        {departmentList && departmentList?.length > 0 &&\r\n                                            departmentList?.map((department, index) => <option\r\n                                                value={department?._id}\r\n                                            >\r\n                                                {department?.name}\r\n                                            </option>\r\n                                            )}\r\n                                    </select>\r\n                                    {errors?.departmentId && (\r\n                                        <CustomError text={errors.departmentId} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.name\")} required={true} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.designationName\")}\r\n                                        value={designationFromData?.designationName || ''}\r\n                                        name=\"designationName\"\r\n                                        onChange={(e) => handleChange(e)}\r\n                                    />\r\n\r\n                                    {errors?.designationName && (\r\n                                        <CustomError text={errors.designationName} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.shortName\")} required={true} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.shortName\")}\r\n                                        value={designationFromData?.shortName}\r\n                                        name=\"shortName\"\r\n                                        onChange={(e) => handleChange(e)}\r\n                                    />\r\n                                    {errors?.shortName && (\r\n                                        <CustomError text={errors.shortName} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.isActive\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"is_active\"}\r\n                                        id={`is_active`}\r\n                                        checked={isActive}\r\n                                        handleChange={(e) => setIsActive(!isActive)}\r\n                                        name={\"is_active\"}  \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={selectedDesignation ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => createDesignation()}\r\n                            isLoading={selectedDesignation ? updateDesignationPending : addDesignationPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateUpdateDesignation\r\n","import React, { useEffect, useState } from 'react'\r\nimport DesignationTable from './DesignationTable'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { designationAction } from '../../../../core/resource/actions'\r\nimport ApproveRejectModal from '../../../modal/ApproveRejectModal'\r\nimport { pagination } from '../../../../utils/Constants.config'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport CreateUpdateDesignation from './CreateUpdateDesignation'\r\n\r\nconst Designation = () => {\r\n  const { t } = useCustomTranslation()\r\n  const dispatch = useDispatch();\r\n  const {\r\n    getAllDesignationRes,\r\n    getAllDesignationError,\r\n    getAllDesignationPending,\r\n    deleteDesignationPending,\r\n    deleteDesignationRes,\r\n    deleteDesignationError\r\n\r\n  } = useSelector(state => state.designation);\r\n  const [designationList, setDesignationList] = useState('')\r\n  const [selectedDesignation, setSelectedDesignation] = useState('')\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isShowDeleteModal, setIsShowDeleteModal] = useState(false)\r\n  const [deleteDesiId, setDeleteDesiId] = useState()\r\n  const [currentPage, setCurrentPage] = useState(pagination?.page);\r\n\r\n  useEffect(() => {\r\n    getAllDesignation()\r\n  }, [currentPage])\r\n\r\n  const toggleDesignation = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const getAllDesignation = () => {\r\n    const params = {\r\n      page: currentPage,\r\n      limit: pagination?.limit,\r\n    }\r\n    dispatch(designationAction.getAllDesignationRequest(params));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getAllDesignationPending) {\r\n      if (getAllDesignationError) {\r\n        return;\r\n      }\r\n      if (getAllDesignationRes) {\r\n        if (getAllDesignationRes?.code == 200) {\r\n          setDesignationList(getAllDesignationRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllDesignationRes,\r\n    getAllDesignationError,\r\n    getAllDesignationPending\r\n  ]);\r\n\r\n  //delete designation\r\n\r\n  const onDeleteCancelDesignation = (type, id) => {\r\n    if (type) {\r\n      let params = {\r\n        _id: deleteDesiId\r\n      }\r\n      dispatch(designationAction?.deleteDesignationRequest(params))\r\n    }\r\n    setIsShowDeleteModal(!isShowDeleteModal)\r\n  }\r\n  const onHandleDeleteModal = (id) => {\r\n    setIsShowDeleteModal(!isShowDeleteModal)\r\n    setDeleteDesiId(id)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!deleteDesignationPending) {\r\n      if (deleteDesignationError) {\r\n        dispatch(designationAction.handleClearDesignationStore('HANDLE_CLEAR_DELETE_DESIGNATION_STORE'))\r\n        return;\r\n      }\r\n      if (deleteDesignationRes) {\r\n        if (deleteDesignationRes?.code == 200) {\r\n          dispatch(designationAction.handleClearDesignationStore('HANDLE_CLEAR_DELETE_DESIGNATION_STORE'))\r\n          if (currentPage > 1 && designationList?.data?.length === 1) {\r\n            setCurrentPage((pre => pre -= 1))\r\n          } else {\r\n            getAllDesignation()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    deleteDesignationRes,\r\n    deleteDesignationError,\r\n    deleteDesignationPending\r\n  ]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className='cardBox myRequest mb-3 employeeHistory'>\r\n        <div className=\"d-flex align-items-center justify-content-between gap-3\">\r\n          <div className=\"cardHead d-flex\">\r\n            <img src=\"images/myrequest-icon.svg\" alt=\"\" width={35} />\r\n            <h4 className=\"ms-2 \">Designation</h4>\r\n          </div>\r\n          <div className='d-flex gap-2'>\r\n            <CustomButton\r\n              classNames={\"btn btn-primary gradientBg\"}\r\n              handleClick={() => toggleDesignation(\"createDesignation\")}\r\n              text={t(\"btns.createDesignation\")}\r\n              slug ={\"create_designation\"}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <DesignationTable\r\n          designationList={designationList}\r\n          isLoading={getAllDesignationPending}\r\n          setSelectedDesignation={setSelectedDesignation}\r\n          toggleDesignation={toggleDesignation}\r\n          onHandleDeleteModal={onHandleDeleteModal}\r\n          currentPage={currentPage}\r\n          setCurrentPage={setCurrentPage}\r\n\r\n        />\r\n      </div>\r\n      {isOpen && <CreateUpdateDesignation\r\n        getAllDesignation={getAllDesignation}\r\n        setSelectedDesignation={setSelectedDesignation}\r\n        isOpen={isOpen}\r\n        toggleDesignation={toggleDesignation}\r\n        selectedDesignation={selectedDesignation}\r\n      />}\r\n      {isShowDeleteModal && (\r\n        <ApproveRejectModal\r\n          onApproveReject={onDeleteCancelDesignation}\r\n          isShow={isShowDeleteModal}\r\n          desc={t(\"alerts.deletePopup.desc\").replace('$1', \"Designation\")}\r\n          btnRightLoading={deleteDesignationPending}\r\n        />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Designation\r\n","import React, { useEffect, useState } from 'react'\r\nimport MappingHeader from './MappingHeader'\r\nimport Functions from './functions/Functions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { departmentAction, employeeActions } from '../../../core/resource/actions'\r\nimport Projects from './projects/Projects'\r\nimport Skills from './skills/Skills'\r\nimport { Department } from './department'\r\nimport Designation from './designation/Designation'\r\n\r\nconst Mapping = () => {\r\n    const dispatch = useDispatch()\r\n    const [isActiveTab, setIsActiveTab] = useState('department')\r\n    const [allDepartments, setAllDepartments] = useState([])\r\n    const [subDepartmentByDepartmentData,setSubDepartmentByDepartmentData]=useState([])\r\n    const [allEmployeeList, setAllEmployeeList] = useState([])\r\n    const [mappingCount,setMappingCount]=useState({\r\n        departmentCount:0,\r\n        designationCount:0,\r\n        projectCount :0,\r\n        functionCount:0\r\n\r\n    })\r\n    const {\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending,\r\n\r\n        getSubDepartmentByDepartmentRes,\r\n        getSubDepartmentByDepartmentError,\r\n        getSubDepartmentByDepartmentPending,\r\n\r\n    } = useSelector(state => state.department)\r\n\r\n    const {\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n        getAllEmployeePending\r\n\r\n    } = useSelector(state => state.employee)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getAllDepartments()\r\n        getAllEmployee()\r\n    }, [])\r\n\r\n    /* Get All Departments */\r\n    const getAllDepartments = () => {\r\n        const departmentResposnse = getDepartmentListRes?.data\r\n        if (!departmentResposnse?.length) {\r\n            dispatch(departmentAction.getDepartmentListRequest());\r\n        } else {\r\n            setAllDepartments(departmentResposnse)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getDepartmentListPending) {\r\n            if (getDepartmentListError) {\r\n                return;\r\n            }\r\n            if (getDepartmentListRes) {\r\n                if (getDepartmentListRes?.code === 200) {\r\n                    const departmentResponse = getDepartmentListRes?.data\r\n                    setAllDepartments(departmentResponse)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    ]);\r\n\r\n    /* Get All Employee List*/\r\n    const getAllEmployee = () => {\r\n        dispatch(employeeActions.getAllEmployeeRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getAllEmployeePending) {\r\n            if (getAllEmployeeError) {\r\n                return;\r\n            }\r\n            if (getAllEmployeeRes) {\r\n                if (getAllEmployeeRes?.code === 200) {\r\n\r\n                    setAllEmployeeList(getAllEmployeeRes?.data)\r\n                    setMappingCount((pre)=>({\r\n                        ...pre,\r\n                        [\"departmentCount\"]:getAllEmployeeRes?.data\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n        getAllEmployeePending\r\n    ]);\r\n\r\n\r\n\r\n    /* Get All Employee List*/\r\n    const getSubDepartmentByDepartment = (id) => {\r\n        const payload ={\r\n            department_id:id\r\n        }\r\n        dispatch(departmentAction.getSubDepartmentByDepartmentRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!getSubDepartmentByDepartmentPending) {\r\n            if (getSubDepartmentByDepartmentError) {\r\n                return;\r\n            }\r\n            if (getSubDepartmentByDepartmentRes) {\r\n                if (getSubDepartmentByDepartmentRes?.code === 200) {\r\n\r\n                    setSubDepartmentByDepartmentData(getSubDepartmentByDepartmentRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getSubDepartmentByDepartmentRes,\r\n        getSubDepartmentByDepartmentError,\r\n        getSubDepartmentByDepartmentPending\r\n    ]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <MappingHeader\r\n                isActiveTab={isActiveTab}\r\n                setIsActiveTab={setIsActiveTab}\r\n            />\r\n            { isActiveTab === \"department\" && <Department/>}\r\n            {isActiveTab === \"functions\" && <Functions\r\n                allDepartments={allDepartments}\r\n                allEmployeeList={allEmployeeList}\r\n            />}\r\n            {isActiveTab === \"projects\" && <Projects\r\n                allDepartments={allDepartments}\r\n                allEmployeeList={allEmployeeList}\r\n                getSubDepartmentByDepartment={getSubDepartmentByDepartment}\r\n                subDepartmentByDepartmentData={subDepartmentByDepartmentData}\r\n            />}\r\n            {isActiveTab === \"designation\" && <Designation\r\n                allDepartments={allDepartments}\r\n            />}\r\n            {isActiveTab === \"skills\" && <Skills\r\n\r\n            />}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Mapping\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport moment from 'moment-timezone'\r\nimport { getBadgeColor } from '../../../../utils/common'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { Icon } from '../../../commanComponent'\r\nimport { isPermission } from '../../../../utils/common'\r\nconst DesignationTable = (props) => {\r\n  const { t } = useCustomTranslation()\r\n  const {\r\n    designationList,\r\n    isLoading,\r\n    setSelectedDesignation,\r\n    toggleDesignation,\r\n    onHandleDeleteModal,\r\n    setCurrentPage,\r\n    currentPage\r\n  } = props\r\n\r\n  const [desiList, setDesiList] = useState()\r\n  const updateDesignationPer =isPermission(\"update_designation\")\r\n  const deleteDesignationPer =isPermission(\"delete_designation\")\r\n  const updateDesignation = (data) => {\r\n    setSelectedDesignation(data)\r\n    toggleDesignation()\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDesiList(designationList)\r\n  }, [designationList])\r\n\r\n\r\n  const scopedSlots = useMemo(() => ({\r\n    sn: (_, index) => (\r\n      <span>{index + 1}</span>\r\n    ),\r\n    is_active: item => (\r\n      <span\r\n        className={`badge ${getBadgeColor(item.is_active ? \"Active\" : \"Inactive\")}`}\r\n      >\r\n        {item.is_active ? \"Active\" : \"Inactive\"}\r\n      </span>\r\n    ),\r\n    created_at: item => moment(item.created_at).format(\"DD-MM-YYYY\"),\r\n    action: item => (\r\n      (item?.emp_count === 0||updateDesignationPer)&&  <div className=\"btn-group actionDrp\">\r\n        <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n          data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n          <i className=\"bi bi-three-dots-vertical\"></i>\r\n        </button>\r\n        <ul className=\"dropdown-menu\">\r\n        {updateDesignationPer && <li>\r\n            <span className=\"dropdown-item\"\r\n              onClick={() => updateDesignation(item)}\r\n            >\r\n              <Icon className={\"bi bi-pencil-square me-1\"} />Update</span>\r\n          </li>}\r\n          {item?.emp_count === 0 && deleteDesignationPer&& <li>\r\n            <span className=\"dropdown-item\"\r\n              onClick={() => onHandleDeleteModal(item._id)}\r\n            >\r\n              <Icon className={\"bi bi-trash me-1\"} />Delete</span>\r\n          </li>}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }), [\r\n    setSelectedDesignation,\r\n    toggleDesignation,\r\n    onHandleDeleteModal\r\n  ]);\r\n  const fields = [\r\n    { key: 'sn', label: 'S.N' },\r\n    { key: 'department_name', label: 'Department Name' },\r\n    { key: 'name', label: 'Name' },\r\n    { key: 'short_name', label: 'Short Name' },\r\n    { key: 'emp_count', label: 'Total Employees' },\r\n    { key: 'is_active', label: 'Status' },\r\n    { key: 'created_at', label: 'Created At' },\r\n    ((updateDesignationPer ||deleteDesignationPer)&&{ key: 'action', label: 'Action' })\r\n  ];\r\n\r\n\r\n  return (\r\n    <>\r\n      <CustomTable\r\n        data={desiList?.data}\r\n        fields={fields}\r\n        isLoading={isLoading}\r\n        pagination={true}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        totalPages={desiList?.totalPages}\r\n        // tableName={\"Designation\"}\r\n        // onSearch={handleSearch}\r\n        isHeader={false}\r\n        tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n        scopedSlots={scopedSlots}\r\n      />\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default DesignationTable\r\n"],"names":["mappingData","label","value","totalCount","imgUrl","permissionId","_ref","setIsActiveTab","isActiveTab","_jsx","className","children","map","item","ind","isPermission","_jsxs","style","minHeight","background","border","onClick","width","src","alt","fontSize","float","props","addFunctionPending","updateFunctionPending","useSelector","state","position","t","useCustomTranslation","selectedFunctionData","openModel","handleOpenClose","allDepartments","allEmployeeList","handleCreateUpdateFunction","errors","setErrors","useState","createUpdateFunctionFormData","setCreateUpdateFunctionFormData","department","functional_head","name","short_name","is_active","handleFromChange","e","fieldName","_e$target","target","type","checked","prevState","updatedState","createShortName","prevErrors","undefined","useEffect","resetForm","department_id","department_name","function_head_id","function_head_name","_Fragment","tabIndex","visibility","id","Label","text","required","CustomSelect","data","placeholder","handleChange","selectedOption","CustomError","Input","onChange","CustCheckbox","CustomButton","classNames","handleClick","async","validationResponse","validateSchema","addUpdateFunctionSchema","isValid","params","submitCreateUpdateFunction","isLoading","dispatch","useDispatch","createSubDepartmentPending","createSubDepartmentRes","createSubDepartmentError","getSubDepartmentPending","getSubDepartmentRes","getSubDepartmentError","updateSubDepartmentPending","updateSubDepartmentRes","updateSubDepartmentError","deleteFunctionPending","deleteFunctionRes","deleteFunctionError","isOpenCreateUpdateFunction","setIsOpenCreateUpdateFunction","setSelectedFunctionData","currentPage","setCurrentPage","allFunctions","setAllFunctions","isShowDeleteFunctionModal","setIsShowDeleteFunctionModal","deleteFunctionId","setDeleteFunctionId","deleteSubDepartment","updateSubDepartment","toggleCreateUpdateFunctionModal","departmentAction","handleClearDepartmentStore","code","getAllFunctions","page","limit","pagination","getSubDepartmentRequest","getAllFunctionData","handleFunctionDeleteModal","_allFunctions$data","length","pre","scopedSlots","useMemo","sn","_","index","getBadgeColor","created_at","dateFormate","action","Icon","fields","key","icon","slug","CustomTable","totalPages","isHeader","tableStyle","padding","boxShadow","CreateUpdateFunction","_id","updateSubDepartmentRequest","createSubDepartmentRequest","ApproveRejectModal","onApproveReject","isShow","desc","replace","btnRightLoading","btnTextRight","btnTextLeft","createProjectPending","updateProjectPending","selectedProjectData","getSubDepartmentByDepartment","subDepartmentByDepartmentData","handleCreateUpdateProject","createUpdateProjectFormData","setCreateUpdateProjectFormData","sub_department","project_manager","function_head","function_id","function_name","project_manager_id","project_manager_name","addUpdateProjectSchema","submitCreateUpdateProject","createProjectRes","createProjectError","addProjectPending","getProjectRes","getProjectError","updateProjectRes","updateProjectError","deleteProjectPending","deleteProjectRes","deleteProjectError","isOpenCreateUpdateProject","setIsOpenCreateUpdateProject","setSelectedProjectData","allProjects","setAllProjects","isShowDeleteProjectModal","setIsShowDeleteProjectModal","deleteProjectId","setDeleteProjectId","updateProject","deleteProject","toggleCreateUpdateProjectModal","getAllProjects","getProjectRequest","getAllProjectData","handleProjectDeleteModal","_allProjects$data","emp_count","CreateUpdateProject","updateProjectRequest","createProjectRequest","createSkillPending","updateSkillPending","selectedSkillData","handleCreateUpdateSkill","createUpdateSkillFormData","setCreateUpdateSkillFormData","addUpdateSkillSchema","submitCreateUpdateSkill","createSkillRes","createSkillError","getSkillPending","getSkillRes","getSkillError","updateSkillRes","updateSkillError","deleteSkillPending","deleteSkillRes","deleteSkillError","isOpenCreateUpdateSkill","setIsOpenCreateUpdateSkill","setSelectedSkillData","allSkills","setAllSkills","isShowDeleteSkillModal","setIsShowDeleteSkillModal","deleteSkillId","setDeleteSkillId","updateSkillPer","toggleCreateUpdateSkillModal","getAllSkills","getSkillRequest","getSkillData","handleSkillDeleteModal","no","CreateUpdateSkill","updateSkillRequest","createSkillRequest","departmentList","setSelectedDepartmentData","toggleDepartmentModal","toggleDeleteModal","depList","setDepList","permissionUpdateDep","permissionDeleteDep","moment","format","openCreateUpdateDepModal","selectedDepartmentData","handleCreateUpdateDepartment","addDepartmentPending","updateDepartmentPending","isActive","setIsActive","depData","setDepData","depName","shortName","event","resetDepartmentData","addDepartmentSchema","submitCreateUpdateDepartment","Department","getAllDepartmentRes","getAllDepartmentError","getAllDepartmentPending","deleteDepartmentPending","deleteDepartmentRes","deleteDepartmentError","addDepartmentRes","addDepartmentError","updateDepartmentRes","updateDepartmentError","setDepartmentList","setOpenCreateUpdateDepModal","deleteDepId","setDeleteDepId","isShowDeleteModal","setIsShowDeleteModal","getAllDepartments","getAllDepartmentRequest","_departmentList$data","DepartmentTable","CreateUpdateDepartment","updateDepartmentRequest","addDepartmentRequest","deleteDepartmentRequest","getAllDesignation","setSelectedDesignation","isOpen","toggleDesignation","selectedDesignation","addDesignationPending","addDesignationRes","addDesignationError","designation","getDepartmentListPending","getDepartmentListRes","getDepartmentListError","updateDesignationPending","updateDesignationRes","updateDesignationError","designaitonId","setDesignationId","designationFromData","setDesignationFromData","departmentId","designationName","getAllDepartment","getDepartmentListRequest","departmentResposnse","designationAction","handleClearDesignationStore","disabled","hidden","selected","addDesignationSchema","updateDesignationRequest","addDesignationRequest","createDesignation","Designation","getAllDesignationRes","getAllDesignationError","getAllDesignationPending","deleteDesignationPending","deleteDesignationRes","deleteDesignationError","designationList","setDesignationList","setIsOpen","deleteDesiId","setDeleteDesiId","getAllDesignationRequest","_designationList$data","DesignationTable","onHandleDeleteModal","CreateUpdateDesignation","onDeleteCancelDesignation","deleteDesignationRequest","Mapping","setAllDepartments","setSubDepartmentByDepartmentData","setAllEmployeeList","mappingCount","setMappingCount","departmentCount","designationCount","projectCount","functionCount","getSubDepartmentByDepartmentRes","getSubDepartmentByDepartmentError","getSubDepartmentByDepartmentPending","getAllEmployeeRes","getAllEmployeeError","getAllEmployeePending","employee","getAllEmployee","departmentResponse","employeeActions","getAllEmployeeRequest","MappingHeader","Functions","Projects","payload","getSubDepartmentByDepartmentRequest","Skills","desiList","setDesiList","updateDesignationPer","deleteDesignationPer"],"sourceRoot":""}