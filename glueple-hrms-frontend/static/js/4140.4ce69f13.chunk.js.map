{"version":3,"file":"static/js/4140.4ce69f13.chunk.js","mappings":"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","sources":["components/reuseableComponents/CustomCards.js","components/payrollAdmin/payrollSetting/salaryComponent/EarningsTable.js","components/payrollAdmin/payrollSetting/salaryComponent/DeductionsTable.js","components/payrollAdmin/payrollSetting/salaryComponent/SalaryComponent.js","components/payrollAdmin/payrollSetting/salaryComponent/EarningRulesTable.js","components/payrollAdmin/payrollSetting/salaryComponent/EarningRulesFormula.js","components/commanComponent/CustomAlert.js","components/payrollAdmin/payrollSetting/salaryComponent/EarningRules.js","components/payrollAdmin/earningDeductionTypes/earningDeductionType/ViewsEarningTypes.js","components/payrollAdmin/payrollSetting/salaryComponent/AddUpdateEarnings.js","components/payrollAdmin/payrollSetting/paySchedule/AddUpdatePaySchedule.js","components/payrollAdmin/payrollSetting/paySchedule/PaySchedule.js","components/payrollAdmin/payrollSetting/salaryComponent/AddPostTaxDeduction.js","components/payrollAdmin/payrollSetting/salaryComponent/AddPreTaxDeduction.js","components/payrollAdmin/payrollSetting/taxSlab/TaxSlab.js","components/payrollAdmin/payrollSetting/taxSlab/AddUpdateTaxSlab.js","components/payrollAdmin/payrollSetting/itDeclaration/InvestmentCategoryTable.js","components/payrollAdmin/payrollSetting/itDeclaration/InvestmentSubCategoryTable.js","components/payrollAdmin/payrollSetting/itDeclaration/Investments.js","components/payrollAdmin/payrollSetting/itDeclaration/AddUpdateSubCategory.js","components/payrollAdmin/payrollSetting/itDeclaration/AddUpdateCategory.js","components/payrollAdmin/payrollSetting/PayrollSetting.js"],"sourcesContent":["import React from 'react'\r\nimport { isPermission } from '../../utils/common';\r\n\r\n\r\nconst CustomCards = ({cardData}) => {\r\n    const visibleTabs = cardData.filter(\r\n        (tab) => !tab?.permissionId || isPermission(tab.permissionId)\r\n      );\r\n    \r\n    const renderedCards = () => {\r\n        return (\r\n            visibleTabs && visibleTabs?.length>0 && visibleTabs.map((card)=>(\r\n                <div className=\"col-md-2 px-md-2 mb-3\"\r\n                key={card?.id}\r\n                onClick={()=> card?.onClickFunc(card?.id)}\r\n                >\r\n                <span\r\n                    className=\"totalBx h-100\"\r\n                >\r\n                    <figure>\r\n                        <img src={card?.imgUrl} alt=\"\" width={50} />\r\n                    </figure>\r\n                    <h3 className=\"fw-bolder my-0\">{card?.name}</h3>\r\n                    <img\r\n                        src=\"images/firstlineBlue.svg\"\r\n                        className=\"cornerLine\"\r\n                        alt=\"\"\r\n                        width={95}\r\n                    />\r\n                </span>\r\n            </div>\r\n             ) ) \r\n           \r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"cardBox leaveAppli h-100 mb-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 selectModal position-relative z-1\">\r\n                        <div className=\"row px-md-1 \">\r\n                            {renderedCards()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomCards\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { getBadgeColor, isPermission } from '../../../../utils/common';\r\n\r\nconst EarningsTable = (props) => {\r\n    const { currentPage, setCurrentPage, earningData,handleToggleModals } = props\r\n    const updateEarningPer =isPermission(\"update_earning\")\r\n\r\n    const earningField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'payslip_name', label: 'Payslip Name' },\r\n        { key: 'name', label: 'Name' },\r\n        { key: 'value', label: 'Value' },\r\n        { key: 'value_in', label: 'Calculation Type' },\r\n        { key: 'is_active', label: 'Status' },\r\n       (updateEarningPer && { key: 'action', label: 'Action' })\r\n    ];\r\n    const earningScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        is_active: item => (\r\n            <span\r\n                className={`badge ${item.is_active ? getBadgeColor(\"active\") : getBadgeColor(\"inactive\")}`}\r\n            >\r\n                {item.is_active ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n        ),\r\n\r\n\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n\r\n                   {updateEarningPer && <li>\r\n                        <span className=\"dropdown-item\"\r\n                        onClick={() =>handleToggleModals(\"add_earnings\",item)}\r\n                        >Update</span>\r\n                    </li>}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }), [earningData, currentPage]);\r\n    return (\r\n        <div>\r\n            <CustomTable\r\n                data={earningData?.data}\r\n                fields={earningField}\r\n                // isLoading={}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={earningData?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={earningScopedSlots}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EarningsTable\r\n","import React, { useMemo } from 'react'\r\nimport { getBadgeColor, isPermission } from '../../../../utils/common';\r\nimport { CustomTable } from '../../../reuseableComponents';\r\n\r\nconst DeductionsTable = (props) => {\r\n    const { currentPage, setCurrentPage, deductionsData,handleToggleModals } = props\r\n    const updateDeductionPer =isPermission(\"update_deduction\")\r\n\r\n\r\n    const deductionField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'payslip_name', label: 'Payslip Name' },\r\n        { key: 'name', label: 'Name' },\r\n        { key: 'value', label: 'Value' },\r\n        { key: 'value_in', label: 'Calculation Type' },\r\n        { key: 'is_active', label: 'Status' },\r\n        (updateDeductionPer &&{ key: 'action', label: 'Action' })\r\n    ];\r\n    const deductionScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        include_in_ctc: item => (\r\n            <span\r\n                className={`badge ${item.include_in_ctc ? getBadgeColor(\"active\") : getBadgeColor(\"inactive\")}`}\r\n            >\r\n                {item.include_in_ctc ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n        ),\r\n        is_active: item => (\r\n            <span\r\n                className={`badge ${item.is_active ? getBadgeColor(\"active\") : getBadgeColor(\"inactive\")}`}\r\n            >\r\n                {item.is_active ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n        ),\r\n\r\n\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n\r\n                  {updateDeductionPer &&  <li>\r\n                        <span className=\"dropdown-item\"\r\n                        onClick={() => handleToggleModals(\"deduction\",item)}\r\n                        >Update</span>\r\n                    </li>}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }), [deductionsData, currentPage]);\r\n    return (\r\n        <>\r\n            <CustomTable\r\n                data={deductionsData?.data}\r\n                fields={deductionField}\r\n                // isLoading={}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={deductionsData?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={deductionScopedSlots}\r\n            />\r\n            {/* <div className=\"requestdata\">\r\n                <div class=\"d-flex align-items-center mb-4\">\r\n                    <span class=\"fw-bold fs-6 text-black\">Deductions</span>\r\n                    <ul class=\"nav nav-tabs leaveTabs ms-3\">\r\n                        <li class=\"nav-item\">\r\n                            <button class=\"nav-link active\" data-bs-toggle=\"tab\" data-bs-target=\"#pending\"\r\n                                // onClick={() => onHandleAppliedStatus(\"attendance_correction\", \"pending\")}\r\n                                type=\"button\">\r\n                                    Pre-Tax Deduction\r\n                              \r\n                            </button>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <button class=\"nav-link\" data-bs-toggle=\"tab\" data-bs-target=\"#pending\"\r\n                                type=\"button\"\r\n                                // onClick={() => onHandleAppliedStatus(\"attendance_correction\", \"approve\")}\r\n                            >\r\n                             Post-Tax Deduction   \r\n                            </button>\r\n                        </li>\r\n                    \r\n                    </ul>\r\n                </div>\r\n                <div className=\"tab-content\">\r\n                    <div className=\"tab-pane fade active show\" id=\"pending\">\r\n\r\n                        <CustomTable\r\n                            data={deductionsData?.data}\r\n                            fields={deductionField}\r\n                            // isLoading={}\r\n                            pagination={true}\r\n                            currentPage={currentPage}\r\n                            setCurrentPage={setCurrentPage}\r\n                            totalPages={deductionsData?.totalPages}\r\n                            // tableName={\"\"}\r\n                            // onSearch={handleSearch}\r\n                            isHeader={false}\r\n                            tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                            scopedSlots={deductionScopedSlots}\r\n                        />\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeductionsTable\r\n\r\n","import React from 'react'\r\nimport { CustomTabs } from '../../../reuseableComponents';\r\nimport EarningsTable from './EarningsTable';\r\nimport DeductionsTable from './DeductionsTable';\r\nimport { CustomButton } from '../../../globalComponents';\r\n\r\nconst SalaryComponent = (props) => {\r\n    const { handleToggleModals, earningData, deductionsData } = props\r\n    const tableTabsRequest = [\r\n        { name: \"Earnings\", onClickFun: (id) => getSalaryData(id), id: \"earnings\" },\r\n        { name: \"Deductions\", onClickFun: (id) => getSalaryData(id), id: \"deductions\" },\r\n    ];\r\n    const getSalaryData = (id) => {\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"cardBox myRequest mb-3 employeeHistory\">\r\n                <div className=\"cardHead  justify-content-between\">\r\n                    <div className='d-flex'>\r\n                        <img src=\"/images/myrequest-icon.svg\" alt=\"\" width=\"35\" />\r\n                        <h3 className=\"ms-2 mt-2\">Salary Component</h3>\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <div className='d-flex gap-3 justify-content-end'>\r\n                                <CustomButton\r\n                                    text={\"Add Earnings\"}\r\n                                    classNames=\"btn btn-primary\"\r\n                                    handleClick={() => handleToggleModals(\"add_earnings\")}\r\n                                    slug={\"add_earnings\"}\r\n                                />\r\n                                <CustomButton\r\n                                    text={\"Add Deduction \"}\r\n                                    classNames=\"btn btn-success\"\r\n                                    handleClick={() => handleToggleModals(\"deduction\")}\r\n                                    slug={\"add_deduction\"}\r\n                                />  \r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <CustomTabs tabs={tableTabsRequest} type=\"employeeHistory\" />\r\n                <div className=\"tab-content mykpiMain\">\r\n                    <div className=\"tab-pane fade active show\" id=\"earnings\">\r\n                        <EarningsTable\r\n                            earningData={earningData}\r\n                            handleToggleModals={handleToggleModals}\r\n                        />\r\n                    </div>\r\n                    <div className=\"tab-pane fade\" id=\"deductions\">\r\n                        <DeductionsTable\r\n                            deductionsData={deductionsData}\r\n                            handleToggleModals={handleToggleModals}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default SalaryComponent\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { Icon } from '../../../commanComponent';\r\n\r\nconst EarningRulesTable = ({ earningRuleData, deleteEarningRule,editEarningRule, rules}) => {\r\n\r\n    const earningRuleField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'from', label: 'From' },\r\n        { key: 'to', label: 'to' },\r\n        { key: \"amount\", label: \"Amount/Formula\" },\r\n        { key: 'action', label: 'Action' }\r\n    ];\r\n    const earningRuleScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        action: (item, index) => (\r\n            <div >\r\n                {rules && rules.length >0 &&<span\r\n                    onClick={() => editEarningRule(item,index)}\r\n                    className='border text-white bg-primary p-2 rounded' \r\n                    \r\n                    style={{ cursor: \"pointer\" }}>\r\n\r\n                    <Icon className={\"fa fa-edit\"} />\r\n                </span>}\r\n                <span\r\n                    onClick={() => deleteEarningRule(index)}\r\n                    className='border text-white bg-danger p-2 rounded' style={{ cursor: \"pointer\" }}>\r\n\r\n                    <Icon className={\"fa fa-trash\"} />\r\n                </span>\r\n\r\n            </div>\r\n        )\r\n    }), [earningRuleData]);\r\n    return (\r\n        <div>\r\n            {/* <CustomStrong text={\"Earning Rules\"} className=\"text-primary\" /> */}\r\n            <CustomTable\r\n                data={earningRuleData}\r\n                fields={earningRuleField}\r\n                totalPages={earningRuleData?.totalPages}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\", border: \"1px solid #F5F5F5\" }}\r\n                scopedSlots={earningRuleScopedSlots}\r\n            />\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EarningRulesTable\r\n","import React, { useState } from 'react'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CustomError, Label, Textarea } from '../../../commanComponent'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { CustomButton } from '../../../globalComponents'\r\n\r\nconst EarningRulesFormula = (props) => {\r\n        const dispatch = useDispatch()\r\n         const { \r\n            getAllEarningTypeRes,\r\n          } = useSelector(state => state.payroll)\r\n        const { toggleEarningRulesFormula, allLeaveConstantData, setEarningRulesData } = props\r\n        const { t } = useCustomTranslation()\r\n        const [earningRules, setEarningRules] = useState({\r\n            brackets: '',\r\n            earningType: '',\r\n            operators: ''\r\n        })\r\n        const [validDescription, setValidDescription] = useState('')\r\n        const [isFillDesc, setIsFillDesc] = useState(false)\r\n    \r\n        const handleFromChange = (e, fieldName) => {\r\n            const name = fieldName\r\n            const value = e;\r\n    \r\n            setEarningRules(prevState => {\r\n                const updatedState = {\r\n                    ...prevState,\r\n                    [name]: value,\r\n                };\r\n                return updatedState;\r\n            });\r\n            setIsFillDesc(false)\r\n        };\r\n        const onAddFormulaField = () => {\r\n            const { brackets, earningType, operators } = earningRules\r\n            let addFormulaFields =\r\n                (brackets?.value || '') +\r\n                (earningType?.value || '') +\r\n                (operators?.value || '');\r\n    \r\n            setValidDescription((prev) => prev + addFormulaFields);\r\n            setEarningRules({\r\n                brackets: '',\r\n                earningType: '',\r\n                operators: ''\r\n            })\r\n        }\r\n    \r\n        const checkEarningRulesFormula = () => {\r\n            if (validDescription) {\r\n                setIsFillDesc(false)\r\n                const payload = {\r\n                    formula: validDescription\r\n                }\r\n                // dispatch(leaveAction.checkLeaveEarningRulesRequest(payload))\r\n            } else {\r\n                setIsFillDesc(true)\r\n            }\r\n        }\r\n        const saveEarningRules = () => {\r\n            setEarningRulesData((pre) => ({\r\n                ...pre,\r\n                [\"amount\"]: validDescription\r\n            }))\r\n        }\r\n\r\n    \r\n  return (\r\n    <div className='border p-2' style={{ backgroundColor: \"#DCDCDC\" }}>\r\n            <div className='p-3' style={{ backgroundColor: \"white\" }}>\r\n                <div className=\"header ps-2 d-flex justify-content-between\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{t(\"headings.amountFormula\")}</h5>\r\n                    <button type=\"button\" className=\"btn-close\" onClick={() => toggleEarningRulesFormula()}></button>\r\n                </div>\r\n                <hr className='m-1' />\r\n                <div className=\"body mt-2\">\r\n                    <div className=\"formPanel\">\r\n                        <div className='row'>\r\n                            <div className=\"col-md-3 form-group mb-3\">\r\n                                <Label text={t(\"labels.brackets\")}\r\n                                />\r\n                                <CustomSelect\r\n                                    data={allLeaveConstantData && allLeaveConstantData?.brackets}\r\n                                    placeholder={t(\"placeholders.select\")}\r\n                                    value={earningRules?.brackets || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"brackets\")}\r\n                                    name=\"brackets\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-3 form-group mb-3\">\r\n                                <Label text={t(\"labels.earningType\")}\r\n                                />\r\n                                <CustomSelect\r\n                                    data={getAllEarningTypeRes && getAllEarningTypeRes?.data ||[]}\r\n                                    placeholder={t(\"placeholders.earningType\")}\r\n                                    value={earningRules?.earningType || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"earningType\")}\r\n                                    name=\"earningType\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-3 form-group mb-3\">\r\n                                <Label text={t(\"labels.operators\")}\r\n                                />\r\n                                <CustomSelect\r\n                                    data={allLeaveConstantData && allLeaveConstantData?.operators}\r\n                                    placeholder={t(\"placeholders.select\")}\r\n                                    value={earningRules?.operators || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"operators\")}\r\n                                    name=\"operators\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-3 form-group mb-3\">\r\n                                <CustomButton\r\n                                    text={t(\"btns.add\")}\r\n                                    classNames={\"btn btn-org-gradient  mt-4\"}\r\n                                    handleClick={() => onAddFormulaField()}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className=\"col-md-9 form-group mb-3\">\r\n                                <Textarea\r\n                                    value={validDescription}\r\n                                    placeholder={t(\"placeholders.leaveExpression\")}\r\n                                    onChange={(e) => setValidDescription(e.target.value)}\r\n                                />\r\n                                {isFillDesc && (\r\n                                    <CustomError text={\"Place add formula to validate\"} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className=\"col-md-9  mb-3 d-flex justify-content-end\" >\r\n                                <CustomButton\r\n                                    text={t(\"btns.validate\")}\r\n                                    classNames={\"btn btn-success gradientBg \"}\r\n                                    // handleClick={() => checkEarningRulesFormula()}\r\n                                    // isLoading={checkLeaveEarningRulesPending}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={t(\"btns.save\")}\r\n                            classNames={\"btn btn-primary mt-2\"}\r\n                            handleClick={() => saveEarningRules()}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default EarningRulesFormula\r\n","import React from 'react'\r\n\r\nconst CustomAlert = (props) => {\r\n    const {alertLabel,text,className='',style ={}}=props\r\n    return (\r\n        <div className={`alert ${className ||\"alert-warning\"}`} style={style||{}} role=\"alert\">\r\n            <strong>{alertLabel}</strong>{text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomAlert\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { CustomStrong, Input } from '../../../commanComponent'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport EarningRulesTable from './EarningRulesTable'\r\nimport EarningRulesFormula from './EarningRulesFormula'\r\nimport CustomAlert from '../../../commanComponent/CustomAlert'\r\n\r\nconst EarningRules = (props) => {\r\n    const { allLeaveConstantData, setRules, rules } = props\r\n    const { t } = useCustomTranslation()\r\n    const [errors, setErrors] = useState('')\r\n    const [isOpenERF, setIsOpenERF] = useState('')\r\n    const [earningRuleData, setEarningRuleData] = useState([])\r\n    const [selectedIndex, setSelectedIndex] = useState('')\r\n    const [earningRules, setEarningRules] = useState({\r\n        from: \"\",\r\n        to: '',\r\n        amount: \"\"\r\n    })\r\n\r\n\r\n    const handleFromChange = (e, fieldName, index) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n\r\n        setEarningRules(prevState => {\r\n            let updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n\r\n        // Clear error for the specific field being changed\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n\r\n    };\r\n    const deleteEarningRule = (index) => {\r\n        const earningData = earningRuleData?.filter((_, ind) => ind !== index)\r\n        setEarningRuleData(earningData)\r\n\r\n    }\r\n    const editEarningRule = (item,index) => {\r\n        setEarningRules({\r\n            from: item?.from,\r\n            to: item?.to,\r\n            amount: item?.amount\r\n        })\r\n        setSelectedIndex(index)\r\n    }\r\n    const submitEarningRules = () => {\r\n        if (selectedIndex !== '') {\r\n            const updatedRuleData = earningRuleData.map((rule, index) => {\r\n                if (index === selectedIndex) {\r\n                    return {\r\n                        ...rule,\r\n                        from: earningRules?.from,\r\n                        to: earningRules?.to,\r\n                        amount: earningRules?.amount,\r\n                    };\r\n                }\r\n                return rule;\r\n            });\r\n    \r\n            setEarningRuleData(updatedRuleData);\r\n            setRules(updatedRuleData);\r\n            setSelectedIndex('')\r\n        } else {\r\n            setEarningRuleData([...earningRuleData, earningRules])\r\n            setRules([...earningRuleData, earningRules])\r\n        }\r\n        resetEarningRulesFields()\r\n\r\n    }\r\n    const toggleEarningRulesFormula = () => {\r\n        setIsOpenERF(!isOpenERF)\r\n\r\n    }\r\n\r\n    const resetEarningRulesFields = () => {\r\n        setEarningRules({\r\n            from: \"\",\r\n            to: '',\r\n            amount: \"\"\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        if (rules) {\r\n            setEarningRuleData(rules)\r\n        }\r\n    }, [rules])\r\n    return (\r\n        <>\r\n            {earningRuleData && earningRuleData.length > 0 && <EarningRulesTable\r\n                earningRuleData={earningRuleData}\r\n                deleteEarningRule={deleteEarningRule}\r\n                rules={rules}\r\n                editEarningRule={editEarningRule}\r\n            />}\r\n\r\n            <div className=\"col-md-12 row\">\r\n                <div className=\"form-group mb-2\">\r\n                    <CustomStrong\r\n                        className={\"text-primary\"}\r\n                        text={t(\"labels.rules\")}\r\n                        required={true}\r\n                    />\r\n                    <div className=\"col-md-12 mt-2\">\r\n                        <div className=\"form-group mb-2 d-flex justify-content-between gap-3\">\r\n                            <span className='rupee-sign' >&#8377;</span>\r\n\r\n                            <Input\r\n                                type=\"number\"\r\n                                placeholder={t(\"placeholders.startSalary\")}\r\n                                value={earningRules?.from}\r\n                                name=\"from\"\r\n                                onChange={(e) => handleFromChange(e)}\r\n                            />\r\n                            <span className='mt-2' style={{ fontSize: \"16px\" }} >To</span>\r\n                            <Input\r\n                                type=\"number\"\r\n                                placeholder={t(\"placeholders.endSalary\")}\r\n                                value={earningRules?.to}\r\n                                name=\"to\"\r\n                                onChange={(e) => handleFromChange(e)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-12 row\">\r\n                <div className=\"form-group mb-2\">\r\n\r\n                    <div className=\"col-md-12 mt-2\">\r\n                        <div className=\"form-group mb-2 d-flex justify-content-start gap-3\">\r\n                            <span className='rupee-sign' >&#8377;</span>\r\n\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder={t(\"placeholders.amountFormula\")}\r\n                                value={earningRules?.amount}\r\n                                name=\"amount\"\r\n                                onChange={(e) => handleFromChange(e)}\r\n                                style={{ width: \"43%\" }}\r\n                            />\r\n                            <CustomButton\r\n                                text={t(\"btns.createFormula\")}\r\n                                classNames={\"btn btn-primary\"}\r\n                                handleClick={() => toggleEarningRulesFormula()}\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOpenERF && <EarningRulesFormula\r\n                allLeaveConstantData={allLeaveConstantData}\r\n                toggleEarningRulesFormula={toggleEarningRulesFormula}\r\n                setEarningRulesData={setEarningRules}\r\n\r\n            />}\r\n            <CustomAlert alertLabel={\"Note: \"} text={t(\"paragraph.addEarningRules\")} />\r\n            <hr />\r\n            <div className='d-flex justify-content-end'>\r\n                <CustomButton\r\n                    text={selectedIndex !=='' ?t(\"btns.update\"):t(\"btns.addRules\")}\r\n                    classNames={\"btn btn-success\"}\r\n                    styles={{ minWidth: \"0px\" }}\r\n                    handleClick={() => submitEarningRules()}\r\n                />\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default EarningRules\r\n","import React from 'react'\r\nimport { CustCheckbox, CustomRadio, CustomStrong, Input } from '../../../commanComponent'\r\nimport { yesNoFlexOptions, yesNoOptions } from '../../../../utils/Constants.config'\r\nimport { useCustomTranslation } from '../../../../translation'\r\n\r\nconst ViewsEarningTypes = ({earningTypeData}) => {\r\n    const {t}=useCustomTranslation()\r\n    return (\r\n        <div>\r\n            <div className=\"row reviewsComment\">\r\n                <div className=\"col-md-12\" >\r\n                    <div className=\"form-group mb-2\">\r\n                        <CustomStrong\r\n                            text={t(\"labels.earningTypeName\")}\r\n                            required={true}\r\n                        />\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder={t(\"placeholders.earningTypeName\")}\r\n                            value={earningTypeData?.earning_type_name}\r\n                            name=\"earningTypeName\"\r\n                            isDisabled={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group mb-2\">\r\n                        <CustomStrong\r\n                            text={t(\"labels.calculationType\")}\r\n                            required={true}\r\n                        />\r\n                        <CustomRadio\r\n                            data={yesNoOptions}\r\n                            name=\"calculationType\"\r\n                            selectedValue={earningTypeData?.calculation_type}\r\n                            isDisabled={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group mb-2\">\r\n                        <CustomStrong\r\n                            text={\"Calculate on pro-rata basis.\"}\r\n                        />\r\n                        <p>\r\n                            ( Pay will be adjusted based on employee working days.)</p>\r\n                        <CustomRadio\r\n                            data={yesNoFlexOptions}\r\n                            name=\"isProRata\"\r\n                            selectedValue={earningTypeData?.is_pro_rata}\r\n                            isDisabled={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group mb-2\">\r\n                        <CustomStrong\r\n                            text={\"Include this as a Flexible Benefit Plan component.\"}\r\n                        />\r\n                        <p>\r\n                            ( FBP allows your employees to personalise their salary structure by choosing how much they want to receive under each FBP component.)</p>\r\n                        <CustomRadio\r\n                            data={yesNoFlexOptions}\r\n                            name=\"canIncludeAsFbp\"\r\n                            selectedValue={earningTypeData?.can_include_as_fbp}\r\n                            isDisabled={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group mb-2\">\r\n                        <CustomStrong\r\n                            text={\"Consider for EPF Contribution.\"}\r\n                        />\r\n                        <CustomRadio\r\n                            data={yesNoFlexOptions}\r\n                            name=\"isIncludedInEpf\"\r\n                            selectedValue={earningTypeData?.is_included_in_epf}\r\n                            isDisabled={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group mb-2\">\r\n                        <CustomStrong\r\n                            text={\"Consider for ESI Contribution.\"}\r\n                        />\r\n                        <CustomRadio\r\n                            data={yesNoFlexOptions}\r\n                            name=\"isIncludedInEsi\"\r\n                            selectedValue={earningTypeData?.is_included_in_esi}\r\n                            isDisabled={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"form-group mb-2\">\r\n                        <CustomStrong\r\n                            text={\"Show this component in payslip\"}\r\n                        />\r\n                        <CustomRadio\r\n                            data={yesNoFlexOptions}\r\n                            name=\"showInPayslip\"\r\n                            selectedValue={earningTypeData?.show_in_payslip}\r\n                            isDisabled={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-12 d-flex\">\r\n                    <div className=\"form-group mb-3\">\r\n                        <CustCheckbox\r\n                            key={\"isActive\"}\r\n                            id={`isActive`}\r\n                            checked={earningTypeData?.is_active}\r\n                            name={\"isActive\"}\r\n                        />\r\n\r\n                    </div>\r\n                    <div className=\"form-group mb-3\">\r\n                        <CustomStrong text={t(\"labels.isActive\")} className=\"text-primary\" />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewsEarningTypes\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustCheckbox, CustomRadio, CustomStrong, Icon, Input, Label } from '../../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { calculationTypeOptions } from '../../../../utils/Constants.config'\r\nimport EarningRules from './EarningRules'\r\nimport { CustomTabs } from '../../../reuseableComponents'\r\nimport ViewsEarningTypes from '../../earningDeductionTypes/earningDeductionType/ViewsEarningTypes'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport { payrollActions } from '../../../../core/resource/actions'\r\nconst AddUpdateEarnings = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const dispatch = useDispatch()\r\n    const { getEarningTypeByIdRes,addEarningsPending,updateEarningsPending } = useSelector(state => state.payroll)\r\n    const {\r\n        earningDeductionSelectedData,\r\n        openModel,\r\n        handleOpenClose,\r\n        allEarningTypeData,\r\n        addEarnings,\r\n        allLeaveConstantData,\r\n        getEarningTypeById,\r\n        isOpenModalType,\r\n        addDeductions,\r\n        updateEarnings,\r\n        updateDeductions,\r\n        earningTypeByIdData,\r\n        allDeductionTypeData\r\n    } = props\r\n    const [errors, setErrors] = useState({})\r\n    const [createUpdateEarningsFormData, setCreateUpdateEarningsFormData] = useState({\r\n        earningType: null,\r\n        nameInPayslip: '',\r\n        calculationType: '',\r\n        calculationTypeValue: '',\r\n        // earningName: '',\r\n        variablePay: false,\r\n        includedCTC: false,\r\n        taxableComp: false,\r\n        isActive: true\r\n    })\r\n    const [rules, setRules] = useState([])\r\n\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e?.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n        setCreateUpdateEarningsFormData(prevState => {\r\n            let updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            if (name === \"earningType\") {\r\n                getEarningTypeById(e?._id)\r\n            }\r\n\r\n            if (name === \"calculationType\") {\r\n                updatedState = {\r\n                    ...updatedState,\r\n                    calculationTypeValue: '', \r\n                };\r\n            }\r\n\r\n            return updatedState;\r\n        });\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitCreateUpdateEarnings = async () => {\r\n        let payload = {\r\n            payslip_name: createUpdateEarningsFormData?.nameInPayslip,\r\n            // name: createUpdateEarningsFormData?.earningName,\r\n            [isOpenModalType === \"earnings\" ? \"earning_type\" : \"deduction_type\"]:\r\n            createUpdateEarningsFormData?.earningType?._id,\r\n            value: createUpdateEarningsFormData?.calculationTypeValue,\r\n            value_in: createUpdateEarningsFormData?.calculationType,\r\n            is_optional: false,\r\n            max_allowance: createUpdateEarningsFormData?.maxAllowance,\r\n            include_in_ctc: createUpdateEarningsFormData?.includedCTC,\r\n            rules: rules,\r\n            is_variable_pay: createUpdateEarningsFormData?.variablePay,\r\n            is_taxable: createUpdateEarningsFormData?.taxableComp,\r\n            is_active: createUpdateEarningsFormData?.isActive\r\n        }\r\n        if(earningDeductionSelectedData){\r\n            payload[\"_id\"]=earningDeductionSelectedData?._id\r\n            isOpenModalType == \"earnings\" ? updateEarnings(payload) : updateDeductions(payload)\r\n        }else{\r\n            \r\n            isOpenModalType == \"earnings\" ? addEarnings(payload) : addDeductions(payload)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetForm()\r\n        })\r\n    }, [openModel])\r\n\r\n    useEffect(() => {\r\n        if (earningDeductionSelectedData) {\r\n            setCreateUpdateEarningsFormData({\r\n                earningType: { label: earningDeductionSelectedData?.earning_type_name, value: earningDeductionSelectedData?.earning_type },\r\n                nameInPayslip: earningDeductionSelectedData?.payslip_name,\r\n                calculationType: earningDeductionSelectedData?.value_in,\r\n                calculationTypeValue: earningDeductionSelectedData?.value,\r\n                // earningName: earningDeductionSelectedData?.name,\r\n                variablePay: earningDeductionSelectedData?.is_variable_pay,\r\n                includedCTC: earningDeductionSelectedData?.include_in_ctc,\r\n                taxableComp: earningDeductionSelectedData?.is_taxable,\r\n                isActive: earningDeductionSelectedData?.is_active,\r\n\r\n            })\r\n            setRules(earningDeductionSelectedData?.rules)\r\n        }\r\n    }, [earningDeductionSelectedData])\r\n\r\n    const resetForm = () => {\r\n        setCreateUpdateEarningsFormData({\r\n            earningType: null,\r\n            nameInPayslip: '',\r\n            calculationType: '',\r\n            calculationTypeValue: '',\r\n            // earningName: '',\r\n            variablePay: \"\",\r\n            includedCTC: false,\r\n            taxableComp: false,\r\n            isActive: true\r\n        })\r\n        setErrors({})\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_EARNING_TYPE_BY_ID_STORE\"))\r\n    }\r\n\r\n    const earningTabs = [\r\n        { name: \"Earnings\", onClickFun: (id) => onTabChange(id), id: \"add_earnings\" },\r\n        { name: \"Earning Rules\", onClickFun: (id) => onTabChange(id), id: \"earning_rules\" },\r\n        { name: \"Other Configurations\", onClickFun: (id) => onTabChange(id), id: \"other_configurations\" },\r\n    ];\r\n\r\n    const deductionTabs = [\r\n        { name: \"Deduction\", onClickFun: (id) => onTabChange(id), id: \"deduction\" },\r\n        { name: \"Deduction Rules\", onClickFun: (id) => onTabChange(id), id: \"deduction_rules\" },\r\n        { name: \"Other Configurations\", onClickFun: (id) => onTabChange(id), id: \"other_configurations\" },\r\n    ];\r\n    const onTabChange = () => {\r\n\r\n    }\r\n    const checkCalculationType = () => {\r\n        switch (createUpdateEarningsFormData?.calculationType) {\r\n            case \"percentage\":\r\n                return {\r\n                    label: t(\"labels.percentage\"),\r\n                    placeholder: t(\"placeholders.percentage\")\r\n                };\r\n            default:\r\n                return {\r\n                    label: t(\"labels.amount\"),\r\n                    placeholder: t(\"placeholders.amount\")\r\n                };\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">\r\n                        {earningDeductionSelectedData ? \"Update\" : \"Add\"} {isOpenModalType == \"earnings\" ? \"Earnings\" : \"Deduction\"}</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose(\"add_earnings\")}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"offcanvas-body myRequest \">\r\n                    <CustomTabs tabs={isOpenModalType == \"earnings\" ? earningTabs : deductionTabs} type=\"earnings\" />\r\n                    <div className=\"tab-content \">\r\n                        <div className=\"tab-pane fade active show\" id={isOpenModalType == \"earnings\" ? `add_earnings` : 'deduction'}>\r\n                            <div className=\"formPanel\">\r\n                                <div className='row mb-3 pb-2' style={{ borderBottom: \"1px #C4C1BF solid\" }}>\r\n                                    <div className=\"col-md-6\" >\r\n                                        <div className=\"form-group mb-2\">\r\n                                            <Label text={isOpenModalType == \"earnings\" ?t(\"labels.earningType\"):t(\"labels.deductionType\")} required={true} />\r\n                                            <CustomSelect\r\n                                                data={isOpenModalType == \"earnings\" ?allEarningTypeData:allDeductionTypeData}\r\n                                                placeholder={isOpenModalType == \"earnings\" ?t(\"placeholders.earningType\"):t(\"placeholders.deductionType\")}\r\n                                                value={createUpdateEarningsFormData?.earningType || ''}\r\n                                                handleChange={(selectedOption) => handleFromChange(selectedOption, \"earningType\")}\r\n                                                name=\"earningType\"\r\n                                            />\r\n                                            {errors?.earningType && (\r\n                                                <CustomError text={errors.earningType} />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {/* <div className=\"col-md-6\">\r\n                                        <div className=\"form-group mb-2\">\r\n                                            <Label text={t(\"labels.name\")} required={true} />\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                placeholder={t(\"placeholders.name\")}\r\n                                                value={createUpdateEarningsFormData?.earningName}\r\n                                                name=\"earningName\"\r\n                                                onChange={(e) => handleFromChange(e)}\r\n                                            />\r\n                                        </div>\r\n                                    </div> */}\r\n                                    <div className=\"col-md-6\">\r\n                                        <div className=\"form-group mb-2\">\r\n                                            <Label text={t(\"labels.nameInPayslip\")} required={true} />\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                placeholder={t(\"placeholders.nameInPayslip\")}\r\n                                                value={createUpdateEarningsFormData?.nameInPayslip}\r\n                                                name=\"nameInPayslip\"\r\n                                                onChange={(e) => handleFromChange(e)}\r\n                                            />\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                        <div className=\"form-group mb-2\">\r\n                                            <Label text={t(\"labels.calculationType\")} required={true} />\r\n                                            <CustomRadio\r\n                                                data={ calculationTypeOptions}\r\n                                                name=\"calculationType\"\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                selectedValue={createUpdateEarningsFormData?.calculationType}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    {createUpdateEarningsFormData?.calculationType !== \"\" &&\r\n                                        createUpdateEarningsFormData?.calculationType !== \"slab_wise\"\r\n                                        && <div className=\"col-md-6\">\r\n                                            <div className=\"form-group mb-2\">\r\n                                                <Label\r\n                                                    text={checkCalculationType()?.label}\r\n                                                />\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    placeholder={checkCalculationType()?.placeholder}\r\n                                                    value={createUpdateEarningsFormData?.calculationTypeValue}\r\n                                                    name=\"calculationTypeValue\"\r\n                                                    onChange={(e) => handleFromChange(e)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>}\r\n                                    {/* <div className=\"col-md-12 row\">\r\n                                        <div className=\"form-group mb-2\">\r\n                                            <CustomStrong\r\n                                                className={\"text-primary\"}\r\n                                                text={t(\"labels.monthlySalary\")}\r\n                                                required={true}\r\n                                            />\r\n                                            <div className=\"col-md-12 mt-2\">\r\n                                                <div className=\"form-group mb-2 d-flex justify-content-between gap-3\">\r\n                                                    <span className='rupee-sign' >&#8377;</span>\r\n\r\n                                                    <Input\r\n                                                        type=\"number\"\r\n                                                        placeholder={t(\"placeholders.startSalary\")}\r\n                                                        value={createUpdateEarningsFormData?.startSalary}\r\n                                                        name=\"startSalary\"\r\n                                                        onChange={(e) => handleFromChange(e)}\r\n                                                    />\r\n                                                    <span className='mt-2' style={{ fontSize: \"16px\" }} >To</span>\r\n                                                    <Input\r\n                                                        type=\"number\"\r\n                                                        placeholder={t(\"placeholders.endSalary\")}\r\n                                                        value={createUpdateEarningsFormData?.endSalary}\r\n                                                        name=\"endSalary\"\r\n                                                        onChange={(e) => handleFromChange(e)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n                                    <div className=\"col-md-12 row\">\r\n                                        <div className=\"form-group mb-2\">\r\n                                            <CustomStrong\r\n                                                className={\"text-primary\"}\r\n                                                text={t(\"labels.maxAllowance\")}\r\n                                                required={true}\r\n                                            />\r\n                                            <div className=\"col-md-6 mt-2\">\r\n                                                <div className=\"form-group mb-2 d-flex justify-content-between gap-3\">\r\n                                                    <span className='rupee-sign' >&#8377;</span>\r\n\r\n                                                    <Input\r\n                                                        type=\"number\"\r\n                                                        placeholder={t(\"placeholders.maxAllowance\")}\r\n                                                        value={createUpdateEarningsFormData?.maxAllowance}\r\n                                                        name=\"maxAllowance\"\r\n                                                        onChange={(e) => handleFromChange(e)}\r\n                                                    />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-md-12 d-flex\">\r\n                                        <div className=\"form-group \">\r\n                                            <CustCheckbox\r\n                                                key={\"includedCTC\"}\r\n                                                id={`includedCTC`}\r\n                                                checked={createUpdateEarningsFormData?.includedCTC}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"includedCTC\"}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"form-group \">\r\n                                            <CustomStrong text={t(\"labels.includedCTC\")} className=\"text-primary\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 d-flex\">\r\n                                        <div className=\"form-group \">\r\n                                            <CustCheckbox\r\n                                                key={\"variablePay\"}\r\n                                                id={`variablePay`}\r\n                                                checked={createUpdateEarningsFormData?.variablePay}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"variablePay\"}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"form-group \">\r\n                                            <CustomStrong text={t(\"labels.variablePay\")} className=\"text-primary\" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-12 d-flex\">\r\n                                        <div className=\"form-group \">\r\n                                            <CustCheckbox\r\n                                                key={\"taxableComp\"}\r\n                                                id={`taxableComp`}\r\n                                                checked={createUpdateEarningsFormData?.taxableComp}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"taxableComp\"}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"form-group \">\r\n                                            <CustomStrong text={t(\"labels.taxableComp\")} className=\"text-primary\" />\r\n                                            <p className='text-secondary'>{t(\"paragraph.taxableCompDesc\")}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 d-flex\">\r\n                                        <div className=\"form-group \">\r\n                                            <CustCheckbox\r\n                                                key={\"isActive\"}\r\n                                                id={`isActive`}\r\n                                                checked={createUpdateEarningsFormData?.isActive}\r\n                                                handleChange={(e) => handleFromChange(e)}\r\n                                                name={\"isActive\"}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <CustomStrong text={t(\"labels.isActive\")} className=\"text-primary\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tab-pane fade\" id={isOpenModalType == \"earnings\" ? \"earning_rules\" : \"deduction_rules\"}>\r\n                            <EarningRules\r\n                                allLeaveConstantData={allLeaveConstantData}\r\n                                setRules={setRules}\r\n                                rules={rules}\r\n                            />\r\n                        </div>\r\n                        <div className=\"tab-pane fade\" id=\"other_configurations\">\r\n                            {earningTypeByIdData &&earningTypeByIdData?.length> 0 &&  <ViewsEarningTypes\r\n                                earningTypeData={earningTypeByIdData[0]}\r\n                            />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={earningDeductionSelectedData ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitCreateUpdateEarnings()}\r\n                        // isLoading={earningDeductionSelectedData ? updateEarningsPending : addEarningsPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddUpdateEarnings\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustCheckbox, CustomStrong, CustRadio, Input, Label } from '../../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { commonActions } from '../../../../core/resource/actions'\r\n\r\nconst AddUpdatePaySchedule = (props) => {\r\n    const {\r\n        isOpenModal,\r\n        selectedPayScheduleData,\r\n        handleToggleModals,\r\n        appConstantData,\r\n        handleAddPayScheduleData,\r\n        handleUpdatePaySchedule\r\n    } = props\r\n\r\n    const { t } = useCustomTranslation()\r\n\r\n    const [payScheduleFormData, setPayScheduleFormData] = useState({\r\n        payScheduleType: 'monthly',\r\n        payOn: \"last_working_day\",\r\n        payDay:'',\r\n        payPeriodStartDate:''\r\n    })\r\n\r\n    const [errors, setErrors] = useState('')\r\n    const {addPaySchedulePending,updatePaySchedulePending}=useSelector(state=>state.payroll)\r\n\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n        setPayScheduleFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: value,\r\n            };\r\n            if(value ===\"monthly\"){\r\n                updatedState[\"noOfWorkingDays\"]=''\r\n            }  if(value ===\"last_working_day\"){\r\n                updatedState[\"payDay\"]=''\r\n            }\r\n            return updatedState;\r\n        });\r\n\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n\r\n    const submitAddUpdatePaySchedule = () => {\r\n        const payload ={\r\n            pay_schedule_type:payScheduleFormData?.payScheduleType,\r\n            no_of_working_days:payScheduleFormData?.noOfWorkingDays?.value,\r\n            pay_on:payScheduleFormData?.payOn,\r\n            pay_day:payScheduleFormData?.payDay?.value ||'',\r\n            // pay_date:payScheduleFormData?.payDay?.value ||'',\r\n            pay_period_start_date:payScheduleFormData?.payPeriodStartDate,\r\n        }\r\n        if(selectedPayScheduleData){\r\n            payload[\"_id\"]= selectedPayScheduleData?.[0]?._id||''\r\n            handleUpdatePaySchedule(payload)\r\n        }else{\r\n            handleAddPayScheduleData(payload)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        if(selectedPayScheduleData&& selectedPayScheduleData?.length>0){\r\n            const selectData =selectedPayScheduleData[0]\r\n            setPayScheduleFormData({\r\n                payScheduleType: selectData?.pay_schedule_type,\r\n                noOfWorkingDays:{label:selectData?.no_of_working_days,value:selectData?.no_of_working_days},\r\n                payOn:  selectData?.pay_on,\r\n                payDay:{label:selectData?.pay_day,value:selectData?.pay_day},\r\n                payPeriodStartDate:selectData?.pay_period_start_date\r\n            })\r\n        }\r\n\r\n    },[selectedPayScheduleData])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${isOpenModal ? 'show' : ''}`} tabIndex={-1}\r\n                style={{\r\n                    visibility: isOpenModal ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\"> {selectedPayScheduleData ? \"Update\" : \"\"} Pay Schedule</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleToggleModals(\"pay_schedule\")}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"formPanel\">\r\n\r\n                        <div>\r\n                            <CustomStrong\r\n                                text={\" Calculate monthly salary based on\"}\r\n                                required={true}\r\n                                tooltipText={t(\"tooltips.calculateMonthlySalary\")}\r\n                                className={\"text-primary\"}\r\n                            />\r\n                            <div >\r\n                                <div>\r\n                                    <CustRadio\r\n                                        htmlFor=\"monthly\"\r\n                                        text=\"Actual days in a month\"\r\n                                        name=\"payScheduleType\"\r\n                                        value=\"monthly\"\r\n                                        checked={payScheduleFormData?.payScheduleType === 'monthly'}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        radioClass={\"mt-2\"}\r\n                                    />\r\n\r\n                                </div>\r\n                                <div className='d-flex'>\r\n                                    <CustRadio\r\n                                        htmlFor=\"workingDays\"\r\n                                        text=\"Organisation working days\"\r\n                                        name=\"payScheduleType\"\r\n                                        value=\"working_days\"\r\n                                        checked={payScheduleFormData?.payScheduleType === 'working_days'}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        radioClass={\"mt-2\"}\r\n                                    />\r\n                                    <div className='ms-2 me-2' style={{ width: \"113px\" }}>\r\n                                        <CustomSelect\r\n                                            data={appConstantData?.workingDays}\r\n                                            placeholder={t(\"placeholders.select\")}\r\n                                            value={payScheduleFormData?.noOfWorkingDays}\r\n                                            handleChange={(selectedOption) => handleFromChange(selectedOption, \"noOfWorkingDays\")}\r\n                                            isDisabled={payScheduleFormData?.payScheduleType === 'monthly'}\r\n                                        />\r\n                                    </div>\r\n                                    <label className='mt-2'>\r\n                                        days per month\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='mt-3'>\r\n                            <CustomStrong\r\n                                text={\" Pay On\"}\r\n                                required={true}\r\n                                className={\"text-primary\"}\r\n                            />\r\n                            <div>\r\n                                <CustRadio\r\n                                    htmlFor=\"lastWorkingDay\"\r\n                                    text=\"the last working day of\"\r\n                                    name=\"payOn\"\r\n                                    value=\"last_working_day\"\r\n                                    checked={payScheduleFormData?.payOn === 'last_working_day'}\r\n                                    handleChange={(e) => handleFromChange(e)}\r\n                                    radioClass={\"mt-2\"}\r\n                                />\r\n\r\n                            </div>\r\n                            <div className='d-flex'>\r\n                                <CustRadio\r\n                                    htmlFor=\"payMonth\"\r\n                                    text=\"day\"\r\n                                    name=\"payOn\"\r\n                                    value=\"day_of_month\"\r\n                                    checked={payScheduleFormData?.payOn === 'day_of_month'}\r\n                                    handleChange={(e) => handleFromChange(e)}\r\n                                    radioClass={\"mt-2\"}\r\n                                />\r\n                                <div className='ms-2 me-2' style={{ width: \"113px\" }}>\r\n\r\n                                    <CustomSelect\r\n                                        data={appConstantData?.monthDays}\r\n                                        placeholder={t(\"placeholders.select\")}\r\n                                        value={payScheduleFormData?.payDay}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"payDay\")}\r\n                                        isDisabled={payScheduleFormData?.payOn === 'last_working_day'}\r\n                                    />\r\n                                </div>\r\n                                <label className='mt-2'>\r\n                                    of every month\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div class=\"alert alert-secondary mt-4\" role=\"alert\">\r\n                            Note: When payday falls on a non-working day or a holiday, employees will get paid on the previous working day.\r\n                        </div> */}\r\n\r\n                        <div className=\"row mt-3\">\r\n\r\n                            <div className=\"col-md-6 row\">\r\n                                <div className='col-md-12'>\r\n                                    <div className=\"form-group mb-2\">\r\n                                        <CustomStrong\r\n                                            text={\"Start your first payroll from\"}\r\n                                            required={true}\r\n                                            className={\"text-primary \"} />\r\n                                        <Input\r\n                                            type=\"month\"\r\n                                            value={payScheduleFormData?.payPeriodStartDate}\r\n                                            name=\"payPeriodStartDate\"\r\n                                            className=\"mt-2\"\r\n                                            onChange={(e) => handleFromChange(e)}\r\n                                        />\r\n                                        {errors?.name && (\r\n                                            <CustomError text={errors.name} />\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={selectedPayScheduleData ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitAddUpdatePaySchedule()}\r\n                        isLoading={selectedPayScheduleData ? updatePaySchedulePending : addPaySchedulePending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOpenModal && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddUpdatePaySchedule\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { useCustomTranslation } from '../../../../translation';\r\nimport { CustomButton } from '../../../globalComponents';\r\nimport { CustomStrong, Icon, Label } from '../../../commanComponent';\r\nimport { CustomTable } from '../../../reuseableComponents';\r\nimport AddUpdatePaySchedule from './AddUpdatePaySchedule';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { commonActions } from '../../../../core/resource/actions';\r\nimport { dateFormate, isPermission } from '../../../../utils/common';\r\n\r\nconst PaySchedule = (props) => {\r\n    const { appConstantData, upcomingPayrollData, handleToggleModals } = props\r\n    const { t } = useCustomTranslation()\r\n    const updatePaySchedulePer =isPermission(\"update_pay_schedule\")\r\n    const addPaySchedulePer =isPermission(\"add_pay_schedule\")\r\n    const dispatch = useDispatch()\r\n    const { upcomingPayrollsPending } = useSelector(state => state.payroll)\r\n    const [payScheduleData, setPayScheduleData] = useState('')\r\n    useEffect(() => {\r\n        if (upcomingPayrollData && upcomingPayrollData?.length > 0) {\r\n            setPayScheduleData(upcomingPayrollData[0])\r\n        }\r\n    }, [upcomingPayrollData])\r\n\r\n    const arrearsEmployeeFields = [\r\n        { key: 'pay_period_formatted', label: 'PAY PERIOD' },\r\n        { key: 'pay_date_formatted', label: 'PAY DATE' },\r\n\r\n    ];\r\n    const arrearsEmployeeScopedSlots = useMemo(() => ({\r\n\r\n        // pay_period_formatted: item => (\r\n        //     <span\r\n        //         className={`badge ${getBadgeColor(item.is_active ? \"Active\" : \"Inactive\")}`}\r\n        //     >\r\n        //         {item.is_active ? \"Active\" : \"Inactive\"}\r\n        //     </span>\r\n        // ),\r\n\r\n    }), [upcomingPayrollData]);\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=' p-3'>\r\n                <div className=\"d-flex mb-2 paySchedule\">\r\n                    <h3 className='me-1'\r\n                        style={{ fontSize: \"18px\", fontWeight: 600 }}\r\n                    >\r\n                        This Organization's payroll runs on this schedule\r\n                    </h3>\r\n                    {(updatePaySchedulePer||addPaySchedulePer) && <div\r\n                        onClick={() => handleToggleModals(\"pay_schedule\", upcomingPayrollData)}\r\n                        className='editIconBg'\r\n                        > {upcomingPayrollData\r\n                            ?\r\n                            <Icon className={\"bi bi-pencil text-white\"} />\r\n                            :\r\n                            <Icon className={\"bi bi-plus-lg\"} />\r\n                            }\r\n                    </div>}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <Label text={t(\"labels.payFrequency\")} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <CustomStrong text={payScheduleData?.pay_schedule_type || \"-\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <Label text={t(\"labels.workingDays\")} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <CustomStrong text={\"Tue,Wed,Thu,Fri\"} />\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <Label text={t(\"labels.payDay\")} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <CustomStrong text={payScheduleData?.pay_day || \"-\"} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <Label text={t(\"labels.firstPayPeriod\")} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <CustomStrong\r\n                                text={payScheduleData ? dateFormate(payScheduleData?.pay_period_start_date, \"DD/MM/YYYY\") : \"-\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <Label text={t(\"labels.firstPayDate\")} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <CustomStrong\r\n                                text={payScheduleData?.pay_date ? dateFormate(payScheduleData?.pay_date, \"DD/MM/YYYY\") : \"-\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 form-group mb-3\">\r\n                        <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Upcoming Payroll</h3>\r\n                        <CustomTable\r\n                            data={payScheduleData?.upcoming_pay_periods}\r\n                            fields={arrearsEmployeeFields}\r\n                            isLoading={upcomingPayrollsPending}\r\n                            pagination={true}\r\n                            // currentPage={currentPage}\r\n                            // setCurrentPage={setCurrentPage}\r\n                            // totalPages={depList?.totalPages}\r\n                            // tableName={\"\"}\r\n                            // onSearch={handleSearch}\r\n                            isHeader={false}\r\n                            tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                            scopedSlots={arrearsEmployeeScopedSlots}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaySchedule\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustCheckbox, CustomRadio, Icon, Input, Label } from '../../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { deductionFrequency } from '../../../../utils/Constants.config'\r\n\r\nconst AddPostTaxDeduction = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        openModel,\r\n        handleOpenClose,\r\n\r\n    } = props\r\n    const [errors, setErrors] = useState({})\r\n    const [postTaxDeductionFormData, setPostTaxDeductionFormData] = useState({\r\n\r\n        nameInPayslip: '',\r\n        deductionFrequency: '',\r\n        is_active: true\r\n    })\r\n\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n\r\n        setPostTaxDeductionFormData(prevState => {\r\n            let updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n\r\n        // Clear error for the specific field being changed\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitPostTaxDeduction = async () => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetForm()\r\n        })\r\n    }, [openModel])\r\n\r\n\r\n\r\n    const resetForm = () => {\r\n        setPostTaxDeductionFormData({\r\n            nameInPayslip: '',\r\n            deductionFrequency: '',\r\n            is_active: true\r\n        })\r\n        setErrors({})\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n            tabIndex={-1}\r\n            style={{\r\n                visibility: openModel ? 'visible' : 'hidden',\r\n                width: \"600px\"\r\n            }}\r\n            id=\"interviewDetail\"\r\n        >\r\n            <div className=\"offcanvas-header\">\r\n                <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">Post Tax Deduction</h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                    onClick={\r\n                        () => handleOpenClose(\"post_tax_deduction\")\r\n                    }\r\n                />\r\n            </div>\r\n\r\n            <div className=\"offcanvas-body myRequest \">\r\n                <div className=\"formPanel\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.nameInPayslip\")} required={true} />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.nameInPayslip\")}\r\n                                    value={postTaxDeductionFormData?.nameInPayslip}\r\n                                    name=\"nameInPayslip\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.deductionFrequency\")} required={true} />\r\n                                <CustomRadio\r\n                                    data={deductionFrequency}\r\n                                    name=\"calculationType\"\r\n                                    handleChange={handleFromChange}\r\n                                    selectedValue={postTaxDeductionFormData?.deductionFrequency}\r\n                                // radioStylxe={{ display: \"flex\" }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.isActive\")} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <CustCheckbox\r\n                                    key={\"is_active\"}\r\n                                    id={`is_active`}\r\n                                    // label={\"Active\"}\r\n                                    checked={postTaxDeductionFormData?.is_active}\r\n                                    handleChange={(e) => handleFromChange(e)}\r\n                                    name={\"is_active\"}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12 mt-3\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <div class=\"alert alert-warning\" role=\"alert\">\r\n                                    <b>Note:</b>{t(\"paragraph.postTaxDeduction\")}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"offcanvas-footer\">\r\n                <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                    <CustomButton\r\n                        text={t(\"btns.submit\")}\r\n                        classNames={\"btn btn-org-gradient\"}\r\n                        handleClick={() => submitPostTaxDeduction()}\r\n                    // isLoading={selectedDeductionData ? updateDeductionPending : createDeductionPending}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPostTaxDeduction\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { CustCheckbox, CustomRadio, CustomStrong, Icon, Input, Label } from '../../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { deductionFrequency } from '../../../../utils/Constants.config'\r\n\r\nconst AddPreTaxDeduction = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        openModel,\r\n        handleOpenClose,\r\n        deductionWithData,\r\n        deductionPlanData\r\n    } = props\r\n    const [errors, setErrors] = useState({})\r\n    const [preTaxDeductionFormData, setPreTaxDeductionFormData] = useState({\r\n\r\n        nameInPayslip: '',\r\n        deductionFrequency: '',\r\n        is_active: true\r\n    })\r\n\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n\r\n        setPreTaxDeductionFormData(prevState => {\r\n            let updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n\r\n        // Clear error for the specific field being changed\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitPreTaxDeduction = async () => {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetForm()\r\n        })\r\n    }, [openModel])\r\n\r\n\r\n\r\n    const resetForm = () => {\r\n        setPreTaxDeductionFormData({\r\n            nameInPayslip: '',\r\n            deductionFrequency: '',\r\n            is_active: true\r\n        })\r\n        setErrors({})\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n            tabIndex={-1}\r\n            style={{\r\n                visibility: openModel ? 'visible' : 'hidden',\r\n                width: \"600px\"\r\n            }}\r\n            id=\"interviewDetail\"\r\n        >\r\n            <div className=\"offcanvas-header\">\r\n                <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">Pre Tax Deduction</h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                    onClick={\r\n                        () => handleOpenClose(\"pre_tax_deduction\")\r\n                    }\r\n                />\r\n            </div>\r\n\r\n            <div className=\"offcanvas-body myRequest \">\r\n                <div className=\"formPanel\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\" >\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.deductionPlan\")} required={true} />\r\n                                <CustomSelect\r\n                                    data={deductionPlanData}\r\n                                    placeholder={t(\"placeholders.deductionPlan\")}\r\n                                    value={preTaxDeductionFormData?.deductionPlan || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"deductionPlan\")}\r\n                                    name=\"deductionPlan\"\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12\" >\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.deductionWith\")} required={true} />\r\n                                <CustomSelect\r\n                                    data={deductionWithData}\r\n                                    placeholder={t(\"placeholders.deductionWith\")}\r\n                                    value={preTaxDeductionFormData?.deductionWith || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"deductionWith\")}\r\n                                    name=\"deductionWith\"\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.nameInPayslip\")} required={true} />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.nameInPayslip\")}\r\n                                    value={preTaxDeductionFormData?.nameInPayslip}\r\n                                    name=\"nameInPayslip\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.nameInPayslip && (\r\n                                    <CustomError text={errors.nameInPayslip} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12 mt-3 d-flex\">\r\n                            <div className=\"form-group\">\r\n                                <CustCheckbox\r\n                                    key={\"employerContributionCTC\"}\r\n                                    id={`employerContributionCTC`}\r\n                                    checked={preTaxDeductionFormData?.employerContributionCTC}\r\n                                    handleChange={(e) => handleFromChange(e)}\r\n                                    name={\"employerContributionCTC\"}\r\n                                />\r\n\r\n                            </div>\r\n                            <div className=\"form-group \">\r\n                                <CustomStrong text={t(\"labels.employerContributionCTC\")} className=\"text-primary\"/>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"col-md-12 mt-3 d-flex\">\r\n                            <div className=\"form-group\">\r\n                                <CustCheckbox\r\n                                    key={\"calculateProRataBasis\"}\r\n                                    id={`calculateProRataBasis`}\r\n                                    checked={preTaxDeductionFormData?.calculateProRataBasis}\r\n                                    handleChange={(e) => handleFromChange(e)}\r\n                                    name={\"calculateProRataBasis\"}\r\n                                />\r\n\r\n                            </div>\r\n                            <div className=\"form-group \">\r\n                                <CustomStrong text={t(\"labels.calculateProRataBasis\")} className=\"text-primary\"/>\r\n                                <p className='text-secondary'>Pay will be adjusted based on employee working days.</p>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12 d-flex\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <CustCheckbox\r\n                                    key={\"is_active\"}\r\n                                    id={`is_active`}\r\n                                    checked={preTaxDeductionFormData?.is_active}\r\n                                    handleChange={(e) => handleFromChange(e)}\r\n                                    name={\"is_active\"}\r\n                                />\r\n\r\n                            </div>\r\n                            <div className=\"form-group mb-3\">\r\n                                <CustomStrong text={t(\"labels.isActive\")}  className=\"text-primary\"/>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"offcanvas-footer\">\r\n                <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                    <CustomButton\r\n                        text={t(\"btns.submit\")}\r\n                        classNames={\"btn btn-org-gradient\"}\r\n                        handleClick={() => submitPreTaxDeduction()}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPreTaxDeduction\r\n","import React, { useMemo } from 'react'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { useSelector } from 'react-redux'\r\nimport { Icon } from '../../../commanComponent'\r\n\r\nconst TaxSlab = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const { handleToggleModals, taxSlabData, currentPage, setCurrentPage, toggleDeleteTaxSlabModal } = props\r\n    const { getTaxSlabPending } = useSelector(state => state.payroll)\r\n    const taxSlabFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'type', label: 'Slab Type' },\r\n        { key: 'start', label: 'Start' },\r\n        { key: 'end', label: 'End' },\r\n        { key: 'tex_percent', label: 'Tax Percent' },\r\n        { key: 'action', label: 'Action' },\r\n\r\n    ];\r\n    const taxSlabScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => handleToggleModals(\"tax_slab\", item)}\r\n                        >\r\n                            <Icon className={\"fa fa-edit\"} /> Update</span>\r\n                    </li>\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => toggleDeleteTaxSlabModal(item?._id)}\r\n                        >\r\n                            <Icon className={\"fa fa-trash\"} /> Delete</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n\r\n    }), []);\r\n    return (\r\n        <div>\r\n            <div className=\"cardHead  justify-content-between\">\r\n                <div className='d-flex'>\r\n                    <img src=\"/images/myrequest-icon.svg\" alt=\"\" width=\"35\" />\r\n                    <h3 className=\"ms-2 mt-2\">Tax Slab</h3>\r\n                </div>\r\n                <div>\r\n                    <CustomButton\r\n                        text={t(\"btns.addTaxSlab\")}\r\n                        classNames=\"btn btn-primary\"\r\n                        handleClick={() => handleToggleModals(\"tax_slab\")}\r\n                    />\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <CustomTable\r\n                data={taxSlabData?.data}\r\n                fields={taxSlabFields}\r\n                isLoading={getTaxSlabPending}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={(pageNo) => setCurrentPage(pageNo, \"tax_slab\")}\r\n                totalPages={taxSlabData?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={taxSlabScopedSlots}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaxSlab\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { CustCheckbox, Input, Label } from '../../../commanComponent'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport { taxSlabSchema } from '../../../../utils/ValidationSchema'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst AddUpdateTaxSlab = (props) => {\r\n    const {\r\n        isOpenModal,\r\n        handleToggleModals,\r\n        selectedTaxSlabData,\r\n        filteredDropdownData,\r\n        handleAddUpdateTaxSlab\r\n    } = props\r\n    const { updateTaxSlabPending, addTaxSlabPending } = useSelector(state => state.payroll)\r\n    const { t } = useCustomTranslation()\r\n    const [errors, setErrors] = useState('')\r\n    const [taxSlabFormData, setTaxSlabFormData] = useState({\r\n        slabType: null,\r\n        start: '',\r\n        end: '',\r\n        taxPercent: '',\r\n        includeCess: false,\r\n        cessPercent: '',\r\n        standardDeduction: false,\r\n        standardDeductionValue: '',\r\n        taxRelaxation: '',\r\n        constantDifference: '',\r\n        rebateAllowed: false,\r\n        rebateRules: false,\r\n        isActive: true\r\n\r\n    })\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n\r\n        setTaxSlabFormData(prevState => {\r\n            let updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n\r\n            return updatedState;\r\n        });\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    }\r\n\r\n\r\n    const submitAddUpdateTaxSlab = async () => {\r\n        const validationResponse = await validateSchema(taxSlabSchema, taxSlabFormData);\r\n        if (validationResponse.isValid) {\r\n            const {\r\n                slabType,\r\n                start,\r\n                end,\r\n                taxPercent,\r\n                includeCess,\r\n                cessPercent,\r\n                standardDeduction,\r\n                standardDeductionValue,\r\n                taxRelaxation,\r\n                constantDifference,\r\n                rebateAllowed,\r\n                rebateRules,\r\n                isActive,\r\n\r\n            } = taxSlabFormData\r\n            let payload = {\r\n                type: slabType?.label|| \"\",\r\n                start,\r\n                end,\r\n                tex_percent: taxPercent,\r\n                is_include_cess: includeCess,\r\n                cess_percent: cessPercent || 0,\r\n                is_standard_deduction: standardDeduction,\r\n                standard_deduction_value: standardDeductionValue || 0,\r\n                tex_relaxation: taxRelaxation,\r\n                constant_difference: constantDifference,\r\n                is_rebate_allowed: rebateAllowed,\r\n                rebate_rules: rebateRules || {},\r\n                is_active: isActive,\r\n            }\r\n            if (selectedTaxSlabData) {\r\n                payload[\"_id\"] = selectedTaxSlabData?._id;\r\n                handleAddUpdateTaxSlab(payload)\r\n            } else {\r\n\r\n                handleAddUpdateTaxSlab(payload)\r\n            }\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (selectedTaxSlabData) {\r\n            setTaxSlabFormData({\r\n                slabType: { label: selectedTaxSlabData?.type, value: selectedTaxSlabData?.type },\r\n                start: selectedTaxSlabData?.start,\r\n                end: selectedTaxSlabData?.end,\r\n                taxPercent: selectedTaxSlabData?.tex_percent,\r\n                includeCess: selectedTaxSlabData?.is_include_cess,\r\n                cessPercent: selectedTaxSlabData?.cess_percent,\r\n                standardDeduction: selectedTaxSlabData?.is_standard_deduction,\r\n                standardDeductionValue: selectedTaxSlabData?.standard_deduction_value,\r\n                taxRelaxation: selectedTaxSlabData?.tex_relaxation,\r\n                constantDifference: selectedTaxSlabData?.constant_difference,\r\n                rebateAllowed: selectedTaxSlabData?.is_rebate_allowed,\r\n                rebateRules: selectedTaxSlabData?.rebate_rules,\r\n                isActive: selectedTaxSlabData?.is_active,\r\n            })\r\n        }\r\n    }, [selectedTaxSlabData])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${isOpenModal ? 'show' : ''}`} tabIndex={-1}\r\n                style={{\r\n                    visibility: isOpenModal ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\"> {selectedTaxSlabData ? \"Update\" : \"Add\"} Tax Slab</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleToggleModals(\"tax_slab\")}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.slabType\")} required={true} />\r\n                                <CustomSelect\r\n                                    data={filteredDropdownData?.tax_slab}\r\n                                    placeholder={t(\"placeholders.slabType\")}\r\n                                    value={taxSlabFormData?.slabType || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"slabType\")}\r\n                                    name=\"slabType\"\r\n                                />\r\n                                {errors?.slabType && (\r\n                                    <CustomError text={errors.slabType} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.startAmount\")} required={true} />\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.taxSlabStartAmount\")}\r\n                                    value={taxSlabFormData?.start === 0 ? '0' : taxSlabFormData?.start}\r\n                                    name=\"start\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.start && (\r\n                                    <CustomError text={errors.start} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.endAmount\")} required={true} />\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.taxSlabEndAmount\")}\r\n                                    value={taxSlabFormData?.end === 0 ? '0' : taxSlabFormData?.end}\r\n                                    name=\"end\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.end && (\r\n                                    <CustomError text={errors.end} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.taxPercent\")} required={true} />\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.taxPercent\")}\r\n                                    value={taxSlabFormData?.taxPercent === 0 ? '0' : taxSlabFormData?.taxPercent}\r\n                                    name=\"taxPercent\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.taxPercent && (\r\n                                    <CustomError text={errors.taxPercent} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 \">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.taxRelaxation\")} required={true} />\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.taxRelaxation\")}\r\n                                    value={taxSlabFormData?.taxRelaxation === 0 ? \"0\" : taxSlabFormData?.taxRelaxation}\r\n                                    name=\"taxRelaxation\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.taxRelaxation && (\r\n                                    <CustomError text={errors.taxRelaxation} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 \">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.constantDifference\")} required={true} />\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.constantDifference\")}\r\n                                    value={taxSlabFormData?.constantDifference === 0 ? '0' : taxSlabFormData?.constantDifference}\r\n                                    name=\"constantDifference\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.constantDifference && (\r\n                                    <CustomError text={errors.constantDifference} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12 row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.includeCess\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"includeCess\"}\r\n                                        id={`includeCess`}\r\n                                        // label={\"Active\"}\r\n                                        checked={taxSlabFormData?.includeCess}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"includeCess\"}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        {taxSlabFormData?.includeCess && <div className=\"col-md-12 row\">\r\n                            <div className=\"col-md-6 row\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.cessPercent\")} required={true} />\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.cessPercent\")}\r\n                                        value={taxSlabFormData?.cessPercent === 0 ? '0' : taxSlabFormData?.cessPercent}\r\n                                        name=\"cessPercent\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.cessPercent && (\r\n                                        <CustomError text={errors.cessPercent} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n\r\n                        <div className=\"col-md-12 row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.standardDeduction\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"standardDeduction\"}\r\n                                        id={`standardDeduction`}\r\n                                        // label={\"Active\"}\r\n                                        checked={taxSlabFormData?.standardDeduction}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"standardDeduction\"}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {taxSlabFormData?.standardDeduction && <div className=\"col-md-12 row\">\r\n                            <div className=\"col-md-6 row\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label text={t(\"labels.standardDeductionAmount\")} required={true} />\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.standardDeduction\")}\r\n                                        value={taxSlabFormData?.standardDeductionValue === 0 ? \"0\" : taxSlabFormData?.standardDeductionValue}\r\n                                        name=\"standardDeductionValue\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {/* {errors?.standardDeductionValue && (\r\n                                        <CustomError text={errors.standardDeductionValue} />\r\n                                    )} */}\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        <div className=\"col-md-12 row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.rebateAllowed\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"rebateAllowed\"}\r\n                                        id={`rebateAllowed`}\r\n                                        // label={\"Active\"}\r\n                                        checked={taxSlabFormData?.rebateAllowed}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"rebateAllowed\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12 row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.isActive\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"isActive\"}\r\n                                        id={`isActive`}\r\n                                        // label={\"Active\"}\r\n                                        checked={taxSlabFormData?.isActive}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"isActive\"}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={selectedTaxSlabData ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitAddUpdateTaxSlab()}\r\n                            isLoading={selectedTaxSlabData ? updateTaxSlabPending : addTaxSlabPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOpenModal && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddUpdateTaxSlab\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { getBadgeColor, isPermission } from '../../../../utils/common'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport moment from 'moment'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { Icon } from '../../../commanComponent'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst InvestmentCategoryTable = (props) => {\r\n    const { addAllInvestmentCategoryPending, } = useSelector(state => state.payroll)\r\n    const updateInvestmentCategoryPer =isPermission(\"update_investment_category\")\r\n    const deleteInvestmentCategoryPer =isPermission(\"delete_investment_category\")\r\n    const {\r\n        isLoading,\r\n        toggleCreateUpdateInvestmentCategoryModal,\r\n        currentPage,\r\n        setCurrentPage,\r\n        investmentCategoryData,\r\n        handleOpenCloseModals,\r\n        toggleDeleteInvestmentModal\r\n    } = props\r\n\r\n    const fields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'category', label: 'Category Name' },\r\n        { key: 'max_limit', label: 'Max Limit' },\r\n        { key: 'max_limit_amount', label: 'Max Limit Amount' },\r\n        { key: 'is_eligible_for_old', label: 'Eligible For Old' },\r\n        { key: 'is_eligible_for_new', label: 'Eligible For New' },\r\n        ((updateInvestmentCategoryPer||deleteInvestmentCategoryPer) &&{ key: 'action', label: 'Action' })\r\n    ];\r\n\r\n\r\n    const scopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        max_limit: item => (\r\n            <span\r\n                className={`badge ${getBadgeColor(item.max_limit ? \"Active\" : \"Inactive\")}`}\r\n            >\r\n                {item.max_limit? \"Active\" : \"Inactive\"}\r\n            </span>\r\n        ),\r\n        is_eligible_for_old: item => (\r\n            <span\r\n                className={`badge ${getBadgeColor(item.is_eligible_for_old ? \"Active\" : \"Inactive\")}`}\r\n            >\r\n                {item.is_eligible_for_old ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n        ),\r\n        is_eligible_for_new: item => (\r\n            <span\r\n                className={`badge ${getBadgeColor(item.is_eligible_for_new ? \"Active\" : \"Inactive\")}`}\r\n            >\r\n             {item.is_eligible_for_new ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n        ),\r\n    action: item => (\r\n        <div className=\"btn-group actionDrp\">\r\n            <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                <i className=\"bi bi-three-dots-vertical\"></i>\r\n            </button>\r\n            <ul className=\"dropdown-menu\">\r\n                {updateInvestmentCategoryPer&&<li>\r\n                    <span className=\"dropdown-item\"\r\n                        onClick={() => handleOpenCloseModals(\"category\",item)}\r\n                    >\r\n                        <Icon className={\"bi bi-pencil-square me-1\"} />Update</span>\r\n                </li>}\r\n                {deleteInvestmentCategoryPer && <li>\r\n                    <span className=\"dropdown-item\"\r\n                        onClick={() => toggleDeleteInvestmentModal(\"category\",item)}\r\n                    >\r\n                        <Icon className={\"bi bi-trash me-1\"} />Delete</span>\r\n                </li>}\r\n            </ul>\r\n        </div>\r\n    )\r\n}), [toggleCreateUpdateInvestmentCategoryModal]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <CustomTable\r\n                data={investmentCategoryData?.data}\r\n                fields={fields}\r\n                isLoading={addAllInvestmentCategoryPending}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                // totalPages={depList?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={scopedSlots}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InvestmentCategoryTable\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { getBadgeColor, isPermission } from '../../../../utils/common'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport moment from 'moment'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { Icon } from '../../../commanComponent'\r\n\r\nconst InvestmentSubCategoryTable = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const updateInvestmentSubCategoryPer =isPermission(\"update_investment_sub_category\")\r\n    const deleteInvestmentSubCategoryPer =isPermission(\"delete_investment_sub_category\")\r\n    const {\r\n        isLoading,\r\n        toggleCreateUpdateInvestmentSubCatModal,\r\n        currentPage,\r\n        setCurrentPage,\r\n        investmentSubCategoryData,\r\n        handleOpenCloseModals,\r\n        toggleDeleteInvestmentModal\r\n    } = props\r\n\r\n\r\n\r\n    const scopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                   {updateInvestmentSubCategoryPer && <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => handleOpenCloseModals(\"sub_category\", item)}\r\n                        >\r\n                            <Icon className={\"bi bi-pencil-square me-1\"} />Update</span>\r\n                    </li>}\r\n                    {deleteInvestmentSubCategoryPer &&<li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => toggleDeleteInvestmentModal(\"sub_category\", item)}\r\n                        >\r\n                            <Icon className={\"bi bi-trash me-1\"} />Delete</span>\r\n                    </li>}\r\n                </ul>\r\n            </div>\r\n\r\n        )\r\n    }), [toggleCreateUpdateInvestmentSubCatModal]);\r\n\r\n\r\n    const fields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'category_name', label: 'Category' },\r\n        { key: 'sub_category_name', label: 'Sub Category Name' },\r\n        { key: 'input_type', label: 'Input type' },\r\n       ((updateInvestmentSubCategoryPer ||deleteInvestmentSubCategoryPer) && { key: 'action', label: 'Action' })\r\n    ];\r\n    return (\r\n        <>\r\n            <CustomTable\r\n                data={investmentSubCategoryData?.data}\r\n                fields={fields}\r\n                // isLoading={isLoading}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                // totalPages={depList?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={scopedSlots}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InvestmentSubCategoryTable\r\n","import React, { useState } from 'react'\r\nimport { CustomTabs } from '../../../reuseableComponents';\r\nimport InvestmentCategoryTable from './InvestmentCategoryTable';\r\nimport InvestmentSubCategoryTable from './InvestmentSubCategoryTable';\r\nimport { Icon } from '../../../commanComponent';\r\nimport { CustomButton } from '../../../globalComponents';\r\n\r\nconst Investments = (props) => {\r\n    const {\r\n        handleOpenCloseModals,\r\n        investmentCategoryData,\r\n        toggleDeleteInvestmentModal,\r\n        investmentSubCategoryData,\r\n    } = props\r\n\r\n\r\n    const tableTabsRequest = [\r\n        { name: \"Investment Category\", onClickFun: (id) => getPayRunsData(id), id: \"category\" },\r\n        { name: \"Investment Sub Category\", onClickFun: (id) => getPayRunsData(id), id: \"sub_category\" },\r\n\r\n    ];\r\n\r\n\r\n    const getPayRunsData = (id) => {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"tab-pane fade show active\" id=\"receivedFeedback\">\r\n            <div className=\"cardHead d-flex justify-content-between\">\r\n                <div className=\"d-flex align-items-center\">\r\n                    <img\r\n                        src=\"images/kpi-guidline.svg\"\r\n                        alt=\"\"\r\n                        width={40}\r\n                        className=\"me-2 fw-bold\"\r\n                    />\r\n                    <div className=\"\">\r\n                        <h3>Investment </h3>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className='d-flex gap-3 justify-content-end'>\r\n                        <CustomButton\r\n                            text={\"Add Category\"}\r\n                            classNames=\"btn btn-primary\"\r\n                            handleClick={() => handleOpenCloseModals(\"category\")}\r\n                            slug={\"add_investment_category\"}\r\n                            icon ={<Icon className={\"fa fa-list  me-1\"} />}\r\n                        />\r\n                        <CustomButton\r\n                            text={\"Add Sub Category \"}\r\n                            classNames=\"btn btn-success\"\r\n                            handleClick={() => handleOpenCloseModals(\"sub_category\")}\r\n                            slug={\"add_investment_sub_category\"}\r\n                            icon ={<Icon className={\"fa fa-list-alt me-1\"} />}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            <CustomTabs tabs={tableTabsRequest} type=\"rayRuns\" />\r\n            <div className=\"tab-content mykpiMain\">\r\n                <div className=\"tab-pane fade active show\" id=\"category\">\r\n\r\n                    <InvestmentCategoryTable\r\n                        investmentCategoryData={investmentCategoryData}\r\n                        handleOpenCloseModals={handleOpenCloseModals}\r\n                        toggleDeleteInvestmentModal={toggleDeleteInvestmentModal}\r\n                    />\r\n                </div>\r\n                <div className=\"tab-pane fade\" id=\"sub_category\">\r\n\r\n                    <InvestmentSubCategoryTable\r\n                        investmentSubCategoryData={investmentSubCategoryData}\r\n                        toggleDeleteInvestmentModal={toggleDeleteInvestmentModal}\r\n                        handleOpenCloseModals={handleOpenCloseModals}\r\n\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Investments\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { CustCheckbox, Input, Label } from '../../../commanComponent'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport { addUpdateInvestmentSubCategorySchema } from '../../../../utils/ValidationSchema'\r\n\r\nconst AddUpdateSubCategory = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    // const { addInvestmentSubCategoryPending, updateInvestmentSubCategoryPending } = useSelector(state => state?.dropdownMaster)\r\n    const {\r\n        selectedInvestmentSubCategory,\r\n        openModel,\r\n        handleOpenClose,\r\n        handleCreateUpdateInvestmentSubCategory,\r\n        investmentCategoryList,\r\n        allDropdownConstantData\r\n    } = props\r\n\r\n    const [errors, setErrors] = useState({})\r\n    const [formData, setFormData] = useState({\r\n        category: null,\r\n        sub_category_name: null,\r\n        input_type: null,\r\n        max_limit: false,\r\n        max_limit_amount: 0\r\n    })\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n\r\n        setFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n\r\n        // Reset error for this field\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitSubCategoryData = async () => {\r\n        const validationResponse = await validateSchema(addUpdateInvestmentSubCategorySchema, formData);\r\n        if (validationResponse.isValid) {\r\n            const {\r\n                category,\r\n                sub_category_name,\r\n                input_type,\r\n                max_limit,\r\n                max_limit_amount\r\n            } = formData\r\n            const params = {\r\n                category_id:category?.value,\r\n                sub_category_name,\r\n                input_type:input_type?.value,\r\n                max_limit,\r\n                max_limit_amount\r\n            }\r\n            handleCreateUpdateInvestmentSubCategory(params)\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetForm()\r\n        })\r\n    }, [openModel])\r\n\r\n    useEffect(() => {\r\n        if (selectedInvestmentSubCategory) {\r\n            setFormData({\r\n                category: { value: selectedInvestmentSubCategory?.category_id\r\n                    , label: selectedInvestmentSubCategory?.category_name },\r\n                sub_category_name: selectedInvestmentSubCategory?.sub_category_name,\r\n                input_type: {value:selectedInvestmentSubCategory?.input_type,label:selectedInvestmentSubCategory?.input_type},\r\n                max_limit: selectedInvestmentSubCategory?.max_limit,\r\n                max_limit_amount: selectedInvestmentSubCategory?.max_limit_amount,\r\n            })\r\n        }\r\n    }, [selectedInvestmentSubCategory])\r\n\r\n    const resetForm = () => {\r\n        setFormData({\r\n            category: null,\r\n            sub_category_name: null,\r\n            input_type: null,\r\n            max_limit: false,\r\n            max_limit_amount: 0\r\n\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{selectedInvestmentSubCategory ?t(\"headings.updateInvestmentSubCategory\") :  t(\"headings.addInvestmentSubCategory\") }</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose(\"sub_category\")}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"offcanvas-body myRequest \">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.category\")} required={true} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustomSelect\r\n                                        data={investmentCategoryList}\r\n                                        placeholder={t(\"placeholders.selectCategory\")}\r\n                                        value={formData?.category || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"category\")}\r\n                                        name=\"category\"\r\n                                    />\r\n                                    {errors?.category && (\r\n                                        <CustomError text={errors.category} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.sub_category_name\")} required={true} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.sub_category_name\")}\r\n                                        value={formData?.sub_category_name}\r\n                                        name=\"sub_category_name\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.sub_category_name && (\r\n                                        <CustomError text={errors.sub_category_name} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\"> \r\n                                    <Label text={t(\"labels.inputType\")} required={true}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustomSelect\r\n                                        data={allDropdownConstantData?.dropdownInputType}\r\n                                        placeholder={t(\"placeholders.inputType\")}\r\n                                        value={formData?.input_type || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"input_type\")}\r\n                                        name=\"input_type\"\r\n                                    />\r\n                                    {errors?.input_type && (\r\n                                        <CustomError text={errors.input_type} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.max_limit\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"max_limit\"}\r\n                                        id={`max_limit`}\r\n                                        checked={formData?.max_limit}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"max_limit\"}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {formData?.max_limit && <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.max_limit_amount\")} required={true} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.max_limit_amount\")}\r\n                                        value={formData?.max_limit_amount}\r\n                                        name=\"max_limit_amount\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.max_limit_amount && (\r\n                                        <CustomError text={errors.max_limit_amount} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        {/* <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.isActive\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"is_active\"}\r\n                                        id={`is_active`}\r\n                                        checked={formData?.is_active}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"is_active\"}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div> */}\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={selectedInvestmentSubCategory ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitSubCategoryData()}\r\n                        // isLoading={selectedInvestmentSubCategory ? updateInvestmentSubCategoryPending : addInvestmentSubCategoryPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddUpdateSubCategory\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { CustCheckbox, Input, Label } from '../../../commanComponent'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport { addUpdateInvestmentCategorySchema } from '../../../../utils/ValidationSchema'\r\n\r\nconst AddUpdateCategory = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    // const { addInvestmentCategoryPending, updateInvestmentCategoryPending } = useSelector(state => state?.dropdownMaster)\r\n    const {\r\n        selectedInvestmentCategory,\r\n        openModel,\r\n        handleOpenClose,\r\n        handleCreateUpdateInvestmentCategory,\r\n        allDropdownConstantData,\r\n    } = props\r\n\r\n    const [errors, setErrors] = useState({})\r\n    const [investmentCategoryFormData, setInvestmentCategoryFormData] = useState({\r\n        category: null,\r\n        alert:'',\r\n        max_limit: false,\r\n        max_limit_amount: 0,\r\n        is_eligible_for_old: false,\r\n        is_eligible_for_new: false,\r\n        input_type:null\r\n    })\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n\r\n        setInvestmentCategoryFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n\r\n        // Reset error for this field\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitCreateUpdateCategory = async () => {\r\n        const validationResponse = await validateSchema(addUpdateInvestmentCategorySchema, investmentCategoryFormData);\r\n        if (validationResponse.isValid) {\r\n            const {\r\n                category,\r\n                max_limit,\r\n                alert,\r\n                max_limit_amount,\r\n                is_eligible_for_old,\r\n                is_eligible_for_new,\r\n                input_type\r\n            } = investmentCategoryFormData\r\n            const params = {\r\n                category,\r\n                alert,\r\n                max_limit,\r\n                max_limit_amount,\r\n                is_eligible_for_old,\r\n                is_eligible_for_new,\r\n                input_type:input_type?.value\r\n\r\n            }\r\n            console.log(params, \"params\")\r\n            handleCreateUpdateInvestmentCategory(params)\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetForm()\r\n        })\r\n    }, [openModel])\r\n\r\n    useEffect(() => {\r\n        if (selectedInvestmentCategory !== null) {\r\n            setInvestmentCategoryFormData({\r\n                category: selectedInvestmentCategory?.category,\r\n                max_limit: selectedInvestmentCategory?.max_limit,\r\n                alert:selectedInvestmentCategory?.alert,\r\n                max_limit_amount: selectedInvestmentCategory?.max_limit_amount,\r\n                is_eligible_for_old: selectedInvestmentCategory?.is_eligible_for_old,\r\n                is_eligible_for_new: selectedInvestmentCategory?.is_eligible_for_new,\r\n                input_type:{label:selectedInvestmentCategory?.input_type,value:selectedInvestmentCategory?.input_type}\r\n\r\n            })\r\n        }\r\n    }, [selectedInvestmentCategory])\r\n    const resetForm = () => {\r\n        setInvestmentCategoryFormData({\r\n            category: null,\r\n            alert:'',\r\n            input_type:null,\r\n            max_limit: '',\r\n            max_limit_amount: '',\r\n            is_eligible_for_old: '',\r\n            is_eligible_for_new: null,\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{selectedInvestmentCategory ? t(\"headings.updateInvestmentCategory\") : t(\"headings.addInvestmentCategory\")} </h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose(\"category\")}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"offcanvas-body myRequest \">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.category\")} required={true} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.categoryName\")}\r\n                                        value={investmentCategoryFormData?.category}\r\n                                        name=\"category\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n\r\n                                    {errors?.category && (\r\n                                        <CustomError text={errors.category} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.alert\")}  />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.alert\")}\r\n                                        value={investmentCategoryFormData?.alert}\r\n                                        name=\"alert\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.alert && (\r\n                                        <CustomError text={errors.alert} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\"> \r\n                                    <Label text={t(\"labels.inputType\")}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustomSelect\r\n                                        data={allDropdownConstantData?.dropdownInputType}\r\n                                        placeholder={t(\"placeholders.inputType\")}\r\n                                        value={investmentCategoryFormData?.input_type || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"input_type\")}\r\n                                        name=\"input_type\"\r\n                                    />\r\n                                    {errors?.input_type && (\r\n                                        <CustomError text={errors.input_type} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.max_limit\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"max_limit\"}\r\n                                        id={`max_limit`}\r\n                                        checked={investmentCategoryFormData?.max_limit}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"max_limit\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {investmentCategoryFormData?.max_limit && <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.max_limit_amount\")} required={true} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.max_limit_amount\")}\r\n                                        value={investmentCategoryFormData?.max_limit_amount}\r\n                                        name=\"max_limit_amount\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.max_limit_amount && (\r\n                                        <CustomError text={errors.max_limit_amount} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        <div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.is_eligible_for_new\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"is_eligible_for_new\"}\r\n                                        id={`is_eligible_for_new`}\r\n                                        checked={investmentCategoryFormData?.is_eligible_for_new}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"is_eligible_for_new\"}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.is_eligible_for_old\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"is_eligible_for_old\"}\r\n                                        id={`is_eligible_for_old`}\r\n                                        checked={investmentCategoryFormData?.is_eligible_for_old}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"is_eligible_for_old\"}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        {/* <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Label text={t(\"labels.isActive\")} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustCheckbox\r\n                                        key={\"is_active\"}\r\n                                        id={`is_active`}\r\n                                        checked={investmentCategoryFormData?.is_active}\r\n                                        handleChange={(e) => handleFromChange(e)}\r\n                                        name={\"is_active\"}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div> */}\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={selectedInvestmentCategory !== null ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitCreateUpdateCategory()}\r\n                        // isLoading={selectedInvestmentCategory ? updateInvestmentCategoryPending : addInvestmentCategoryPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddUpdateCategory\r\n","import React, { useEffect, useState } from 'react'\r\nimport CustomCards from '../../reuseableComponents/CustomCards'\r\nimport SalaryComponent from './salaryComponent/SalaryComponent'\r\nimport AddUpdateEarnings from './salaryComponent/AddUpdateEarnings'\r\nimport PaySchedule from './paySchedule/PaySchedule'\r\nimport AddPostTaxDeduction from './salaryComponent/AddPostTaxDeduction'\r\nimport AddPreTaxDeduction from './salaryComponent/AddPreTaxDeduction'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { commonActions, dropdownMasterActions, leaveAction, payrollActions } from '../../../core/resource/actions'\r\nimport AddUpdatePaySchedule from './paySchedule/AddUpdatePaySchedule'\r\nimport TaxSlab from './taxSlab/TaxSlab'\r\nimport AddUpdateTaxSlab from './taxSlab/AddUpdateTaxSlab'\r\nimport { pagination } from '../../../utils/Constants.config'\r\nimport ApproveRejectModal from '../../modal/ApproveRejectModal'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport Investments from './itDeclaration/Investments'\r\nimport AddUpdateSubCategory from './itDeclaration/AddUpdateSubCategory'\r\nimport AddUpdateCategory from './itDeclaration/AddUpdateCategory'\r\nimport { setFilterDropdownData } from '../../../utils/common'\r\n\r\nconst PayrollSetting = () => {\r\n  const [activeCard, setActiveCard] = useState('salary_component')\r\n  const { t } = useCustomTranslation()\r\n  const dispatch = useDispatch()\r\n  const {\r\n    addEarningsPending,\r\n    addEarningsRes,\r\n    addEarningsError,\r\n\r\n    updateEarningsPending,\r\n    updateEarningsRes,\r\n    updateEarningsError,\r\n\r\n    getEarningsPending,\r\n    getEarningsRes,\r\n    getEarningsError,\r\n\r\n    addDeductionsPending,\r\n    addDeductionsRes,\r\n    addDeductionsError,\r\n\r\n    updateDeductionsPending,\r\n    updateDeductionsRes,\r\n    updateDeductionsError,\r\n\r\n    getDeductionsPending,\r\n    getDeductionsRes,\r\n    getDeductionsError,\r\n\r\n    getAllEarningTypePending,\r\n    getAllEarningTypeRes,\r\n    getAllEarningTypeError,\r\n\r\n    getAllDeductionTypePending,\r\n    getAllDeductionTypeRes,\r\n    getAllDeductionTypeError,\r\n\r\n    getEarningTypeByIdPending,\r\n    getEarningTypeByIdRes,\r\n    getEarningTypeByIdError,\r\n\r\n    addPaySchedulePending,\r\n    addPayScheduleRes,\r\n    addPayScheduleError,\r\n\r\n    updatePaySchedulePending,\r\n    updatePayScheduleRes,\r\n    updatePayScheduleError,\r\n\r\n    upcomingPayrollsPending,\r\n    upcomingPayrollsRes,\r\n    upcomingPayrollsError,\r\n\r\n    addTaxSlabPending,\r\n    addTaxSlabRes,\r\n    addTaxSlabError,\r\n\r\n    updateTaxSlabPending,\r\n    updateTaxSlabRes,\r\n    updateTaxSlabError,\r\n\r\n    getTaxSlabPending,\r\n    getTaxSlabRes,\r\n    getTaxSlabError,\r\n\r\n    deleteTaxSlabPending,\r\n    deleteTaxSlabRes,\r\n    deleteTaxSlabError,\r\n\r\n    addInvestmentCategoryPending,\r\n    addInvestmentCategoryRes,\r\n    addInvestmentCategoryError,\r\n\r\n    updateInvestmentCategoryPending,\r\n    updateInvestmentCategoryRes,\r\n    updateInvestmentCategoryError,\r\n\r\n    getInvestmentCategoryPending,\r\n    getInvestmentCategoryRes,\r\n    getInvestmentCategoryError,\r\n\r\n    getAllInvestmentCategoryPending,\r\n    getAllInvestmentCategoryRes,\r\n    getAllInvestmentCategoryError,\r\n\r\n    deleteInvestmentCategoryPending,\r\n    deleteInvestmentCategoryRes,\r\n    deleteInvestmentCategoryError,\r\n\r\n    addInvestmentSubCategoryPending,\r\n    addInvestmentSubCategoryRes,\r\n    addInvestmentSubCategoryError,\r\n\r\n    updateInvestmentSubCategoryPending,\r\n    updateInvestmentSubCategoryRes,\r\n    updateInvestmentSubCategoryError,\r\n\r\n    getInvestmentSubCategoryPending,\r\n    getInvestmentSubCategoryRes,\r\n    getInvestmentSubCategoryError,\r\n\r\n    getAllInvestmentSubCategoryPending,\r\n    getAllInvestmentSubCategoryRes,\r\n    getAllInvestmentSubCategoryError,\r\n\r\n    deleteInvestmentSubCategoryPending,\r\n    deleteInvestmentSubCategoryRes,\r\n    deleteInvestmentSubCategoryError,\r\n\r\n  } = useSelector(state => state.payroll)\r\n\r\n  const {\r\n    getDropdownMasterConstantDataPending,\r\n    getDropdownMasterConstantDataRes,\r\n    getDropdownMasterConstantDataError,\r\n\r\n  } = useSelector(state => state.dropdownMaster)\r\n\r\n  const {\r\n    getLeaveConstantDataPending,\r\n    getLeaveConstantDataRes,\r\n    getLeaveConstantDataError,\r\n  } = useSelector(state => state.leave)\r\n\r\n  const {\r\n    getAppConstantDataPending,\r\n    getAppConstantDataRes,\r\n    getAppConstantDataError,\r\n  } = useSelector(state => state.common)\r\n  const {\r\n    getFilteredDropdownDataError,\r\n    getFilteredDropdownDataRes,\r\n    getFilteredDropdownDataPending\r\n  } = useSelector(state => state.dropdownMaster)\r\n\r\n  const [isOpenAddUpEarningModal, setIsOpenAddUpEarningModal] = useState(false)\r\n  const [isOpenAddPostTaxDeductionModal, setIsOpenAddPostTaxDeductionModal] = useState(false)\r\n  const [isOpenAddPreTaxDeductionModal, setIsOpenAddPreTaxDeductionModal] = useState(false)\r\n  const [currentPage, setCurrentPage] = useState({\r\n    taxSlabCurrPage: 1,\r\n    investCategoryCurrPage: 1,\r\n    investmentSubCategoryCurrPage:1\r\n  })\r\n  const [allDeductionTypeData, setAllDeductionTypeData] = useState('')\r\n  const [allEarningTypeData, setAllEarningTypeData] = useState('')\r\n  const [earningTypeByIdData, setEarningTypeByIdData] = useState('')\r\n  const [allLeaveConstantData, setAllLeaveConstantData] = useState('')\r\n  const [earningData, setEarningData] = useState('')\r\n  const [isOpenModalType, setIsOpenModalType] = useState('earnings')\r\n  const [deductionsData, setDeductionsData] = useState('earnings')\r\n  const [earningDeductionSelectedData, setEarningDeductionSelectedData] = useState('')\r\n  const [appConstantData, setAppConstantData] = useState('')\r\n  const [upcomingPayrollData, setUpcomingPayrollData] = useState('')\r\n  const [isOpenPayScheduleModal, setIsOpenPayScheduleModal] = useState(false)\r\n  const [isOpenTaxSlabModal, setIsOpenTaxSlabModal] = useState(false)\r\n  const [taxSlabData, setTaxSlabData] = useState('')\r\n  const [selectedPayScheduleData, setSelectedPayScheduleData] = useState('')\r\n  const [selectedTaxSlabData, setSelectedTaxSlabData] = useState('')\r\n  const [filteredDropdownData, setFilteredDropdownData] = useState({})\r\n  const [deleteTaxSlabId, setDeleteTaxSlabId] = useState('')\r\n  const [isShowDeleteTaxSlabModal, setIsShowDeleteTaxSlabModal] = useState(false)\r\n  const [isShowDeleteInvestmentModal, setIsShowDeleteInvestmentModal] = useState(false)\r\n  const [investmentCategoryListData, setInvestmentCategoryListData] = useState([])\r\n  const [openModals, setOpenModals] = useState({\r\n    isOpenCategoryModal: false,\r\n    isOpenSubCategoryModal: false\r\n  })\r\n  const [selectedInvestmentData, setSelectedInvestmentData] = useState({\r\n    categoryData: null,\r\n    subCategoryData: null\r\n  })\r\n  const [investmentCategoryData, setInvestmentCategoryData] = useState('')\r\n  const [investmentSubCategoryData, setInvestmentSubCategoryData] = useState('')\r\n  const [investmentSubCategoryList, setInvestmentSubCategoryList] = useState('')\r\n  const [allDropdownConstantData,setAllDropdownConstantData]=useState('')\r\n\r\n\r\n  const payrollSettingCard = [\r\n    {\r\n      name: \"Salary Component\",\r\n      imgUrl: \"images/applyleavesIcon.svg\",\r\n      onClickFunc: (id) => handleActiveTab(id),\r\n      id: \"salary_component\",\r\n      permissionId:\"salary_component\"\r\n    },\r\n    {\r\n      name: \"Pay Schedule\",\r\n      imgUrl: \"images/bonus-icon.svg\",\r\n      onClickFunc: (id) => handleActiveTab(id),\r\n      id: \"pay_schedule\",\r\n      permissionId:\"pay_schedule\"\r\n    },\r\n    {\r\n      name: \"IT Declaration\",\r\n      imgUrl: \"images/attendancelogIcon.svg\",\r\n      onClickFunc: (id) => handleActiveTab(id),\r\n      id: \"it_declaration\",\r\n      permissionId:\"it_declaration\"\r\n    },\r\n    {\r\n      name: \"Tax Slab\",\r\n      imgUrl: \"images/attendancelogIcon.svg\",\r\n      onClickFunc: (id) => handleActiveTab(id),\r\n      id: \"tax_slab\",\r\n      permissionId:\"tax_slab\"\r\n    },\r\n  ]\r\n\r\n  /* --------------Handle Tab Change in Setting------------- */\r\n\r\n  const handleActiveTab = (type) => {\r\n    if (type === \"pay_schedule\") {\r\n      upcomingPayrollsData()\r\n    } else if (type === \"tax_slab\") {\r\n      handleTaxSlabData()\r\n    } else if (type === \"it_declaration\") {\r\n      getInvestmentCategoryData()\r\n      getInvestmentSubCategoryData()\r\n    }\r\n    setActiveCard(type)\r\n    setCurrentPage({\r\n      taxSlabCurrPage: 1,\r\n      investCategoryCurrPage: 1\r\n    })\r\n  }\r\n\r\n  const handleToggleModals = (type, data) => {\r\n    if (type === \"add_earnings\") {\r\n      if (data) {\r\n        setEarningDeductionSelectedData(data)\r\n      } else {\r\n        setEarningDeductionSelectedData('')\r\n      }\r\n      setIsOpenAddUpEarningModal(!isOpenAddUpEarningModal)\r\n      setIsOpenModalType(\"earnings\")\r\n    }\r\n    else if (type === \"deduction\") {\r\n      if (data) {\r\n        setEarningDeductionSelectedData(data)\r\n      }\r\n      else {\r\n        setEarningDeductionSelectedData('')\r\n      }\r\n      setIsOpenAddUpEarningModal(!isOpenAddUpEarningModal)\r\n      setIsOpenModalType(\"deduction\")\r\n    }\r\n    else if (type === \"post_tax_deduction\") {\r\n      setIsOpenAddPostTaxDeductionModal(!isOpenAddPostTaxDeductionModal)\r\n    }\r\n    else if (type === \"pre_tax_deduction\") {\r\n      setIsOpenAddPreTaxDeductionModal(!isOpenAddPreTaxDeductionModal)\r\n    }\r\n    else if (type === \"pay_schedule\") {\r\n      if (data) {\r\n        setSelectedPayScheduleData(data)\r\n      }\r\n      else {\r\n        setSelectedPayScheduleData('')\r\n      }\r\n      setIsOpenPayScheduleModal(!isOpenPayScheduleModal)\r\n    }\r\n    else if (type === \"tax_slab\") {\r\n      if (data) {\r\n        setSelectedTaxSlabData(data)\r\n      }\r\n      else {\r\n        setSelectedTaxSlabData('')\r\n      }\r\n      setIsOpenTaxSlabModal(!isOpenTaxSlabModal)\r\n    }\r\n  }\r\n\r\n  /*----------- Handle Page change (Pagination of all) ------------- */\r\n\r\n  const handlePageChange = (pageNo, type) => {\r\n    if (type === \"tax_slab\") {\r\n      setCurrentPage(pre => ({\r\n        ...pre,\r\n        taxSlabCurrPage: pageNo\r\n      }))\r\n      handleTaxSlabData(pageNo)\r\n    }\r\n   \r\n  }\r\n\r\n  const handlePageChangeITDeclaration = (pageNo, type) => {\r\n    if (type === \"category\") {\r\n      setCurrentPage(pre => ({\r\n        ...pre,\r\n        investCategoryCurrPage: pageNo\r\n      }))\r\n      getInvestmentCategoryData(pageNo)\r\n    }else if(type ===\"sub_category\"){\r\n      setCurrentPage(pre => ({\r\n        ...pre,\r\n        investmentSubCategoryCurrPage: pageNo\r\n      }))\r\n      getInvestmentSubCategoryData(pageNo)\r\n    }\r\n   \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  /* Add Earning  */\r\n  const addEarnings = (payload) => {\r\n    dispatch(payrollActions.addEarningsRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!addEarningsPending) {\r\n      if (addEarningsError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_EARNING_STORE\"))\r\n        return;\r\n      }\r\n      if (addEarningsRes) {\r\n        if (addEarningsRes?.code === 200) {\r\n          getEarnings()\r\n          handleToggleModals(\"add_earnings\")\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_EARNING_STORE\"))\r\n\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    addEarningsRes,\r\n    addEarningsError,\r\n    addEarningsPending\r\n  ]);\r\n\r\n  /* Update Earning  */\r\n  const updateEarnings = (payload) => {\r\n    dispatch(payrollActions.updateEarningsRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!updateEarningsPending) {\r\n      if (updateEarningsError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_EARNING_STORE\"))\r\n        return;\r\n      }\r\n      if (updateEarningsRes) {\r\n        if (updateEarningsRes?.code === 200) {\r\n          getEarnings()\r\n          setEarningDeductionSelectedData('')\r\n          handleToggleModals(\"add_earnings\")\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_EARNING_STORE\"))\r\n\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    updateEarningsRes,\r\n    updateEarningsError,\r\n    updateEarningsPending\r\n  ]);\r\n\r\n\r\n\r\n\r\n  /* update Deduction Types */\r\n  const updateDeductions = (payload) => {\r\n    dispatch(payrollActions.updateDeductionsRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!updateDeductionsPending) {\r\n      if (updateDeductionsError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_DEDUCTIONS_STORE\"))\r\n        return;\r\n      }\r\n      if (updateDeductionsRes) {\r\n        if (updateDeductionsRes?.code === 200) {\r\n          handleToggleModals(\"deduction\")\r\n          setEarningDeductionSelectedData('')\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_DEDUCTIONS_STORE\"))\r\n\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    updateDeductionsRes,\r\n    updateDeductionsError,\r\n    updateDeductionsPending\r\n  ]);\r\n\r\n  /* Add Deduction Types */\r\n  const addDeductions = (payload) => {\r\n    dispatch(payrollActions.addDeductionsRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!addDeductionsPending) {\r\n      if (addDeductionsError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_DEDUCTIONS_STORE\"))\r\n        return;\r\n      }\r\n      if (addDeductionsRes) {\r\n        if (addDeductionsRes?.code === 200) {\r\n          handleToggleModals(\"deduction\")\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_DEDUCTIONS_STORE\"))\r\n\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    addDeductionsRes,\r\n    addDeductionsError,\r\n    addDeductionsPending\r\n  ]);\r\n\r\n  useEffect(() => {\r\n\r\n    getLeaveConstantData()\r\n    getAllEarningType()\r\n    getEarnings()\r\n    getDeductions()\r\n    getAllDeductionType()\r\n    getDropdownFilteredData()\r\n    getDropdownMasterConstantData()\r\n  }, [])\r\n\r\n\r\n  /* Get Leave Constant Data */\r\n  const getLeaveConstantData = (params) => {\r\n    dispatch(leaveAction.getLeaveConstantDataRequest(params));\r\n  }\r\n  useEffect(() => {\r\n    if (!getLeaveConstantDataPending) {\r\n      if (getLeaveConstantDataError) {\r\n        return;\r\n      }\r\n      if (getLeaveConstantDataRes) {\r\n        if (getLeaveConstantDataRes?.code === 200) {\r\n          const getLeaveConstantData = getLeaveConstantDataRes?.data\r\n          setAllLeaveConstantData(getLeaveConstantData)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getLeaveConstantDataRes,\r\n    getLeaveConstantDataError,\r\n    getLeaveConstantDataPending\r\n  ]);\r\n\r\n  /* Get All Earning Type Data */\r\n  const getAllEarningType = () => {\r\n    dispatch(payrollActions.getAllEarningTypeRequest());\r\n  }\r\n  useEffect(() => {\r\n    if (!getAllEarningTypePending) {\r\n      if (getAllEarningTypeError) {\r\n        return;\r\n      }\r\n      if (getAllEarningTypeRes) {\r\n        if (getAllEarningTypeRes?.code === 200) {\r\n          const getAllEarningTypeResData = getAllEarningTypeRes?.data\r\n          setAllEarningTypeData(getAllEarningTypeResData)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllEarningTypeRes,\r\n    getAllEarningTypeError,\r\n    getAllEarningTypePending\r\n  ]);\r\n\r\n  /* Get All Deduction Type Data */\r\n  const getAllDeductionType = () => {\r\n    dispatch(payrollActions.getAllDeductionTypeRequest());\r\n  }\r\n  useEffect(() => {\r\n    if (!getAllDeductionTypePending) {\r\n      if (getAllDeductionTypeError) {\r\n        return;\r\n      }\r\n      if (getAllDeductionTypeRes) {\r\n        if (getAllDeductionTypeRes?.code === 200) {\r\n          const getAllDeductionTypeResData = getAllDeductionTypeRes?.data\r\n          setAllDeductionTypeData(getAllDeductionTypeResData)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllDeductionTypeRes,\r\n    getAllDeductionTypeError,\r\n    getAllDeductionTypePending\r\n  ]);\r\n\r\n\r\n  /* Get All Earning Type Data */\r\n  const getEarningTypeById = (id) => {\r\n    dispatch(payrollActions.getEarningTypeByIdRequest({\r\n      id\r\n    }));\r\n  }\r\n  useEffect(() => {\r\n    if (!getEarningTypeByIdPending) {\r\n      if (getEarningTypeByIdError) {\r\n        return;\r\n      }\r\n      if (getEarningTypeByIdRes) {\r\n        if (getEarningTypeByIdRes?.code === 200) {\r\n          const getEarningTypeByIdResData = getEarningTypeByIdRes?.data\r\n          setEarningTypeByIdData(getEarningTypeByIdResData)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllEarningTypeRes,\r\n    getEarningTypeByIdError,\r\n    getEarningTypeByIdPending\r\n  ]);\r\n\r\n\r\n  /* Get All Earning Type Data */\r\n  const getEarnings = (id) => {\r\n    dispatch(payrollActions.getEarningsRequest());\r\n  }\r\n  useEffect(() => {\r\n    if (!getEarningsPending) {\r\n      if (getEarningsError) {\r\n        return;\r\n      }\r\n      if (getEarningsRes) {\r\n        if (getEarningsRes?.code === 200) {\r\n          const getEarningsResData = getEarningsRes?.data\r\n          setEarningData(getEarningsResData)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllEarningTypeRes,\r\n    getEarningsError,\r\n    getEarningsPending\r\n  ]);\r\n\r\n\r\n  /* Get Deductions Data */\r\n  const getDeductions = (id) => {\r\n    dispatch(payrollActions.getDeductionsRequest());\r\n  }\r\n  useEffect(() => {\r\n    if (!getDeductionsPending) {\r\n      if (getDeductionsError) {\r\n        return;\r\n      }\r\n      if (getDeductionsRes) {\r\n        if (getDeductionsRes?.code === 200) {\r\n          const getDeductionsResData = getDeductionsRes?.data\r\n          setDeductionsData(getDeductionsResData)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getDeductionsRes,\r\n    getDeductionsError,\r\n    getDeductionsPending\r\n  ]);\r\n\r\n  /*Get App Constant Data */\r\n  useEffect(() => {\r\n    getAppConstantData()\r\n    getInvestmentCategory()\r\n  }, [])\r\n  const getAppConstantData = () => {\r\n    dispatch(commonActions.getAppConstantDataRequest())\r\n  }\r\n  useEffect(() => {\r\n    if (!getAppConstantDataPending) {\r\n      if (getAppConstantDataError) {\r\n        return;\r\n      }\r\n      if (getAppConstantDataRes) {\r\n        if (getAppConstantDataRes?.code === 200) {\r\n          setAppConstantData(getAppConstantDataRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAppConstantDataRes,\r\n    getAppConstantDataError,\r\n    getAppConstantDataPending\r\n  ]);\r\n\r\n  /* Add Pay Schedule  */\r\n\r\n  const handleAddPayScheduleData = (payload) => {\r\n    dispatch(payrollActions.addPayScheduleRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!addPaySchedulePending) {\r\n      if (addPayScheduleError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_PAY_SCHEDULE_STORE\"))\r\n        return;\r\n      }\r\n      if (addPayScheduleRes) {\r\n        if (addPayScheduleRes?.code === 200) {\r\n          handleToggleModals(\"pay_schedule\")\r\n          upcomingPayrollsData()\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_PAY_SCHEDULE_STORE\"))\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    addPayScheduleRes,\r\n    addPayScheduleError,\r\n    addPaySchedulePending\r\n  ]);\r\n\r\n  /* Update Pay Schedule  */\r\n  const handleUpdatePaySchedule = (payload) => {\r\n    dispatch(payrollActions.updatePayScheduleRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!updatePaySchedulePending) {\r\n      if (updatePayScheduleError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_PAY_SCHEDULE_STORE\"))\r\n        return;\r\n      }\r\n      if (updatePayScheduleRes) {\r\n        if (updatePayScheduleRes?.code === 200) {\r\n          handleToggleModals(\"pay_schedule\")\r\n          upcomingPayrollsData()\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_PAY_SCHEDULE_STORE\"))\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    updatePayScheduleRes,\r\n    updatePayScheduleError,\r\n    updatePaySchedulePending\r\n  ]);\r\n\r\n\r\n  /* Update Pay Schedule  */\r\n  const upcomingPayrollsData = () => {\r\n    dispatch(payrollActions.upcomingPayrollsRequest())\r\n  }\r\n  useEffect(() => {\r\n    if (!upcomingPayrollsPending) {\r\n      if (upcomingPayrollsError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPCOMING_PAY_ROLL_STORE\"))\r\n        return;\r\n      }\r\n      if (upcomingPayrollsRes) {\r\n        if (upcomingPayrollsRes?.code === 200) {\r\n          setUpcomingPayrollData(upcomingPayrollsRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    upcomingPayrollsRes,\r\n    upcomingPayrollsError,\r\n    upcomingPayrollsPending\r\n  ]);\r\n\r\n  /* Add Tax Slab   */\r\n  const handleAddUpdateTaxSlab = (payload) => {\r\n    if (selectedTaxSlabData) {\r\n      dispatch(payrollActions.updateTaxSlabRequest(payload))\r\n    } else {\r\n      dispatch(payrollActions.addTaxSlabRequest(payload))\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (!addTaxSlabPending) {\r\n      if (addTaxSlabError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_TAX_SLAB_STORE\"))\r\n        return;\r\n      }\r\n      if (addTaxSlabRes) {\r\n        if (addTaxSlabRes?.code === 200) {\r\n          // setUpcomingPayrollData(addTaxSlabRes?.data)\r\n          handleToggleModals(\"tax_slab\")\r\n          handleTaxSlabData()\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_TAX_SLAB_STORE\"))\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    addTaxSlabRes,\r\n    addTaxSlabError,\r\n    addTaxSlabPending\r\n  ]);\r\n\r\n  /* Add Tax Slab   */\r\n\r\n  useEffect(() => {\r\n    if (!updateTaxSlabPending) {\r\n      if (updateTaxSlabError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_TAX_SLAB_STORE\"))\r\n        return;\r\n      }\r\n      if (updateTaxSlabRes) {\r\n        if (updateTaxSlabRes?.code === 200) {\r\n          handleToggleModals(\"tax_slab\")\r\n          handleTaxSlabData()\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_TAX_SLAB_STORE\"))\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    updateTaxSlabRes,\r\n    updateTaxSlabError,\r\n    updateTaxSlabPending\r\n  ]);\r\n\r\n  /* Get Tax Slab Data   */\r\n  const handleTaxSlabData = (pageNo) => {\r\n    const payload = {\r\n      page: pageNo || currentPage?.taxSlabCurrPage,\r\n      limit: pagination?.limit\r\n\r\n    }\r\n    dispatch(payrollActions.getTaxSlabRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!getTaxSlabPending) {\r\n      if (getTaxSlabError) {\r\n        return;\r\n      }\r\n      if (getTaxSlabRes) {\r\n        if (getTaxSlabRes?.code === 200) {\r\n          setTaxSlabData(getTaxSlabRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getTaxSlabRes,\r\n    getTaxSlabError,\r\n    getTaxSlabPending\r\n  ]);\r\n\r\n  //dropdown master filter \r\n  const getDropdownFilteredData = () => {\r\n    const category = ['tax_slab']\r\n    let params = { category: category }\r\n\r\n      dispatch(dropdownMasterActions.getFilteredDropdownDataRequest(params))\r\n   \r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getFilteredDropdownDataPending) {\r\n      if (getFilteredDropdownDataError) {\r\n        return;\r\n      }\r\n      if (getFilteredDropdownDataRes) {\r\n        if (getFilteredDropdownDataRes?.code === 200) {\r\n          const updateData = setFilterDropdownData(getFilteredDropdownDataRes?.data?.data)\r\n          setFilteredDropdownData(updateData);\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getFilteredDropdownDataRes,\r\n    getFilteredDropdownDataError,\r\n    getFilteredDropdownDataPending\r\n  ]);\r\n\r\n\r\n  /* Delete Tax Slab  */\r\n  const onDeleteCancelTaxSlab = (type) => {\r\n    if (type) {\r\n      const params = {\r\n        _id: deleteTaxSlabId\r\n      }\r\n      dispatch(payrollActions?.deleteTaxSlabRequest(params))\r\n    } else {\r\n      toggleDeleteTaxSlabModal()\r\n    }\r\n  }\r\n  const toggleDeleteTaxSlabModal = (id) => {\r\n    if (id) {\r\n      setDeleteTaxSlabId(id)\r\n    }\r\n    setIsShowDeleteTaxSlabModal(!isShowDeleteTaxSlabModal)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!deleteTaxSlabPending) {\r\n      if (deleteTaxSlabError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_DELETE_TAX_SLAB_STORE\"))\r\n        return;\r\n      }\r\n      if (deleteTaxSlabRes) {\r\n        if (deleteTaxSlabRes?.code === 200) {\r\n          toggleDeleteTaxSlabModal()\r\n          handleTaxSlabData()\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_DELETE_TAX_SLAB_STORE\"))\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    deleteTaxSlabRes,\r\n    deleteTaxSlabError,\r\n    deleteTaxSlabPending\r\n  ]);\r\n\r\n  /* -------------------It Declaration Section------------------- */\r\n\r\n\r\n  const handleOpenCloseModals = (modalType, data) => {\r\n    if (modalType === \"category\") {\r\n      if (data) {\r\n        setSelectedInvestmentData(pre => ({\r\n          ...pre,\r\n          categoryData: data\r\n        }))\r\n      } else {\r\n        setSelectedInvestmentData(pre => ({\r\n          ...pre,\r\n          categoryData: null\r\n        }))\r\n      }\r\n      setOpenModals(pre => ({\r\n        ...pre,\r\n        isOpenCategoryModal: !pre?.isOpenCategoryModal\r\n      }))\r\n    } else if (modalType === \"sub_category\") {\r\n\r\n      if (data) {\r\n        setSelectedInvestmentData(pre => ({\r\n          ...pre,\r\n          subCategoryData: data\r\n        }))\r\n      } else {\r\n        setSelectedInvestmentData(pre => ({\r\n          ...pre,\r\n          subCategoryData: null\r\n        }))\r\n      }\r\n\r\n      setOpenModals(pre => ({\r\n        ...pre,\r\n        isOpenSubCategoryModal: !pre?.isOpenSubCategoryModal\r\n      }))\r\n    }\r\n\r\n  }\r\n  const toggleDeleteInvestmentModal = (modalType, data) => {\r\n    if (modalType === \"category\") {\r\n      if (data) {\r\n        setSelectedInvestmentData(pre => ({\r\n          ...pre,\r\n          categoryData: data\r\n        }))\r\n      } else {\r\n        setSelectedInvestmentData(pre => ({\r\n          ...pre,\r\n          categoryData: null\r\n        }))\r\n      }\r\n    }\r\n    else if(modalType === \"sub_category\"){\r\n      if (data) {\r\n        setSelectedInvestmentData(pre => ({\r\n          ...pre,\r\n          subCategoryData: data\r\n        }))\r\n      } else {\r\n        setSelectedInvestmentData(pre => ({\r\n          ...pre,\r\n          subCategoryData: null\r\n        }))\r\n      }\r\n    }\r\n    setIsShowDeleteInvestmentModal(!isShowDeleteInvestmentModal)\r\n  }\r\n  const onDeleteCancelInvestmentCatSub = (type) => {\r\n    if (type) {\r\n     \r\n      if (selectedInvestmentData?.categoryData) {\r\n        const params = {\r\n          _id: selectedInvestmentData?.categoryData?._id\r\n        }\r\n        dispatch(payrollActions?.deleteInvestmentCategoryRequest(params))\r\n      }\r\n      if (selectedInvestmentData?.subCategoryData) {\r\n        const params = {\r\n          _id: selectedInvestmentData?.subCategoryData?._id\r\n        }\r\n        dispatch(payrollActions?.deleteInvestmentSubCategoryRequest(params))\r\n      }\r\n    } else {\r\n      toggleDeleteInvestmentModal()\r\n    }\r\n  }\r\n  /* ----------------Investment Category------------*/\r\n\r\n  const clearInvestmentStoreData = (type) => {\r\n    if(type ===\"category\"){\r\n      dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_GET_INVESTMENT_CATEGORY_STORE\"))\r\n      dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_GET_ALL_INVESTMENT_CATEGORY_STORE\"))\r\n    }else if(type ===\"sub_category\"){\r\n      dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_GET_INVESTMENT_SUB_CATEGORY_STORE\"))\r\n      dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_GET_ALL_INVESTMENT_SUB_CATEGORY_STORE\"))\r\n    }\r\n  }\r\n\r\n\r\n  /* Create Update Investment Category */\r\n  const handleCreateUpdateInvestmentCategory = (params) => {\r\n    if (selectedInvestmentData?.categoryData) {\r\n      params['_id'] = selectedInvestmentData?.categoryData?._id || selectedInvestmentData?.categoryData?.id\r\n      dispatch(payrollActions.updateInvestmentCategoryRequest(params));\r\n    }\r\n    else {\r\n      dispatch(payrollActions.addInvestmentCategoryRequest(params));\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (!addInvestmentCategoryPending) {\r\n      if (addInvestmentCategoryError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_ADD_INVESTMENT_CATEGORY_STORE\"))\r\n        clearInvestmentStoreData(\"category\")\r\n        return;\r\n      }\r\n      if (addInvestmentCategoryRes) {\r\n        if (addInvestmentCategoryRes?.code === 200) {\r\n          handleOpenCloseModals(\"category\")\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_ADD_INVESTMENT_CATEGORY_STORE\"))\r\n          clearInvestmentStoreData(\"category\")\r\n          getInvestmentCategoryData()\r\n          getInvestmentCategory()\r\n          \r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    addInvestmentCategoryPending,\r\n    addInvestmentCategoryRes,\r\n    addInvestmentCategoryError,\r\n  ]);\r\n  useEffect(() => {\r\n    if (!updateInvestmentCategoryPending) {\r\n      if (updateInvestmentCategoryError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_UPDATE_INVESTMENT_CATEGORY_STORE\"))\r\n        clearInvestmentStoreData(\"category\")\r\n        return;\r\n      }\r\n      if (updateInvestmentCategoryRes) {\r\n        if (updateInvestmentCategoryRes?.code === 200) {\r\n          handleOpenCloseModals(\"category\")\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_UPDATE_INVESTMENT_CATEGORY_STORE\"))\r\n          clearInvestmentStoreData(\"category\")\r\n          getInvestmentCategoryData()\r\n          getInvestmentCategory() \r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    updateInvestmentCategoryPending,\r\n    updateInvestmentCategoryRes,\r\n    updateInvestmentCategoryError,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!deleteInvestmentCategoryPending) {\r\n      if (deleteInvestmentCategoryError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_DELETE_INVESTMENT_CATEGORY_STORE\"))\r\n        clearInvestmentStoreData(\"category\")\r\n        return;\r\n      }\r\n      if (deleteInvestmentCategoryRes) {\r\n        if (deleteInvestmentCategoryRes?.code === 200) {\r\n          toggleDeleteInvestmentModal(\"category\")\r\n          clearInvestmentStoreData(\"category\")\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_DELETE_INVESTMENT_CATEGORY_STORE\"))\r\n          getInvestmentCategoryData()\r\n          getInvestmentCategory()\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    deleteInvestmentCategoryPending,\r\n    deleteInvestmentCategoryRes,\r\n    deleteInvestmentCategoryError,\r\n  ]);\r\n\r\n  /*Get All Investment Category */\r\n  const getInvestmentCategoryData = (pageNo) => {\r\n    const payload = {\r\n      page: pageNo || currentPage?.investCategoryCurrPage,\r\n      limit: pagination?.limit\r\n\r\n    }\r\n    dispatch(payrollActions.getAllInvestmentCategoryRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!getAllInvestmentCategoryPending) {\r\n      if (getAllInvestmentCategoryError) {\r\n\r\n        return;\r\n      }\r\n      if (getAllInvestmentCategoryRes) {\r\n        if (getAllInvestmentCategoryRes?.code === 200) {\r\n          setInvestmentCategoryData(getAllInvestmentCategoryRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllInvestmentCategoryPending,\r\n    getAllInvestmentCategoryRes,\r\n    getAllInvestmentCategoryError,\r\n  ]);\r\n\r\n  /* Get Investment Categories Data */\r\n  const getInvestmentCategory = () => {\r\n    dispatch(payrollActions.getInvestmentCategoryRequest())\r\n  }\r\n  useEffect(() => {\r\n    if (!getInvestmentCategoryPending) {\r\n      if (getInvestmentCategoryError) {\r\n\r\n        return;\r\n      }\r\n      if (getInvestmentCategoryRes) {\r\n        if (getInvestmentCategoryRes?.code === 200) {\r\n          setInvestmentCategoryListData(getInvestmentCategoryRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getInvestmentCategoryPending,\r\n    getInvestmentCategoryRes,\r\n    getInvestmentCategoryError,\r\n  ]);\r\n\r\n  /* ---------------Investment Sub Category------------ */\r\n\r\n\r\n  /* create Update Investment Sub Category */\r\n  const handleCreateUpdateInvestmentSubCategory = (params) => {\r\n\r\n    if (selectedInvestmentData?.subCategoryData) {\r\n      params['_id'] = selectedInvestmentData?.subCategoryData?._id || selectedInvestmentData?.subCategoryData?.id\r\n      dispatch(payrollActions.updateInvestmentSubCategoryRequest(params));\r\n    }\r\n    else {\r\n      dispatch(payrollActions.addInvestmentSubCategoryRequest(params));\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (!addInvestmentSubCategoryPending) {\r\n      if (addInvestmentSubCategoryError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_ADD_INVESTMENT_SUB_CATEGORY_STORE\"))\r\n        clearInvestmentStoreData(\"sub_category\")\r\n        return;\r\n      }\r\n      if (addInvestmentSubCategoryRes) {\r\n        if (addInvestmentSubCategoryRes?.code === 200) {\r\n          handleOpenCloseModals(\"sub_category\")\r\n          clearInvestmentStoreData(\"sub_category\")\r\n          getInvestmentSubCategoryData()\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_ADD_INVESTMENT_SUB_CATEGORY_STORE\"))\r\n   \r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    addInvestmentSubCategoryPending,\r\n    addInvestmentSubCategoryRes,\r\n    addInvestmentSubCategoryError,\r\n  ]);\r\n  useEffect(() => {\r\n    if (!updateInvestmentSubCategoryPending) {\r\n      if (updateInvestmentSubCategoryError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_UPDATE_INVESTMENT_SUB_CATEGORY_STORE\"))\r\n        clearInvestmentStoreData(\"sub_category\")\r\n        return;\r\n      }\r\n      if (updateInvestmentSubCategoryRes) {\r\n        if (updateInvestmentSubCategoryRes?.code === 200) {\r\n          handleOpenCloseModals(\"sub_category\")\r\n          clearInvestmentStoreData(\"sub_category\")\r\n          getInvestmentSubCategoryData()\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_UPDATE_INVESTMENT_SUB_CATEGORY_STORE\"))\r\n  \r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    updateInvestmentSubCategoryPending,\r\n    updateInvestmentSubCategoryRes,\r\n    updateInvestmentSubCategoryError,\r\n  ]);\r\n\r\n  /* Get Investment Sub Categories*/\r\n  const getInvestmentSubCategoryData = (pageNo) => {\r\n    const payload = {\r\n      page: pageNo || currentPage?.investmentSubCategoryCurrPage,\r\n      limit: pagination?.limit\r\n    }\r\n    dispatch(payrollActions.getAllInvestmentSubCategoryRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!getAllInvestmentSubCategoryPending) {\r\n      if (getAllInvestmentSubCategoryError) {\r\n\r\n        return;\r\n      }\r\n      if (getAllInvestmentSubCategoryRes) {\r\n        if (getAllInvestmentSubCategoryRes?.code === 200) {\r\n          setInvestmentSubCategoryData(getAllInvestmentSubCategoryRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllInvestmentSubCategoryPending,\r\n    getAllInvestmentSubCategoryRes,\r\n    getAllInvestmentSubCategoryError,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!deleteInvestmentSubCategoryPending) {\r\n      if (deleteInvestmentSubCategoryError) {\r\n        dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_DELETE_INVESTMENT_SUB_CATEGORY_STORE\"))\r\n        clearInvestmentStoreData(\"sub_category\")\r\n        return;\r\n      }\r\n      if (deleteInvestmentSubCategoryRes) {\r\n        if (deleteInvestmentSubCategoryRes?.code === 200) {\r\n          toggleDeleteInvestmentModal(\"sub_category\")\r\n          clearInvestmentStoreData(\"sub_category\")\r\n          dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_DELETE_INVESTMENT_SUB_CATEGORY_STORE\"))\r\n          getInvestmentSubCategoryData()\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    deleteInvestmentSubCategoryPending,\r\n    deleteInvestmentSubCategoryRes,\r\n    deleteInvestmentSubCategoryError,\r\n  ]);\r\n\r\n  /* Get Dropdown Master Constant Data */\r\n\r\n  const getDropdownMasterConstantData = () => {\r\n    dispatch(dropdownMasterActions?.getDropdownMasterConstantDataRequest())\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getDropdownMasterConstantDataPending) {\r\n      if (getDropdownMasterConstantDataError) {\r\n        return;\r\n      }\r\n      if (getDropdownMasterConstantDataRes) {\r\n        if (getDropdownMasterConstantDataRes?.code === 200) {\r\n          const dropdownDataConstantData = getDropdownMasterConstantDataRes?.data\r\n          setAllDropdownConstantData(dropdownDataConstantData)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getDropdownMasterConstantDataRes,\r\n    getDropdownMasterConstantDataError,\r\n    getDropdownMasterConstantDataPending\r\n  ]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <CustomCards cardData={payrollSettingCard} />\r\n      {activeCard === \"salary_component\" &&\r\n        <div>\r\n          <SalaryComponent\r\n            handleToggleModals={handleToggleModals}\r\n            earningData={earningData}\r\n            deductionsData={deductionsData}\r\n\r\n          />\r\n        </div>\r\n      }\r\n      {activeCard === \"pay_schedule\" &&\r\n        <div className=\"cardBox myRequest mb-3 employeeHistory\">\r\n          <PaySchedule\r\n            appConstantData={appConstantData}\r\n            upcomingPayrollData={upcomingPayrollData}\r\n            handleToggleModals={handleToggleModals}\r\n          />\r\n        </div>\r\n      }\r\n      {\r\n        activeCard === \"it_declaration\" &&\r\n        <div className=\"cardBox myRequest mb-3 employeeHistory\">\r\n          <Investments\r\n            handleOpenCloseModals={handleOpenCloseModals}\r\n            investmentCategoryData={investmentCategoryData}\r\n            toggleDeleteInvestmentModal={toggleDeleteInvestmentModal}\r\n            investmentSubCategoryData={investmentSubCategoryData}\r\n          />\r\n        </div>\r\n      }\r\n      {activeCard === \"tax_slab\" &&\r\n        <div className=\"cardBox myRequest mb-3 employeeHistory\">\r\n          <TaxSlab\r\n            handleToggleModals={handleToggleModals}\r\n            taxSlabData={taxSlabData}\r\n            setCurrentPage={handlePageChange}\r\n            toggleDeleteTaxSlabModal={toggleDeleteTaxSlabModal}\r\n          />\r\n        </div>\r\n      }\r\n\r\n      {/* Payroll Setting Modals */}\r\n\r\n      {isOpenAddUpEarningModal && <AddUpdateEarnings\r\n        openModel={isOpenAddUpEarningModal}\r\n        handleOpenClose={handleToggleModals}\r\n        addEarnings={addEarnings}\r\n        allLeaveConstantData={allLeaveConstantData}\r\n        allEarningTypeData={allEarningTypeData}\r\n        allDeductionTypeData={allDeductionTypeData}\r\n        getEarningTypeById={getEarningTypeById}\r\n        isOpenModalType={isOpenModalType}\r\n        addDeductions={addDeductions}\r\n        earningDeductionSelectedData={earningDeductionSelectedData}\r\n        updateEarnings={updateEarnings}\r\n        updateDeductions={updateDeductions}\r\n        earningTypeByIdData={earningTypeByIdData}\r\n      />}\r\n\r\n\r\n      {isOpenAddPreTaxDeductionModal && <AddPreTaxDeduction\r\n        openModel={isOpenAddPreTaxDeductionModal}\r\n        handleOpenClose={handleToggleModals}\r\n      />}\r\n      {isOpenAddPostTaxDeductionModal && <AddPostTaxDeduction\r\n        openModel={isOpenAddPostTaxDeductionModal}\r\n        handleOpenClose={handleToggleModals}\r\n      />}\r\n\r\n      {isOpenPayScheduleModal && <AddUpdatePaySchedule\r\n        isOpenModal={isOpenPayScheduleModal}\r\n        handleToggleModals={handleToggleModals}\r\n        appConstantData={appConstantData}\r\n        selectedPayScheduleData={selectedPayScheduleData}\r\n        handleAddPayScheduleData={handleAddPayScheduleData}\r\n        handleUpdatePaySchedule={handleUpdatePaySchedule}\r\n      />}\r\n\r\n      {isOpenTaxSlabModal && <AddUpdateTaxSlab\r\n        isOpenModal={isOpenTaxSlabModal}\r\n        handleToggleModals={handleToggleModals}\r\n        selectedPayScheduleData={selectedPayScheduleData}\r\n        selectedTaxSlabData={selectedTaxSlabData}\r\n        handleAddUpdateTaxSlab={handleAddUpdateTaxSlab}\r\n        filteredDropdownData={filteredDropdownData}\r\n\r\n      />}\r\n\r\n      {/* It Declaration */}\r\n      {openModals?.isOpenSubCategoryModal && <AddUpdateSubCategory\r\n        openModel={openModals?.isOpenSubCategoryModal}\r\n        handleOpenClose={handleOpenCloseModals}\r\n        selectedInvestmentSubCategory={selectedInvestmentData?.subCategoryData}\r\n        investmentCategoryList={investmentCategoryListData}\r\n        handleCreateUpdateInvestmentSubCategory={handleCreateUpdateInvestmentSubCategory}\r\n        allDropdownConstantData={allDropdownConstantData}\r\n      />}\r\n      {openModals?.isOpenCategoryModal &&\r\n        <AddUpdateCategory\r\n          openModel={openModals?.isOpenCategoryModal}\r\n          selectedInvestmentCategory={selectedInvestmentData?.categoryData}\r\n          handleOpenClose={handleOpenCloseModals}\r\n          handleCreateUpdateInvestmentCategory={handleCreateUpdateInvestmentCategory}\r\n          allDropdownConstantData={allDropdownConstantData}\r\n        />\r\n      }\r\n\r\n      {isShowDeleteTaxSlabModal && (\r\n        <ApproveRejectModal\r\n          onApproveReject={onDeleteCancelTaxSlab}\r\n          isShow={isShowDeleteTaxSlabModal}\r\n          desc={t(\"alerts.deletePopup.desc\").replace('$1', \"Tax Slab\")}\r\n          btnRightLoading={deleteTaxSlabPending}\r\n          btnTextRight={t(\"btns.delete\")}\r\n          btnTextLeft={t(\"btns.cancel\")}\r\n        />)\r\n      }\r\n      {isShowDeleteInvestmentModal && (\r\n        <ApproveRejectModal\r\n          onApproveReject={onDeleteCancelInvestmentCatSub}\r\n          isShow={isShowDeleteInvestmentModal}\r\n          desc={t(\"alerts.deletePopup.desc\").replace('$1', \"Investment\")}\r\n          btnRightLoading={deleteTaxSlabPending}\r\n          btnTextRight={t(\"btns.delete\")}\r\n          btnTextLeft={t(\"btns.cancel\")}\r\n        />)\r\n      }\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PayrollSetting\r\n"],"names":["_ref","cardData","visibleTabs","filter","tab","permissionId","isPermission","_jsx","_Fragment","children","className","length","map","card","onClick","onClickFunc","id","_jsxs","src","imgUrl","alt","width","name","props","currentPage","setCurrentPage","earningData","handleToggleModals","updateEarningPer","earningField","key","label","earningScopedSlots","useMemo","sn","_","index","is_active","item","getBadgeColor","action","type","CustomTable","data","fields","pagination","totalPages","isHeader","tableStyle","padding","boxShadow","scopedSlots","deductionsData","updateDeductionPer","deductionField","deductionScopedSlots","include_in_ctc","tableTabsRequest","onClickFun","getSalaryData","CustomButton","text","classNames","handleClick","slug","CustomTabs","tabs","EarningsTable","DeductionsTable","earningRuleData","deleteEarningRule","editEarningRule","rules","earningRuleScopedSlots","style","cursor","Icon","border","useDispatch","getAllEarningTypeRes","useSelector","state","payroll","toggleEarningRulesFormula","allLeaveConstantData","setEarningRulesData","t","useCustomTranslation","earningRules","setEarningRules","useState","brackets","earningType","operators","validDescription","setValidDescription","isFillDesc","setIsFillDesc","handleFromChange","e","fieldName","value","prevState","backgroundColor","Label","CustomSelect","placeholder","handleChange","selectedOption","onAddFormulaField","addFormulaFields","prev","Textarea","onChange","target","CustomError","pre","alertLabel","role","setRules","errors","setErrors","isOpenERF","setIsOpenERF","setEarningRuleData","selectedIndex","setSelectedIndex","from","to","amount","_e$target","checked","prevErrors","undefined","resetEarningRulesFields","useEffect","EarningRulesTable","ind","CustomStrong","required","Input","fontSize","EarningRulesFormula","CustomAlert","styles","minWidth","submitEarningRules","updatedRuleData","rule","earningTypeData","earning_type_name","isDisabled","CustomRadio","yesNoOptions","selectedValue","calculation_type","yesNoFlexOptions","is_pro_rata","can_include_as_fbp","is_included_in_epf","is_included_in_esi","show_in_payslip","CustCheckbox","_checkCalculationType","_checkCalculationType2","dispatch","getEarningTypeByIdRes","addEarningsPending","updateEarningsPending","earningDeductionSelectedData","openModel","handleOpenClose","allEarningTypeData","addEarnings","getEarningTypeById","isOpenModalType","addDeductions","updateEarnings","updateDeductions","earningTypeByIdData","allDeductionTypeData","createUpdateEarningsFormData","setCreateUpdateEarningsFormData","nameInPayslip","calculationType","calculationTypeValue","variablePay","includedCTC","taxableComp","isActive","updatedState","_id","resetForm","earning_type","payslip_name","value_in","is_variable_pay","is_taxable","payrollActions","handleClearPayrollStore","earningTabs","onTabChange","deductionTabs","checkCalculationType","tabIndex","visibility","borderBottom","calculationTypeOptions","maxAllowance","EarningRules","ViewsEarningTypes","async","_createUpdateEarnings","payload","is_optional","max_allowance","submitCreateUpdateEarnings","isOpenModal","selectedPayScheduleData","appConstantData","handleAddPayScheduleData","handleUpdatePaySchedule","payScheduleFormData","setPayScheduleFormData","payScheduleType","payOn","payDay","payPeriodStartDate","addPaySchedulePending","updatePaySchedulePending","selectData","pay_schedule_type","noOfWorkingDays","no_of_working_days","pay_on","pay_day","pay_period_start_date","tooltipText","CustRadio","htmlFor","radioClass","workingDays","monthDays","submitAddUpdatePaySchedule","_payScheduleFormData$","_payScheduleFormData$2","_selectedPayScheduleD","isLoading","upcomingPayrollData","updatePaySchedulePer","addPaySchedulePer","upcomingPayrollsPending","payScheduleData","setPayScheduleData","arrearsEmployeeScopedSlots","fontWeight","dateFormate","pay_date","upcoming_pay_periods","postTaxDeductionFormData","setPostTaxDeductionFormData","deductionFrequency","class","submitPostTaxDeduction","deductionWithData","deductionPlanData","preTaxDeductionFormData","setPreTaxDeductionFormData","deductionPlan","deductionWith","employerContributionCTC","calculateProRataBasis","submitPreTaxDeduction","taxSlabData","toggleDeleteTaxSlabModal","getTaxSlabPending","taxSlabScopedSlots","pageNo","selectedTaxSlabData","filteredDropdownData","handleAddUpdateTaxSlab","updateTaxSlabPending","addTaxSlabPending","taxSlabFormData","setTaxSlabFormData","slabType","start","end","taxPercent","includeCess","cessPercent","standardDeduction","standardDeductionValue","taxRelaxation","constantDifference","rebateAllowed","rebateRules","tex_percent","is_include_cess","cess_percent","is_standard_deduction","standard_deduction_value","tex_relaxation","constant_difference","is_rebate_allowed","rebate_rules","tax_slab","validationResponse","validateSchema","taxSlabSchema","isValid","submitAddUpdateTaxSlab","addAllInvestmentCategoryPending","updateInvestmentCategoryPer","deleteInvestmentCategoryPer","toggleCreateUpdateInvestmentCategoryModal","investmentCategoryData","handleOpenCloseModals","toggleDeleteInvestmentModal","max_limit","is_eligible_for_old","is_eligible_for_new","updateInvestmentSubCategoryPer","deleteInvestmentSubCategoryPer","toggleCreateUpdateInvestmentSubCatModal","investmentSubCategoryData","getPayRunsData","icon","InvestmentCategoryTable","InvestmentSubCategoryTable","selectedInvestmentSubCategory","handleCreateUpdateInvestmentSubCategory","investmentCategoryList","allDropdownConstantData","formData","setFormData","category","sub_category_name","input_type","max_limit_amount","category_id","category_name","dropdownInputType","addUpdateInvestmentSubCategorySchema","params","submitSubCategoryData","selectedInvestmentCategory","handleCreateUpdateInvestmentCategory","investmentCategoryFormData","setInvestmentCategoryFormData","alert","addUpdateInvestmentCategorySchema","console","log","submitCreateUpdateCategory","PayrollSetting","activeCard","setActiveCard","addEarningsRes","addEarningsError","updateEarningsRes","updateEarningsError","getEarningsPending","getEarningsRes","getEarningsError","addDeductionsPending","addDeductionsRes","addDeductionsError","updateDeductionsPending","updateDeductionsRes","updateDeductionsError","getDeductionsPending","getDeductionsRes","getDeductionsError","getAllEarningTypePending","getAllEarningTypeError","getAllDeductionTypePending","getAllDeductionTypeRes","getAllDeductionTypeError","getEarningTypeByIdPending","getEarningTypeByIdError","addPayScheduleRes","addPayScheduleError","updatePayScheduleRes","updatePayScheduleError","upcomingPayrollsRes","upcomingPayrollsError","addTaxSlabRes","addTaxSlabError","updateTaxSlabRes","updateTaxSlabError","getTaxSlabRes","getTaxSlabError","deleteTaxSlabPending","deleteTaxSlabRes","deleteTaxSlabError","addInvestmentCategoryPending","addInvestmentCategoryRes","addInvestmentCategoryError","updateInvestmentCategoryPending","updateInvestmentCategoryRes","updateInvestmentCategoryError","getInvestmentCategoryPending","getInvestmentCategoryRes","getInvestmentCategoryError","getAllInvestmentCategoryPending","getAllInvestmentCategoryRes","getAllInvestmentCategoryError","deleteInvestmentCategoryPending","deleteInvestmentCategoryRes","deleteInvestmentCategoryError","addInvestmentSubCategoryPending","addInvestmentSubCategoryRes","addInvestmentSubCategoryError","updateInvestmentSubCategoryPending","updateInvestmentSubCategoryRes","updateInvestmentSubCategoryError","getInvestmentSubCategoryPending","getInvestmentSubCategoryRes","getInvestmentSubCategoryError","getAllInvestmentSubCategoryPending","getAllInvestmentSubCategoryRes","getAllInvestmentSubCategoryError","deleteInvestmentSubCategoryPending","deleteInvestmentSubCategoryRes","deleteInvestmentSubCategoryError","getDropdownMasterConstantDataPending","getDropdownMasterConstantDataRes","getDropdownMasterConstantDataError","dropdownMaster","getLeaveConstantDataPending","getLeaveConstantDataRes","getLeaveConstantDataError","leave","getAppConstantDataPending","getAppConstantDataRes","getAppConstantDataError","common","getFilteredDropdownDataError","getFilteredDropdownDataRes","getFilteredDropdownDataPending","isOpenAddUpEarningModal","setIsOpenAddUpEarningModal","isOpenAddPostTaxDeductionModal","setIsOpenAddPostTaxDeductionModal","isOpenAddPreTaxDeductionModal","setIsOpenAddPreTaxDeductionModal","taxSlabCurrPage","investCategoryCurrPage","investmentSubCategoryCurrPage","setAllDeductionTypeData","setAllEarningTypeData","setEarningTypeByIdData","setAllLeaveConstantData","setEarningData","setIsOpenModalType","setDeductionsData","setEarningDeductionSelectedData","setAppConstantData","setUpcomingPayrollData","isOpenPayScheduleModal","setIsOpenPayScheduleModal","isOpenTaxSlabModal","setIsOpenTaxSlabModal","setTaxSlabData","setSelectedPayScheduleData","setSelectedTaxSlabData","setFilteredDropdownData","deleteTaxSlabId","setDeleteTaxSlabId","isShowDeleteTaxSlabModal","setIsShowDeleteTaxSlabModal","isShowDeleteInvestmentModal","setIsShowDeleteInvestmentModal","investmentCategoryListData","setInvestmentCategoryListData","openModals","setOpenModals","isOpenCategoryModal","isOpenSubCategoryModal","selectedInvestmentData","setSelectedInvestmentData","categoryData","subCategoryData","setInvestmentCategoryData","setInvestmentSubCategoryData","investmentSubCategoryList","setInvestmentSubCategoryList","setAllDropdownConstantData","payrollSettingCard","handleActiveTab","upcomingPayrollsData","handleTaxSlabData","getInvestmentCategoryData","getInvestmentSubCategoryData","code","getEarnings","getLeaveConstantData","getAllEarningType","getDeductions","getAllDeductionType","getDropdownFilteredData","getDropdownMasterConstantData","leaveAction","getLeaveConstantDataRequest","getAllEarningTypeRequest","getAllEarningTypeResData","getAllDeductionTypeRequest","getAllDeductionTypeResData","getEarningTypeByIdResData","getEarningsRequest","getEarningsResData","getDeductionsRequest","getDeductionsResData","getAppConstantData","getInvestmentCategory","commonActions","getAppConstantDataRequest","upcomingPayrollsRequest","page","limit","getTaxSlabRequest","dropdownMasterActions","getFilteredDropdownDataRequest","_getFilteredDropdownD","updateData","setFilterDropdownData","modalType","clearInvestmentStoreData","getAllInvestmentCategoryRequest","getInvestmentCategoryRequest","getAllInvestmentSubCategoryRequest","getDropdownMasterConstantDataRequest","dropdownDataConstantData","CustomCards","SalaryComponent","PaySchedule","Investments","TaxSlab","handlePageChange","AddUpdateEarnings","addEarningsRequest","getEarningTypeByIdRequest","addDeductionsRequest","updateEarningsRequest","updateDeductionsRequest","AddPreTaxDeduction","AddPostTaxDeduction","AddUpdatePaySchedule","addPayScheduleRequest","updatePayScheduleRequest","AddUpdateTaxSlab","updateTaxSlabRequest","addTaxSlabRequest","AddUpdateSubCategory","_selectedInvestmentDa5","_selectedInvestmentDa6","updateInvestmentSubCategoryRequest","addInvestmentSubCategoryRequest","AddUpdateCategory","_selectedInvestmentDa3","_selectedInvestmentDa4","updateInvestmentCategoryRequest","addInvestmentCategoryRequest","ApproveRejectModal","onApproveReject","deleteTaxSlabRequest","isShow","desc","replace","btnRightLoading","btnTextRight","btnTextLeft","_selectedInvestmentDa","deleteInvestmentCategoryRequest","_selectedInvestmentDa2","deleteInvestmentSubCategoryRequest"],"sourceRoot":""}