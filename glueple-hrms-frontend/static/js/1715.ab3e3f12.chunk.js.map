{"version":3,"file":"static/js/1715.ab3e3f12.chunk.js","mappings":"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","sources":["components/performanceManagement/pmsEmployee/myKRA/KPIList.js","components/performanceManagement/pmsEmployee/myKRA/MyKRA.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { set } from 'lodash'\r\nimport { useSelector } from 'react-redux'\r\nimport BlankTableError from '../../../commanComponent/BlankTableError'\r\nimport { CustomSpinner } from '../../../globalComponents'\r\n\r\nconst KPIList = (props) => {\r\n    const { getGivenRatingPending } = useSelector(state => state.pms)\r\n    const { financialYearMonthData, selectedFinancialYearMonth, setSelectedFinancialYearMonth, giveRatingData } = props\r\n    const [feedback, setFeedback] = useState('')\r\n\r\n\r\n    const renderedKpiList = () => {\r\n        return (giveRatingData && giveRatingData?.length > 0 ? giveRatingData?.map((item, ind) => (\r\n            <div className=\"listMain\" key={ind}>\r\n                <div className=\"headingList d-flex mb-5\">\r\n                    <strong>{ind + 1}.</strong>\r\n                    <div className=\"d-flex align-items-center ps-4\">\r\n                        <span>\r\n                            Parameter Name <b>{item?.parameter_name}</b>\r\n                        </span>\r\n                        <span>\r\n                            Parameter weightage <b>{item?.parameter_weightage}</b>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"subCategoryUl\">\r\n                    {item?.kra_sub_parameter_details?.length > 0 && item?.kra_sub_parameter_details?.map((subPara, subInd) => (\r\n\r\n                        <li key={subInd}>\r\n                            <div className=\"subCategry\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-9 border-end\">\r\n                                        <span>Sub Category</span>\r\n                                        <p>\r\n                                            {subPara?.measurement_criteria}\r\n                                        </p>\r\n                                        <strong>KPI Description</strong>\r\n                                        <p>{subPara?.key_performance_indicator}</p>\r\n                                    </div>\r\n                                    {subPara?.kra_rating_type?.toLowerCase() === \"rating\" && <div className=\"col-md-3\">\r\n                                        <div className=\"d-flex justify-content-center align-items-center h-100 \">\r\n                                            <div className=\"text-center\">\r\n                                                <span>Rating /Total Rating</span>\r\n                                                <b>\r\n                                                    {subPara?.rating_remark}<span>/ 5</span>\r\n                                                </b>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>}\r\n                                    {subPara?.kra_rating_typ === \"target_achivement\" && <div className=\"col-md-3\">\r\n                                        <div className=\"d-flex justify-content-center align-items-center h-100 \">\r\n                                            <div className=\"text-center\">\r\n                                                <span>Target Achivement </span>\r\n                                                <b>\r\n                                                    {subPara?.rating_remark}\r\n                                                </b>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>}\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    ))\r\n                    }\r\n\r\n                </ul>\r\n            </div>\r\n\r\n        )) :\r\n            (\r\n                !getGivenRatingPending && <span className='d-flex justify-content-center'>\r\n                    <BlankTableError text={\"No KPI Assigned !\"} />\r\n                </span>\r\n            )\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (giveRatingData) {\r\n            setFeedback(giveRatingData?.[0]?.kra_sub_parameter_details?.[0]?.feedback)\r\n        }\r\n    }, [giveRatingData])\r\n    return (\r\n        <div>\r\n            <div className='d-flex justify-content-end '>\r\n                <div style={{ width: \"240px\" }}>\r\n                    <CustomSelect\r\n                        data={financialYearMonthData}\r\n                        placeholder={\"Select Month\"}\r\n                        value={selectedFinancialYearMonth || ''}\r\n                        handleChange={(selectedOption) => setSelectedFinancialYearMonth(selectedOption)}\r\n                        name=\"financialYear\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            {getGivenRatingPending ? <span><CustomSpinner isShow={getGivenRatingPending} size=\"xl\" /> </span> : <>\r\n                {renderedKpiList()}\r\n                {giveRatingData?.length > 0  && <div className=\"feedBackmain\">\r\n                    <span>Feedback</span>\r\n                    <div className=\"feedbackInner\">\r\n                        <p>\r\n                            {feedback}\r\n                        </p>\r\n                    </div>\r\n                </div>}\r\n            </>}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default KPIList\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { CustomTabs } from '../../../reuseableComponents';\r\nimport KPIList from './KPIList';\r\nimport QuarterlyAndAnnualRating from './QuarterlyAndAnnualRating';\r\nimport CustomSelect from '../../../commanComponent/CustomSelect';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { filterCurrentFinancialYear, filterCurrentFYMonth } from '../../../../utils/common';\r\nimport { useCustomTranslation } from '../../../../translation';\r\nimport { financialYearActions, pmsActions } from '../../../../core/resource/actions';\r\n\r\nconst MyKRA = () => {\r\n    const dispatch = useDispatch()\r\n    const { t } = useCustomTranslation()\r\n    const [financialYearListData, setFinancialYearListData] = useState('')\r\n    const [selectedFinancialYear, setSelectedFinancialYear] = useState('')\r\n    const [financialYearMonthData, setFinancialYearMonthData] = useState('')\r\n    const [selectedFinancialYearMonth, setSelectedFinancialYearMonth] = useState('')\r\n    const [giveRatingData, setGiveRatingData] = useState('')\r\n    const hasFetchedRatingData = useRef(false);\r\n    const {\r\n        getFinancialYearListRes,\r\n        getFinancialYearListError,\r\n        getFinancialYearListPending,\r\n\r\n        getFinancialYearWiseMonthRes,\r\n        getFinancialYearWiseMonthError,\r\n        getFinancialYearWiseMonthPending\r\n    } = useSelector(state => state.financialYear)\r\n\r\n    const {\r\n        getGivenRatingRes,\r\n        getGivenRatingError,\r\n        getGivenRatingPending,\r\n\r\n        getAverageRatingPending,\r\n        getAverageRatingRes,\r\n        getAverageRatingError,\r\n    } = useSelector(state => state.pms)\r\n    const { employeeDetailsData } = useSelector(state => state.employee)\r\n\r\n    useEffect(() => {\r\n        getFinancialYearListData()\r\n\r\n    }, [])\r\n    const tableTabsRequest = [\r\n        { name: \"KPI List\", onClickFun: (id) => getMyKpiData(id), id: \"kpiList\" },\r\n        // { name: \"Quarterly and Annual Rating\", onClickFun: (id) => getMyKpiData(id), id: \"quarterlyAndAnnualRating\" },\r\n\r\n    ];\r\n    const getMyKpiData = () => {\r\n\r\n    }\r\n\r\n    /* List of Financial Year */\r\n    const getFinancialYearListData = () => {\r\n        dispatch(financialYearActions.getFinancialYearListRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getFinancialYearListPending) {\r\n            if (getFinancialYearListError) {\r\n                return;\r\n            }\r\n            if (getFinancialYearListRes) {\r\n                if (getFinancialYearListRes?.code === 200) {\r\n                    const currentFY = filterCurrentFinancialYear(getFinancialYearListRes?.data)\r\n                    setSelectedFinancialYear(currentFY)\r\n                    setFinancialYearListData(getFinancialYearListRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getFinancialYearListRes,\r\n        getFinancialYearListError,\r\n        getFinancialYearListPending\r\n    ]);\r\n    useEffect(() => {\r\n        if (employeeDetailsData && selectedFinancialYear) {\r\n            handleGetFinancialYearWiseMonthData({ financial_id: selectedFinancialYear?.value })\r\n        }\r\n    }, [employeeDetailsData, selectedFinancialYear])\r\n\r\n    useEffect(() => {\r\n        if (selectedFinancialYearMonth && Object.keys(selectedFinancialYearMonth).length > 0) {\r\n            getGivenRatingData();\r\n        }\r\n    }, [selectedFinancialYearMonth]);\r\n\r\n\r\n    const getGivenRatingData = () => {\r\n        const payload = {\r\n            financial_id: selectedFinancialYear?.value,\r\n            employee_id: employeeDetailsData?.id,\r\n            rating_month: selectedFinancialYearMonth?.value\r\n        }\r\n\r\n        dispatch(pmsActions.getGivenRatingRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!getGivenRatingPending) {\r\n            if (getGivenRatingError) {\r\n\r\n                return;\r\n            }\r\n            if (getGivenRatingRes) {\r\n                if (getGivenRatingRes?.code === 200) {\r\n                    setGiveRatingData(getGivenRatingRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getGivenRatingRes,\r\n        getGivenRatingError,\r\n        getGivenRatingPending\r\n    ]);\r\n\r\n    const getAverageRatingData = () => {\r\n        // dispatch(pmsActions.getAverageRating())\r\n    }\r\n    useEffect(() => {\r\n        if (!getAverageRatingPending) {\r\n            if (getAverageRatingError) {\r\n\r\n                return;\r\n            }\r\n            if (getAverageRatingRes) {\r\n                if (getAverageRatingRes?.code === 200) {\r\n                    // setKraDetailsByEmployeeData(getGivenRatingRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAverageRatingPending,\r\n        getAverageRatingRes,\r\n        getAverageRatingError,\r\n    ]);\r\n\r\n    /* -----------Get financial year wise month data----------- */\r\n    const handleGetFinancialYearWiseMonthData = (payload) => {\r\n        dispatch(financialYearActions.getFinancialYearWiseMonthRequest(payload))\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getFinancialYearWiseMonthPending) {\r\n            if (getFinancialYearWiseMonthError) {\r\n                return;\r\n            }\r\n            if (getFinancialYearWiseMonthRes) {\r\n                if (getFinancialYearWiseMonthRes?.code === 200) {\r\n                    let filterMonth = filterCurrentFYMonth(getFinancialYearWiseMonthRes?.data)\r\n                    setSelectedFinancialYearMonth((prev) => {\r\n                        if (JSON.stringify(prev) === JSON.stringify(filterMonth)) return prev;\r\n                        return filterMonth;\r\n                    });\r\n                    setFinancialYearMonthData(getFinancialYearWiseMonthRes?.data)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getFinancialYearWiseMonthRes,\r\n        getFinancialYearWiseMonthError,\r\n        getFinancialYearWiseMonthPending\r\n    ]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (\r\n            selectedFinancialYearMonth &&\r\n            Object.keys(selectedFinancialYearMonth).length > 0 &&\r\n            !hasFetchedRatingData.current\r\n        ) {\r\n            hasFetchedRatingData.current = true;\r\n            getGivenRatingData();\r\n        }\r\n    }, [selectedFinancialYearMonth]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ticketScoreSection\">\r\n                <div className=\"cardBox myRequest\">\r\n                    <div className=\"cardHead d-flex justify-content-between\">\r\n                        <h3>\r\n                            <img\r\n                                src=\"images/kpi-guidline.svg\"\r\n                                alt=\"\"\r\n                                width={40}\r\n                                className=\"me-2 fw-bold\"\r\n                            />{\" \"}\r\n                            My KPI\r\n                        </h3>\r\n                        <CustomSelect\r\n                            data={financialYearListData}\r\n                            placeholder={t(\"placeholders.financialYear\")}\r\n                            value={selectedFinancialYear || ''}\r\n                            handleChange={(selectedOption) => setSelectedFinancialYear(selectedOption)}\r\n                            name=\"financialYear\"\r\n                        />\r\n                    </div>\r\n                    <CustomTabs tabs={tableTabsRequest} type=\"myKRA\" />\r\n\r\n                    <div className=\"tab-content mykpiMain\">\r\n                        <div className=\"tab-pane fade active show\" id=\"kpiList\">\r\n                            <KPIList\r\n                                financialYearMonthData={financialYearMonthData}\r\n                                selectedFinancialYearMonth={selectedFinancialYearMonth}\r\n                                setSelectedFinancialYearMonth={setSelectedFinancialYearMonth}\r\n                                giveRatingData={giveRatingData}\r\n                            />\r\n                        </div>\r\n                        {/* <div className=\"tab-pane fade \" id=\"quarterlyAndAnnualRating\">\r\n                            <QuarterlyAndAnnualRating />\r\n                        </div> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyKRA\r\n"],"names":["props","getGivenRatingPending","useSelector","state","pms","financialYearMonthData","selectedFinancialYearMonth","setSelectedFinancialYearMonth","giveRatingData","feedback","setFeedback","useState","useEffect","_giveRatingData$","_giveRatingData$$kra_","_giveRatingData$$kra_2","kra_sub_parameter_details","_jsxs","children","_jsx","className","style","width","CustomSelect","data","placeholder","value","handleChange","selectedOption","name","CustomSpinner","isShow","size","_Fragment","length","map","item","ind","_item$kra_sub_paramet","_item$kra_sub_paramet2","parameter_name","parameter_weightage","subPara","subInd","_subPara$kra_rating_t","measurement_criteria","key_performance_indicator","kra_rating_type","toLowerCase","rating_remark","kra_rating_typ","BlankTableError","text","MyKRA","dispatch","useDispatch","t","useCustomTranslation","financialYearListData","setFinancialYearListData","selectedFinancialYear","setSelectedFinancialYear","setFinancialYearMonthData","setGiveRatingData","hasFetchedRatingData","useRef","getFinancialYearListRes","getFinancialYearListError","getFinancialYearListPending","getFinancialYearWiseMonthRes","getFinancialYearWiseMonthError","getFinancialYearWiseMonthPending","financialYear","getGivenRatingRes","getGivenRatingError","getAverageRatingPending","getAverageRatingRes","getAverageRatingError","employeeDetailsData","employee","getFinancialYearListData","tableTabsRequest","onClickFun","id","getMyKpiData","financialYearActions","getFinancialYearListRequest","code","currentFY","filterCurrentFinancialYear","handleGetFinancialYearWiseMonthData","financial_id","Object","keys","getGivenRatingData","payload","employee_id","rating_month","pmsActions","getGivenRatingRequest","getFinancialYearWiseMonthRequest","filterMonth","filterCurrentFYMonth","prev","JSON","stringify","current","src","alt","CustomTabs","tabs","type","KPIList"],"sourceRoot":""}