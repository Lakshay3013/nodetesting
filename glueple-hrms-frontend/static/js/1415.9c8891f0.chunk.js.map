{"version":3,"file":"static/js/1415.9c8891f0.chunk.js","mappings":"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","sources":["components/hiring/mrf/MrfForms/CreateMrf.js","components/hiring/mrf/MrfForms/JobDescription.js","components/hiring/mrf/MrfForms/AddInterviewer.js","components/hiring/mrf/MrfForms/ReviewAndSubmit.js","components/hiring/mrf/MrfProcessSteps.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\r\nimport * as yup from \"yup\";\r\nimport Button from '../../../commanComponent/Button'\r\nimport { MrfCreateSchema, MrfReplacementSchema } from '../../../../utils/ValidationSchema'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper';\r\nimport CustomError from '../../../globalComponents/CustomError';\r\nimport CustomSelect from '../../../commanComponent/CustomSelect';\r\nimport { CustomButton } from '../../../globalComponents';\r\nimport Input from '../../../commanComponent/Input';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst CreateMrf = (props) => {\r\n    const {\r\n        onClickActive,\r\n        isLoadingBtn,\r\n        allDepartments,\r\n        allDesignations,\r\n        allPosition,\r\n        allQualification,\r\n        filteredDropdownData,\r\n        allLocationsData,\r\n        createUpdateMrf,\r\n        handleDepartmentByDesignation,\r\n        handlegetPositionByDepartmentDesignation,\r\n        mrfData,\r\n        mrfType,\r\n        employeesForReportingManager\r\n    } = props\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    const [mrfFromData, setMrfFromData] = useState(\r\n        {\r\n            department: '',\r\n            designation: '',\r\n            position: '',\r\n            priority: '',\r\n            minQualififcation: '',\r\n            preferredQualification: \"\",\r\n            businessImpact: \"\",\r\n            location: \"\",\r\n            vacantPosition: '',\r\n            learningDevelopmentCost: '',\r\n            minCost: '',\r\n            maxCost: '',\r\n            appointmentType: \"\",\r\n            appointmentDuration: '',\r\n            mrfJustification: \"\",\r\n            yearOfExperience: '',\r\n            empId: \"\"\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (mrfData) {\r\n            const allMrfData = mrfData?.data[0]\r\n            setMrfFromData({\r\n                \"department\": { value: allMrfData?.department_id, label: allMrfData?.department_name } || '',\r\n                \"designation\": { value: allMrfData?.designation_id, label: allMrfData?.designation_name } || '',\r\n                \"position\": { value: allMrfData?.position_id, label: allMrfData?.position_name } || '',\r\n                \"priority\": { value: allMrfData?.priority, label: allMrfData?.priority_name } || '',\r\n                \"minQualififcation\": { value: allMrfData?.min_qualififcation, label: allMrfData?.min_qualififcation_name } || '',\r\n                \"preferredQualification\": {\r\n                    value: allMrfData?.preferred_qualification\r\n                    , label: allMrfData?.preferred_qualification_name\r\n                } || '',\r\n\r\n                \"businessImpact\": { value: allMrfData?.business_impact, label: allMrfData?.business_impact_name } || '',\r\n                \"location\": { value: allMrfData?.hiring_for, label: allMrfData?.hiring_for_name } || '',\r\n                \"vacantPosition\": allMrfData?.vacant_position || '',\r\n                \"learningDevelopmentCost\": { value: allMrfData?.learning_development_cost?.is_cost, label: allMrfData?.learning_development_cost?.is_cost } || '',\r\n                \"minCost\": allMrfData?.learning_development_cost?.min_cost,\r\n                \"maxCost\": allMrfData?.learning_development_cost?.max_cost,\r\n                \"appointmentType\": { value: allMrfData?.type_of_appointment.type, label: allMrfData?.type_of_appointment.type },\r\n                \"appointmentDuration\": allMrfData?.type_of_appointment.duration,\r\n                \"mrfJustification\": allMrfData?.mrf_justification,\r\n                \"yearOfExperience\": { value: allMrfData?.year_of_experience, label: allMrfData?.year_of_experience_name },\r\n                \"empId\": { value: allMrfData?.emp_id, label: allMrfData?.emp_id_name }\r\n\r\n            });\r\n\r\n        }\r\n    }, [mrfData])\r\n\r\n    const onSubmitMrfForm = async () => {\r\n        let validationResponse = ''\r\n        let payload = {}\r\n        if (mrfType === \"vacancy\") {\r\n            payload = {\r\n                \"query_type\": \"mrf_form\",\r\n                \"type\": mrfType,\r\n                \"step\": 1,\r\n                \"department_id\": mrfFromData?.department?.value || '',\r\n                \"designation_id\": mrfFromData?.designation?.value || '',\r\n                \"position_id\": mrfFromData?.position?.value || '',\r\n                \"priority\": mrfFromData?.priority.value || '',\r\n                \"min_qualififcation\": mrfFromData?.minQualififcation?.value || '',\r\n                \"preferred_qualification\": mrfFromData?.preferredQualification?.value || '',\r\n                \"business_impact\": mrfFromData?.businessImpact?.value || '',\r\n                \"hiring_for\": mrfFromData?.location.value || '',\r\n                \"vacant_position\": mrfFromData?.vacantPosition || '',\r\n                \"learning_development_cost\": { is_cost: mrfFromData?.learningDevelopmentCost?.label || '', min_cost: mrfFromData?.minCost, max_cost: mrfFromData?.maxCost },\r\n                \"type_of_appointment\": { type: mrfFromData?.appointmentType?.label || '', duration: mrfFromData?.appointmentDuration },\r\n                \"year_of_experience\": mrfFromData?.yearOfExperience?.value || '',\r\n                \"mrf_justification\": mrfFromData?.mrfJustification || ''\r\n            }\r\n            validationResponse = await validateSchema(MrfCreateSchema, payload);\r\n        }\r\n        if (mrfType === \"replacement\") {\r\n            payload = {\r\n                \"query_type\": \"mrf_form\",\r\n                \"type\": mrfType,\r\n                \"step\": 1,\r\n                \"department_id\": mrfFromData?.department?.value || '',\r\n                \"designation_id\": mrfFromData?.designation?.value || '',\r\n                \"position_id\": mrfFromData?.position?.value || '',\r\n                \"priority\": mrfFromData?.priority.value || '',\r\n                \"emp_id\": mrfFromData?.empId.value,\r\n            }\r\n            validationResponse = await validateSchema(MrfReplacementSchema, payload);\r\n        }\r\n        if (validationResponse.isValid) {\r\n            createUpdateMrf(payload, 2)\r\n            setErrors({});\r\n\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    const handleInputChange = async (input, fieldName) => {\r\n        const name = fieldName || input.target.name;\r\n        const value = input.target ? input.target.value : input;\r\n        errors && setErrors({})\r\n        if (name == \"department\") {\r\n            setMrfFromData((prevState) => ({\r\n                ...prevState,\r\n                designation: '',\r\n                position: '',\r\n            }));\r\n        }\r\n        setMrfFromData((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n\r\n\r\n\r\n    }\r\n\r\n    const handleDepartment = (selectedOption) => {\r\n        if (selectedOption !== undefined && selectedOption !== null) {\r\n            handleDepartmentByDesignation(selectedOption?.value)\r\n        }\r\n\r\n    }\r\n\r\n    const handleDesignation = (selectedOption) => {\r\n        if (selectedOption !== undefined && selectedOption !== null) {\r\n            handlegetPositionByDepartmentDesignation(selectedOption.value)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3><img src=\"images/kpi-guidline.svg\" alt=\"\" width=\"40\" className=\"me-2\" /> Create MRF</h3>\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Select Department <span className='text-danger'>*</span></label>\r\n                    <CustomSelect\r\n                        data={allDepartments || []}\r\n                        placeholder=\"Select Department\"\r\n                        value={mrfFromData?.department || ''}\r\n                        handleChange={(selectedOption) => {\r\n                            handleInputChange(selectedOption, 'department');\r\n                            handleDepartment(selectedOption)\r\n                        }}\r\n                        name=\"department\"\r\n                    />\r\n                    {errors?.department_id &&\r\n                        <CustomError\r\n                            text={errors.department_id}\r\n                        />\r\n                    }\r\n\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Select Designation <span className='text-danger'>*</span></label>\r\n                    <CustomSelect\r\n                        data={allDesignations || []}\r\n                        placeholder=\"Select Designation\"\r\n                        isDisabled={!mrfFromData?.department}\r\n                        value={mrfFromData?.designation || ''}\r\n                        handleChange={(selectedOption) => {\r\n                            handleInputChange(selectedOption, 'designation');\r\n                            handleDesignation(selectedOption)\r\n                        }}\r\n                        name=\"designation\"\r\n\r\n                    />\r\n                    {errors.designation_id &&\r\n                        <CustomError\r\n                            text={errors.designation_id}\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Position <span className='text-danger'>*</span></label>\r\n                    <CustomSelect\r\n                        data={allPosition || []}\r\n                        placeholder=\"Select Position\"\r\n                        isDisabled={!mrfFromData?.department || !mrfFromData?.designation}\r\n                        value={mrfFromData?.position || ''}\r\n                        handleChange={(selectedOption) => handleInputChange(selectedOption, 'position')}\r\n                        name=\"position\"\r\n                    />\r\n                    {errors.position_id &&\r\n                        <CustomError\r\n                            text={errors.position_id}\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Priority <span className='text-danger'>*</span></label>\r\n                    <CustomSelect\r\n                        data={filteredDropdownData[\"priority\"] || []}\r\n                        placeholder=\"Select Priority\"\r\n                        value={mrfFromData?.priority || ''}\r\n                        handleChange={(selectedOption) => handleInputChange(selectedOption, 'priority')}\r\n                        name=\"priority\"\r\n                    />\r\n                    {errors.priority &&\r\n                        <CustomError\r\n                            text={errors.priority}\r\n                        />\r\n                    }\r\n                </div>\r\n                {mrfType === \"replacement\" ? <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Emp ID <span className='text-danger'>*</span></label>\r\n\r\n                    <CustomSelect\r\n                        data={employeesForReportingManager}\r\n                        placeholder=\"Select Priority\"\r\n                        value={mrfFromData?.empId || ''}\r\n                        handleChange={(selectedOption) => handleInputChange(selectedOption, 'empId')}\r\n                        name=\"empId\"\r\n                    />\r\n\r\n\r\n\r\n                </div> : <>\r\n                    <div className=\"col-md-6 form-group mb-3\">\r\n                        <label>Min Qualification <span className='text-danger'>*</span></label>\r\n                        <CustomSelect\r\n                            data={allQualification || []}\r\n                            placeholder=\"Select Min Qualification\"\r\n                            value={mrfFromData?.minQualififcation || ''}\r\n                            handleChange={(selectedOption) => handleInputChange(selectedOption, 'minQualififcation')}\r\n                            name=\"minQualififcation\"\r\n                        />\r\n                        {errors.min_qualififcation && <CustomError\r\n                            text={errors.min_qualififcation}\r\n                        />}\r\n\r\n                    </div>\r\n                    <div className=\"col-md-6 form-group mb-3\">\r\n                        <label>Business Impact <span className='text-danger'>*</span></label>\r\n                        <CustomSelect\r\n                            data={filteredDropdownData[\"business_impact\"] || []}\r\n                            placeholder=\"Select Priority\"\r\n                            value={mrfFromData?.businessImpact || ''}\r\n                            handleChange={(selectedOption) => handleInputChange(selectedOption, 'businessImpact')}\r\n                            name=\"businessImpact\"\r\n                        />\r\n                        {errors.business_impact && <CustomError\r\n                            text={errors.business_impact}\r\n                        />}\r\n                    </div>\r\n                    <div className=\"col-md-6 form-group mb-3\">\r\n                        <label>Total Vacant Position <span className='text-danger'>*</span></label>\r\n\r\n                        <Input\r\n                            type={\"number\"}\r\n                            name='vacantPosition'\r\n                            placeholder='Select Min Qualification level...'\r\n                            value={mrfFromData?.vacantPosition}\r\n                            id=\"vacantPosition\"\r\n                            onChange={(e) => handleInputChange(e)}\r\n                        />\r\n                        {errors.vacant_position && <CustomError\r\n                            text={errors.vacant_position}\r\n                        />}\r\n                    </div>\r\n                    <div className=\"col-md-6 form-group mb-3\">\r\n                        <label> Year Of Experience <span className='text-danger'>*</span></label>\r\n                        <CustomSelect\r\n                            data={filteredDropdownData[\"year_of_experience\"] || []}\r\n                            placeholder=\"Select Year Of Experience \"\r\n                            value={mrfFromData?.yearOfExperience || ''}\r\n                            handleChange={(selectedOption) => handleInputChange(selectedOption, 'yearOfExperience')}\r\n                            name=\"yearOfExperience\"\r\n                        />\r\n                        {errors.year_of_experience && <CustomError\r\n                            text={errors.year_of_experience}\r\n                        />}\r\n                    </div>\r\n                    <div className=\"col-md-6 form-group mb-3\">\r\n                        <label>Learning & Development Cost</label>\r\n                        <CustomSelect\r\n                            data={filteredDropdownData[\"learning-development-cost\"] || []}\r\n                            placeholder=\"Select Learning & Development Cost\"\r\n                            value={mrfFromData?.learningDevelopmentCost || ''}\r\n                            handleChange={(selectedOption) => handleInputChange(selectedOption, 'learningDevelopmentCost')}\r\n                            name=\"learningDevelopmentCost\"\r\n                        />\r\n                    </div>\r\n                    {(mrfFromData?.learningDevelopmentCost.label)?.toLowerCase() === \"yes\" && <>\r\n                        <div className=\"col-md-6 form-group mb-3\">\r\n                            <label>Min Learning & Development Cost</label>\r\n                            <Input\r\n                                type={\"number\"}\r\n                                name='minCost'\r\n                                placeholder='Select Min Learning & Development Cost...'\r\n                                value={mrfFromData?.minCost}\r\n                                id=\"minCost\"\r\n                                onChange={(e) => handleInputChange(e)}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"col-md-6 form-group mb-3\">\r\n                            <label>Max Learning & Development Cost</label>\r\n                            <Input\r\n                                type={\"number\"}\r\n                                name='maxCost'\r\n                                placeholder='Select Man Learning & Development Cost...'\r\n                                value={mrfFromData?.maxCost}\r\n                                id=\"minCost\"\r\n                                onChange={(e) => handleInputChange(e)}\r\n                            />\r\n\r\n                        </div>\r\n                    </>}\r\n                    <div className=\"col-md-6 form-group mb-3\">\r\n                        <label>Type Of Appointment</label>\r\n                        <CustomSelect\r\n                            data={filteredDropdownData[\"type_of_appointment\"] || []}\r\n                            placeholder=\"Select Type Of Appointment\"\r\n                            value={mrfFromData?.appointmentType || ''}\r\n                            handleChange={(selectedOption) => handleInputChange(selectedOption, 'appointmentType')}\r\n                            name=\"appointmentType\"\r\n                        />\r\n\r\n                    </div>\r\n                    <div className=\"col-md-6 form-group mb-3\">\r\n                        <label>Appointment Duration</label>\r\n                        <Input\r\n                            type={\"number\"}\r\n                            name='appointmentDuration'\r\n                            placeholder='Enter Appointment Duration...'\r\n                            value={mrfFromData?.appointmentDuration}\r\n                            id=\"appointmentDuration\"\r\n                            onChange={(e) => handleInputChange(e)}\r\n                        />\r\n\r\n                    </div>\r\n                    <div className=\"col-md-6 form-group mb-3\">\r\n                        <label>Office Location <span className='text-danger'>*</span></label>\r\n                        <CustomSelect\r\n                            data={allLocationsData || []}\r\n                            placeholder=\"Select Type Of Appointment\"\r\n                            value={mrfFromData?.location || ''}\r\n                            handleChange={(selectedOption) => handleInputChange(selectedOption, 'location')}\r\n                            name=\"location\"\r\n                        />\r\n\r\n                        {errors.hiring_for && <CustomError\r\n                            text={errors.hiring_for}\r\n                        />}\r\n                    </div>\r\n                    <div className=\"col-md-6 form-group mb-3\">\r\n                        <label> Preferred Qualification <span className='text-danger'>*</span></label>\r\n                        <CustomSelect\r\n                            data={allQualification || []}\r\n                            placeholder=\"Select Qualification\"\r\n                            value={mrfFromData?.preferredQualification || ''}\r\n                            handleChange={(selectedOption) => handleInputChange(selectedOption, 'preferredQualification')}\r\n                            name=\"qualification\"\r\n                        />\r\n                        {errors.preferred_qualification &&\r\n                            <CustomError\r\n                                text={errors.preferred_qualification}\r\n                            />\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-md-12 form-group mb-3\">\r\n                        <label>Mrf justification <span className='text-danger'>*</span></label>\r\n                        <textarea id=\"\" className=\"w-100 form-control\" placeholder=\"Enter the Mrf justification...\"\r\n                            name=\"mrfJustification\"\r\n                            value={mrfFromData?.mrfJustification}\r\n                            onChange={(e) => handleInputChange(e)}\r\n                        ></textarea>\r\n                        {errors.mrf_justification && <CustomError\r\n                            text={errors.mrf_justification}\r\n                        />}\r\n                    </div>\r\n                </>}\r\n                <div style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                    <>\r\n                        {<>\r\n                            <CustomButton\r\n                                text=\"Save & Next\"\r\n                                classNames=\"btn btn-primary gradientBg me-2\"\r\n                                isLoading={isLoadingBtn}\r\n                                handleClick={() => {\r\n                                    onSubmitMrfForm(\"save\")\r\n                                }}\r\n                            />\r\n                            {mrfData && <CustomButton\r\n                                text=\"Skip\"\r\n                                classNames=\"btn btn-success gradientBg me-2\"\r\n                                handleClick={() => {\r\n                                    onClickActive(2)\r\n                                }}\r\n                            />}\r\n                        </>}\r\n                    </>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateMrf\r\n","import React, { useEffect, useState } from 'react'\r\nimport Button from '../../../commanComponent/Button'\r\nimport { MrfJobDescSchema } from '../../../../utils/ValidationSchema'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport CustomError from '../../../globalComponents/CustomError'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport Input from '../../../commanComponent/Input'\r\nimport { CustomButton } from '../../../globalComponents'\r\n\r\nconst JobDescription = (props) => {\r\n    const {\r\n        setActiveValues,\r\n        onClickActive,\r\n        jobDescriptionFormData,\r\n        setJobDescriptionFromData,\r\n        allTrainingCertificates,\r\n        createUpdateMrf,\r\n        mrfId,\r\n        mrfData,\r\n        activeBack,\r\n\r\n\r\n    } = props\r\n    const [errors, setErrors] = useState({});\r\n    // const [trainingCertificate, setTrainingCertificate] = useState('')\r\n    const [mrfFieldDisable, setMrfFieldDisable] = useState(false)\r\n    const [btnType, setBtnType] = useState('edit')\r\n    const [jobDescriptionData, setJobDescriptionData] = useState(\r\n        {\r\n            responsiblities: '',\r\n            domain_knowledge: '',\r\n            training_certificates: '',\r\n            other_skills: '',\r\n            role_summary: '',\r\n        }\r\n    )\r\n    useEffect(() => {\r\n        if (mrfData) {\r\n            const allMrfData = mrfData?.data[0]\r\n            setMrfFieldDisable(true)\r\n            setJobDescriptionData({\r\n                responsiblities: allMrfData?.responsiblities || '',\r\n                domain_knowledge: allMrfData?.domain_knowledge || '',\r\n                training_certificates: { value: allMrfData?.training_certificates, label: allMrfData?.training_certificates_name } || '',\r\n                other_skills: allMrfData?.other_skills || '',\r\n                role_summary: allMrfData?.role_summary || '',\r\n            })\r\n        }\r\n    }, [mrfData])\r\n\r\n    // const handleFormData = async (e) => {\r\n    //     errors && setErrors({});\r\n    //     const { name, value } = e.target\r\n    //     setJobDescriptionData({ ...jobDescriptionData, [name]: value })\r\n    // }\r\n    const handleFormData = async (input, fieldName) => {\r\n        const name = fieldName || input.target.name;\r\n        const value = input.target ? input.target.value : input;\r\n\r\n        // Remove errors for the field being modified\r\n        setErrors((prevErrors) => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n\r\n        // Update form state\r\n        setJobDescriptionData((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    }\r\n    const onSubmitJobDescription = async () => {\r\n\r\n        const payload = {\r\n            _id: mrfId,\r\n            query_type: 'jd',\r\n            step: '2',\r\n            role_summary: jobDescriptionData?.role_summary,\r\n            responsiblities: jobDescriptionData?.responsiblities,\r\n            domain_knowledge: jobDescriptionData?.domain_knowledge,\r\n            training_certificates: jobDescriptionData?.training_certificates?.value,\r\n            other_skills: jobDescriptionData?.other_skills\r\n\r\n        }\r\n\r\n        const validationResponse = await validateSchema(MrfJobDescSchema, payload);\r\n        if (validationResponse.isValid) {\r\n            createUpdateMrf(payload, 3)\r\n            setErrors({});\r\n\r\n\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <h3><img src=\"images/kpi-guidline.svg\" alt=\"\" width=\"40\" className=\"me-2\" /> Job Description</h3>\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Responsiblities <span className='text-danger'>*</span></label>\r\n                    <Input\r\n                        type={\"text\"}\r\n                        name='responsiblities'\r\n                        placeholder='Enter Responsiblities...'\r\n                        value={jobDescriptionData?.responsiblities}\r\n                        id=\"responsiblities\"\r\n                        onChange={(e) => handleFormData(e)}\r\n                    // isDisabled={mrfFieldDisable}\r\n                    />\r\n                    {errors.responsiblities &&\r\n                        <CustomError\r\n                            text={errors.responsiblities}\r\n                        />\r\n                    }\r\n\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Domain Knowledge <span className='text-danger'>*</span></label>\r\n                    <Input\r\n                        type={\"text\"}\r\n                        name='domain_knowledge'\r\n                        placeholder='Enter Domain Knowledge...'\r\n                        value={jobDescriptionData?.domain_knowledge}\r\n                        id=\"domainKnowledge\"\r\n                        onChange={(e) => handleFormData(e)}\r\n                    // isDisabled={mrfFieldDisable}\r\n                    />\r\n                    {errors.domain_knowledge &&\r\n                        <CustomError\r\n                            text={errors.domain_knowledge}\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Training Certificates</label>\r\n                    <CustomSelect\r\n                        data={allTrainingCertificates || []}\r\n                        placeholder=\"Select Training Certificates \"\r\n                        value={jobDescriptionData?.training_certificates || ''}\r\n                        handleChange={(selectedOption) => handleFormData(selectedOption, \"training_certificates\")}\r\n                        name=\"training_certificates\"\r\n                    // isDisabled={mrfFieldDisable}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Other Skills</label>\r\n                    <Input\r\n                        type={\"text\"}\r\n                        name='other_skills'\r\n                        placeholder='Enter other skills...'\r\n                        value={jobDescriptionData?.other_skills}\r\n                        id=\"other_skills\"\r\n                        onChange={(e) => handleFormData(e)}\r\n                        // isDisabled={mrfFieldDisable}\r\n                    />\r\n\r\n                </div>\r\n                <div className=\"col-md-12 form-group mb-3\">\r\n                    <label>Role Summary <span className='text-danger'>*</span></label>\r\n                    <textarea type=\"text\" className=\"form-control\"\r\n                        name='role_summary'\r\n                        value={jobDescriptionData?.role_summary}\r\n                        onChange={(e) => handleFormData(e)}\r\n                    // disabled={mrfFieldDisable}\r\n                    />\r\n                    {errors.role_summary &&\r\n                        <CustomError\r\n                            text={errors.role_summary}\r\n                        />\r\n                    }\r\n                </div>\r\n\r\n                <div style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                    {\r\n                        <>\r\n                            <CustomButton\r\n                                text=\"Save & Next\"\r\n                                classNames=\"btn btn-primary gradientBg me-2\"\r\n                                handleClick={() => {\r\n                                    onSubmitJobDescription(\"save\")\r\n                                }}\r\n                            />\r\n                            <CustomButton\r\n                                text=\"Back\"\r\n                                classNames=\"btn btn-primary me-2\"\r\n                                // isLoading={isLoadingBtn}                \r\n                                handleClick={() => {\r\n                                    onClickActive(1, 1)\r\n                                }}\r\n                            />\r\n\r\n                              {mrfData && <CustomButton\r\n                                text=\"Skip\"\r\n                                classNames=\"btn btn-success gradientBg me-2\"\r\n                                handleClick={() => {\r\n                                    onClickActive(3)\r\n                                }}\r\n                            />}\r\n                        </>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default JobDescription\r\n","import React, { useEffect, useState } from 'react'\r\nimport Button from '../../../commanComponent/Button'\r\nimport CustomError from '../../../globalComponents/CustomError'\r\nimport { MrfInterviewSchema } from '../../../../utils/ValidationSchema'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { CustomButton } from '../../../globalComponents'\r\nconst AddInterviewer = (props) => {\r\n  const {\r\n    onClickActive,\r\n    setInterviewData,\r\n    allDepartments,\r\n    allDesignations,\r\n    interviewListData,\r\n    filteredDropdownData,\r\n    getInterviewerList,\r\n    handleDepartmentByDesignation,\r\n    mrfId,\r\n    createUpdateMrf,\r\n    mrfData,\r\n  } = props\r\n  const [errors, setErrors] = useState([]);\r\n  const [addInterviewerData, setAddInterviewerData] = useState(\r\n    [{\r\n      department: null,\r\n      designation: null,\r\n      interviewStage: null,\r\n      interviewType: null,\r\n      interviewer: null,\r\n    }]\r\n  )\r\n  useEffect(() => {\r\n    if (mrfData?.data?.length) {\r\n      const allMrfData = mrfData.data[0].interview_data;\r\n      if (Array.isArray(allMrfData) && allMrfData.length > 0) {\r\n        setAddInterviewerData(allMrfData.map(item => ({\r\n          department: { value: item?.department, label: item?.department_name } || null,\r\n          designation: { value: item?.designation, label: item?.designation_name } || null,\r\n          interviewStage: { value: item?.interview_stage, label: item?.interview_stage_name } || null,\r\n          interviewType: { value: item?.interview_type_value, label: item?.interview_type_name } || null,\r\n          interviewer: { value: item?.interviewer, label: item?.interviewer_name } || null,\r\n        })));\r\n      } else {\r\n        setAddInterviewerData([{\r\n          department: null,\r\n          designation: null,\r\n          interviewStage: null,\r\n          interviewType: null,\r\n          interviewer: null,\r\n        }]);\r\n      }\r\n    }\r\n  }, [mrfData])\r\n\r\n  // const toggleEditMode = (index) => {\r\n  //   const updatedInterviewerData = addInterviewerData.map((form, i) => \r\n  //     i === index ? { ...form, isEditMode: !form.isEditMode } : form\r\n  //   );\r\n  //   setAddInterviewerData(updatedInterviewerData);\r\n  // };\r\n\r\n\r\n\r\n  const handleFormData = (input, fieldName, index) => {\r\n    const name = fieldName || input.target.name;\r\n    const value = input.target ? input.target.value : input;\r\n\r\n\r\n    // Update the specific interviewer at the given index\r\n    setAddInterviewerData((prevData) => {\r\n      const updatedData = [...prevData];\r\n      updatedData[index] = {\r\n        ...updatedData[index],\r\n        [name]: value,\r\n      };\r\n      return updatedData;\r\n    });\r\n\r\n    // Clear the error for the updated field\r\n    setErrors(prevErrors => {\r\n      const updatedErrors = [...prevErrors];\r\n      if (updatedErrors[index]) {\r\n        delete updatedErrors[index][name];\r\n      }\r\n      return updatedErrors;\r\n    });\r\n  };\r\n\r\n\r\n  const handleDepartment = (selectedOption) => {\r\n    if (selectedOption !== undefined && selectedOption !== null) {\r\n      handleDepartmentByDesignation(selectedOption?.value)\r\n    }\r\n\r\n  }\r\n\r\n  const handleDesignation = (selectedOption) => {\r\n    if (selectedOption !== undefined && selectedOption !== null) {\r\n      getInterviewerList(selectedOption.value)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const onAddInterviewrsform = async (item, index, type) => {\r\n      // Validate the current item\r\n      const validationResponse = await validateSchema(MrfInterviewSchema, item);\r\n\r\n      // Track validation errors outside of setErrors\r\n      const updatedErrors = Array.isArray(errors) ? [...errors] : [];\r\n      let errorOccurred = false;\r\n  \r\n      if (validationResponse.isValid) {\r\n          // Clear errors for the current index if validation passes\r\n          updatedErrors[index] = {};\r\n      } else {\r\n          // Set validation errors for the current index and mark as error occurred\r\n          updatedErrors[index] = validationResponse.errors;\r\n          errorOccurred = true;\r\n      }\r\n  \r\n      // Update the state with new errors\r\n      setErrors(updatedErrors);\r\n\r\n    // Update the errors array if validation fails\r\n\r\n\r\n    if (errorOccurred) return;\r\n    if (type == \"add\") {\r\n      setAddInterviewerData((prevData) => [\r\n        ...prevData,\r\n        {\r\n          department: null,\r\n          designation: null,\r\n          interviewStage: null,\r\n          interviewType: null,\r\n          interviewer: null,\r\n          isEditMode: true,\r\n        },\r\n      ]);\r\n    }\r\n  \r\n    if (type == \"submit\") {\r\n      const interviewrData = getIdsOnly(addInterviewerData)\r\n      const payload = {\r\n        query_type: \"interviewer\",\r\n        mrf_id: mrfId,\r\n        step: 3,\r\n        interview_details: interviewrData\r\n\r\n      }\r\n      createUpdateMrf(payload, 4)\r\n      setErrors({});\r\n      // onClickActive(4)\r\n      setInterviewData(addInterviewerData)\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const getIdsOnly = (interviewerData) => {\r\n    return interviewerData.map(item => ({\r\n      department: item?.department?._id || item?.department?.value,\r\n      designation: item?.designation?._id || item?.designation?.value,\r\n      interview_stage: item?.interviewStage?.id || item?.interviewStage?.value,\r\n      interview_type: item?.interviewType?.id || item?.interviewType?.value,\r\n      interviewer: item?.interviewer?._id ||item?.interviewer?.value,\r\n    }));  \r\n  };\r\n\r\n  const onDeleteInterview = (index) => {\r\n    const updatedInterviewers = addInterviewerData.filter((_, i) => i !== index);\r\n    setAddInterviewerData(updatedInterviewers);\r\n  };\r\n  const renderInterviewr = () => {\r\n    return addInterviewerData.map((interviewForm, index) =>\r\n    (<div className=\"row mt-3\">\r\n      <div className=\"col-md-6 form-group mb-3\">\r\n        <label>Select Department <span className='text-danger'>*</span> </label>\r\n        <CustomSelect\r\n          data={allDepartments || []}\r\n          placeholder=\"Select Department\"\r\n          value={interviewForm?.department || null}\r\n          handleChange={(selectedOption) => { handleFormData(selectedOption, \"department\", index); handleDepartment(selectedOption); }}\r\n          name=\"department\"\r\n        />\r\n        {errors[index]?.department && (\r\n          <CustomError text={errors[index].department} />\r\n        )}\r\n\r\n      </div>\r\n      <div className=\"col-md-6 form-group mb-3\">\r\n        <label>Select Designation <span className='text-danger'>*</span> </label>\r\n        <CustomSelect\r\n          data={allDesignations || []}\r\n          placeholder=\"Select Designation\"\r\n          value={interviewForm?.designation || null}\r\n          handleChange={(selectedOption) => { handleFormData(selectedOption, \"designation\", index); handleDesignation(selectedOption) }}\r\n          name=\"designation\"\r\n        />\r\n\r\n        {errors[index]?.designation && (\r\n          <CustomError text={errors[index].designation} />\r\n        )}\r\n\r\n      </div>\r\n\r\n      <div className=\"col-md-6 form-group mb-3\">\r\n        <label>Interview stage <span className='text-danger'>*</span> </label>\r\n\r\n        <CustomSelect\r\n          data={filteredDropdownData['interview_stage'] || []}\r\n          placeholder=\"Select Interview stage \"\r\n          value={interviewForm?.interviewStage || null}\r\n          handleChange={(selectedOption) => handleFormData(selectedOption, \"interviewStage\", index)}\r\n          name=\"interviewStage\"\r\n        />\r\n\r\n        {errors[index]?.interviewStage && (\r\n          <CustomError text={errors[index].interviewStage} />\r\n        )}\r\n      </div> \r\n\r\n      <div className=\"col-md-6 form-group mb-3\">\r\n        <label>Interview Type <span className='text-danger'>*</span> </label>\r\n        <CustomSelect\r\n          data={filteredDropdownData['interview_type'] || []}\r\n          placeholder=\"Select Interview Type \"\r\n          value={interviewForm?.interviewType || null}\r\n          handleChange={(selectedOption) => handleFormData(selectedOption, \"interviewType\", index)}\r\n          name=\"interviewType\"\r\n        />\r\n        {errors[index]?.interviewType && (\r\n          <CustomError text={errors[index].interviewType} />\r\n        )}\r\n      </div>\r\n      <div className=\"col-md-6 form-group mb-3\">\r\n        <label>Interviewer <span className='text-danger'>*</span> </label>\r\n        <CustomSelect\r\n          data={interviewListData || []}\r\n          placeholder=\"Select Interviewer \"\r\n          value={interviewForm?.interviewer || null}\r\n          handleChange={(selectedOption) => handleFormData(selectedOption, \"interviewer\", index)}\r\n          name=\"interviewer\"\r\n        />\r\n\r\n\r\n        {errors[index]?.interviewer && (\r\n          <CustomError text={errors[index].interviewer} />\r\n        )}\r\n      </div>\r\n      <div className=\"d-flex\">\r\n        {addInterviewerData.length - 1 == index &&\r\n          <CustomButton\r\n            text=\"Add Interviewer\"\r\n            classNames=\"btn btn-primary me-2\"\r\n            // isLoading={isLoadingBtn}                \r\n            handleClick={() => onAddInterviewrsform(interviewForm, index, \"add\")}\r\n          />\r\n        }\r\n        {addInterviewerData.length > 1 && <Button\r\n          btnClassName=\"btn btn-danger me-2\"\r\n          onClickFun={() => onDeleteInterview(index)}\r\n        >\r\n          Delete\r\n        </Button>}\r\n      </div>\r\n      {\r\n        <>\r\n          {addInterviewerData.length - 1 == index && <div style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n            <CustomButton\r\n              text={\" Save & Next\"}\r\n              classNames=\"btn btn-primary gradientBg me-2\"\r\n              handleClick={() => onAddInterviewrsform(interviewForm, index, \"submit\")}\r\n            />\r\n\r\n            <CustomButton\r\n              text={\"Back\"}\r\n              classNames=\"btn btn-primary gradientBg me-2\"\r\n              handleClick={() => onClickActive(2, 2)}\r\n            />\r\n\r\n                   {mrfData && <CustomButton\r\n                                text=\"Skip\"\r\n                                classNames=\"btn btn-success gradientBg me-2\"\r\n                                handleClick={() => {\r\n                                    onClickActive(4)\r\n                                }}\r\n                            />}\r\n\r\n          </div>}</>}\r\n      {addInterviewerData.length - 1 !== index && <div>\r\n        <hr />\r\n      </div>}\r\n\r\n\r\n    </div>)\r\n\r\n\r\n    )\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <h3><img src=\"images/kpi-guidline.svg\" alt=\"\" width=\"40\" className=\"me-2\" /> Add Interviewers</h3>\r\n      {<>{renderInterviewr()}</>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddInterviewer\r\n","import React, { useEffect, useState } from 'react'\r\nimport CreateMrf from './CreateMrf'\r\nimport JobDescription from './JobDescription'\r\nimport AddInterviewer from './AddInterviewer'\r\nimport CustomError from '../../../globalComponents/CustomError'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport Input from '../../../commanComponent/Input'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport { MrfCreateSchema, MrfInterviewSchema, MrfJobDescSchema } from '../../../../utils/ValidationSchema'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport Button from '../../../commanComponent/Button'\r\nimport { transformKey } from '../../../../utils/common'\r\n\r\nconst ReviewAndSubmit = (props) => {\r\n  const {\r\n    onClickActive,\r\n    mrfData,\r\n    submitDraftMrf,\r\n    isLoadingType,\r\n    isLoadingSubmitDraft\r\n  } = props\r\n  const [allMrfData, setMrfData] = useState('')\r\n  const [interviewrData, setInterviewerData] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (mrfData) {\r\n      const allMrfData = mrfData?.data[0]\r\n      setMrfData(allMrfData)\r\n\r\n      if (Array.isArray(allMrfData?.interview_data) && allMrfData?.interview_data?.length > 0) {\r\n        setInterviewerData(allMrfData?.interview_data.map(item => ({\r\n          \"Department\": item?.department_name,\r\n          \"Designation\": item?.designation_name || null,\r\n          \"Interview Stage\": item?.interview_stage_name || null,\r\n          \"Interview Type\": item?.interview_type_name || null,\r\n          \"Interviewer\": item?.interviewer_name || null,\r\n        })));\r\n      }\r\n    }\r\n  }, [mrfData])\r\n\r\n  const interviewData = () => {\r\n    return (\r\n      interviewrData.map((item, index) => (<>\r\n        <div className=\"row mt-2\" key={index}>\r\n          {Object.entries(item).map(([key, value]) => (\r\n            <div className=\"col-md-4\" key={`${index}-${key}`}>\r\n              <div className=\"form-group row mrfViewOnly\">\r\n                <label htmlFor={`staticEmail_${index}_${key}`} className=\"col-md-6 col-form-label\">\r\n                  {transformKey(key)}:\r\n                </label>\r\n                <div className=\"col-md-6\">\r\n                  <strong className=\"form-control-plaintext\">\r\n                    {value || 'N/A'}\r\n                  </strong>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {interviewrData.length - 1 !== index && <hr />}\r\n      </>\r\n      )))\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='d-flex justify-content-between'>\r\n        <h3><img src=\"images/kpi-guidline.svg\" alt=\"\" width=\"40\" className=\"me-2\" /> MRF Detail</h3>\r\n        {<CustomButton\r\n          classNames=\"btn btn-info  me-2\"\r\n          icon={<i className=\"fa fa-edit\" aria-hidden=\"true\"></i> }\r\n          styles={{minWidth: \"50px\"}}\r\n        // isLoading={isLoadingType === \"submit\" && isLoadingSubmitDraft}\r\n        handleClick={() => onClickActive(1)}\r\n        />}\r\n      </div>\r\n      <div className=\"row mt-2\">\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Department:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.department_name}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Designation:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.designation_name}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Position:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.position_name}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Priority :</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.priority_name}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {allMrfData?.type === \"replacement\" ? \r\n          <div className=\"col-md-4 \">\r\n          <div className=\"form-group row mrfViewOnly\">\r\n            <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Emp ID:</label>\r\n            <div className=\"col-md-6\">\r\n              <strong className=\"form-control-plaintext\" >{allMrfData?.emp_id}</strong>\r\n            </div>\r\n          </div>\r\n        </div>\r\n          \r\n          :<>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Min Qualification:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.min_qualififcation_name}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Business Impact:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.business_impact_name}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Total Vacant Position:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.type_of_appointment?.type}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Year Of Experience:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.year_of_experience_name}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Learning & Development Cost:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.learning_development_cost?.is_cost}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Min Learning & Development Cost:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.learning_development_cost?.min_cost}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Max Learning & Development Cost:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.learning_development_cost?.max_cost}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Type Of Appointment:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.type_of_appointment?.type}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Appointment Duration:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.type_of_appointment?.duration}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Office Location:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.hiring_for_name}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Preferred Qualification :</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.preferred_qualification_name}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Mrf justification:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.mrf_justification}</strong>\r\n              </div>\r\n            </div>\r\n          </div></>}\r\n        </div> \r\n      </div>\r\n      <hr />\r\n\r\n\r\n      <div className='d-flex justify-content-between'>\r\n      <h3><img src=\"images/kpi-guidline.svg\" alt=\"\" width=\"40\" className=\"me-2\" /> Job Description</h3>\r\n        <CustomButton\r\n          classNames=\"btn btn-info  me-2\"\r\n          icon={<i className=\"fa fa-edit\" aria-hidden=\"true\"></i> }\r\n          styles={{minWidth: \"50px\"}}\r\n        // isLoading={isLoadingType === \"submit\" && isLoadingSubmitDraft}\r\n        handleClick={() => onClickActive(2)}\r\n        />\r\n      </div>\r\n     \r\n      <div className=\"row mt-2\">\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Responsiblities:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.responsiblities}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Training Certificate:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.training_certificate_name}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Domain Knowledge:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.domain_knowledge}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Other Skills:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.other_skills}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4 \">\r\n            <div className=\"form-group row mrfViewOnly\">\r\n              <label htmlFor=\"staticEmail\" className=\"col-md-6 col-form-label\" >Role Summary:</label>\r\n              <div className=\"col-md-6\">\r\n                <strong className=\"form-control-plaintext\" >{allMrfData?.role_summary}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <hr />\r\n\r\n      <div className='d-flex justify-content-between'>\r\n      <h3><img src=\"images/kpi-guidline.svg\" alt=\"\" width=\"40\" className=\"me-2\" /> Add Interviewers</h3>\r\n        <CustomButton\r\n          classNames=\"btn btn-info  me-2\"\r\n          icon={<i className=\"fa fa-edit\" aria-hidden=\"true\"></i> }\r\n          styles={{minWidth: \"50px\"}}\r\n        // isLoading={isLoadingType === \"submit\" && isLoadingSubmitDraft}\r\n        handleClick={() => onClickActive(3)}\r\n        />\r\n      </div>\r\n\r\n      <>{interviewData()}</>\r\n\r\n      <hr />\r\n      <div className='d-flex justify-content-end mt-4'>\r\n        <CustomButton\r\n          text={\"Send for Approval\"}\r\n          classNames=\"btn btn-oreang  me-2\"\r\n          isLoading={isLoadingType === \"submit\" && isLoadingSubmitDraft}\r\n          handleClick={() => submitDraftMrf(\"submit\")}\r\n        />\r\n\r\n        {/* <CustomButton\r\n          text={\"Draft\"}\r\n          classNames=\"btn btn-success me-2\"\r\n          isLoading={isLoadingType === \"draft\" && isLoadingSubmitDraft}\r\n          handleClick={() => submitDraftMrf(\"draft\")}\r\n        /> */}\r\n        {/* {mrfData && <CustomButton\r\n                                text=\"Next\"\r\n                                classNames=\"btn btn-success gradientBg me-2\"\r\n                                handleClick={() => {\r\n                                    onClickActive(4)\r\n                                }}\r\n                            />} */}\r\n\r\n      </div>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ReviewAndSubmit\r\n","import React, { useEffect, useState } from 'react'\r\nimport CreateMrf from './MrfForms/CreateMrf'\r\nimport JobDescription from './MrfForms/JobDescription'\r\nimport AddInterviewer from './MrfForms/AddInterviewer'\r\nimport ReviewAndSubmit from './MrfForms/ReviewAndSubmit'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    departmentAction,\r\n    designationAction,\r\n    dropdownMasterActions,\r\n    locationActions,\r\n    mrfActions,\r\n    positionActions,\r\n    qualificationActions,\r\n    trainingCertificatesActions,\r\n    employeeActions,\r\n} from '../../../core/resource/actions'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { setFilterDropdownData } from '../../../utils/common'\r\nconst MrfProcessSteps = () => {\r\n    const dispatch = useDispatch()\r\n    const { mrfType, id } = useParams();\r\n    const {\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    } = useSelector(state => state.department)\r\n    const {\r\n        getDesignationsByDepartmentRes,\r\n        getDesignationsByDepartmentPending,\r\n        getDesignationsByDepartmentError\r\n    } = useSelector(state => state.designation)\r\n    const {\r\n        getPositionsByDepartmentDesignationError,\r\n        getPositionsByDepartmentDesignationPending,\r\n        getPositionsByDepartmentDesignationRes\r\n    } = useSelector(state => state.position)\r\n    const {\r\n        getFilteredDropdownDataError,\r\n        getFilteredDropdownDataRes,\r\n        getFilteredDropdownDataPending\r\n    } = useSelector(state => state.dropdownMaster)\r\n\r\n    const {\r\n        getAllQualificationRes,\r\n        getAllQualificationPending,\r\n        getAllQualificationError\r\n    } = useSelector(state => state.qualification)\r\n\r\n    const {\r\n        getTrainingCertificatesRes,\r\n        getTrainingCertificatesPending,\r\n        getTrainingCertificatesError\r\n    } = useSelector(state => state.trainingCertificate)\r\n\r\n    const {\r\n        createUpdateMrfRes,\r\n        createUpdateMrfPending,\r\n        createUpdateMrfError,\r\n\r\n        getInterviewerListPending,\r\n        getInterviewerListRes,\r\n        getInterviewerListError,\r\n\r\n        getMrfDataByIdError,\r\n        getMrfDataByIdRes,\r\n        getMrfDataByIdPending,\r\n\r\n        submitDraftMrfPending,\r\n        submitDraftMrfRes,\r\n        submitDraftMrfError,\r\n\r\n    } = useSelector(state => state.mrf)\r\n\r\n    const {\r\n        getAllLocationsRes,\r\n        getAllLocationsPending,\r\n        getAllLocationsError,\r\n    } = useSelector(state => state.location)\r\n\r\n    const {\r\n        getEmployeeForReportingManagerPending,\r\n        getEmployeeForReportingManagerRes,\r\n        getEmployeeForReportingManagerError,\r\n    } = useSelector(state => state.employee)\r\n\r\n    const [isActive, setIsActive] = useState(1)\r\n    const [activeValues, setActiveValues] = useState([])\r\n    const [createMrfData, setCreateMrfData] = useState('')\r\n    const [jobDescriptionFormData, setJobDescriptionFromData] = useState('')\r\n    const [interviewData, setInterviewData] = useState([])\r\n    const [allDepartments, setAllDepartments] = useState([])\r\n    const [allDesignations, setAllDesignations] = useState([])\r\n    const [allPosition, setAllPosition] = useState([])\r\n    const [allTrainingCertificates, setAllTrainingCertificates] = useState([])\r\n    const [departmentId, setDepartmentId] = useState('')\r\n    const [allQualification, setAllQualification] = useState('')\r\n    const [filteredDropdownData, setFilteredDropdownData] = useState({})\r\n    const [allLocationsData, setAllLocationsData] = useState('')\r\n    const [activeTab, setActiveTab] = useState(1)\r\n    const [mrfId, setMrfId] = useState('')\r\n    const [interviewListData, setInterviewListData] = useState()\r\n    const [mrfData, setMrfData] = useState('')\r\n    const [activeBack, setActiveBack] = useState('')\r\n    const [isLoadingType, setIsLoadingType] = useState('')\r\n    const [employeesForReportingManager, setEmployeesForReportingManager] = useState('')\r\n    const Navigate = useNavigate()\r\n\r\n    //Department api call\r\n    useEffect(() => {\r\n        getAllDepartments()\r\n        getDropdownFilteredData()\r\n        getAllQualificationData()\r\n        getTrainingCertificates()\r\n        getAllLocations()\r\n        getEmployeeForReportingManager()\r\n        dispatch(mrfActions.handleClearMrfStore('HANDLE_CLEAR_GET_MRF_DATA_BY_ID_STORE'))\r\n    }, [])\r\n    useEffect(() => {\r\n        dispatch(mrfActions.handleClearMrfStore('HANDLE_CLEAR_GET_MRF_DATA_BY_ID_STORE'))\r\n        dispatch(mrfActions.handleClearMrfStore('HANDLE_CLEAR_CREATE_UPDATE_MRF_STORE'))\r\n    }, [mrfType])\r\n\r\n    const getAllDepartments = () => {\r\n        if (!getDepartmentListRes || getDepartmentListRes === null || getDepartmentListRes === undefined) {\r\n            dispatch(departmentAction.getDepartmentListRequest());\r\n        } else {\r\n            setAllDepartments(getDepartmentListRes?.data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getDepartmentListPending) {\r\n            if (getDepartmentListError) {\r\n                return;\r\n            }\r\n            if (getDepartmentListRes) {\r\n                if (getDepartmentListRes?.data?.code === 200) {\r\n                    setAllDepartments(getDepartmentListRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    ]);\r\n\r\n    //Department by Designaion api calling\r\n    const handleDepartmentByDesignation = (id) => {\r\n        setDepartmentId(id)\r\n        const params = {\r\n            department_id: id\r\n        }\r\n        dispatch(designationAction.getDesignationsByDepartmentRequest(params))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getDesignationsByDepartmentPending) {\r\n            if (getDesignationsByDepartmentError) {\r\n                return;\r\n            }\r\n            if (getDesignationsByDepartmentRes) {\r\n                if (getDesignationsByDepartmentRes?.code === 200) {\r\n                    setAllDesignations(getDesignationsByDepartmentRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDesignationsByDepartmentRes,\r\n        getDesignationsByDepartmentError,\r\n        getDesignationsByDepartmentPending\r\n    ]);\r\n\r\n    //get Position by Designaion api calling\r\n    const handlegetPositionByDepartmentDesignation = (id) => {\r\n        const params = {\r\n            department_id: departmentId,\r\n            designation_id: id\r\n        }\r\n        dispatch(positionActions.getPositionsByDepartmentDesignationRequest(params))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getPositionsByDepartmentDesignationPending) {\r\n            if (getPositionsByDepartmentDesignationError) {\r\n                return;\r\n            }\r\n            if (getPositionsByDepartmentDesignationRes) {\r\n                if (getPositionsByDepartmentDesignationRes?.code === 200) {\r\n                    setAllPosition(getPositionsByDepartmentDesignationRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getPositionsByDepartmentDesignationRes,\r\n        getPositionsByDepartmentDesignationError,\r\n        getPositionsByDepartmentDesignationPending\r\n    ]);\r\n\r\n\r\n    //dropdown master filter \r\n    const getDropdownFilteredData = () => {\r\n\r\n        const categories= ['interview_type', 'priority', 'business_impact',\r\n            'learning_development_cost', 'year_of_experience', \"type_of_appointment\",\r\n            'interview_stage',\r\n        ]\r\n        let params = { category: categories }\r\n\r\n        dispatch(dropdownMasterActions.getFilteredDropdownDataRequest(params))\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getFilteredDropdownDataPending) {\r\n            if (getFilteredDropdownDataError) {\r\n                return;\r\n            }\r\n            if (getFilteredDropdownDataRes) {\r\n                if (getFilteredDropdownDataRes?.code === 200) {\r\n                    const updateData = setFilterDropdownData(getFilteredDropdownDataRes?.data?.data)\r\n                    setFilteredDropdownData(updateData);\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getFilteredDropdownDataRes,\r\n        getFilteredDropdownDataError,\r\n        getFilteredDropdownDataPending\r\n    ]);\r\n\r\n    // qualification api call\r\n    const getAllQualificationData = () => {\r\n        dispatch(qualificationActions.getAllQualificationRequest())\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getAllQualificationPending) {\r\n            if (getAllQualificationError) {\r\n                return;\r\n            }\r\n            if (getAllQualificationRes) {\r\n                if (getAllQualificationRes?.code === 200) {\r\n                    const qualificationRes = getAllQualificationRes?.data\r\n                    setAllQualification(qualificationRes)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllQualificationRes,\r\n        getAllQualificationError,\r\n        getAllQualificationPending\r\n    ]);\r\n\r\n    // training Certificates api call\r\n    const getTrainingCertificates = () => {\r\n        dispatch(trainingCertificatesActions.getTrainingCertificatesRequest())\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getTrainingCertificatesPending) {\r\n            if (getTrainingCertificatesError) {\r\n                return;\r\n            }\r\n            if (getTrainingCertificatesRes) {\r\n                if (getTrainingCertificatesRes?.code === 200) {\r\n                    setAllTrainingCertificates(getTrainingCertificatesRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getTrainingCertificatesRes,\r\n        getTrainingCertificatesError,\r\n        getTrainingCertificatesPending\r\n    ]);\r\n\r\n    //create update mrf \r\n\r\n    const createUpdateMrf = (payload, activeTabVal, type) => {\r\n        dispatch(mrfActions.createUpdateMrfRequest(payload))\r\n        setActiveTab(activeTabVal)\r\n        if (activeTabVal == 4) getMrfDataById();\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!createUpdateMrfPending) {\r\n            if (createUpdateMrfError) {\r\n                return;\r\n            }\r\n            if (createUpdateMrfRes) {\r\n                if (createUpdateMrfRes?.code === 200) {\r\n                    // if(activeTab !== activeValues){\r\n                    const createUpdateMrfData = createUpdateMrfRes?.data\r\n                    setMrfId(createUpdateMrfData?.id)\r\n\r\n                    onClickActive(activeTab)\r\n                    setActiveValues((pre) => [...pre, activeTab - 1])\r\n                    dispatch(mrfActions.handleClearMrfStore('HANDLE_CLEAR_CREATE_UPDATE_MRF_STORE'))\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        createUpdateMrfRes,\r\n        createUpdateMrfError,\r\n        createUpdateMrfPending\r\n    ]);\r\n\r\n    // get all locations \r\n    const getAllLocations = () => {\r\n        dispatch(locationActions.getAllLocationsRequest())\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getAllLocationsPending) {\r\n            if (getAllLocationsError) {\r\n                return;\r\n            }\r\n            if (getAllLocationsRes) {\r\n                if (getAllLocationsRes?.code === 200) {\r\n                    setAllLocationsData(getAllLocationsRes?.data)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllLocationsError,\r\n        getAllLocationsPending,\r\n        getAllLocationsRes\r\n    ]);\r\n\r\n\r\n    // get Interviewrs list \r\n    const getInterviewerList = (designationId) => {\r\n        const params = {\r\n            designation_id: designationId\r\n        }\r\n        dispatch(mrfActions.getInterviewerListRequest(params))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getInterviewerListPending) {\r\n            if (getInterviewerListError) {\r\n                return;\r\n            }\r\n            if (getInterviewerListRes) {\r\n                if (getInterviewerListRes?.code === 200) {\r\n                    setInterviewListData(getInterviewerListRes?.data)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getInterviewerListPending,\r\n        getInterviewerListError,\r\n        getInterviewerListRes\r\n    ]);\r\n\r\n    // get Mrf Data By Id\r\n    useEffect(() => {\r\n        if (id) {\r\n            getMrfDataById(id)\r\n            setIsActive(1)\r\n        } else {\r\n            setMrfData('')\r\n        }\r\n\r\n    }, [id])\r\n    const getMrfDataById = (id) => {\r\n\r\n        const params = {\r\n            _id: id || mrfId\r\n        }\r\n        dispatch(mrfActions.getMrfDataByIdRequest(params))\r\n    }\r\n    useEffect(() => {\r\n        if (!getMrfDataByIdPending) {\r\n            if (getMrfDataByIdError) {\r\n                return;\r\n            }\r\n            if (getMrfDataByIdRes) {\r\n                if (getMrfDataByIdRes?.code === 200) {\r\n                    setMrfData(getMrfDataByIdRes?.data)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getMrfDataByIdPending,\r\n        getMrfDataByIdError,\r\n        getMrfDataByIdRes\r\n    ]);\r\n\r\n\r\n    // get submit and Draft \r\n    const submitDraftMrf = (type) => {\r\n        const params = {\r\n            query_type: type,\r\n            _id: mrfId\r\n        }\r\n        setIsLoadingType(type)\r\n\r\n        dispatch(mrfActions.submitDraftMrfRequest(params))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!submitDraftMrfPending) {\r\n            if (submitDraftMrfError) {\r\n                return;\r\n            }\r\n            if (submitDraftMrfRes) {\r\n                if (submitDraftMrfRes?.code === 200) {\r\n                    dispatch(mrfActions.handleClearMrfStore('HANDLE_CLEAR_GET_MRF_DATA_BY_ID_STORE'))\r\n                    dispatch(mrfActions.handleClearMrfStore('HANDLE_CLEAR_SUBMIT_DRAFT_MRF_STORE'))\r\n                    setMrfId('')\r\n                    Navigate('/mrf')\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        submitDraftMrfPending,\r\n        submitDraftMrfError,\r\n        submitDraftMrfRes\r\n    ]);\r\n\r\n\r\n    // get submit and Draft \r\n    const getEmployeeForReportingManager = () => {\r\n        dispatch(employeeActions.getEmployeeForReportingManagerRequest())\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getEmployeeForReportingManagerPending) {\r\n            if (getEmployeeForReportingManagerError) {\r\n                return;\r\n            }\r\n            if (getEmployeeForReportingManagerRes) {\r\n                if (getEmployeeForReportingManagerRes?.code === 200) {\r\n                    const getEmployeeForReportingManagerData = getEmployeeForReportingManagerRes?.data\r\n                    setEmployeesForReportingManager(getEmployeeForReportingManagerData)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getEmployeeForReportingManagerPending,\r\n        getEmployeeForReportingManagerError,\r\n        getEmployeeForReportingManagerRes\r\n    ]);\r\n\r\n\r\n\r\n\r\n\r\n    const onClickActive = (val, backValue) => {\r\n        setIsActive(val)\r\n        if (backValue) {\r\n            setActiveBack(backValue)\r\n            getMrfDataById()\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"col-md-12 ps-md-0\">\r\n                <div className=\"cardBox h-100 newMrfProcess\">\r\n                    <div className=\"cardHead\">\r\n                        {/* <h3>New <span>MRF Process</span></h3> */}\r\n                        <ul className=\"tackList  mt-5 pt-2 pe-4\">\r\n                            <li onClick={() => onClickActive(1)} className={activeValues.includes(1) ? 'active' : ''}>Create MRF</li>\r\n                            <li onClick={() => onClickActive(2)} className={activeValues.includes(2) ? 'active' : ''}>Add Job Description</li>\r\n                            <li onClick={() => onClickActive(3)} className={activeValues.includes(3) ? 'active' : ''}>Add Interviewer</li>\r\n                            <li onClick={() => onClickActive(4)} className={activeValues.includes(4) ? 'active' : ''}>Review & Submit</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"cardBox mb-3 mt-3\">\r\n                <div className=\"cardHead\">\r\n\r\n                    {/* create mrf */}\r\n                    {isActive == 1 &&\r\n                        <CreateMrf\r\n                            onClickActive={onClickActive}\r\n                            createMrfData={createMrfData}\r\n                            isLoadingBtn={createUpdateMrfPending}\r\n                            setCreateMrfData={setCreateMrfData}\r\n                            allDepartments={allDepartments}\r\n                            allDesignations={allDesignations}\r\n                            allPosition={allPosition}\r\n                            allQualification={allQualification}\r\n                            filteredDropdownData={filteredDropdownData}\r\n                            allLocationsData={allLocationsData}\r\n                            activeBack={activeBack}\r\n                            createUpdateMrf={createUpdateMrf}\r\n                            getMrfDataById={getMrfDataById}\r\n                            handleDepartmentByDesignation={handleDepartmentByDesignation}\r\n                            handlegetPositionByDepartmentDesignation={handlegetPositionByDepartmentDesignation}\r\n                            mrfData={mrfData}\r\n                            mrfType={mrfType}\r\n                            employeesForReportingManager={employeesForReportingManager}\r\n                        />}\r\n                    {/*  Job Description */}\r\n                    {isActive == 2 && <JobDescription\r\n                        onClickActive={onClickActive}\r\n                        setActiveValues={setActiveValues}\r\n                        createUpdateMrf={createUpdateMrf}\r\n                        mrfId={mrfId}\r\n                        mrfData={mrfData}\r\n                        activeBack={activeBack}\r\n                        getMrfDataById={getMrfDataById}\r\n                        jobDescriptionFormData={jobDescriptionFormData}\r\n                        setJobDescriptionFromData={setJobDescriptionFromData}\r\n                        allTrainingCertificates={allTrainingCertificates}\r\n                        mrfType={mrfType}\r\n                    />}\r\n\r\n                    {/* Add Interviwers */}\r\n                    {isActive == 3 && <AddInterviewer\r\n                        onClickActive={onClickActive}\r\n                        setActiveValues={setActiveValues}\r\n                        interviewData={interviewData}\r\n                        setInterviewData={setInterviewData}\r\n                        allDepartments={allDepartments}\r\n                        allDesignations={allDesignations}\r\n                        filteredDropdownData={filteredDropdownData}\r\n                        handleDepartmentByDesignation={handleDepartmentByDesignation}\r\n                        interviewListData={interviewListData}\r\n                        getInterviewerList={getInterviewerList}\r\n                        createUpdateMrf={createUpdateMrf}\r\n                        getMrfDataById={getMrfDataById}\r\n                        mrfId={mrfId}\r\n                        mrfData={mrfData}\r\n                        activeBack={activeBack}\r\n                    />}\r\n\r\n                    {isActive == 4 && <ReviewAndSubmit\r\n                        onClickActive={onClickActive}\r\n                        mrfData={mrfData}\r\n                        submitDraftMrf={submitDraftMrf}\r\n                        isLoadingType={isLoadingType}\r\n                        isLoadingSubmitDraft={getMrfDataByIdPending}\r\n\r\n\r\n\r\n                    />}\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MrfProcessSteps\r\n"],"names":["props","_mrfFromData$learning2","onClickActive","isLoadingBtn","allDepartments","allDesignations","allPosition","allQualification","filteredDropdownData","allLocationsData","createUpdateMrf","handleDepartmentByDesignation","handlegetPositionByDepartmentDesignation","mrfData","mrfType","employeesForReportingManager","errors","setErrors","useState","mrfFromData","setMrfFromData","department","designation","position","priority","minQualififcation","preferredQualification","businessImpact","location","vacantPosition","learningDevelopmentCost","minCost","maxCost","appointmentType","appointmentDuration","mrfJustification","yearOfExperience","empId","useEffect","_allMrfData$learning_","_allMrfData$learning_2","_allMrfData$learning_3","_allMrfData$learning_4","allMrfData","data","value","department_id","label","department_name","designation_id","designation_name","position_id","position_name","priority_name","min_qualififcation","min_qualififcation_name","preferred_qualification","preferred_qualification_name","business_impact","business_impact_name","hiring_for","hiring_for_name","vacant_position","learning_development_cost","is_cost","min_cost","max_cost","type_of_appointment","type","duration","mrf_justification","year_of_experience","year_of_experience_name","emp_id","emp_id_name","handleInputChange","async","input","fieldName","name","target","prevState","_jsxs","_Fragment","children","_jsx","src","alt","width","className","CustomSelect","placeholder","handleChange","selectedOption","undefined","handleDepartment","CustomError","text","isDisabled","handleDesignation","Input","id","onChange","e","toLowerCase","style","display","justifyContent","CustomButton","classNames","isLoading","handleClick","validationResponse","payload","_mrfFromData$departme","_mrfFromData$designat","_mrfFromData$position","_mrfFromData$minQuali","_mrfFromData$preferre","_mrfFromData$business","_mrfFromData$learning","_mrfFromData$appointm","_mrfFromData$yearOfEx","_mrfFromData$departme2","_mrfFromData$designat2","_mrfFromData$position2","validateSchema","MrfCreateSchema","MrfReplacementSchema","isValid","onSubmitMrfForm","setActiveValues","jobDescriptionFormData","setJobDescriptionFromData","allTrainingCertificates","mrfId","activeBack","mrfFieldDisable","setMrfFieldDisable","btnType","setBtnType","jobDescriptionData","setJobDescriptionData","responsiblities","domain_knowledge","training_certificates","other_skills","role_summary","training_certificates_name","handleFormData","prevErrors","_jobDescriptionData$t","_id","query_type","step","MrfJobDescSchema","onSubmitJobDescription","setInterviewData","interviewListData","getInterviewerList","addInterviewerData","setAddInterviewerData","interviewStage","interviewType","interviewer","_mrfData$data","length","interview_data","Array","isArray","map","item","interview_stage","interview_stage_name","interview_type_value","interview_type_name","interviewer_name","index","prevData","updatedData","updatedErrors","onAddInterviewrsform","MrfInterviewSchema","errorOccurred","isEditMode","interviewrData","getIdsOnly","mrf_id","interview_details","interviewerData","_item$department","_item$department2","_item$designation","_item$designation2","_item$interviewStage","_item$interviewStage2","_item$interviewType","_item$interviewType2","_item$interviewer","_item$interviewer2","interview_type","interviewForm","_errors$index","_errors$index2","_errors$index3","_errors$index4","_errors$index5","Button","btnClassName","onClickFun","updatedInterviewers","filter","_","i","onDeleteInterview","_allMrfData$type_of_a","_allMrfData$type_of_a2","_allMrfData$type_of_a3","submitDraftMrf","isLoadingType","isLoadingSubmitDraft","setMrfData","setInterviewerData","_allMrfData$interview","icon","styles","minWidth","htmlFor","training_certificate_name","Object","entries","_ref","key","transformKey","MrfProcessSteps","dispatch","useDispatch","useParams","getDepartmentListRes","getDepartmentListError","getDepartmentListPending","useSelector","state","getDesignationsByDepartmentRes","getDesignationsByDepartmentPending","getDesignationsByDepartmentError","getPositionsByDepartmentDesignationError","getPositionsByDepartmentDesignationPending","getPositionsByDepartmentDesignationRes","getFilteredDropdownDataError","getFilteredDropdownDataRes","getFilteredDropdownDataPending","dropdownMaster","getAllQualificationRes","getAllQualificationPending","getAllQualificationError","qualification","getTrainingCertificatesRes","getTrainingCertificatesPending","getTrainingCertificatesError","trainingCertificate","createUpdateMrfRes","createUpdateMrfPending","createUpdateMrfError","getInterviewerListPending","getInterviewerListRes","getInterviewerListError","getMrfDataByIdError","getMrfDataByIdRes","getMrfDataByIdPending","submitDraftMrfPending","submitDraftMrfRes","submitDraftMrfError","mrf","getAllLocationsRes","getAllLocationsPending","getAllLocationsError","getEmployeeForReportingManagerPending","getEmployeeForReportingManagerRes","getEmployeeForReportingManagerError","employee","isActive","setIsActive","activeValues","createMrfData","setCreateMrfData","interviewData","setAllDepartments","setAllDesignations","setAllPosition","setAllTrainingCertificates","departmentId","setDepartmentId","setAllQualification","setFilteredDropdownData","setAllLocationsData","activeTab","setActiveTab","setMrfId","setInterviewListData","setActiveBack","setIsLoadingType","setEmployeesForReportingManager","Navigate","useNavigate","getAllDepartments","getDropdownFilteredData","getAllQualificationData","getTrainingCertificates","getAllLocations","getEmployeeForReportingManager","mrfActions","handleClearMrfStore","departmentAction","getDepartmentListRequest","_getDepartmentListRes","code","params","designationAction","getDesignationsByDepartmentRequest","category","dropdownMasterActions","getFilteredDropdownDataRequest","_getFilteredDropdownD","updateData","setFilterDropdownData","qualificationActions","getAllQualificationRequest","qualificationRes","trainingCertificatesActions","getTrainingCertificatesRequest","activeTabVal","createUpdateMrfRequest","getMrfDataById","createUpdateMrfData","pre","locationActions","getAllLocationsRequest","getMrfDataByIdRequest","employeeActions","getEmployeeForReportingManagerRequest","getEmployeeForReportingManagerData","val","backValue","onClick","includes","CreateMrf","positionActions","getPositionsByDepartmentDesignationRequest","JobDescription","AddInterviewer","designationId","getInterviewerListRequest","ReviewAndSubmit","submitDraftMrfRequest"],"sourceRoot":""}