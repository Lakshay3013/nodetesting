{"version":3,"file":"static/js/170.fbe21019.chunk.js","mappings":"6PAcA,MA2QA,EA3QgCA,KACVC,EAAAA,EAAAA,QAAO,MAAzB,MAEM,aAACC,EAAY,WAAEC,EAAU,aAACC,EAAY,iBAAEC,EAAgB,qBAAEC,EAAoB,sBAAEC,EAAqB,mBAAEC,EAAkB,mBAAEC,GAAuBT,GACjJU,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,CAAC,GAChCC,GAAWC,EAAAA,EAAAA,OACX,yBAACC,EAAwB,qBAC3BC,EAAoB,uBACpBC,EAAsB,6BAAEC,EAA4B,yBACpDC,EAAwB,2BACxBC,IAA+BC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,iBACvDC,EAAUC,IAAeb,EAAAA,EAAAA,WAAS,IAClCc,EAAYC,IAAiBf,EAAAA,EAAAA,UAAS,KACtCgB,EAAYC,IAAiBjB,EAAAA,EAAAA,UAAS,KACtCkB,EAAYC,IAAiBnB,EAAAA,EAAAA,UAAS,KACtCoB,EAAaC,IAAkBrB,EAAAA,EAAAA,UAAS,IAExCsB,EAAkBC,IAAuBvB,EAAAA,EAAAA,UAAS,CACrDwB,cAAe,GACfC,YAAa,GACbC,WAAY,GACZC,KAAM,GACNC,UAAW,GACXC,OAAO,MAGJC,EAAWC,IAAgB/B,EAAAA,EAAAA,UAAS,CACvCgC,YAAY,GACZC,YAAY,GACZC,YAAY,MAETC,EAAYC,IAAkBpC,EAAAA,EAAAA,UAAqB,OAAZV,QAAY,IAAZA,OAAY,EAAZA,EAAc+C,OAE5DC,EAAAA,EAAAA,YAAU,KACNF,EAA2B,OAAZ9C,QAAY,IAAZA,OAAY,EAAZA,EAAc+C,KAAK,GACjC,CAAC/C,KAEJgD,EAAAA,EAAAA,YAAU,KACRC,GAAkB,GACjB,CAACnB,IAEJ,MAAMmB,EAAmBA,KACvB,MAAMC,EAAS,CACXC,KAAMrB,EACNsB,MAAOC,EAAAA,GAAWD,OAEtBzC,EAAS2C,EAAAA,GAAoBC,6BAA6BL,GAAQ,GAGpEF,EAAAA,EAAAA,YAAU,KACR,IAAKhC,EAA8B,CAC/B,GAAIE,EAEA,YADAW,EAAc,IAGa,IAAD2B,EACuBC,EAAAC,EAAAC,EADrD,GAAI1C,EACA,GAA4C,MAAhB,OAAxBA,QAAwB,IAAxBA,GAA8B,QAANuC,EAAxBvC,EAA0B8B,YAAI,IAAAS,OAAN,EAAxBA,EAAgCI,MAChC/B,EAAsC,OAAxBZ,QAAwB,IAAxBA,GAA8B,QAANwC,EAAxBxC,EAA0B8B,YAAI,IAAAU,GAAM,QAANC,EAA9BD,EAAgCV,YAAI,IAAAW,GAAM,QAANC,EAApCD,EAAsCX,YAAI,IAAAY,OAAlB,EAAxBA,EAA4CZ,KAGtE,IACD,CACC/B,EACAC,EACAC,KAGJ8B,EAAAA,EAAAA,YAAU,KACNP,EAAa,CACTC,aAA+B,OAAlBpC,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBoC,cAAe,GAChDC,aAA+B,OAAlBrC,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBqC,cAAe,GAChDC,YAAatC,EAAmBsC,aAAe,KAEnDrB,EAA8B,OAAlBjB,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBgC,WAChCX,EAAgC,OAAlBrB,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBuD,GAAG,GACtC,CAACvD,KAEJ0C,EAAAA,EAAAA,YAAU,KACN,IAAKnC,EAA0B,CAC3B,GAAIE,EAEA,YADA+C,EAAAA,GAAMC,MAA4B,OAAtBhD,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwBiD,cAGb,IAADC,EACwBC,EADlD,GAAIpD,EACA,GAAyC,OAAjB,OAApBA,QAAoB,IAApBA,GAA0B,QAANmD,EAApBnD,EAAsBiC,YAAI,IAAAkB,OAAN,EAApBA,EAA4BL,MAC5BE,EAAAA,GAAMK,QAA4B,OAApBrD,QAAoB,IAApBA,GAA0B,QAANoD,EAApBpD,EAAsBiC,YAAI,IAAAmB,OAAN,EAApBA,EAA4BE,KAC1CjE,IACAD,IACAS,EAAS2C,EAAAA,GAAoBe,8BAA8B,0CAGvE,IACD,CACCvD,EACAC,EACAF,IAEJ,MAAMyD,EAAgBC,IAClB/D,GAAUC,EAAU,CAAC,GACrB,MAAM,KAAE+D,EAAI,MAAEC,GAAUF,EAAMG,OAC9BjC,EAAa,IAAKD,EAAW,CAACgC,GAAOC,GAAQ,GAwBjDzB,EAAAA,EAAAA,YAAU,KACY,GAAd/C,GACA0E,GACJ,GACD,CAAC1E,IAGJ,MAAM0E,EAAmBA,KACrBlC,EAAa,CACbC,YAAY,GACZC,YAAY,GACZC,YAAY,KAEZvC,EAAsB,IACtBI,EAAU,CAAC,GACXgB,EAAc,GAAG,EAIrB,OACImD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAW,8CAA6C/E,EAAa,OAAS,IAE/EgF,UAAW,EACXC,MAAO,CACHC,WAAYlF,EAAa,UAAY,UACvC6E,SAAA,EAEFC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,6CAA4CF,SAAA,CAAEvE,EAAqB,OAASD,EAAqB,SAAW,aAAa,cACvIsE,EAAAA,EAAAA,KAAA,UAAQQ,KAAK,SAASJ,UAAU,YAAY,kBAAgB,YAAY,aAAW,QAC/EK,QAASA,IAAMlF,EAAiB,cAGxCyE,EAAAA,EAAAA,KAAA,OAAKI,UAAU,iBAAgBF,UAC3BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWF,SAAA,EACtBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACrBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,kBAAiBF,UAC5BC,EAAAA,EAAAA,MAAA,SAAOO,SAAO,EAAAR,SAAA,CAAC,eAAWF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,cAAaF,SAAC,cAGhEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACrBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBF,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOQ,KAAK,OAAOJ,UAAU,oBACzBO,YAAY,oBACZf,KAAK,cACLC,OAAgB,OAATjC,QAAS,IAATA,OAAS,EAATA,EAAWE,cAAe,GACjC8C,SAAWC,GAAMnB,EAAamB,MAE3B,OAANjF,QAAM,IAANA,OAAM,EAANA,EAAQ0B,iBACL0C,EAAAA,EAAAA,KAACc,EAAAA,EAAW,CAACC,KAAMnF,EAAO0B,yBAK1C6C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACrBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,kBAAiBF,UAC5BC,EAAAA,EAAAA,MAAA,SAAOO,SAAO,EAAAR,SAAA,CAAC,eAAWF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,cAAaF,SAAC,cAGhEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACrBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBF,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcY,UAAQ,EACpCpB,KAAK,cACLC,MAAgB,OAATjC,QAAS,IAATA,OAAS,EAATA,EAAWG,YAClB6C,SAAWC,GAAMnB,EAAamB,GAC9BI,SAAgC,IAAtBtF,EAAwCuE,SAAA,EAElDF,EAAAA,EAAAA,KAAA,UAAQH,MAAM,GAAGqB,QAAM,EAACC,UAAQ,EAAAjB,SAAC,gCAChClD,IAAwB,OAAVA,QAAU,IAAVA,OAAU,EAAVA,EAAYoE,KAAIjD,IAC3B6B,EAAAA,EAAAA,KAAA,UAAQH,MAAW,OAAJ1B,QAAI,IAAJA,OAAI,EAAJA,EAAML,YAAYoC,SAAM,OAAJ/B,QAAI,IAAJA,OAAI,EAAJA,EAAML,qBAG1C,OAANlC,QAAM,IAANA,OAAM,EAANA,EAAQ2B,eACLyC,EAAAA,EAAAA,KAACc,EAAAA,EAAW,CAACC,KAAMnF,EAAOmC,uBAK1CoC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACrBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,kBAAiBF,UAC5BC,EAAAA,EAAAA,MAAA,SAAOO,SAAO,EAAAR,SAAA,CAAC,yBAAqBF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,cAAaF,SAAC,cAG1EF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACrBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBF,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,UAAQC,UAAU,cAAcY,UAAQ,EACpCpB,KAAK,cACLC,MAAgB,OAATjC,QAAS,IAATA,OAAS,EAATA,EAAWI,YAClB4C,SAAWC,GAAMnB,EAAamB,GAC9BI,SAAgC,IAAtBtF,EAAwCuE,SAAA,EAElDF,EAAAA,EAAAA,KAAA,UAAQH,MAAM,GAAGqB,QAAM,EAACC,UAAQ,EAAAjB,SAAC,+BAChCjC,IAA0B,OAAXA,QAAW,IAAXA,OAAW,EAAXA,EAAamD,KAAIjD,IAC7B6B,EAAAA,EAAAA,KAAA,UAAQH,MAAW,OAAJ1B,QAAI,IAAJA,OAAI,EAAJA,EAAMc,GAAGiB,SAAM,OAAJ/B,QAAI,IAAJA,OAAI,EAAJA,EAAMb,uBAGjC,OAAN1B,QAAM,IAANA,OAAM,EAANA,EAAQ4B,cACLwC,EAAAA,EAAAA,KAACc,EAAAA,EAAW,CAACC,KAAMnF,EAAOoC,uBAK1CmC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,UACrBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,kBAAiBF,UAC5BF,EAAAA,EAAAA,KAAA,SAAOU,SAAO,EAAAR,SAAC,mBAGvBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACrBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,kBAAiBF,UAC5BF,EAAAA,EAAAA,KAAA,SAAOQ,KAAK,WAAWG,YAAY,YAC/BU,QAAS3E,EACTkE,SAAWC,GAAMlE,GAAaD,GAC9BuE,SAAgC,IAAtBtF,OAGX,OAANC,QAAM,IAANA,OAAM,EAANA,EAAQ8B,aACLsC,EAAAA,EAAAA,KAACc,EAAAA,EAAW,CAACC,KAAMnF,EAAO8B,mBAKtCsC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,sDAAqDF,SACzC,IAAtBvE,IACGqE,EAAAA,EAAAA,KAACsB,EAAAA,GAAY,CACTd,KAAK,SACLe,WAAY,6BACZC,YAAaX,GAxJxBY,WACjB7D,EAAUF,UAAYhB,EACtB,MAAMgF,QAA2BC,EAAAA,EAAAA,IAAeC,EAAAA,GAAiBhE,GAC7D8D,EAAmBG,SACnBhG,EAAU,CAAC,GACPH,GACAkC,EAAe,IAAId,EACnBf,EAAS2C,EAAAA,GAAoBoD,4BAA4BlE,IACzDtC,IACAC,MAEAQ,EAAS2C,EAAAA,GAAoBqD,yBAAyBnE,IACtDtC,OAIJO,EAAU6F,EAAmB9F,QAC7BoG,QAAQC,IAAIP,EAAmB9F,OAAQ,mBAC3C,EAsI8CsG,GAElBnB,MAASrF,EAAqB,SAAW,UAAnC,uBAM/B,C,8LC9PX,MA2LA,EA3LwBR,IACpB,MAAMiH,GAAYhH,EAAAA,EAAAA,QAAO,IACnBY,GAAWC,EAAAA,EAAAA,OACX,WAACY,EAAU,cAACC,EAAa,cAACuF,EAAa,iBAACC,EAAgB,SAACC,GAAYpH,GAE3EkD,EAAAA,EAAAA,YAAU,KACNmE,EAAsBH,QAELI,IAAbF,GACAG,EAAiBH,EACrB,GACD,CAACF,EAAeE,IAEnB,MAAMG,EAAoBC,IACtB,MAAMC,EAASR,EAAUS,QAAQD,OAE3BE,GADoB,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQG,YACe,OAAbJ,QAAa,IAAbA,OAAa,EAAbA,EAAeK,WAAW,OAAQ,MAEhEf,QAAQC,IAAI,iBAAkBY,GACxB,OAANF,QAAM,IAANA,GAAAA,EAAQK,QAAQH,EAAQ,EAYtBN,EAAyBU,IAC3B,MAAMN,EAASR,EAAUS,QAAQD,OAC3BD,EAA8B,OAAdO,QAAc,IAAdA,OAAc,EAAdA,EAAgBF,WAAW,OAAQ,KAEnD,OAANJ,QAAM,IAANA,GAAAA,EAAQO,MAAMC,QAAOC,IACjB,MACMC,EADYV,EAAOO,MAAMI,SAASC,UACbC,mBAC3BJ,EAAOK,WAAWf,EAAeW,EAAS,GAC5C,EA2BN,OACIrD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACAF,EAAAA,EAAAA,KAAC0D,EAAAA,GAAe,CAACC,QAASC,EAAAA,IAASC,gBAAiBC,EAAAA,IAAgB5D,UACtEF,EAAAA,EAAAA,KAAC+D,EAAAA,GAAQ,CACPpB,OAAQqB,EAAAA,IACR7F,KAAMvB,EACNqH,OAAQ,CACNC,QAAS,CACPC,EAAAA,IAAYC,EAAAA,IAAMC,EAAAA,IAAQC,EAAAA,IAAWC,EAAAA,IAAWC,EAAAA,IAAMC,EAAAA,IAAUC,EAAAA,IAAMC,EAAAA,IAAOC,EAAAA,IAC7EC,EAAAA,IAAOC,EAAAA,IAAcC,EAAAA,IAAcC,EAAAA,IAAYC,EAAAA,IAAaC,EAAAA,IAAWC,EAAAA,IACvEC,EAAAA,IAAWC,EAAAA,IAAoBC,EAAAA,IAAUC,EAAAA,IAAWC,EAAAA,IAASC,EAAAA,IAAMC,EAAAA,IAAYC,EAAAA,IAC/EC,EAAAA,IAAMC,EAAAA,IAAeC,EAAAA,IAAWC,EAAAA,IAAaC,EAAAA,IAAWC,EAAAA,IAAQC,EAAAA,IAAaC,EAAAA,GAAYC,EAAAA,IACzFC,EAAAA,IAAaC,EAAAA,IAAWC,EAAAA,IAAUC,EAAAA,IAAOC,EAAAA,IAAWC,EAAAA,IAAUC,EAAAA,IAAkBC,EAAAA,IAAWC,EAAAA,IAASC,EAAAA,IAAYC,EAAAA,IAAaC,EAAAA,IAAaC,EAAAA,KAE5IC,QAAS,CACPC,MAAO,CACL,OAAQ,OAAQ,UAAW,IAAK,OAAQ,SAAU,YAAa,IAC/D,OAAQ,eAAgB,eAAgB,cAAe,QAAS,sBAAuB,cAAc,gBAAiB,WACtH,YAAa,OAAQ,YAAa,QAAS,mBAAoB,IAAI,WAAY,aAAc,IAAK,iBAAkB,YAAa,gBAAiB,OAAQ,YAAa,cAAe,SAAU,UAAW,aAC3M,iBAAkB,QAAS,YAAa,WAAW,YAAa,UAAW,aAAc,cAAe,eAAgB,YAAY,aAEtIC,wBAAwB,GAG1B9G,MAAO,CACL+G,YAAa,CACT,CACEzH,KAAM,mBACN0H,QAAS,KACTC,QAAS,CAAE,aAEb,CACE3H,KAAM,WACN0H,QAAS,IACTC,QAAS,CAAE,aAEb,CACE3H,KAAM,YACN0H,QAAS,aACTC,QAAS,CAAE,UAEb,CACE3H,KAAM,eACN0H,QAAS,OACTC,QAAS,CAAE,iBAEb,CACE3H,KAAM,cACN0H,QAAS,MACTC,QAAS,CAAE,gBAEb,CACE3H,KAAM,YACN0H,QAAS,OACTC,QAAS,CAAE,gBAIrBC,aAAc,CACVC,UAAW,kDACXC,iBAAiB,EACjBC,QAAS,CACL,eAAgB,aAChBC,cAAe,4BAGvBC,MAAO,CACHC,cAAe,CACf,CACIlI,KAAM,uBACNC,MAAO,KACPkI,KAAM,YAEV,CACInI,KAAM,qBACNC,MAAO,SACPkI,KAAM,UAEV,CACInI,KAAM,iBACNC,MAAO,KACPkI,KAAM,UAEV,CACInI,KAAM,iBACNC,MAAO,KACPkI,KAAM,UAGdb,QAAS,CACL,qBACA,uBACA,iBACA,iBACA,iBACA,uBACA,uBAEJc,YAAa,CACTC,MAAO,CACH,CACIC,YAAY,EACZX,SAAS,EACTY,QAAQ,KAIpBC,UAAW,CACPC,cAAc,IAGlBC,QAAU3F,IACNR,EAAUS,QAAU,CAACD,SAAO,EAC5B/B,SAAUA,CAACjB,EAAOgD,IAzIA4F,EAAC5I,EAAOgD,KAAiB,IAAD6F,EAClDxG,QAAQC,IAAI,kBACZ,MAAMwG,EAAc9F,EAAOG,UACrB4F,EAAwB,OAATvG,QAAS,IAATA,GAAkB,QAATqG,EAATrG,EAAWS,eAAO,IAAA4F,OAAT,EAATA,EAAoBE,aAEzC,IAAKA,GAAgBA,IAAiBD,EAGlC,OAFA5L,EAAc4L,QACdtG,EAAUS,QAAQ8F,aAAeD,GAGrC,MAAME,EAAiB,KAAiB,OAAZD,QAAY,IAAZA,OAAY,EAAZA,EAAcE,SAAS,yBAA0B,IAAKxH,KAAIyH,GAASA,EAAM,KAC/FC,EAAgB,KAAgB,OAAXL,QAAW,IAAXA,OAAW,EAAXA,EAAaG,SAAS,yBAA0B,IAAKxH,KAAIyH,GAASA,EAAM,KAE7FE,EAAgBJ,EAAeK,QAAOC,IAAQH,EAAcI,SAASD,KAE3EjH,QAAQC,IAAI,kBAAmB8G,GAE/BA,EAAcI,SAAQC,GAAYrN,EAAS2C,EAAAA,GAAoB2K,mBAAmB,CAACC,IAAIF,OACvFjH,EAAUS,QAAQ8F,aAAeD,EACjC5L,EAAc4L,EAAY,EAsHSF,CAAmB5I,EAAOgD,QAGtD,C","sources":["components/modal/admin/emailTemplate/AddActionEmailTemplate.js","components/modal/admin/emailTemplate/Customckediter.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CustomButton } from '../../../globalComponents';\r\nimport { emailTemplateAction, notificationActions } from '../../../../core/resource/actions';\r\nimport { toast } from 'react-toastify';\r\nimport { addActionSchema } from '../../../../utils/ValidationSchema';\r\nimport * as yup from 'yup';\r\nimport { validateSchema } from '../../../../utils/ValidationHelper';\r\nimport CustomError from '../../../globalComponents/CustomError';\r\nimport { notify } from '../../../globalComponents/ToastNotification';\r\n\r\nimport Customckediter from './Customckediter'\r\nimport { pagination } from '../../../../utils/Constants.config'\r\n\r\nconst AddActionEmailTemplate = (props) => {\r\n    const editorRef = useRef(null);\r\n\r\n    const {TemplateList, openAction,getAllAction, toggleOpenAction, getAllEmailTemplalte, setSelectedActionData, selectedActionData, onHandleViewModals } = props\r\n    const [errors, setErrors] = useState({});\r\n    const dispatch = useDispatch();\r\n    const {addActionTemplatePending,\r\n        addActionTemplateRes,\r\n        addActionTemplateError, GetActionTypeTemplatePending,\r\n        GetActionTypeTemplateRes,\r\n        GetActionTypeTemplateError } = useSelector(state => state.emailtemplate);\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [editorData, setEditorData] = useState('')\r\n    const [templateId, setTemplateId] = useState('')\r\n    const [actionType, setActionType] = useState([])\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const [addEmailTemplate, setAddEmailTemplate] = useState({\r\n        template_name: '',\r\n        email_title: '',\r\n        email_type: '',\r\n        body: '',\r\n        is_active: '',\r\n        remark:''\r\n    })\r\n\r\n    const [addAction, setAddAction] = useState({\r\n        action_name:'',\r\n        action_type:'',\r\n        template_id:'',\r\n    })\r\n    const [Alltemplate,setAlltemplate] = useState(TemplateList?.data)\r\n\r\n    useEffect(() => {\r\n        setAlltemplate(TemplateList?.data)\r\n      }, [TemplateList])\r\n\r\n      useEffect(() => {\r\n        getAllActionType()\r\n      }, [currentPage])\r\n    \r\n      const getAllActionType = () => {\r\n        const params = {\r\n            page: currentPage,\r\n            limit: pagination.limit,\r\n          }\r\n        dispatch(emailTemplateAction.GetActionTypeTemplateRequest(params))\r\n      }\r\n\r\n      useEffect(() => {\r\n        if (!GetActionTypeTemplatePending) {\r\n            if (GetActionTypeTemplateError) {\r\n                setActionType([])\r\n                return;\r\n            }\r\n            if (GetActionTypeTemplateRes) {\r\n                if (GetActionTypeTemplateRes?.data?.code == 200) {\r\n                    setActionType(GetActionTypeTemplateRes?.data?.data?.data?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        GetActionTypeTemplatePending,\r\n        GetActionTypeTemplateRes,\r\n        GetActionTypeTemplateError\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setAddAction({\r\n            action_name: selectedActionData?.action_name || '',\r\n            action_type: selectedActionData?.action_type || '',\r\n            template_id: selectedActionData.template_id || '',\r\n        })\r\n        setIsActive(selectedActionData?.is_active)\r\n        setTemplateId(selectedActionData?.id)\r\n    }, [selectedActionData])\r\n\r\n    useEffect(() => {\r\n        if (!addActionTemplatePending) {\r\n            if (addActionTemplateError) {\r\n                toast.error(addActionTemplateError?.errorMessage)\r\n                return;\r\n            }\r\n            if (addActionTemplateRes) {\r\n                if (addActionTemplateRes?.data?.code === 200) {\r\n                    toast.success(addActionTemplateRes?.data?.msg)\r\n                    toggleOpenAction()\r\n                    getAllAction()\r\n                    dispatch(emailTemplateAction.handleClearEmailTemplateStore(\"HANDLE_CLEAR_ADD_ACTION_TEMPLATE_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addActionTemplateRes,\r\n        addActionTemplateError,\r\n        addActionTemplatePending]);\r\n\r\n    const handleChange = (event) => {\r\n        errors && setErrors({});\r\n        const { name, value } = event.target\r\n        setAddAction({ ...addAction, [name]: value })\r\n    }\r\n\r\n    const createAction = async () => {\r\n        addAction.is_active = isActive\r\n        const validationResponse = await validateSchema(addActionSchema, addAction);\r\n        if (validationResponse.isValid) {\r\n            setErrors({});\r\n            if (selectedActionData) {\r\n                addAction['_id'] = templateId\r\n                dispatch(emailTemplateAction.UpdataActionTemplateRequest(addAction));\r\n                getAllAction()\r\n                toggleOpenAction()\r\n            } else {\r\n                dispatch(emailTemplateAction.AddActionTemplateRequest(addAction));\r\n                getAllAction()\r\n            }\r\n\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n            console.log(validationResponse.errors, \"formattedErrors\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (openAction == false) {\r\n            resetTempateData()\r\n        }\r\n    }, [openAction])\r\n\r\n\r\n    const resetTempateData = () => {\r\n        setAddAction({\r\n        action_name:'',\r\n        action_type:'',\r\n        template_id:'',\r\n        })\r\n        setSelectedActionData('')\r\n        setErrors({});\r\n        setEditorData('')\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end creatNewTicketOff ${openAction ? 'show' : ''}`}\r\n\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openAction ? 'visible' : 'hidden',\r\n                }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{onHandleViewModals ? \"View\" : selectedActionData ? \"Update\" : \"Create New\"} Action</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => toggleOpenAction('view')}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Action Name<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <input type=\"text\" className=\"form-control fs-7\"\r\n                                        placeholder=\"Enter Action Name\"\r\n                                        name='action_name'\r\n                                        value={addAction?.action_name || ''}\r\n                                        onChange={(e) => handleChange(e)}\r\n                                    />\r\n                                    {errors?.template_name && (\r\n                                        <CustomError text={errors.template_name} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Action Type<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <select className=\"form-select\" required\r\n                                        name='action_type'\r\n                                        value={addAction?.action_type}\r\n                                        onChange={(e) => handleChange(e)}\r\n                                        disabled={onHandleViewModals != '' ? true : false}\r\n                                    >\r\n                                        <option value='' hidden selected>Select Required Action Type</option>\r\n                                        {actionType && actionType?.map(data => (\r\n                                            <option value={data?.action_name}>{data?.action_name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors?.email_title && (\r\n                                        <CustomError text={errors.action_type} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Select Email Template<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <select className=\"form-select\" required\r\n                                        name='template_id'\r\n                                        value={addAction?.template_id}\r\n                                        onChange={(e) => handleChange(e)}\r\n                                        disabled={onHandleViewModals != '' ? true : false}\r\n                                    >\r\n                                        <option value='' hidden selected>Select Required Email Type</option>\r\n                                        {Alltemplate && Alltemplate?.map(data => (\r\n                                            <option value={data?.id}>{data?.template_name}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                    {errors?.email_type && (\r\n                                        <CustomError text={errors.template_id} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Is Active</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <input type=\"checkbox\" placeholder=\"Is Active\"\r\n                                        checked={isActive}\r\n                                        onChange={(e) => setIsActive(!isActive)}\r\n                                        disabled={onHandleViewModals != '' ? true : false}\r\n                                    />\r\n                                </div>\r\n                                {errors?.is_active && (\r\n                                    <CustomError text={errors.is_active} />\r\n                                )}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center justify-content-end gap-2\">\r\n                            {onHandleViewModals == '' &&\r\n                                <CustomButton\r\n                                    type=\"button\"\r\n                                    classNames={\"btn btn-primary gradientBg\"}\r\n                                    handleClick={e => createAction()}\r\n                                    // isLoading={departmentData?updateDepartmentPending:addDepartmentPending}\r\n                                    text={`${selectedActionData ? \"Update\" : \"Create\"} Action`}\r\n                                />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddActionEmailTemplate\r\n","\r\n// import { CKEditor, CKEditorContext } from '@ckeditor/ckeditor5-react';\r\n// import {\r\n//     ClassicEditor, Context, Bold, Essentials, Italic, Paragraph, ContextWatchdog, CodeBlock, AutoLink, Link, List, SimpleUploadAdapter,\r\n//     Image, ImageCaption, ImageResize, ImageStyle, ImageToolbar, LinkImage, Table, TableToolbar,HtmlEmbed,GeneralHtmlSupport,FullPage,Highlight,Heading,\r\n//     Font,FontFamily,FindAndReplace, Code, Strikethrough, Subscript, Superscript, Underline,Indent, IndentBlock,BlockQuote,HorizontalLine,ImageInsert,\r\n//     AutoImage,Markdown,Style,FontColor,FontSize,TextPartLanguage,Alignment,Mention,MediaEmbed,HtmlComment,RemoveFormat\r\n// } from 'ckeditor5';\r\nimport 'ckeditor5/ckeditor5.css';\r\nimport { CKEditor, CKEditorContext } from '@ckeditor/ckeditor5-react';\r\nimport {\r\n  ClassicEditor, Context, Bold, Essentials, Italic, Paragraph, ContextWatchdog, CodeBlock, AutoLink, Link, List, SimpleUploadAdapter,\r\n  Image, ImageCaption, ImageResize, ImageStyle, ImageToolbar, LinkImage, Table, TableToolbar, HtmlEmbed, GeneralHtmlSupport, FullPage, Highlight, Heading,\r\n  Font, FontFamily, FindAndReplace, Code, Strikethrough, Subscript, Superscript, Underline, Indent, IndentBlock, BlockQuote, HorizontalLine, ImageInsert,\r\n  AutoImage, Markdown, Style, FontColor, FontSize, TextPartLanguage, Alignment, Mention, MediaEmbed, HtmlComment, RemoveFormat,SourceEditing\r\n} from 'ckeditor5';\r\nimport React, { useState, useEffect, useRef } from 'react'; \r\nimport { emailTemplateAction } from '../../../../core/resource/actions';\r\nimport { useDispatch } from 'react-redux'\r\n\r\n\r\n\r\n\r\nconst Customckediter = (props) => {\r\n    const editorRef = useRef('');\r\n    const dispatch = useDispatch();\r\n    const {editorData,setEditorData,dropdownValue,setDropdownValue,bodydata} = props\r\n\r\n    useEffect(() => {\r\n        handleDropdownChanges(dropdownValue);\r\n\r\n        if (bodydata !== undefined) {\r\n            handleUpdateBody(bodydata);\r\n        }\r\n    }, [dropdownValue, bodydata]);\r\n\r\n    const handleUpdateBody = (selectedValue) => {\r\n        const editor = editorRef.current.editor;\r\n        const currentData = editor?.getData();\r\n        const newData = currentData + selectedValue?.replaceAll('&lt;', '<');\r\n\r\n        console.log(\"Hello new html\", newData);\r\n        editor?.setData(newData);\r\n    };\r\n\r\n    // const handleDropdownChanges = (event) => {\r\n    //     const editor = editorRef.current.editor;\r\n    //     const selectedValue = event\r\n    //     const currentData = editor?.getData();\r\n    //     console.log(\"sdfsdfdsfsdfsdfsdfsdf\",currentData)\r\n    //     const newData = currentData?.replace(/<\\/p>/, ` ${selectedValue}</p>`);\r\n    //     editor?.setData(newData);\r\n    // };\r\n\r\n    const handleDropdownChanges = (selectedOption) => {\r\n        const editor = editorRef.current.editor;\r\n        const selectedValue = selectedOption?.replaceAll('&lt;', '<');\r\n\r\n        editor?.model.change(writer => {\r\n            const selection = editor.model.document.selection;\r\n            const position = selection.getFirstPosition();\r\n            writer.insertText(selectedValue, position);\r\n        });\r\n    };\r\n\r\n   const handleEditorChange = (event, editor,save) => {\r\n    console.log(\"Helllo chandan\")\r\n    const currentData = editor.getData();\r\n    const previousData = editorRef?.current?.previousData; \r\n\r\n    if (!previousData || previousData === currentData) {\r\n        setEditorData(currentData); \r\n        editorRef.current.previousData = currentData\r\n        return;\r\n    }\r\n    const previousImages = [...(previousData?.matchAll(/<img.*?src=\"(.*?)\"/g) || [])].map(match => match[1]);\r\n    const currentImages = [...(currentData?.matchAll(/<img.*?src=\"(.*?)\"/g) || [])].map(match => match[1]);\r\n    \r\n    const removedImages = previousImages.filter(src => !currentImages.includes(src));\r\n\r\n    console.log(\"Removed Images:\", removedImages);\r\n    \r\n    removedImages.forEach(imageUrl => dispatch(emailTemplateAction.RemoveImageRequest({url:imageUrl})));\r\n    editorRef.current.previousData = currentData;\r\n    setEditorData(currentData);\r\n};\r\n\r\n//   console.log(\"Hello new Dadasd chsjdshd\", editorData)\r\n\r\n    return (\r\n        <>\r\n        <CKEditorContext context={Context} contextWatchdog={ContextWatchdog}>\r\n      <CKEditor\r\n        editor={ClassicEditor}\r\n        data={editorData}\r\n        config={{\r\n          plugins: [\r\n            Essentials, Bold, Italic, Paragraph, CodeBlock, Link, AutoLink, List, Table, TableToolbar,\r\n            Image, ImageToolbar, ImageCaption, ImageStyle, ImageResize, LinkImage, SimpleUploadAdapter,\r\n            HtmlEmbed, GeneralHtmlSupport, FullPage, Highlight, Heading, Font, FontFamily, FindAndReplace,\r\n            Code, Strikethrough, Subscript, Superscript, Underline, Indent, IndentBlock, BlockQuote, HorizontalLine,\r\n            ImageInsert, AutoImage, Markdown, Style, FontColor, FontSize, TextPartLanguage, Alignment, Mention, MediaEmbed, HtmlComment, RemoveFormat,SourceEditing\r\n          ],\r\n          toolbar: {\r\n            items: [\r\n              'undo', 'redo', 'heading', '|', 'bold', 'italic', 'Alignment', '|',\r\n              'link', 'bulletedList', 'numberedList', 'insertImage', 'image', 'simpleUploadAdapter', 'insertTable','sourceEditing', 'fullPage',\r\n              'highlight', 'font', 'fontColor', 'style', 'textPartLanguage', '|','fontSize', 'fontFamily', '|', 'findAndReplace', 'underline', 'strikethrough', 'code', 'subscript', 'superscript', 'indent', 'outdent', 'blockQuote',\r\n              'horizontalLine', 'image', 'AutoImage', 'Markdown','codeBlock', 'mention', 'mediaEmbed', 'htmlComment', 'removeFormat', 'linkImage','htmlEmbed'\r\n            ],\r\n            shouldNotGroupWhenFull: true,\r\n            \r\n          },\r\n          style: {\r\n            definitions: [\r\n                {\r\n                  name: 'Article Category',\r\n                  element: 'h3',\r\n                  classes: [ 'category' ]\r\n                },\r\n                {\r\n                  name: 'Info Box',\r\n                  element: 'p',\r\n                  classes: [ 'info-box' ]\r\n                },\r\n                {\r\n                  name: 'Quotation',\r\n                  element: 'blockquote',\r\n                  classes: [ 'quote' ]\r\n                },\r\n                {\r\n                  name: 'Code Snippet',\r\n                  element: 'code',\r\n                  classes: [ 'code-snippet' ]\r\n                },\r\n                {\r\n                  name: 'Warning Box',\r\n                  element: 'div',\r\n                  classes: [ 'warning-box' ]\r\n                },\r\n                {\r\n                  name: 'Highlight',\r\n                  element: 'span',\r\n                  classes: [ 'highlight' ]\r\n                },\r\n              ]\r\n        },\r\n        simpleUpload: {\r\n            uploadUrl: 'http://localhost:3001/v1/api/add-template-image',\r\n            withCredentials: true,\r\n            headers: {\r\n                'X-CSRF-TOKEN': 'CSRF-Token',\r\n                Authorization: 'Bearer <JSON Web Token>'\r\n            }\r\n        },\r\n        image: {\r\n            resizeOptions: [\r\n            {\r\n                name: 'resizeImage:original',\r\n                value: null,\r\n                icon: 'original'\r\n            },\r\n            {\r\n                name: 'resizeImage:custom',\r\n                value: 'custom',\r\n                icon: 'custom'\r\n            },\r\n            {\r\n                name: 'resizeImage:50',\r\n                value: '50',\r\n                icon: 'medium'\r\n            },\r\n            {\r\n                name: 'resizeImage:75',\r\n                value: '75',\r\n                icon: 'large'\r\n            }\r\n        ],\r\n        toolbar: [\r\n            'toggleImageCaption',\r\n            'imageTextAlternative',\r\n            'ckboxImageEdit',\r\n            'resizeImage:50',\r\n            'resizeImage:75',\r\n            'resizeImage:original',\r\n            'resizeImage:custom',\r\n        ] },\r\n        htmlSupport: {\r\n            allow: [\r\n                {\r\n                    attributes: true,\r\n                    classes: true,\r\n                    styles: true\r\n                }\r\n            ]\r\n        },\r\n        htmlEmbed: {\r\n            showPreviews: true,\r\n          }\r\n        }}\r\n        onReady={(editor) => {\r\n            editorRef.current = {editor}}}\r\n            onChange={(event, editor)=>handleEditorChange(event, editor,'save')}\r\n      />\r\n    </CKEditorContext>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Customckediter;\r\n"],"names":["props","useRef","TemplateList","openAction","getAllAction","toggleOpenAction","getAllEmailTemplalte","setSelectedActionData","selectedActionData","onHandleViewModals","errors","setErrors","useState","dispatch","useDispatch","addActionTemplatePending","addActionTemplateRes","addActionTemplateError","GetActionTypeTemplatePending","GetActionTypeTemplateRes","GetActionTypeTemplateError","useSelector","state","emailtemplate","isActive","setIsActive","editorData","setEditorData","templateId","setTemplateId","actionType","setActionType","currentPage","setCurrentPage","addEmailTemplate","setAddEmailTemplate","template_name","email_title","email_type","body","is_active","remark","addAction","setAddAction","action_name","action_type","template_id","Alltemplate","setAlltemplate","data","useEffect","getAllActionType","params","page","limit","pagination","emailTemplateAction","GetActionTypeTemplateRequest","_GetActionTypeTemplat","_GetActionTypeTemplat2","_GetActionTypeTemplat3","_GetActionTypeTemplat4","code","id","toast","error","errorMessage","_addActionTemplateRes","_addActionTemplateRes2","success","msg","handleClearEmailTemplateStore","handleChange","event","name","value","target","resetTempateData","_jsx","_Fragment","children","_jsxs","className","tabIndex","style","visibility","type","onClick","htmlFor","placeholder","onChange","e","CustomError","text","required","disabled","hidden","selected","map","checked","CustomButton","classNames","handleClick","async","validationResponse","validateSchema","addActionSchema","isValid","UpdataActionTemplateRequest","AddActionTemplateRequest","console","log","createAction","editorRef","dropdownValue","setDropdownValue","bodydata","handleDropdownChanges","undefined","handleUpdateBody","selectedValue","editor","current","newData","getData","replaceAll","setData","selectedOption","model","change","writer","position","document","selection","getFirstPosition","insertText","CKEditorContext","context","Context","contextWatchdog","ContextWatchdog","CKEditor","ClassicEditor","config","plugins","Essentials","Bold","Italic","Paragraph","CodeBlock","Link","AutoLink","List","Table","TableToolbar","Image","ImageToolbar","ImageCaption","ImageStyle","ImageResize","LinkImage","SimpleUploadAdapter","HtmlEmbed","GeneralHtmlSupport","FullPage","Highlight","Heading","Font","FontFamily","FindAndReplace","Code","Strikethrough","Subscript","Superscript","Underline","Indent","IndentBlock","BlockQuote","HorizontalLine","ImageInsert","AutoImage","Markdown","Style","FontColor","FontSize","TextPartLanguage","Alignment","Mention","MediaEmbed","HtmlComment","RemoveFormat","SourceEditing","toolbar","items","shouldNotGroupWhenFull","definitions","element","classes","simpleUpload","uploadUrl","withCredentials","headers","Authorization","image","resizeOptions","icon","htmlSupport","allow","attributes","styles","htmlEmbed","showPreviews","onReady","handleEditorChange","_editorRef$current","currentData","previousData","previousImages","matchAll","match","currentImages","removedImages","filter","src","includes","forEach","imageUrl","RemoveImageRequest","url"],"sourceRoot":""}