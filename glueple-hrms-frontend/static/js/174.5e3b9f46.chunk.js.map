{"version":3,"file":"static/js/174.5e3b9f46.chunk.js","mappings":"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","sources":["components/modal/AttendanceLogsModal.js","components/otherAttendance/BreadCrumb.js","components/otherAttendance/OtherAttendanceTable.js","components/otherAttendance/AttendanceReportModal.js","components/otherAttendance/OtherAttendance.js","../node_modules/sass|sync"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { CustomTable } from '../reuseableComponents';\r\nimport { attendanceCorrectionActions } from '../../core/resource/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { dateFormate } from '../../utils/common';\r\n\r\n\r\nconst AttendanceLogsModal = (props) => {\r\n    const dispatch = useDispatch()\r\n    const {\r\n        isOpen,\r\n        handleOpenClose,\r\n        // attendanceLogsData,\r\n        selectedData,\r\n    } = props\r\n    const [attendanceLogsData, setAttendanceLogsData] = useState([])\r\n    const [currentPage, setCurrentPage] = useState()\r\n    const {\r\n        getAttendanceLogsPending,\r\n        getAttendanceLogsRes,\r\n        getAttendanceLogsError,\r\n\r\n    } = useSelector(state => state.attendanceCorrection)\r\n\r\n    const attendanceLogsFields = [\r\n        { key: \"sn\", label: \"S.N\" },\r\n        { key: \"punch_time\", label: \"Time\" },\r\n        { key: \"device_from_name\", label: \"Activity Name\" },\r\n        { key: \"log_type\", label: \"IN/OUT\" }\r\n    ]\r\n    const attendanceLogsScopedSlots = {\r\n        sn: (_, index) => (\r\n            <span className='srNum'>{index + 1}</span>\r\n        ),\r\n\r\n    };\r\n    useEffect(() => {\r\n        getAttendanceLogs()\r\n    }, [selectedData])\r\n    /* Get Attendance Logs */\r\n    const getAttendanceLogs = () => {\r\n        const payload = {\r\n            date: selectedData?.attendance_date,\r\n            emp_id: selectedData?.emp_id\r\n        }\r\n        dispatch(attendanceCorrectionActions.getAttendanceLogsRequest(payload))\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (!getAttendanceLogsPending) {\r\n            if (getAttendanceLogsError) {\r\n                return;\r\n            }\r\n            if (getAttendanceLogsRes) {\r\n                if (getAttendanceLogsRes?.code === 200) {\r\n                    setAttendanceLogsData(getAttendanceLogsRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAttendanceLogsRes,\r\n        getAttendanceLogsError,\r\n        getAttendanceLogsPending\r\n    ]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div class=\"modal fade attendanceViewodal\" id=\"viewModal\" style={{ display: isOpen ? \"unset !important\" : \"none !important\", opacity: isOpen ? \"unset\" : \"0\" }}>\r\n                <div class=\"modal-dialog modal-dialog-centered\">\r\n                    <div class=\"modal-content rounded-0 border-0\">\r\n                        <div class=\"modal-header border-0\">\r\n                            <h1 class=\"modal-title fs-5 fw-bold text-primary\">Attendance Logs\r\n                            </h1>\r\n                            <button type=\"button\"\r\n                                class=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                onClick={() => handleOpenClose()}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <div class=\"d-flex align-items-center justify-content-between mb-3\">\r\n                                <strong class=\"fs-7 text-primary\">\r\n                                    <span class=\"text-light fw-normal\">Date :</span>\r\n                                    {dateFormate(selectedData?.attendance_date)}\r\n                                </strong>\r\n                                <strong class=\"fs-7 text-primary\">{selectedData?.day_of_week}</strong>\r\n\r\n                            </div>\r\n                            <div class=\"timeCountmdl\">\r\n                                <strong>\r\n                                    <span>{selectedData?.total_working_hours || \"00:00:00\"}</span>\r\n                                    Working Hours\r\n                                </strong>\r\n                                <strong>\r\n                                    <span>{selectedData?.total_break_time || \"00:00:00\"}</span>\r\n                                    Break Time\r\n                                </strong>\r\n                            </div>\r\n                            <div class=\"table-responsive attendanceTbl\">\r\n                                <CustomTable\r\n                                    data={attendanceLogsData}\r\n                                    fields={attendanceLogsFields}\r\n                                    isLoading={getAttendanceLogsPending}\r\n                                    pagination={true}\r\n                                    currentPage={currentPage}\r\n                                    setCurrentPage={setCurrentPage}\r\n                                    totalPages={''}\r\n                                    isHeader={false}\r\n                                    tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                                    scopedSlots={attendanceLogsScopedSlots}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttendanceLogsModal\r\n","import React from 'react'\r\n\r\nconst BreadCrumb = (props) => {\r\n    const { tabType, empName, activeTabType,departmentName } = props\r\n    const renderedBreadCrumb = () => {\r\n        if (tabType === \"employee\") {\r\n            return (\r\n                <ul className=\"breadCrumb mb-3\">\r\n                    <li>\r\n                        <span onClick={() => activeTabType(\"team\")}>My Team</span> &gt;{\" \"}\r\n                    </li>\r\n                    <li className=\"active\">{empName}</li>\r\n                </ul>\r\n            );\r\n        } else if (tabType === \"team\") {\r\n            return <span className=\"underlineHead\">My Team</span>;\r\n        }\r\n        else if (tabType === \"deptWiseEmp\") {\r\n            return (\r\n                <ul className=\"breadCrumb mb-3\">\r\n                    <li>\r\n                        <span onClick={() => activeTabType(\"allTeam\")}>All Teams</span> &gt;{\" \"}\r\n                    </li>\r\n                    <li className=\"active\" onClick={() => activeTabType(\"deptWiseEmp\")}>{departmentName}</li>\r\n                </ul>\r\n            )\r\n        }\r\n\r\n        else if (tabType === \"empLogs\") {\r\n            return (\r\n                <ul className=\"breadCrumb mb-3\">\r\n                    <li>\r\n                        <span onClick={() => activeTabType(\"allTeam\")}>All Teams</span> &gt;{\" \"}\r\n                    </li>\r\n                    <li>\r\n                        <span onClick={() => activeTabType(\"deptWiseEmp\")}>{departmentName}</span> &gt;{\" \"}\r\n                    </li>\r\n                    <li className=\"active\">{empName}</li>\r\n                </ul>\r\n            );\r\n        } else if (tabType === \"allTeam\") {\r\n            return (\r\n                <span className=\"underlineHead\" >\r\n                    All Teams\r\n                </span>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n    return (\r\n        <>\r\n            {renderedBreadCrumb()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BreadCrumb\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable, CustomTabs } from '../reuseableComponents'\r\nimport { CustomButton, CustomDateRangePicker } from '../globalComponents';\r\nimport { checkAttendanceStatus, dateFormate } from '../../utils/common';\r\nimport BreadCrumb from './BreadCrumb';\r\nimport { useCustomTranslation } from '../../translation';\r\nimport { useSelector } from 'react-redux';\r\nconst selfLogsData = [\r\n  {\r\n    date: \"04-03-2024\",\r\n    checkIn: \"09:30:12\",\r\n    checkOut: \"14:40:00\",\r\n    first_half_status: \"PR\",\r\n    second_half_present: \"AB\",\r\n    status: \"FHP\",\r\n    breakTime: \"00:20:12\",\r\n    workingHours: \"04:01:02\",\r\n  },\r\n  {\r\n    date: \"23-02-2024\",\r\n    checkIn: \"10:04:01\",\r\n    checkOut: \"18:50:00\",\r\n    first_half_status: \"AB\",\r\n    second_half_present: \"PR\",\r\n    status: \"SHP\",\r\n    breakTime: \"01:15:00\",\r\n    workingHours: \"08:02:01\",\r\n  },\r\n  {\r\n    date: \"04-03-2024\",\r\n    checkIn: \"09:44:12\",\r\n    checkOut: \"18:50:00\",\r\n    first_half_status: \"PR\",\r\n    second_half_present: \"PR\",\r\n    status: \"PR\",\r\n    breakTime: \"01:15:00\",\r\n    workingHours: \"08:02:01\",\r\n  },\r\n  {\r\n    date: \"23-02-2024\",\r\n    checkIn: \"09:44:01\",\r\n    checkOut: \"18:50:00\",\r\n    first_half_status: \"PR\",\r\n    second_half_present: \"PR\",\r\n    status: \"PR\",\r\n    breakTime: \"01:15:00\",\r\n    workingHours: \"08:02:01\",\r\n  },\r\n  {\r\n    date: \"04-03-2024\",\r\n    checkIn: \"-\",\r\n    checkOut: \"-\",\r\n    first_half_status: \"PL\",\r\n    second_half_present: \"PL\",\r\n    status: \"PL\",\r\n    breakTime: \"-\",\r\n    workingHours: \"-\",\r\n  },\r\n  {\r\n    date: \"23-02-2024\",\r\n    checkIn: \"-\",\r\n    checkOut: \"-\",\r\n    first_half_status: \"WO\",\r\n    second_half_present: \"WO\",\r\n    status: \"WO\",\r\n    breakTime: \"-\",\r\n    workingHours: \"-\",\r\n  },\r\n];\r\n\r\nconst employeeAttendanceSummary = [\r\n  {\r\n    id: 1,\r\n    name: \"mohd Sarfaraz\",\r\n    emp_id: \"QD1545\",\r\n    total_working_days: 23,\r\n    present_days: 21,\r\n    absent_days: 1,\r\n    leaves_taken: \"01\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Rishabh Kumawat\",\r\n    emp_id: \"QD9439\",\r\n    total_working_days: 23,\r\n    present_days: 22,\r\n    absent_days: \"01\",\r\n    leaves_taken: \"00\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Nikita Prajapat\",\r\n    emp_id: \"QD5958\",\r\n    total_working_days: 23,\r\n    present_days: 22,\r\n    absent_days: \"01\",\r\n    leaves_taken: \"00\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Anubhav Kumawat\",\r\n    emp_id: \"QD1245\",\r\n    total_working_days: 23,\r\n    present_days: 21,\r\n    absent_days: \"02\",\r\n    leaves_taken: \"00\",\r\n  },\r\n]\r\n\r\nconst deptAttendanceSummeryData = [\r\n  {\r\n    deptName: \"Product Development\",\r\n    totalEmp: 10,\r\n    deptManager: \"Naveen Raj\",\r\n    netWorking: \"198:00:00\",\r\n    grossWorking: \"176:00:00\",\r\n    breakHrs: \"20:00:00\",\r\n  },\r\n  {\r\n    deptName: \"HZL CVT Operation\",\r\n    totalEmp: 20,\r\n    deptManager: \"Ashutosh\",\r\n    netWorking: \"198:00:00\",\r\n    grossWorking: \"180:00:00\",\r\n    breakHrs: \"30:00:00\",\r\n  },\r\n  {\r\n    deptName: \"HR - (HRBP)\",\r\n    totalEmp: 35,\r\n    deptManager: \"Gurumurthy\",\r\n    netWorking: \"189:00:00\",\r\n    grossWorking: \"160:00:00\",\r\n    breakHrs: \"34:00:00\",\r\n  },\r\n  {\r\n    deptName: \"Product Development\",\r\n    totalEmp: 39,\r\n    deptManager: \"Smriti\",\r\n    netWorking: \"178:00:00\",\r\n    grossWorking: \"190:00:00\",\r\n    breakHrs: \"25:00:00\",\r\n  },\r\n  {\r\n    deptName: \"HZL CVT Operation\",\r\n    totalEmp: 46,\r\n    deptManager: \"Ashutosh\",\r\n    netWorking: \"198:00:00\",\r\n    grossWorking: \"160:00:00\",\r\n    breakHrs: \"70:00:00\",\r\n  },\r\n  {\r\n    deptName: \"HR - (HRBP)\",\r\n    totalEmp: 90,\r\n    deptManager: \"Smriti\",\r\n    netWorking: \"198:00:00\",\r\n    grossWorking: \"190:00:00\",\r\n    breakHrs: \"60:00:00\",\r\n  }\r\n];\r\n\r\nconst OtherAttendanceTable = (props) => {\r\n  const { t } = useCustomTranslation()\r\n  const {\r\n    otherAttendanceTabs,\r\n    isLoading,\r\n    currentPage,\r\n    setCurrentPage,\r\n    empName,\r\n    tabType,\r\n    activeTabType,\r\n    activeTab,\r\n    departmentName,\r\n    startDate,\r\n    endDate,\r\n    handleFilterDateWiseData,\r\n    toggleAttendanceLogs,\r\n    selfAttendanceData,\r\n    myTeamAttendanceData\r\n  } = props\r\n  const { selfAttendancePending, myTeamAttendancePending } = useSelector(state => state.otherAttendance)\r\n  /*  -----------------Code Start Self Attendance Section--------------- */\r\n  const selfLogFields = [\r\n    { key: 'sn', label: 'S.N' },\r\n    { key: 'attendance_date', label: 'Date' },\r\n    { key: 'first_check_in_time', label: 'Check In' },\r\n    { key: 'last_check_out_time', label: 'Check Out' },\r\n    { key: 'first_half_status', label: 'First Half Status' },\r\n    { key: 'second_half_status', label: 'Second Half Status' },\r\n    { key: 'attendance_status', label: 'Status' },\r\n    { key: 'total_break_time', label: 'Break Time' },\r\n    { key: 'total_working_hours', label: 'Working Hours' },\r\n    { key: 'action', label: 'Action' }\r\n  ];\r\n\r\n  const selfLogsScopedSlots = useMemo(() => ({\r\n    sn: (_, index) => (\r\n      <span>{index + 1}</span>\r\n    ),\r\n    attendance_date: item => dateFormate(item?.attendance_date),\r\n\r\n    first_check_in_time: item => dateFormate(item?.first_check_in_time),\r\n    last_check_out_time: item => dateFormate(item?.last_check_out_time),\r\n\r\n    first_half_status: (item) => (\r\n      <span className={`font-weight-bold ${checkAttendanceStatus(item?.first_half_status)}`}\r\n      >{item?.first_half_status}</span>\r\n    ),\r\n    second_half_status: (item) => (\r\n      <span className={checkAttendanceStatus(item?.second_half_status)}\r\n      >{item?.second_half_status}</span>\r\n    ),\r\n    attendance_status: (item) => (\r\n      <span className={checkAttendanceStatus(item?.attendance_status)}\r\n      >{item?.attendance_status}</span>\r\n    ),\r\n    created_at: item => dateFormate(item?.created_at),\r\n\r\n    action: item => (\r\n      <span onClick={() => toggleAttendanceLogs(item)}>\r\n        <img src=\"images/nextaction-Icon.svg\" alt=\"\" width={27} />\r\n      </span>\r\n    )\r\n  }), [selfLogsData]);\r\n\r\n  /* --------------Code End Self Attendance Section---------------------- */\r\n\r\n  /* --------------Code Start Team Section---------------------------- */\r\n  const empAttendanceSummaryFields = [\r\n    { key: 'sn', label: 'S.N' },\r\n    { key: 'name', label: 'Name' },\r\n    { key: 'emp_id', label: 'Emp Id' },\r\n    { key: 'total_working_days', label: 'Total Working Days' },\r\n    { key: 'present_days', label: 'Present Days' },\r\n    { key: 'absent_days', label: 'Absent Days' },\r\n    { key: 'leaves_taken', label: 'Leaves Taken' },\r\n    { key: 'action', label: 'Action' }\r\n  ];\r\n\r\n  const empAttendanceSummarySlots = {\r\n    sn: (_, index) => (\r\n      <span>{index + 1}</span>\r\n    ),\r\n    action: item => (\r\n      <span onClick={() => activeTabType(tabType === 'team' ? \"employee\" : \"empLogs\", item)}>\r\n        {console.log(tabType, \"tabType.......\")}\r\n        <img src=\"images/nextaction-Icon.svg\" alt=\"\" width={27} />\r\n      </span>\r\n    )\r\n  };\r\n\r\n  /* --------------Code End Team Section---------------------------- */\r\n\r\n  /* --------------Code Start All Team Section---------------------------- */\r\n\r\n  const deptAttendanceSummeryFields = [\r\n    { key: 'sn', label: 'S.N' },\r\n    { key: 'deptName', label: 'Dept Name' },\r\n    { key: 'totalEmp', label: 'Total Emp' },\r\n    { key: 'deptManager', label: 'Dept Manager' },\r\n    { key: 'netWorking', label: 'Net Working' },\r\n    { key: 'grossWorking', label: 'Gross Working' },\r\n    { key: 'breakHrs', label: 'Break Hrs' },\r\n    { key: 'action', label: 'Action' }\r\n  ];\r\n\r\n  const deptAttendanceSummerySlots = useMemo(() => ({\r\n    sn: (_, index) => (\r\n      <span>{index + 1}</span>\r\n    ),\r\n    action: item => (\r\n      <span onClick={() => activeTabType(\"deptWiseEmp\", item)}>\r\n        <img src=\"images/nextaction-Icon.svg\" alt=\"\" width={27} />\r\n      </span>\r\n    )\r\n  }), [deptAttendanceSummeryData, activeTabType]);\r\n\r\n  /* --------------Code End All Team Section---------------------------- */\r\n  return (\r\n    <>\r\n      <div className=\"ticketScoreSection\">\r\n        <div className=\"cardBox myRequest mb-3\">\r\n          <div className=\"cardHead d-flex justify-content-between\">\r\n            <h3>\r\n              <img\r\n                src=\"images/other-attendance.svg\"\r\n                alt=\"\"\r\n                width={40}\r\n                className=\"me-2\"\r\n              />{\" \"}\r\n              {t(\"headings.otherAttendance\")}\r\n            </h3>\r\n      \r\n              <CustomDateRangePicker\r\n                onDateRangeChange={(dateRange) => handleFilterDateWiseData(dateRange)}\r\n                endDefaultDate={endDate}\r\n                startDefaultDate={startDate}\r\n\r\n              />\r\n              \r\n         \r\n          </div>\r\n          <CustomTabs ulClass={\"leaveTabs otherAttendance mb-4\"} tabs={otherAttendanceTabs} />\r\n          <div className=\"tab-content\">\r\n            <div className=\"tab-pane fade active show\" id=\"self\">\r\n              <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                <span className=\"underlineHead\">Self Attendance Log</span>\r\n                <input type=\"text\" className=\"filterinpt\" placeholder=\"Filter..\" />\r\n              </div>\r\n              <CustomTable\r\n                data={selfAttendanceData?.data}\r\n                fields={selfLogFields}\r\n                isLoading={selfAttendancePending}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={selfAttendanceData?.totalPages}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={selfLogsScopedSlots}\r\n              />\r\n            </div>\r\n            <div className=\"tab-pane fade\" id=\"team\">\r\n              <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                <BreadCrumb tabType={tabType} empName={empName} activeTabType={activeTabType} activeTab={activeTab} />\r\n                <input type=\"text\" className=\"filterinpt\" placeholder=\"Filter..\" />\r\n              </div>\r\n              {tabType === \"employee\" &&\r\n                <CustomTable\r\n                  data={selfAttendanceData?.data}\r\n                  fields={selfLogFields}\r\n                  isLoading={isLoading}\r\n                  pagination={true}\r\n                  currentPage={currentPage}\r\n                  setCurrentPage={setCurrentPage}\r\n                  totalPages={selfAttendanceData?.totalPages}\r\n                  isHeader={false}\r\n                  tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                  scopedSlots={selfLogsScopedSlots}\r\n                />}\r\n              {tabType === \"team\" &&\r\n                <CustomTable\r\n                  data={myTeamAttendanceData?.data}\r\n                  fields={empAttendanceSummaryFields}\r\n                  isLoading={myTeamAttendancePending}\r\n                  pagination={true}\r\n                  currentPage={currentPage}\r\n                  setCurrentPage={setCurrentPage}\r\n                  totalPages={myTeamAttendanceData?.totalPages}\r\n                  isHeader={false}\r\n                  tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                  scopedSlots={empAttendanceSummarySlots}\r\n                />\r\n              }\r\n            </div>\r\n            <div className=\"tab-pane fade\" id=\"allTeam\">\r\n              <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                <BreadCrumb\r\n                  tabType={tabType}\r\n                  empName={empName}\r\n                  activeTabType={activeTabType}\r\n                  activeTab={activeTab}\r\n                  departmentName={departmentName}\r\n                />\r\n                <input type=\"text\" className=\"filterinpt\" placeholder=\"Filter..\" />\r\n              </div>\r\n\r\n              {tabType === \"allTeam\" && <CustomTable\r\n                data={deptAttendanceSummeryData}\r\n                fields={deptAttendanceSummeryFields}\r\n                isLoading={isLoading}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={2}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={deptAttendanceSummerySlots}\r\n              />}\r\n\r\n              {tabType === \"deptWiseEmp\" && <CustomTable\r\n                data={employeeAttendanceSummary}\r\n                fields={empAttendanceSummaryFields}\r\n                isLoading={isLoading}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={2}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={empAttendanceSummarySlots}\r\n              />}\r\n              {tabType === \"empLogs\" &&\r\n                <CustomTable\r\n                  data={selfLogsData}\r\n                  fields={selfLogFields}\r\n                  isLoading={isLoading}\r\n                  pagination={true}\r\n                  currentPage={currentPage}\r\n                  setCurrentPage={setCurrentPage}\r\n                  totalPages={2}\r\n                  isHeader={false}\r\n                  tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                  scopedSlots={selfLogsScopedSlots}\r\n                />}\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OtherAttendanceTable","import React, { useState } from 'react'\r\nimport { useCustomTranslation } from '../../translation'\r\nimport { CustomButton, CustomDateRangePicker } from '../globalComponents'\r\nimport { Input, Label } from '../commanComponent'\r\nimport CustomSelect from '../commanComponent/CustomSelect'\r\nimport moment from 'moment'\r\nimport { multiSelectIDs, setDateFormate } from '../../utils/common'\r\nimport { attendanceReportType } from '../../utils/Constants.config'\r\nimport { useSelector } from 'react-redux'\r\nconst AttendanceReportModal = (props) => {\r\n    const { isOpen, handleOpenClose, downloadAttendanceReport, allEmployeeData } = props\r\n    const { attendanceReportPending } = useSelector(state => state.otherAttendance)\r\n    const [startDate, setStartDate] = useState('')\r\n    const [endDate, setEndDate] = useState('')\r\n    const [reportForm, setReportForm] = useState({\r\n        reportType: null,\r\n        dateRange: \"\",\r\n        employees_ids: null\r\n    })\r\n    const { t } = useCustomTranslation()\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n\r\n        setReportForm(prevState => {\r\n            let updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n    };\r\n\r\n    const handleFilterDateWiseData = (dateRange) => {\r\n        const startDate = dateRange[0] && setDateFormate(dateRange[0], 'YYYY-MM-DD')\r\n        const endDate = dateRange[1] && setDateFormate(dateRange[1], 'YYYY-MM-DD')\r\n        if (startDate && endDate) {\r\n            setStartDate(startDate)\r\n            setEndDate(endDate)\r\n        }\r\n\r\n    }\r\n    const handleDownloadAttendanceReport = () => {\r\n        let filterReport = {}\r\n        if (reportForm?.reportType?.value) filterReport[\"report_type\"] = reportForm?.reportType?.value\r\n        if (startDate && endDate) {\r\n            filterReport[\"start_date\"] = startDate\r\n            filterReport[\"end_date\"] = endDate\r\n        }\r\n        if (reportForm?.employees) filterReport[\"employees_ids\"] = multiSelectIDs(reportForm?.employees)\r\n\r\n        downloadAttendanceReport(filterReport)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class={`modal fade correctionAprovel ${isOpen ? ' show' : ''}`} id=\"correctionAp\"\r\n                tabIndex=\"-1\"\r\n                style={{ display: isOpen ? 'block' : 'none', }}\r\n                aria-hidden={!isOpen}\r\n            >\r\n                <div class=\"modal-dialog modal-dialog-centered\" style={{ maxWidth: \"550px\" }}>\r\n                    <div class=\"modal-content rounded-0 border-0\">\r\n                        <div class=\"modal-header \">\r\n                            <h1 class=\"modal-title fs-5 fw-bold text-primary\">Download Reports</h1>\r\n                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"\r\n                                onClick={() => handleOpenClose()}\r\n                            ></button>\r\n                        </div>\r\n                        <div class=\"modal-body pt-0\">\r\n                            <div className=\"formPanel mt-4\">\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.reportType\")} required={true} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustomSelect\r\n                                                data={attendanceReportType || []}\r\n                                                placeholder={t(\"placeholders.reportType\")}\r\n                                                value={reportForm?.reportType || ''}\r\n                                                handleChange={(selectedOption) => handleFromChange(selectedOption, \"reportType\")}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.date\")} required={true} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustomDateRangePicker\r\n                                                onDateRangeChange={(dateRange) => handleFilterDateWiseData(dateRange)}\r\n                                                endDefaultDate={endDate}\r\n                                                startDefaultDate={startDate}\r\n                                                sizeType={\"full\"}\r\n\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-3\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <Label text={t(\"labels.employees\")} required={true} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-9\">\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <CustomSelect\r\n                                                data={allEmployeeData || []}\r\n                                                placeholder={t(\"placeholders.employees\")}\r\n                                                value={reportForm?.employees || ''}\r\n                                                handleChange={(selectedOption) => handleFromChange(selectedOption, \"employees\")}\r\n                                                isMulti={true}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                        <div className='modal-footer'>\r\n                            <div class=\"d-flex justify-content-end gap-3\">\r\n                                <CustomButton\r\n                                    text={t(\"btns.download\")}\r\n                                    classNames={\"btn-success \"}\r\n                                    handleClick={() => handleDownloadAttendanceReport()}\r\n                                    isLoading={attendanceReportPending}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttendanceReportModal\r\n","import React, { useEffect, useState } from 'react'\r\nimport OtherAttendanceTable from './OtherAttendanceTable'\r\nimport { types } from 'sass';\r\nimport moment from 'moment';\r\nimport AttendanceLogsModal from '../modal/AttendanceLogsModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { pagination } from '../../utils/Constants.config';\r\nimport { employeeActions, otherAttendanceActions } from '../../core/resource/actions';\r\nimport { setDateFormate } from '../../utils/common';\r\nimport { CustomButton } from '../globalComponents';\r\nimport AttendanceReportModal from './AttendanceReportModal';\r\n\r\n\r\nconst attendanceLogs = [\r\n  { time: \"09:30:20\", activity_name: \"Main Gate IN\", in_out: \"IN\" },\r\n  { time: \"09:33:34\", activity_name: \"Cafe IN\", in_out: \"OUT\" },\r\n  { time: \"09:35:00\", activity_name: \"Cafe OUT\", in_out: \"IN\" },\r\n  { time: \"09:30:20\", activity_name: \"Main Gate OUT\", in_out: \"OUT\" },\r\n  { time: \"09:33:34\", activity_name: \"Main Gate IN\", in_out: \"IN\" },\r\n  { time: \"09:35:00\", activity_name: \"Cafe IN\", in_out: \"OUT\" },\r\n  { time: \"09:33:34\", activity_name: \"Cafe OUT\", in_out: \"IN\" }\r\n];\r\nconst OtherAttendance = () => {\r\n  const dispatch = useDispatch()\r\n  const {\r\n    selfAttendancePending,\r\n    selfAttendanceRes,\r\n    selfAttendanceError,\r\n\r\n    myTeamAttendancePending,\r\n    myTeamAttendanceRes,\r\n    myTeamAttendanceError,\r\n\r\n    allTeamAttendancePending,\r\n    allTeamAttendanceRes,\r\n    allTeamAttendanceError,\r\n\r\n    attendanceReportPending,\r\n    attendanceReportRes,\r\n    attendanceReportError,\r\n\r\n  } = useSelector(state => state.otherAttendance)\r\n  const {\r\n\r\n    getAllEmployeeRes,\r\n    getAllEmployeeError,\r\n    getAllEmployeePending\r\n\r\n  } = useSelector(state => state.employee)\r\n\r\n\r\n\r\n  const [selectedTeamMemberData, setSelectedTeamMemberData] = useState([])\r\n  const [empName, setEmpName] = useState('')\r\n  const [tabType, setTabType] = useState('')\r\n  const [activeTab, setActiveTab] = useState('')\r\n  const [departmentName, setDepartmentName] = useState('')\r\n  const [startDate, setStartDate] = useState(moment().subtract(10, 'days').format('YYYY-MM-DD'))\r\n  const [endDate, setEndDate] = useState(moment().format('YYYY-MM-DD'))\r\n  const [isShowAttendanceLogs, setIsShowAttendanceLogs] = useState(false)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [selfAttendanceData, setSelfAttendanceData] = useState('')\r\n  const [selectedEmployeeData, setSelectedEmployeeData] = useState({})\r\n  const [myTeamAttendanceData, setMyTeamAttendanceData] = useState({})\r\n  const [selectedEmpData, setSelectedEmpData] = useState('')\r\n  const [allTeamAttendance, setAllTeamAttendance] = useState('')\r\n  const [isShowAttendanceModal, setIsShowAttendanceModal] = useState(false)\r\n  const [allEmployeeData, setAllEmployeeData] = useState('')\r\n  const otherAttendanceTabs = [\r\n    { name: \"Self\", onClickFun: (id) => getOtherAttendance(id), id: \"self\" },\r\n    { name: \"My Team \", onClickFun: (id) => getOtherAttendance(id), id: \"team\" },\r\n    { name: \"All Team\", onClickFun: (id) => getOtherAttendance(id), id: \"allTeam\" },\r\n  ];\r\n\r\n  const getOtherAttendance = (type, selectedEmp, startDates, endDates) => {\r\n    let params = {\r\n      start_date: startDates || startDate,\r\n      end_date: endDates || endDate,\r\n      page: currentPage,\r\n      limit: pagination.limit,\r\n    }\r\n    if (selectedEmp) {\r\n      params = { ...params, emp_id: selectedEmp?._id || '' }\r\n    }\r\n    if (type === \"team\") {\r\n      setTabType(type)\r\n      dispatch(otherAttendanceActions.myTeamAttendanceRequest(params));\r\n\r\n    } else if (type === \"allTeam\") {\r\n      setTabType(type)\r\n      dispatch(otherAttendanceActions.allTeamAttendanceRequest(params))\r\n\r\n    } else {\r\n      // setTabType(type)\r\n      dispatch(otherAttendanceActions.selfAttendanceRequest(params));\r\n    }\r\n    setActiveTab(type)\r\n    if (!selectedEmp) {\r\n      setCurrentPage(1)\r\n      setSelectedEmpData('')\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  const activeTabType = (tabType, data) => {\r\n    setTabType(tabType)\r\n    // setActiveTab(tabName)\r\n    if (data) {\r\n      setEmpName(data?.name)\r\n      data?.deptName && setDepartmentName(data?.deptName)\r\n    }\r\n    setSelectedEmpData(data)\r\n    getOtherAttendance(tabType, data)\r\n\r\n  }\r\n\r\n\r\n  const handleFilterDateWiseData = (dateRange) => {\r\n    const startDate = dateRange[0] && setDateFormate(dateRange[0], 'YYYY-MM-DD')\r\n    const endDate = dateRange[1] && setDateFormate(dateRange[1], 'YYYY-MM-DD')\r\n    if (startDate && endDate) {\r\n      setStartDate(startDate)\r\n      setEndDate(endDate)\r\n      getOtherAttendance(tabType, \"\", startDate, endDate)\r\n    }\r\n\r\n  }\r\n\r\n  /* Toggle Attendance Logs */\r\n  const toggleAttendanceLogs = (empData) => {\r\n    if (empData) {\r\n      setIsShowAttendanceLogs(!isShowAttendanceLogs)\r\n      setSelectedEmployeeData(empData)\r\n    }\r\n    setIsShowAttendanceLogs(!isShowAttendanceLogs)\r\n  }\r\n\r\n\r\n\r\n\r\n  /*Get My Team Attendance */\r\n  useEffect(() => {\r\n    if (!myTeamAttendancePending) {\r\n      if (myTeamAttendanceError) {\r\n        return;\r\n      }\r\n      if (myTeamAttendanceRes) {\r\n        if (myTeamAttendanceRes?.code === 200) {\r\n          setMyTeamAttendanceData(myTeamAttendanceRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    myTeamAttendanceRes,\r\n    myTeamAttendanceError,\r\n    myTeamAttendancePending\r\n  ]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getOtherAttendance(activeTab, selectedEmpData)\r\n  }, [currentPage])\r\n\r\n\r\n  /* Get Self Attendance Data */\r\n  useEffect(() => {\r\n    if (!selfAttendancePending) {\r\n      if (selfAttendanceError) {\r\n        return;\r\n      }\r\n      if (selfAttendanceRes) {\r\n        if (selfAttendanceRes?.code === 200) {\r\n          setSelfAttendanceData(selfAttendanceRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    selfAttendanceRes,\r\n    selfAttendanceError,\r\n    selfAttendancePending\r\n  ]);\r\n\r\n\r\n\r\n  /* Get All Team Attendance Data */\r\n  useEffect(() => {\r\n    if (!allTeamAttendancePending) {\r\n      if (allTeamAttendanceError) {\r\n        return;\r\n      }\r\n      if (allTeamAttendanceRes) {\r\n        if (allTeamAttendanceRes?.code === 200) {\r\n          setAllTeamAttendance(allTeamAttendanceRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    allTeamAttendanceRes,\r\n    allTeamAttendanceError,\r\n    allTeamAttendancePending\r\n  ]);\r\n\r\n  const toggleAttendanceReportModal = () => {\r\n    setIsShowAttendanceModal(!isShowAttendanceModal)\r\n  }\r\n\r\n\r\n  /* Get All Employee List*/\r\n  useEffect(() => {\r\n    getAllEmployees()\r\n  }, [])\r\n  const getAllEmployees = () => {\r\n    dispatch(employeeActions.getAllEmployeeRequest())\r\n  }\r\n  useEffect(() => {\r\n    if (!getAllEmployeePending) {\r\n      if (getAllEmployeeError) {\r\n        return;\r\n      }\r\n      if (getAllEmployeeRes) {\r\n        if (getAllEmployeeRes?.code === 200) {\r\n\r\n          setAllEmployeeData(getAllEmployeeRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllEmployeeRes,\r\n    getAllEmployeeError,\r\n    getAllEmployeePending\r\n  ]);\r\n\r\n  const downloadAttendanceReport = (filters) => {\r\n    dispatch(otherAttendanceActions.attendanceReportRequest(filters))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!attendanceReportPending) {\r\n      if (attendanceReportError) {\r\n        dispatch(otherAttendanceActions.handleClearOtherAttendanceStore(\"HANDLE_CLEAR_ATTENDANCE_REPORT_STORE\"))\r\n        return;\r\n      }\r\n      if (attendanceReportRes) {\r\n        if (attendanceReportRes?.code === 200) {\r\n          const fileUrl = attendanceReportRes?.data?.filePath;\r\n          // Download the file programmatically\r\n          const link = document.createElement('a');\r\n          link.href = fileUrl;\r\n          link.download = fileUrl.split('/').pop(); // Extract the file name from the URL\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          dispatch(otherAttendanceActions.handleClearOtherAttendanceStore(\"HANDLE_CLEAR_ATTENDANCE_REPORT_STORE\"));\r\n          toggleAttendanceReportModal();\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    attendanceReportRes,\r\n    attendanceReportError,\r\n    attendanceReportPending\r\n  ]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ticketScoreSection\">\r\n        <div className=\"row leavesMain mb-3\">\r\n          <div className=\"col-md-12 pe-md-2\">\r\n            <div className=\"cardBox leaveAppli ratingReview referral h-100 \">\r\n              <div className='d-flex gap-3 justify-content-end'>\r\n                <CustomButton\r\n                  text={\"Absconding Report\"}\r\n                // classNames=\"btn btn-?\"\r\n                // handleClick={() => {\r\n                //     handleUpdateHierarchy(item);\r\n                // }}\r\n                />\r\n                <CustomButton\r\n                  text={\"Attendance Report\"}\r\n                  classNames=\"btn btn-primary\"\r\n                  handleClick={() => {\r\n                    toggleAttendanceReportModal();\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <OtherAttendanceTable\r\n        otherAttendanceTabs={otherAttendanceTabs}\r\n        selectedTeamMemberData={selectedTeamMemberData}\r\n        setSelectedTeamMemberData={setSelectedTeamMemberData}\r\n        empName={empName}\r\n        activeTabType={activeTabType}\r\n        tabType={tabType}\r\n        activeTab={activeTab}\r\n        departmentName={departmentName}\r\n        endDate={endDate}\r\n        startDate={startDate}\r\n        handleFilterDateWiseData={handleFilterDateWiseData}\r\n        toggleAttendanceLogs={toggleAttendanceLogs}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        selfAttendanceData={selfAttendanceData}\r\n        myTeamAttendanceData={myTeamAttendanceData}\r\n        allTeamAttendance={allTeamAttendance}\r\n\r\n      />\r\n\r\n      {isShowAttendanceLogs && <AttendanceLogsModal\r\n        isOpen={isShowAttendanceLogs}\r\n        handleOpenClose={toggleAttendanceLogs}\r\n        selectedData={selectedEmployeeData}\r\n      />\r\n      }\r\n      {isShowAttendanceModal && <AttendanceReportModal\r\n        handleOpenClose={toggleAttendanceReportModal}\r\n        isOpen={isShowAttendanceModal}\r\n        allEmployeeData={allEmployeeData}\r\n        downloadAttendanceReport={downloadAttendanceReport}\r\n      />\r\n\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OtherAttendance","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 28798;\nmodule.exports = webpackEmptyContext;"],"names":["props","dispatch","useDispatch","isOpen","handleOpenClose","selectedData","attendanceLogsData","setAttendanceLogsData","useState","currentPage","setCurrentPage","getAttendanceLogsPending","getAttendanceLogsRes","getAttendanceLogsError","useSelector","state","attendanceCorrection","attendanceLogsScopedSlots","sn","_","index","_jsx","className","children","useEffect","getAttendanceLogs","payload","date","attendance_date","emp_id","attendanceCorrectionActions","getAttendanceLogsRequest","code","data","_jsxs","_Fragment","class","id","style","display","opacity","type","onClick","dateFormate","day_of_week","total_working_hours","total_break_time","CustomTable","fields","key","label","isLoading","pagination","totalPages","isHeader","tableStyle","padding","boxShadow","scopedSlots","tabType","empName","activeTabType","departmentName","selfLogsData","checkIn","checkOut","first_half_status","second_half_present","status","breakTime","workingHours","employeeAttendanceSummary","name","total_working_days","present_days","absent_days","leaves_taken","deptAttendanceSummeryData","deptName","totalEmp","deptManager","netWorking","grossWorking","breakHrs","t","useCustomTranslation","otherAttendanceTabs","activeTab","startDate","endDate","handleFilterDateWiseData","toggleAttendanceLogs","selfAttendanceData","myTeamAttendanceData","selfAttendancePending","myTeamAttendancePending","otherAttendance","selfLogFields","selfLogsScopedSlots","useMemo","item","first_check_in_time","last_check_out_time","checkAttendanceStatus","second_half_status","attendance_status","created_at","action","src","alt","width","empAttendanceSummaryFields","empAttendanceSummarySlots","console","log","deptAttendanceSummerySlots","CustomDateRangePicker","onDateRangeChange","dateRange","endDefaultDate","startDefaultDate","CustomTabs","ulClass","tabs","placeholder","BreadCrumb","downloadAttendanceReport","allEmployeeData","attendanceReportPending","setStartDate","setEndDate","reportForm","setReportForm","reportType","employees_ids","handleFromChange","e","fieldName","_e$target","target","value","checked","prevState","tabIndex","maxWidth","Label","text","required","CustomSelect","attendanceReportType","handleChange","selectedOption","setDateFormate","sizeType","employees","isMulti","CustomButton","classNames","handleClick","handleDownloadAttendanceReport","_reportForm$reportTyp","_reportForm$reportTyp2","filterReport","multiSelectIDs","OtherAttendance","selfAttendanceRes","selfAttendanceError","myTeamAttendanceRes","myTeamAttendanceError","allTeamAttendancePending","allTeamAttendanceRes","allTeamAttendanceError","attendanceReportRes","attendanceReportError","getAllEmployeeRes","getAllEmployeeError","getAllEmployeePending","employee","selectedTeamMemberData","setSelectedTeamMemberData","setEmpName","setTabType","setActiveTab","setDepartmentName","moment","subtract","format","isShowAttendanceLogs","setIsShowAttendanceLogs","setSelfAttendanceData","selectedEmployeeData","setSelectedEmployeeData","setMyTeamAttendanceData","selectedEmpData","setSelectedEmpData","allTeamAttendance","setAllTeamAttendance","isShowAttendanceModal","setIsShowAttendanceModal","setAllEmployeeData","onClickFun","getOtherAttendance","selectedEmp","startDates","endDates","params","start_date","end_date","page","limit","_id","otherAttendanceActions","myTeamAttendanceRequest","allTeamAttendanceRequest","selfAttendanceRequest","empData","toggleAttendanceReportModal","getAllEmployees","employeeActions","getAllEmployeeRequest","handleClearOtherAttendanceStore","_attendanceReportRes$","fileUrl","filePath","link","document","createElement","href","download","split","pop","body","appendChild","click","removeChild","OtherAttendanceTable","AttendanceLogsModal","AttendanceReportModal","filters","attendanceReportRequest","webpackEmptyContext","req","Error","keys","resolve","module","exports"],"sourceRoot":""}