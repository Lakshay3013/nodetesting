{"version":3,"file":"static/js/3872.85f13cb0.chunk.js","mappings":"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","sources":["components/payrollAdmin/payRuns/arrears/Arrears.js","components/payrollAdmin/payRuns/arrears/AddArrears.js","components/payrollAdmin/payRuns/loans/InstallmentTable.js","components/payrollAdmin/payRuns/loans/Loans.js","components/payrollAdmin/payRuns/loans/AddLoans.js","components/payrollAdmin/payRuns/payrollHistory/payrollHistory.js","components/payrollAdmin/payRuns/RunAttendance.js/RunAttendance.js","components/payrollAdmin/payRuns/attendanceTracking/EmpAttendanceTrackingTable.js","components/payrollAdmin/payRuns/attendanceTracking/AttendanceFilters.js","components/payrollAdmin/payRuns/attendanceTracking/AttendanceTracking.js","components/payrollAdmin/payRuns/RunAttendance.js/CreatePayrun.js","components/payrollAdmin/payRuns/PayRuns.js"],"sourcesContent":["import React, { useMemo } from 'react'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport CustomTable from '../../../reuseableComponents/customTable/CustomTable'\r\n\r\nconst Arrears = (props) => {\r\n    const { toggleAddArrearsModal } = props\r\n    const { t } = useCustomTranslation()\r\n\r\n    const arrearsEmployeeFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'Employee Name', label: 'Employee Name' },\r\n        { key: 'emp_id', label: 'Employee ID' },\r\n        { key: 'Year-month', label: 'Year-month' },\r\n        { key: 'present_days', label: 'Present Days' },\r\n        { key: 'pay_days', label: 'Pay Days' },\r\n        { key: 'basic', label: 'Basic' },\r\n        { key: 'hra', label: 'HRA' },\r\n        { key: 'education_allowance', label: 'Education Allowance' },\r\n        { key: 'meal_allowance', label: 'Meal Allowance' },\r\n        { key: 'petrol_allowance', label: 'Petrol Allowance' },\r\n        { key: 'special_allowance', label: 'Special Allowance' },\r\n        { key: 'lta', label: 'LTA ' },\r\n        { key: 'arrear', label: 'Arrear' },\r\n        { key: 'pf_contribution', label: 'PF-Employee Contribution' },\r\n        { key: 'esi_contribution', label: 'ESI Employee Contribution' },\r\n        { key: 'action', label: 'Action' }\r\n    ];\r\n    const arrearsEmployeeScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n\r\n    }), []);\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Arrears</h3>\r\n                <CustomButton\r\n                    classNames={\"btn btn-primary gradientBg\"}\r\n                    handleClick={() => toggleAddArrearsModal()}\r\n                    text={\"Add Arrear\"}\r\n                />\r\n            </div>\r\n            <div className='card p-3'>\r\n              \r\n                <div className=\"row\">\r\n                    <div className=\"col-12 form-group mb-3\">\r\n                        <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Employees</h3>\r\n                        <CustomTable\r\n                            data={[]}\r\n                            fields={arrearsEmployeeFields}\r\n                            // isLoading={isLoading}\r\n                            pagination={true}\r\n                            // currentPage={currentPage}\r\n                            // setCurrentPage={setCurrentPage}\r\n                            // totalPages={depList?.totalPages}\r\n                            // tableName={\"\"}\r\n                            // onSearch={handleSearch}\r\n                            isHeader={false}\r\n                            tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                            scopedSlots={arrearsEmployeeScopedSlots}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <CustomButton\r\n                classNames={\"btn btn-primary gradientBg mt-2\"}\r\n                // handleClick={() => ()}\r\n                text={\"Save\"}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Arrears\r\n","import React, { useMemo, useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { Input, Label, Textarea } from '../../../commanComponent'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport { addArrearsSchema } from '../../../../utils/ValidationSchema'\r\n\r\nconst AddArrears = (props) => {\r\n    const { isOpen, toggleOpenClose, allEmployeeList, handleAddArrears } = props\r\n    const {addArrearsPending} =props\r\n    const { t } = useCustomTranslation()\r\n    // const [payDays, setPayDays] = useState('')\r\n    const [errors, setErrors] = useState({})\r\n    const [selectedEmployees, setSelectedEmployees] = useState('')\r\n    const [arrearFormData, setArrearFormData] = useState({\r\n        arrearName: '',\r\n        arrearFor: '',\r\n        payMonth: '',\r\n        description: '',\r\n        employees: [],\r\n\r\n    })\r\n    const addArrearsFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'pay_days', label: 'Pay Days' },\r\n        { key: 'emp_code', label: 'Emp Code' },\r\n        { key: 'name', label: 'Emp Name' },\r\n        { key: 'department_name', label: 'Department  ' },\r\n        { key: 'designation_name', label: 'Designation' },\r\n    ];\r\n\r\n    const addEmployeesPayDays = (e, item) => {\r\n        const { value } = e?.target;\r\n        setArrearFormData((prev) => ({\r\n            ...prev,\r\n            employees: prev.employees.map((emp) =>\r\n                emp?.value === item?.value\r\n                    ? { ...emp, pay_days: value }\r\n                    : emp\r\n            ),\r\n        }));\r\n    };\r\n\r\n\r\n    const addArrearsScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        pay_days: (item, index) => (\r\n            <span>\r\n\r\n                <Input\r\n                    type=\"number\"\r\n                    value={item?.pay_days || ''}\r\n                    name=\"pay_days\"\r\n                    onChange={(e) => addEmployeesPayDays(e, item)}\r\n                />\r\n            </span>\r\n        ),\r\n\r\n\r\n    }), [arrearFormData]);\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n        setArrearFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n        if (\"employees\" == name) {\r\n            setSelectedEmployees(value)\r\n        }\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitFormData = async () => {\r\n        const validationResponse = await validateSchema(addArrearsSchema, arrearFormData);\r\n        if (validationResponse.isValid) {\r\n            const payload ={\r\n                name:arrearFormData?.arrearName,\r\n                description:arrearFormData?.description,\r\n                year_mon:arrearFormData?.payMonth,\r\n                arrear_for:arrearFormData?.arrearFor,\r\n\r\n            }\r\n            handleAddArrears(payload)\r\n\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n    return (<>\r\n        <div className={`offcanvas offcanvas-end creatNewTicketOff ${isOpen ? 'show' : ''}`} tabIndex={-1}\r\n            style={{ visibility: isOpen ? 'visible' : 'hidden', width: \"800px\" }}\r\n        >\r\n            <div className=\"offcanvas-header\">\r\n                <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\"> Add Arrears </h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                    onClick={() => toggleOpenClose()}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"offcanvas-body\">\r\n                <div className=\"formPanel\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.arrearName\")} required={true} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.arrearName\")}\r\n                                    value={arrearFormData?.arrearName || ''}\r\n                                    name=\"arrearName\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.arrearName && (\r\n                                    <CustomError text={errors.arrearName} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.arrearFor\")} required={true} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Input\r\n                                    type=\"month\"\r\n                                    value={arrearFormData?.arrearFor || ''}\r\n                                    name=\"arrearFor\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.arrearFor && (\r\n                                    <CustomError text={errors.arrearFor} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.payMonth\")} required={true} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Input\r\n                                    type=\"month\"\r\n                                    value={arrearFormData?.payMonth || ''}\r\n                                    name=\"payMonth\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.payMonth && (\r\n                                    <CustomError text={errors.payMonth} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.description\")} required={true} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Textarea\r\n                                    name=\"description\"\r\n                                    value={arrearFormData?.description}\r\n                                    placeholder={t(\"placeholders.description\")}\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.description && (\r\n                                    <CustomError text={errors.description} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <Label text={t(\"labels.employee\")} required={true} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <CustomSelect\r\n                                    data={allEmployeeList}\r\n                                    placeholder={t(\"placeholders.employee\")}\r\n                                    value={arrearFormData?.employees || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"employees\")}\r\n                                    name=\"employees\"\r\n                                    isMulti={true}\r\n                                />\r\n                                {errors?.employees && (\r\n                                    <CustomError text={errors.employees} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <CustomTable\r\n                        data={arrearFormData?.employees}\r\n                        fields={addArrearsFields}\r\n                        // isLoading={isLoading}\r\n                        pagination={true}\r\n                        // currentPage={currentPage}\r\n                        // setCurrentPage={setCurrentPage}\r\n                        // totalPages={depList?.totalPages}\r\n                        // tableName={\"\"}\r\n                        // onSearch={handleSearch}\r\n                        isHeader={false}\r\n                        tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                        scopedSlots={addArrearsScopedSlots}\r\n                    />\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"offcanvas-footer\">\r\n                <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                    <CustomButton\r\n                        text={\"Add\"}\r\n                        classNames={\"btn btn-org-gradient\"}\r\n                        handleClick={() => submitFormData()}\r\n                        isLoading={addArrearsPending}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default AddArrears\r\n\r\n\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { Input } from '../../../commanComponent'\r\n\r\nconst InstallmentTable = (props) => {\r\n    const {  installmentData, setInstallmentData,loanData } = props\r\n    const installmentFields = [\r\n        { key: 'installment', label: 'Installment' },\r\n        { key: 'date', label: 'Date' },\r\n        { key: 'amount', label: 'Amount' },\r\n    ]\r\n\r\n    const calculateEMIAfterChanges = (amount, index) => {\r\n        let temp = installmentData;\r\n        temp[index]['amount'] = parseFloat(amount).toFixed(2);\r\n        let remEMI;\r\n        let totalEMI = 0;\r\n        temp.forEach((data, index1) => {\r\n          totalEMI = totalEMI + parseFloat(data['amount']);\r\n          if (index1 === index) {\r\n            remEMI =\r\n              parseFloat(loanData?.amount) - totalEMI >= 0\r\n                ? parseFloat(loanData?.amount) - totalEMI\r\n                : 0;\r\n            remEMI = remEMI / (temp.length - 1 - index).toFixed(2);\r\n          } else if (index1 > index) {\r\n            data['amount'] = JSON.stringify(remEMI);\r\n          }\r\n          return data;\r\n        });\r\n    \r\n        setInstallmentData(temp);\r\n      };\r\n    const installmentScopedSlots = useMemo(() => ({\r\n        amount: (item, index) => (\r\n            <span> \r\n                <Input\r\n                type=\"number\"\r\n                className=\"form-control border border-black text-center\"\r\n                id=\"instl_amt\"\r\n                placeholder=\"Installment Amount\"\r\n                onChange={e =>\r\n                    calculateEMIAfterChanges(e.target.value, index)\r\n                }\r\n                value={parseFloat(item?.amount)}\r\n            />\r\n            </span>\r\n        ),\r\n    }), [installmentData]);\r\n    return (\r\n        <React.Fragment>\r\n            <div className='text-center'>\r\n            <CustomTable\r\n                data={installmentData}\r\n                fields={installmentFields}\r\n                // isLoading={isLoading}\r\n                pagination={true}\r\n                // currentPage={currentPage}\r\n                // setCurrentPage={setCurrentPage}\r\n                // totalPages={depList?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\",marginTop:\"0px !important\" }}\r\n                scopedSlots={installmentScopedSlots}\r\n            />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default InstallmentTable\r\n","import React, { useMemo, useState } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport InstallmentTable from './InstallmentTable';\r\nconst loan = [\r\n    {\r\n        emp_id: \"qd2654\",\r\n        name: \"Mohd Sarfaraz\",\r\n        email: \"sarfaraz1@qdegrees.com\",\r\n        department: \"IT\",\r\n        loan_type: \"Personal Loan\",\r\n        amount: \"100\",\r\n        emi_duration: \"3\",\r\n        effective_date: \"2024-11-21\",\r\n        end_date: \"2025-01-21\",\r\n    },\r\n    {\r\n        emp_id: \"qd2281\",\r\n        name: \"Chandan Kumar\",\r\n        email: \"Candan@qdegrees.com\",\r\n        department: \"IT\",\r\n        loan_type: \"Car Loan\",\r\n        amount: \"10000\",\r\n        emi_duration: \"10\",\r\n        effective_date: \"2024-12-01\",\r\n        end_date: \"2025-08-30\",\r\n    },\r\n\r\n]\r\nconst installments = [\r\n    {\r\n        installment: 1,\r\n        date: \"2024-11-21\",\r\n        amount: \"33.33\",\r\n    },\r\n    {\r\n        installment: 2,\r\n        date: \"2024-12-21\",\r\n        amount: \"33.33\",\r\n    },\r\n    {\r\n        installment: 3,\r\n        date: \"2025-01-21\",\r\n        amount: \"33.33\",\r\n    },\r\n];\r\nconst Loans = (props) => {\r\n    const { toggleAddLoanModal } = props\r\n    const [installmentData, setInstallmentData] = useState(installments)\r\n\r\n    const loanFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'name', label: 'Employee Name' },\r\n        { key: 'emp_id', label: 'Employee ID' },\r\n        { key: 'department', label: 'Department' },\r\n        { key: 'loan_type', label: 'Loan Type' },\r\n        { key: 'loan_amount', label: 'Loan Amount' },\r\n        { key: 'emi_duration', label: 'EMI Duration' },\r\n        { key: 'effective_date', label: 'Effective Date' },\r\n        { key: 'end_date', label: 'End Date' },\r\n        { key: 'action', label: 'Action' },\r\n    ]\r\n\r\n    const loanScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                        onClick={() => toggleAddLoanModal(item?._id ,\"edit\")} \r\n                        >\r\n                            View  Details</span>\r\n                    </li>\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n\r\n    }), []);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Loans</h3>\r\n                <CustomButton\r\n                    classNames={\"btn btn-primary gradientBg\"}\r\n                    handleClick={() => toggleAddLoanModal()}\r\n                    text={\"Add Loan\"}\r\n                />\r\n            </div>\r\n            <CustomTable\r\n                data={loan}\r\n                fields={loanFields}\r\n                // isLoading={isLoading}\r\n                pagination={true}\r\n                // currentPage={currentPage}\r\n                // setCurrentPage={setCurrentPage}\r\n                // totalPages={depList?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={loanScopedSlots}\r\n            />\r\n            {/* {installmentData && installmentData?.length > 0 &&\r\n                <div className=\"col-12\">\r\n                    <div className='card text-center p-1 m-o' style={{ backgroundColor: \"#3c82e9\", color: \"white\" }}> <h6 >Edit Installment </h6></div>\r\n                    <InstallmentTable\r\n                        installmentData={installmentData}\r\n                        setInstallmentData={setInstallmentData}\r\n                        loanData={loan}\r\n                    />\r\n                </div>} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loans\r\n","import React, { useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { Input, Label } from '../../../commanComponent'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport moment from 'moment'\r\nimport InstallmentTable from './InstallmentTable'\r\nconst durationOptions = [\r\n    { label: \"3 Months\", value: 3 },\r\n    { label: \"4 Months\", value: 4 },\r\n    { label: \"5 Months\", value: 5 },\r\n    { label: \"6 Months\", value: 6 },\r\n    { label: \"7 Months\", value: 7 },\r\n    { label: \"8 Months\", value: 8 },\r\n    { label: \"1 Year\", value: 12 },\r\n    { label: \"2 Years\", value: 24 },\r\n    { label: \"3 Years\", value: 36 },\r\n];\r\nconst AddLoans = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const { toggleOpenClose, isOpen } = props\r\n\r\n    const [loanFormData, setLoanFormData] = useState({\r\n        employee: null,\r\n        loanType: null,\r\n        amount: '',\r\n        emiDuration: null,\r\n        effectiveDate: '',\r\n        endDate: '',\r\n    })\r\n    const [errors, setErrors] = useState('')\r\n    const [installmentData, setInstallmentData] = useState([])\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n        if (name === \"effectiveDate\") {\r\n            calculateEndDate(value)\r\n        }\r\n        if (name === \"emiDuration\") {\r\n            setLoanFormData(prevState => ({\r\n                ...prevState,\r\n                [\"effectiveDate\"]: '',\r\n                [\"endDate\"]: '',\r\n            }));\r\n            setInstallmentData([])\r\n        }\r\n        if (name === \"amount\") {\r\n            setLoanFormData(prevState => ({\r\n                ...prevState,\r\n                [\"emiDuration\"]: null,\r\n                [\"effectiveDate\"]: '',\r\n                [\"endDate\"]: '',\r\n            }));\r\n            setInstallmentData([])\r\n        }\r\n        setLoanFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n        // Reset error for this field\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n    const calculateEndDate = effectiveDate => {\r\n        var newDate = moment(effectiveDate)\r\n            .add(loanFormData?.emiDuration?.value - 1, 'M')\r\n            .format('YYYY-MM-DD');\r\n        newDate = moment(newDate).format('YYYY-MM-DD');\r\n        setLoanFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [\"endDate\"]: newDate,\r\n            };\r\n            return updatedState;\r\n        });\r\n        calculateEmiInstallment(effectiveDate);\r\n    };\r\n\r\n    const calculateEmiInstallment = (effectiveDate) => {\r\n        let duration = parseInt(loanFormData?.emiDuration?.value);\r\n        let emi = parseFloat(loanFormData?.amount / duration).toFixed(2);\r\n        let temp = [];\r\n        let date = moment(effectiveDate).format('YYYY-MM-DD');\r\n        for (let i = 1; i <= duration; i++) {\r\n            temp.push({ installment: i, date: date, amount: emi, });\r\n            let len = temp.length;\r\n            //   subCompanyDetails?.length && subCompanyDetails?.map((item,index)=>{\r\n            //     if(index === 0){\r\n            //     temp[len-1].subcompany.push({[item.value]:100});\r\n            //     }else{\r\n            //       temp[len-1].subcompany.push({[item.value]:0});\r\n            //     }\r\n            //   })\r\n            date = moment(date)\r\n                .add(1, 'month')\r\n                .format('YYYY-MM-DD');\r\n        }\r\n        console.log(temp, \"temporary Installment ................................\")\r\n        setInstallmentData(temp);\r\n    };\r\n\r\n\r\n\r\n\r\n    return (<>\r\n        <div className={`offcanvas offcanvas-end creatNewTicketOff ${isOpen ? 'show' : ''}`} tabIndex={-1}\r\n            style={{\r\n                visibility: isOpen ? 'visible' : 'hidden',\r\n                width: \"800px\"\r\n            }}\r\n        >\r\n            <div className=\"offcanvas-header\">\r\n                <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\"> Add Loans </h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                    onClick={() => toggleOpenClose()}\r\n                />\r\n            </div>\r\n            <div className=\"offcanvas-body\">\r\n                <div className=\"formPanel\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.employee\")} required={true} />\r\n                                <CustomSelect\r\n                                    data={[]}\r\n                                    placeholder={t(\"placeholders.employee\")}\r\n                                    value={loanFormData?.employee || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"employee\")}\r\n                                    name=\"employee\"\r\n                                />\r\n                            </div>\r\n                            {errors?.employee && (\r\n                                <CustomError text={errors.employee} />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.loanType\")} />\r\n                                <CustomSelect\r\n                                    data={[]}\r\n                                    placeholder={t(\"placeholders.loanType\")}\r\n                                    value={loanFormData?.loanType || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"loanType\")}\r\n                                    name=\"loanType\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.amount\")} required={true} />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.amount\")}\r\n                                    value={loanFormData?.amount}\r\n                                    name=\"amount\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                                {errors?.amount && (\r\n                                    <CustomError text={errors.amount} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.emiDuration\")} required={true} />\r\n\r\n                                <CustomSelect\r\n                                    data={durationOptions}\r\n                                    placeholder={t(\"placeholders.emiDuration\")}\r\n                                    value={loanFormData?.emiDuration || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"emiDuration\")}\r\n                                    name=\"emiDuration\"\r\n                                />\r\n                            </div>\r\n                            {errors?.emiDuration && (\r\n                                <CustomError text={errors.emiDuration} />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.effectiveDate\")} required={true} />\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    value={loanFormData?.effectiveDate}\r\n                                    isDisabled={!(loanFormData?.emiDuration) ? true : false}\r\n                                    name=\"effectiveDate\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n\r\n                            </div>\r\n                            {errors?.effectiveDate && (\r\n                                <CustomError text={errors.effectiveDate} />\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"form-group mb-2\">\r\n                                <Label text={t(\"labels.endDate\")} required={true} />\r\n                                <Input\r\n                                    type=\"date\"\r\n                                    value={loanFormData?.endDate}\r\n                                    isDisabled={true}\r\n                                    name=\"endDate\"\r\n                                    onChange={(e) => handleFromChange(e)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <hr/>\r\n                       {installmentData &&installmentData?.length>0 &&\r\n                       <div className=\"col-12\">\r\n                            <div className='card text-center p-1 m-o' style={{backgroundColor:\"#3c82e9\",color:\"white\"}}> <h6 >Pending Installment </h6></div>\r\n                            <InstallmentTable\r\n                            installmentData={installmentData}\r\n                            setInstallmentData={setInstallmentData}\r\n                            loanData={loanFormData}\r\n                            />\r\n                        </div>}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"offcanvas-footer\">\r\n                <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                    <CustomButton\r\n                        text={\"Add\"}\r\n                        classNames={\"btn btn-org-gradient\"}\r\n                    // handleClick={() => submitCreateUpdateDepartment()}\r\n                    // isLoading={selectedDepartmentData ? updateDepartmentPending : addDepartmentPending}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default AddLoans\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { values } from 'lodash';\r\nconst payrollHistoryData = [\r\n    {\r\n      salaryForMonth: \"May 2024\",\r\n      paymentMonth: \"June 2024\",\r\n      paymentDate: \"2024-06-07\",\r\n    },\r\n    {\r\n      salaryForMonth: \"June 2024\",\r\n      paymentMonth: \"July 2024\",\r\n      paymentDate: \"2024-07-07\",\r\n    },\r\n    {\r\n      salaryForMonth: \"February 2024\",\r\n      paymentMonth: \"March 2024\",\r\n      paymentDate: \"2024-03-07\",\r\n    },\r\n    {\r\n      salaryForMonth: \"March 2024\",\r\n      paymentMonth: \"April 2024\",\r\n      paymentDate: \"2024-04-07\",\r\n    },\r\n    {\r\n      salaryForMonth: \"April 2024\",\r\n      paymentMonth: \"May 2024\",\r\n      paymentDate: \"2024-05-07\",\r\n    },\r\n    {\r\n      salaryForMonth: \"September 2024\",\r\n      paymentMonth: \"October 2024\",\r\n      paymentDate: \"2024-10-07\",\r\n    },\r\n  ];\r\n  \r\nconst PayrollHistory = () => {\r\n\r\n    const payrollHistoryField =[\r\n        {key:\"salaryForMonth\",label:\"Salary For Month\"},\r\n        {key:\"paymentMonth\",label:\"Payment Month\"},\r\n        {key:\"paymentDate\",label:\"Payment Date\"},\r\n        {key:\"action\",label:\"Action\"},\r\n    ]\r\n    const payrollHistoryScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                        // onClick={() => toggleAddLoanModal(item?._id ,\"edit\")} \r\n                        >\r\n                            View  Details</span>\r\n                    </li>\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n\r\n    }), []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n         <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Payroll History</h3>\r\n                \r\n            </div>\r\n         <CustomTable\r\n                data={payrollHistoryData}\r\n                fields={payrollHistoryField}\r\n                // isLoading={isLoading}\r\n                pagination={true}\r\n                // currentPage={currentPage}\r\n                // setCurrentPage={setCurrentPage}\r\n                // totalPages={depList?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={payrollHistoryScopedSlots}\r\n            />\r\n      \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default PayrollHistory\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst RunAttendance = (props) => {\r\n    const {toggleCreatePayRunModal}=props\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\" d-flex justify-content-between align-items-center mb-2\">\r\n                <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Run Attendance</h3>\r\n                \r\n            </div>\r\n            <div className='card'>\r\n            <div className=\" payroll-card-body-css  p-3 border-left border-dark\">\r\n                <div className=\"payruns-cards d-flex align-items-center justify-content-around\">\r\n                    <div className=\"col\">\r\n                        <small className=\"text-secondary\">PAYMENT DATE</small>\r\n                        <h5 className=\"py-3\">08-09-2024</h5>\r\n                    </div>\r\n                    {/* { */}\r\n                        {/* //   payRollNotification?.status === 'Ready' ?  */}\r\n                        {/* // ( */}\r\n                            <div className=\"col\">\r\n                                <button\r\n                                    className=\"btn btn-primary\"\r\n                                // onClick={createPayRunId}\r\n                                >\r\n                                    Add Pay Run\r\n                                </button>\r\n                            </div>\r\n                        {/* // )\r\n                            //   : \r\n                            // ( */}\r\n                                <div className=\"col\">\r\n                                    <button\r\n                                        className=\"btn btn-primary\"\r\n                                    onClick={()=>toggleCreatePayRunModal()}\r\n                                    >\r\n                                        Create Pay Run\r\n                                    </button>\r\n                                    &nbsp;&nbsp;\r\n                                    <Link to=\"/regular-payroll\">\r\n                                    <button className=\"btn btn-primary\"\r\n                                    //   onClick={createPayRun}\r\n                                    >\r\n                                        View Details\r\n                                    </button>\r\n                                    </Link>\r\n                                </div>\r\n                            {/* // )} */}\r\n                </div>\r\n                <i class=\"bi bi-info-circle\"></i>\r\n                <span>\r\n                    <small className=\"text-secondary\">\r\n                        Please approve this payroll before{' '}\r\n                        08-09-2024 | 04:00 PM\r\n                    </small>\r\n                </span>\r\n            </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default RunAttendance\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { getBadgeColor } from '../../../../utils/common';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { payrollActions } from '../../../../core/resource/actions';\r\n\r\nconst EmpAttendanceTrackingTable = (props) => {\r\n    const dispatch =useDispatch()    \r\n    const {currentPage,setCurrentPage ,getAllEmployeeDetailsByPayDays,monthYear} = props\r\n    const {\r\n        getEmployeeDetailsByPayDaysPending,\r\n    } = useSelector(state => state.payroll)\r\n    // const selectedEmployeeAttendanceDetail =(id)=>{\r\n    //     navigate()\r\n    // }\r\n    const employeeField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'emp_id', label: 'Emp Id' },\r\n        { key: 'name', label: 'Full Name' },\r\n        { key: 'present_days', label: 'Present Days' },\r\n        { key: 'absent_days', label: 'Absent Days' },\r\n        { key: 'present_days', label: 'Pay Days' },\r\n        { key: 'account_status', label: 'Account Status' },\r\n        { key: 'action', label: 'Action' }\r\n    ];\r\n    const setSelectedEmpData =(data)=>{\r\n        dispatch(payrollActions.selectedEmployeeData(data))\r\n    }\r\n    \r\n    const employeeScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        account_status: item =>(\r\n            <span\r\n            className={`badge ${getBadgeColor(item.account_status)}`}\r\n          >\r\n            {item.account_status}\r\n          </span>\r\n        ) ,\r\n        \r\n\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                        <Link className=\"dropdown-item\" to={`employee-attendance-tracking/${item?._id}/${monthYear}`}\r\n                        onClick={() => setSelectedEmpData(item)} \r\n                        >\r\n                            View Details</Link>\r\n                    </li>\r\n                    {/* <li>\r\n                        <span className=\"dropdown-item\"\r\n                        // onClick={() => handleCreateUpdateEmployeeModal()}\r\n                        >Update</span>\r\n                    </li> */}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }), [getAllEmployeeDetailsByPayDays,currentPage]);\r\n    return (\r\n        <>\r\n            <CustomTable\r\n                data={getAllEmployeeDetailsByPayDays?.data}\r\n                fields={employeeField}\r\n                isLoading={getEmployeeDetailsByPayDaysPending}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={getAllEmployeeDetailsByPayDays?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={employeeScopedSlots}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmpAttendanceTrackingTable\r\n","import React, { useState } from 'react'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { Icon, Input, Label } from '../../../commanComponent'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport moment from 'moment'\r\nimport { employeeIDs } from '../../../../utils/common'\r\n\r\nconst AttendanceFilters = (props) => {\r\n    const {\r\n        allEmployeeList,\r\n        allDepartments,\r\n        allDesignations,\r\n        handleDepartmentByDesignation,\r\n        getEmployeeDetailsByPayDays,\r\n        setMonthYear\r\n    } = props\r\n    const { t } = useCustomTranslation()\r\n    const [filterFormData, setFilterFormData] = useState({\r\n        department: null,\r\n        designation: null,\r\n        employees:'',\r\n        month_year:moment().format(\"YYYY-MM\")\r\n    })\r\n\r\n    const handleFilterFormData = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n\r\n\r\n        if (name === \"department\") {\r\n            value && value?.value && handleDepartmentByDesignation(value?.value)\r\n            setFilterFormData(prevState => ({\r\n                ...prevState,\r\n                [\"designation\"]: null,\r\n            })\r\n            );\r\n        }\r\n        if(name ===\"month_year\") setMonthYear(value)\r\n        setFilterFormData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n    }\r\n    const handleFilterEmployees =()=>{\r\n        const filterFields={};\r\n\r\n        if(filterFormData?.department?.value)  filterFields[\"department_id\"] = filterFormData?.department?.value;\r\n        if(filterFormData?.designation?.value)  filterFields[\"designation_id\"] = filterFormData?.designation?.value;\r\n        if(filterFormData?.employees?.length>0) filterFields[\"employee_ids\"]=employeeIDs(filterFormData?.employees)\r\n        filterFields[\"month_year\"]=filterFormData?.month_year\r\n        getEmployeeDetailsByPayDays(filterFields)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"formPanel cardBox\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-2\">\r\n                            <Label text={t(\"labels.department\")} />\r\n                            <CustomSelect\r\n                                data={allDepartments}\r\n                                placeholder={t(\"placeholders.selectDepartment\")}\r\n                                value={filterFormData?.department || ''}\r\n                                handleChange={(selectedOption) => handleFilterFormData(selectedOption, \"department\")}\r\n                                name=\"department\"\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-2\">\r\n                            <Label text={t(\"labels.designation\")} />\r\n                            <CustomSelect\r\n                                data={allDesignations}\r\n                                placeholder={t(\"placeholders.selectDesignation\")}\r\n                                value={filterFormData?.designation || ''}\r\n                                handleChange={(selectedOption) => handleFilterFormData(selectedOption, \"designation\")}\r\n                                name=\"designation\"\r\n                                isDisabled={!(filterFormData?.department) ? true : false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-2\">\r\n                            <Label text={t(\"labels.employees\")} />\r\n                            <CustomSelect\r\n                                data={allEmployeeList}\r\n                                placeholder={t(\"placeholders.employees\")}\r\n                                value={filterFormData?.employees || ''}\r\n                                handleChange={(selectedOption) => handleFilterFormData(selectedOption, \"employees\")}\r\n                                name=\"employees\"\r\n                                isMulti={true}\r\n                                selectAllText={t(\"labels.selectAll\")}\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group mb-2\">\r\n                            <Label text={t(\"labels.monthYear\")} />\r\n                            <Input\r\n                               type={\"month\"}\r\n                               value={filterFormData?.month_year||''}\r\n                               onChange={(e)=>handleFilterFormData(e)}\r\n                               name=\"month_year\"\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='d-flex justify-content-end'>\r\n\r\n                    <CustomButton\r\n                        classNames={\"btn btn-primary gradientBg\"}\r\n                        handleClick={() => handleFilterEmployees()}\r\n                        text={t(\"btns.filter\")}\r\n                        icon={<Icon className={\"fa fa-search\"}/>}\r\n                    />\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AttendanceFilters\r\n","import React, { useState } from 'react'\r\nimport AttendanceTrackingTable from './AttendanceTrackingTable'\r\nimport EmpAttendanceTrackingTable from './EmpAttendanceTrackingTable'\r\nimport AttendanceFilters from './AttendanceFilters';\r\nimport moment from 'moment';\r\n\r\nconst AttendanceTracking = (props) => {\r\n    \r\n    const {\r\n        allEmployeeList,\r\n        allDepartments,\r\n        allDesignations,\r\n        handleDepartmentByDesignation,\r\n        getAllEmployeeDetailsByPayDays,\r\n        getEmployeeDetailsByPayDays\r\n    } = props\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [monthYear,setMonthYear]=useState(moment().format(\"YYYY-MM\"))\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <h3 className='underlineHead ' style={{ fontSize: \"18px\" }}> Attendance Tracking</h3>\r\n            </div>\r\n            <AttendanceFilters\r\n                allEmployeeList={allEmployeeList}\r\n                allDepartments={allDepartments}\r\n                allDesignations={allDesignations}\r\n                handleDepartmentByDesignation={handleDepartmentByDesignation}\r\n                getEmployeeDetailsByPayDays={getEmployeeDetailsByPayDays}\r\n                setMonthYear={setMonthYear}\r\n            />\r\n            <EmpAttendanceTrackingTable\r\n                setCurrentPage={setCurrentPage}\r\n                currentPage={currentPage}\r\n                allEmployeeData={allEmployeeList}\r\n                getAllEmployeeDetailsByPayDays={getAllEmployeeDetailsByPayDays}\r\n                monthYear={monthYear}\r\n\r\n            />\r\n            {/* <AttendanceTrackingTable/> */}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AttendanceTracking\r\n","import React, { useMemo, useState } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { CustCheckbox, Label } from '../../../commanComponent'\r\nimport { CustomButton } from '../../../globalComponents'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nconst EmpData = [\r\n    {\r\n        emp_id: \"qd2654\",\r\n        name: \"Mohd Sarfaraz\",\r\n        email: \"sarfaraz1@qdegrees.com\",\r\n        department: \"IT\",\r\n        designation: \"Junior Software Development\"\r\n    },\r\n    {\r\n        emp_id: \"qd2281\",\r\n        name: \"chandan kumar\",\r\n        email: \"chandan@qdegrees.com\",\r\n        department: \"IT\",\r\n        designation: \"Junior Software Development\"\r\n    }\r\n]\r\nconst CreatePayrun = (props) => {\r\n    const { isOpen, toggleOpenClose } = props\r\n    const { t } = useCustomTranslation()\r\n    const [department, setDepartment] = useState('')\r\n\r\n    const createPayRunFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'hold_salary', label: 'Hold Salary' },\r\n        { key: 'create_salary', label: 'Create Salary' },\r\n        { key: 'emp_id', label: 'Emp ID' },\r\n        { key: 'name', label: 'Emp Name' },\r\n        { key: 'email', label: 'Email' },\r\n        { key: 'department', label: 'Department  ' },\r\n        { key: 'designation', label: 'Designation' },\r\n    ];\r\n\r\n    const createPayRunScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        hold_salary: (item, index) => (\r\n            <span>\r\n                <CustCheckbox\r\n                    key={\"hold_salary\"}\r\n                    id={`hold_salary`}\r\n                    // checked={isActive}\r\n                    // handleChange={(e) => setIsActive(!isActive)}\r\n                    name={\"hold_salary\"}\r\n                />\r\n            </span>\r\n        ),\r\n        create_salary: (item, index) => (\r\n            <span>\r\n                <CustCheckbox\r\n                    key={\"create_salary\"}\r\n                    id={`create_salary`}\r\n                    // checked={isActive}\r\n                    // handleChange={(e) => setIsActive(!isActive)}\r\n                    name={\"create_salary\"}\r\n                />\r\n            </span>\r\n        ),\r\n\r\n\r\n    }), []);\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end creatNewTicketOff ${isOpen ? 'show' : ''}`} tabIndex={-1}\r\n                style={{ visibility: isOpen ? 'visible' : 'hidden', width: \"800px\" }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\"> Create Pay Run </h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => toggleOpenClose()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                            <div className=\"mt-2\">\r\n                                <Label text={\"Department\"} className={\"text-primary\"}/>   \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"form-group mb-3\">\r\n                                <CustomSelect\r\n                                    data={[]}\r\n                                    placeholder={\"Select Department\"}\r\n                                    value={department || ''}\r\n                                    handleChange={(selectedOption) => setDepartment(selectedOption)}\r\n                                    name=\"department\"\r\n                                />\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <CustCheckbox\r\n                            key={\"hold_salary\"}\r\n                            id={`hold_salary`}\r\n                            // checked={isActive}\r\n                            // handleChange={(e) => setIsActive(!isActive)}\r\n                            name={\"hold_salary\"}\r\n                            label={\"Create Salary For All\"}\r\n                        />\r\n\r\n\r\n                    </div>\r\n                    <CustomTable\r\n                        data={EmpData}\r\n                        fields={createPayRunFields}\r\n                        // isLoading={isLoading}\r\n                        pagination={true}\r\n                        // currentPage={currentPage}\r\n                        // setCurrentPage={setCurrentPage}\r\n                        // totalPages={depList?.totalPages}\r\n                        // tableName={\"\"}\r\n                        // onSearch={handleSearch}\r\n                        isHeader={false}\r\n                        tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                        scopedSlots={createPayRunScopedSlots}\r\n                    />\r\n\r\n\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={\"Add\"}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                        // handleClick={() => submitCreateUpdateDepartment()}\r\n                        // isLoading={selectedDepartmentData ? updateDepartmentPending : addDepartmentPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOpen && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreatePayrun\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustomTabs } from '../../reuseableComponents';\r\nimport Arrears from './arrears/Arrears';\r\nimport AddArrears from './arrears/AddArrears';\r\nimport Loans from './loans/Loans';\r\nimport AddLoans from './loans/AddLoans';\r\nimport PayrollHistory from './payrollHistory/payrollHistory';\r\nimport RunAttendance from './RunAttendance.js/RunAttendance';\r\nimport AttendanceTracking from './attendanceTracking/AttendanceTracking';\r\nimport CreatePayrun from './RunAttendance.js/CreatePayrun';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useCustomTranslation } from '../../../translation';\r\nimport { departmentAction, designationAction, employeeActions, payrollActions } from '../../../core/resource/actions';\r\nimport { pagination } from '../../../utils/Constants.config';\r\nimport { use } from 'i18next';\r\nimport moment from 'moment';\r\n\r\nconst PayRuns = () => {\r\n    const dispatch = useDispatch()\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    } = useSelector(state => state.department)\r\n    const {\r\n        getDesignationsByDepartmentRes,\r\n        getDesignationsByDepartmentPending,\r\n        getDesignationsByDepartmentError\r\n    } = useSelector(state => state.designation)\r\n\r\n    const {\r\n        getAllEmployeePending,\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n    } = useSelector(state => state.employee)\r\n\r\n    const {\r\n\r\n        getEmployeeDetailsByPayDaysPending,\r\n        getEmployeeDetailsByPayDaysRes,\r\n        getEmployeeDetailsByPayDaysError,\r\n\r\n        addArrearsPending,\r\n        addArrearsRes,\r\n        addArrearsError,\r\n\r\n    } = useSelector(state => state.payroll)\r\n\r\n    const [isOpenAddArrears, setIsOpenAddArrears] = useState(false)\r\n    const [isOpenAddLoans, setIsOpenAddLoans] = useState(false)\r\n    const [openLoanTypeModal, setOpenLoanTypeModal] = useState('')\r\n    const [isOpenCreatePayRun, setIsOpenCreatePayRun] = useState(false)\r\n    const [allEmployeeList, setAllEmployeeList] = useState('')\r\n    const [allDepartments, setAllDepartments] = useState('')\r\n    const [allDesignations, setAllDesignations] = useState('')\r\n    const [getAllEmployeeDetailsByPayDays, setGetAllEmployeeDetailsByPayDays] = useState([])\r\n    const [attendanceStatusData,setAttendanceStatusData ] = useState([])\r\n    const [currentPage,setCurrentPage]=useState(1)\r\n\r\n\r\n\r\n    const tableTabsRequest = [\r\n        { name: \"Run Attendance\", onClickFun: (id) => getPayRunsData(id), id: \"runAttendance\" },\r\n        { name: \"Attendance Tracking\", onClickFun: (id) => getPayRunsData(id), id: \"attendanceTracking\" },\r\n        { name: \"Add Arrears\", onClickFun: (id) => getPayRunsData(id), id: \"addArrears\" },\r\n        { name: \"Loans\", onClickFun: (id) => getPayRunsData(id), id: \"loans\" },\r\n        { name: \"Payroll History\", onClickFun: (id) => getPayRunsData(id), id: \"payRollHistory\" },\r\n    ];\r\n    const getPayRunsData = (id) => {\r\n        if(id===\"attendanceTracking\"){\r\n            getEmployeeDetailsByPayDays()\r\n        }\r\n\r\n    }\r\n    const toggleAddArrearsModal = () => {\r\n        setIsOpenAddArrears(!isOpenAddArrears)\r\n    }\r\n    const toggleAddLoanModal = (id, type) => {\r\n        if (type) {\r\n            setOpenLoanTypeModal(type)\r\n        }\r\n        setIsOpenAddLoans(!isOpenAddLoans)\r\n    }\r\n    const toggleCreatePayRunModal = () => {\r\n        setIsOpenCreatePayRun(!isOpenCreatePayRun)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllDepartments()\r\n        getAllEmployee()\r\n        \r\n        // getAttendanceStatus()\r\n    }, [])\r\n    /* Get All Employee List*/\r\n    const getAllEmployee = () => {\r\n        dispatch(employeeActions.getAllEmployeeRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getAllEmployeePending) {\r\n            if (getAllEmployeeError) {\r\n                return;\r\n            }\r\n            if (getAllEmployeeRes) {\r\n                if (getAllEmployeeRes?.code === 200) {\r\n\r\n                    setAllEmployeeList(getAllEmployeeRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n        getAllEmployeePending\r\n    ]);\r\n\r\n\r\n\r\n    /* Get All Departments */\r\n    const getAllDepartments = () => {\r\n        if (!getDepartmentListRes?.data?.length) {\r\n            dispatch(departmentAction.getDepartmentListRequest());\r\n        } else {\r\n            setAllDepartments(getDepartmentListRes?.data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getDepartmentListPending) {\r\n            if (getDepartmentListError) {\r\n                return;\r\n            }\r\n            if (getDepartmentListRes) {\r\n                if (getDepartmentListRes?.code === 200) {\r\n                    const departmentResponse = getDepartmentListRes?.data\r\n                    setAllDepartments(departmentResponse)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    ]);\r\n\r\n    /* Department by Designation  */\r\n    const handleDepartmentByDesignation = (id) => {\r\n        const params = {\r\n            department_id: id\r\n        }\r\n        dispatch(designationAction.getDesignationsByDepartmentRequest(params));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getDesignationsByDepartmentPending) {\r\n            if (getDesignationsByDepartmentError) {\r\n                return;\r\n            }\r\n            if (getDesignationsByDepartmentRes) {\r\n                if (getDesignationsByDepartmentRes?.code === 200) {\r\n                    const designationResponse = getDesignationsByDepartmentRes?.data || []\r\n                    setAllDesignations(designationResponse)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDesignationsByDepartmentRes,\r\n        getDesignationsByDepartmentError,\r\n        getDesignationsByDepartmentPending\r\n    ]);\r\n\r\n\r\n    /* Get Employee Details By Pay Days  */\r\n    const getEmployeeDetailsByPayDays = (param) => {\r\n        // const payload ={\r\n        //     page: currentPage,\r\n        //     limit: pagination.limit,\r\n        //     month_year: moment().format(\"YYYY-MM\"),\r\n        //     ...param\r\n        // }\r\n        // dispatch(payrollActions.getEmployeeDetailsByPayDaysRequest(payload));\r\n        dispatch(payrollActions.getEmployeeDetailsByPayDaysRequest());\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getEmployeeDetailsByPayDaysPending) {\r\n            if (getEmployeeDetailsByPayDaysError) {\r\n                return;\r\n            }\r\n            if (getEmployeeDetailsByPayDaysRes) {\r\n                if (getEmployeeDetailsByPayDaysRes?.code === 200) {\r\n                    const getEmployeeDetailsByPayDaysData = getEmployeeDetailsByPayDaysRes?.data\r\n                    setGetAllEmployeeDetailsByPayDays(getEmployeeDetailsByPayDaysData)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getEmployeeDetailsByPayDaysRes,\r\n        getEmployeeDetailsByPayDaysError,\r\n        getEmployeeDetailsByPayDaysPending\r\n    ]);\r\n\r\n     \r\n        /*  Handle Add Arrears*/\r\n        const handleAddArrears = (payload) => {\r\n            dispatch(payrollActions.addArrearsRequest(payload))\r\n        }\r\n        useEffect(() => {\r\n            if (!addArrearsPending) {\r\n                if (addArrearsError) {\r\n                    dispatch(payrollActions?.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_ARREARS_STORE\"))\r\n                    return;\r\n                }\r\n                if (addArrearsRes) {\r\n                    if (addArrearsRes?.code === 200) {\r\n                        dispatch(payrollActions?.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_ARREARS_STORE\"))\r\n                    }\r\n                }\r\n            }\r\n        }, [\r\n            addArrearsRes,\r\n            addArrearsError,\r\n            addArrearsPending\r\n        ]);\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"tab-pane fade show active\" id=\"receivedFeedback\">\r\n                <div className=\"cardBox myRequest mb-3\">\r\n                    <div className=\"cardHead d-flex justify-content-between\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <img\r\n                                src=\"images/kpi-guidline.svg\"\r\n                                alt=\"\"\r\n                                width={40}\r\n                                className=\"me-2 fw-bold\"\r\n                            />\r\n                            <div className=\"\">\r\n                                <h3> Pay Runs</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"searchB me-0 \">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control w-100 fs-7\"\r\n                                placeholder=\"Search\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <CustomTabs tabs={tableTabsRequest} type=\"rayRuns\" />\r\n                    <div className=\"tab-content mykpiMain\">\r\n                        <div className=\"tab-pane fade active show\" id=\"runAttendance\">\r\n                            <RunAttendance\r\n                                toggleCreatePayRunModal={toggleCreatePayRunModal}\r\n                            />\r\n                        </div>\r\n                        <div className=\"tab-pane fade\" id=\"attendanceTracking\">\r\n                            <AttendanceTracking\r\n                                allEmployeeList={allEmployeeList}\r\n                                allDepartments={allDepartments}\r\n                                allDesignations={allDesignations}\r\n                                handleDepartmentByDesignation={handleDepartmentByDesignation}\r\n                                getAllEmployeeDetailsByPayDays={getAllEmployeeDetailsByPayDays}\r\n                                getEmployeeDetailsByPayDays={getEmployeeDetailsByPayDays}\r\n                                attendanceStatusData={attendanceStatusData}\r\n                            />\r\n                        </div>\r\n                        <div className=\"tab-pane fade\" id=\"addArrears\">\r\n                            <Arrears\r\n                                toggleAddArrearsModal={toggleAddArrearsModal}\r\n                            />\r\n                        </div>\r\n                        <div className=\"tab-pane fade\" id=\"loans\">\r\n                            <Loans\r\n                                toggleAddLoanModal={toggleAddLoanModal}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"tab-pane fade\" id=\"payRollHistory\">\r\n                            <PayrollHistory\r\n\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n            isOpenAddArrears && <AddArrears\r\n                isOpen={isOpenAddArrears}\r\n                toggleOpenClose={toggleAddArrearsModal}\r\n                allEmployeeList={allEmployeeList}\r\n                handleAddArrears={handleAddArrears}\r\n                \r\n            />}\r\n            {\r\n            isOpenAddLoans &&\r\n                <AddLoans\r\n                    isOpen={isOpenAddLoans}\r\n                    toggleOpenClose={toggleAddLoanModal}\r\n                    openLoanTypeModal={openLoanTypeModal}\r\n                />\r\n            }\r\n            {\r\n                isOpenCreatePayRun && <CreatePayrun\r\n                    isOpen={isOpenCreatePayRun}\r\n                    toggleOpenClose={toggleCreatePayRunModal}\r\n                    \r\n                />\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PayRuns\r\n"],"names":["props","toggleAddArrearsModal","t","useCustomTranslation","arrearsEmployeeScopedSlots","useMemo","sn","_","index","_jsx","children","_jsxs","className","style","fontSize","CustomButton","classNames","handleClick","text","CustomTable","data","fields","key","label","pagination","isHeader","tableStyle","padding","boxShadow","scopedSlots","isOpen","toggleOpenClose","allEmployeeList","handleAddArrears","addArrearsPending","errors","setErrors","useState","selectedEmployees","setSelectedEmployees","arrearFormData","setArrearFormData","arrearName","arrearFor","payMonth","description","employees","addArrearsScopedSlots","pay_days","item","Input","type","value","name","onChange","e","addEmployeesPayDays","target","prev","map","emp","handleFromChange","fieldName","_e$target","checked","prevState","prevErrors","undefined","_Fragment","tabIndex","visibility","width","onClick","Label","required","placeholder","CustomError","Textarea","CustomSelect","handleChange","selectedOption","isMulti","async","validationResponse","validateSchema","addArrearsSchema","isValid","payload","year_mon","arrear_for","submitFormData","isLoading","installmentData","setInstallmentData","loanData","installmentScopedSlots","amount","id","calculateEMIAfterChanges","remEMI","temp","parseFloat","toFixed","totalEMI","forEach","index1","length","JSON","stringify","React","marginTop","loan","emp_id","email","department","loan_type","emi_duration","effective_date","end_date","installments","installment","date","toggleAddLoanModal","loanScopedSlots","action","_id","durationOptions","loanFormData","setLoanFormData","employee","loanType","emiDuration","effectiveDate","endDate","calculateEndDate","_loanFormData$emiDura","newDate","moment","add","format","calculateEmiInstallment","_loanFormData$emiDura2","duration","parseInt","emi","i","push","console","log","isDisabled","backgroundColor","color","InstallmentTable","payrollHistoryData","salaryForMonth","paymentMonth","paymentDate","PayrollHistory","payrollHistoryScopedSlots","toggleCreatePayRunModal","Link","to","class","dispatch","useDispatch","currentPage","setCurrentPage","getAllEmployeeDetailsByPayDays","monthYear","getEmployeeDetailsByPayDaysPending","useSelector","state","payroll","employeeScopedSlots","account_status","getBadgeColor","setSelectedEmpData","payrollActions","selectedEmployeeData","totalPages","allDepartments","allDesignations","handleDepartmentByDesignation","getEmployeeDetailsByPayDays","setMonthYear","filterFormData","setFilterFormData","designation","month_year","handleFilterFormData","selectAllText","handleFilterEmployees","_filterFormData$depar","_filterFormData$depar2","_filterFormData$desig","_filterFormData$desig2","_filterFormData$emplo","filterFields","employeeIDs","icon","Icon","AttendanceFilters","EmpAttendanceTrackingTable","allEmployeeData","EmpData","setDepartment","createPayRunScopedSlots","hold_salary","CustCheckbox","create_salary","PayRuns","getDepartmentListRes","getDepartmentListError","getDepartmentListPending","getDesignationsByDepartmentRes","getDesignationsByDepartmentPending","getDesignationsByDepartmentError","getAllEmployeePending","getAllEmployeeRes","getAllEmployeeError","getEmployeeDetailsByPayDaysRes","getEmployeeDetailsByPayDaysError","addArrearsRes","addArrearsError","isOpenAddArrears","setIsOpenAddArrears","isOpenAddLoans","setIsOpenAddLoans","openLoanTypeModal","setOpenLoanTypeModal","isOpenCreatePayRun","setIsOpenCreatePayRun","setAllEmployeeList","setAllDepartments","setAllDesignations","setGetAllEmployeeDetailsByPayDays","attendanceStatusData","setAttendanceStatusData","tableTabsRequest","onClickFun","getPayRunsData","useEffect","getAllDepartments","getAllEmployee","employeeActions","getAllEmployeeRequest","code","_getDepartmentListRes","departmentAction","getDepartmentListRequest","departmentResponse","designationResponse","param","getEmployeeDetailsByPayDaysRequest","getEmployeeDetailsByPayDaysData","handleClearPayrollStore","src","alt","CustomTabs","tabs","RunAttendance","AttendanceTracking","params","department_id","designationAction","getDesignationsByDepartmentRequest","Arrears","Loans","AddArrears","addArrearsRequest","AddLoans","CreatePayrun"],"sourceRoot":""}