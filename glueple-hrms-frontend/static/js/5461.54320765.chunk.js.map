{"version":3,"file":"static/js/5461.54320765.chunk.js","mappings":"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","sources":["components/leave_management/ProgressModel.js","components/travelAndClaim/claim/AddUpdateTravelClaim.js","components/travelAndClaim/claim/TravelClaim.js","components/travelAndClaim/claim/ViewBillDetail.js","components/travelAndClaim/claim/ViewTravelClaimDetail.js"],"sourcesContent":["import React from 'react'\r\nimport { dateFormate, toTitleCase } from '../../utils/common';\r\nimport moment from 'moment';\r\n\r\nconst ProgressModel = (props) => {\r\n    const { openModel, handleOpenClose,progressData,processType } = props\r\n    const renderHierarchy = () => {\r\n        return progressData[0]?.approver_data?.map((data, ind) => {\r\n            const isApproved = data.action_type === \"approve\";\r\n            const isRejected = data.action_type === \"reject\";\r\n\r\n            return (\r\n                <li\r\n                    className={`select ${isApproved ? \"active\" : isRejected ? \"nonactive\" : \"\"}`} \r\n                    key={ind}\r\n                >\r\n                    <figure className=\"m-0\">\r\n                        <img\r\n                            src={isApproved ? \"images/greenRight.svg\" : isRejected ? \"images/redCross.svg\" : \"images/greenRight.svg\"} \r\n                            alt=\"\"\r\n                            width=\"45\"\r\n                        />\r\n                    </figure>\r\n                    <strong>\r\n                        {/* <strong>\r\n                            {`${data?.name} ( ${data?.role_name} )`}<b>{moment(data?.date).format(\"DD-MM-YYYY LT\")}</b> <b>{data?.comment}</b> \r\n                        </strong> */}\r\n                        {isApproved ? \"Approved by \" : isRejected ? \"Rejected by \" : \"Pending by \"} \r\n                        {`${data?.name} ( ${data?.role_name} )`}<b>{moment(data?.date).format(\"DD-MM-YYYY LT\")}</b> <b>{data?.comment}</b> \r\n                        {/* {data?.role_name} */}\r\n                        {/* <b>{data?.approver_name}</b> */}\r\n                    </strong>\r\n                </li>\r\n            );\r\n        });\r\n    };\r\n  return (\r\n    <>\r\n    <div\r\n            className={`offcanvas offcanvas-end applyLeaveCanvas ${openModel ? 'show' : ''}`}\r\n            tabIndex={-1}\r\n            id=\"attendanceCorrection\"\r\n            style={{\r\n                visibility: openModel ? 'visible' : 'hidden',\r\n                width: \"800px\"\r\n            }}\r\n        >\r\n            <div className=\"offcanvas-header\">\r\n                <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary text-capitalize\">\r\n                {toTitleCase(processType)} Process\r\n                </h5>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn-close\"\r\n                    data-bs-dismiss=\"offcanvas\"\r\n                    aria-label=\"Close\"\r\n                    onClick={() => { handleOpenClose() }}\r\n                />\r\n            </div>\r\n            <div className=\"offcanvas-body\">\r\n                <div className=\"detailsCandidate\">\r\n                    <ul className=\"detailsList\">\r\n                        <li className=\"select active\">\r\n                            <figure className=\"m-0\">\r\n                                <img src=\"images/greenRight.svg\" alt=\"\" width={45} />\r\n                            </figure>\r\n                            <strong className='text-capitalize'>\r\n                            {toTitleCase(processType)} Applied<b>{progressData &&progressData?.length>0 &&progressData[0]?.date }</b>\r\n                            </strong>\r\n                        </li>\r\n                        {progressData &&progressData?.length >0 && renderHierarchy() }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"offcanvas-footer\">\r\n                <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n  )\r\n}\r\n\r\nexport default ProgressModel\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { CustCheckbox, Input, Label, Textarea } from '../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../globalComponents'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { createUpdateTravelClaimSchema } from '../../../utils/ValidationSchema'\r\nimport { useSelector } from 'react-redux'\r\nimport CustomSelect from '../../commanComponent/CustomSelect'\r\nimport { validateSchema } from '../../../utils/ValidationHelper'\r\n\r\nconst AddUpdateTravelClaim = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const { updateClaimPending, createClaimPending } = useSelector(state => state.travelAndClaim)\r\n    const {\r\n        selectedTravelClaimData,\r\n        openModel,\r\n        handleOpenClose,\r\n        createUpdateClaimRequest,\r\n        travelTypeListData,\r\n        allTravelApprovalData,\r\n        actionBtnType\r\n    } = props\r\n    const [errors, setErrors] = useState({})\r\n    const [billImage, setBillImage] = useState('')\r\n    const [travelClaimFormData, setTravelClaimFormData] = useState({\r\n        travelType: null,\r\n        billNo: '',\r\n        amount: '',\r\n        date: '',\r\n        description: '',\r\n        isDraft: false\r\n    })\r\n    const fileInputRef = useRef(null);\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n\r\n        setTravelClaimFormData(prevState => {\r\n            let updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n\r\n        // Clear error for the specific field being changed\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    const submitCreateUpdateTravelSetting = async (type) => {\r\n        const validationResponse = await validateSchema(createUpdateTravelClaimSchema, travelClaimFormData);\r\n        if (validationResponse.isValid) {\r\n            const {\r\n                billNo,\r\n                amount,\r\n                date,\r\n                description,\r\n\r\n                travelType,\r\n                selectTravel\r\n            } = travelClaimFormData\r\n\r\n            const formData = new FormData();\r\n            formData.append(\"travel_id\", selectTravel?.value);\r\n            formData.append(\"travel_type_id\", travelType?.value);\r\n            formData.append(\"bill_no\", billNo);\r\n            formData.append(\"amount\", amount);\r\n            formData.append(\"date\", date);\r\n            formData.append(\"description\", description);\r\n            formData.append(\"bill_image\", billImage)\r\n            if (type === \"draft\") {\r\n                formData.append(\"is_draft\", true);\r\n            }\r\n            if(type===\"submit\") formData.append(\"is_draft\", false);\r\n            if(selectedTravelClaimData){\r\n                formData.append(\"_id\", selectedTravelClaimData?._id)\r\n            }\r\n            createUpdateClaimRequest(formData)\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetForm()\r\n        })\r\n    }, [openModel])\r\n\r\n    useEffect(() => {\r\n        if (selectedTravelClaimData) {\r\n            setTravelClaimFormData({\r\n                selectTravel: { label: selectedTravelClaimData?.travel, value: selectedTravelClaimData?.travel_id },\r\n                travelType: { label: selectedTravelClaimData?.type, value: selectedTravelClaimData?.travel_type_id },\r\n                billNo: selectedTravelClaimData?.bill_no,\r\n                amount: selectedTravelClaimData?.amount,\r\n                description: selectedTravelClaimData?.description,\r\n                date: selectedTravelClaimData?.date,\r\n                isDraft: selectedTravelClaimData?.is_draft,\r\n            })\r\n        }\r\n    }, [selectedTravelClaimData])\r\n\r\n    const resetForm = () => {\r\n        setTravelClaimFormData({\r\n            selectTravel: null,\r\n            travelType: null,\r\n            billNo: '',\r\n            amount: '',\r\n            date: '',\r\n            description: '',\r\n\r\n        })\r\n        setErrors({})\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0]\r\n        setBillImage(file)\r\n    }\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{actionBtnType===\"draft\"?\"Draft\":selectedTravelClaimData ? \"Update\" : \"Add\"} Travel Claim</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose(\"travel_rule\")}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"offcanvas-body myRequest \">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <Label text={t(\"labels.selectTravel\")} required={true} />\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustomSelect\r\n                                        data={allTravelApprovalData}\r\n                                        placeholder={t(\"placeholders.selectTravel\")}\r\n                                        value={travelClaimFormData?.selectTravel || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"selectTravel\")}\r\n                                        name=\"selectTravel\"\r\n                                    />\r\n                                    {errors?.selectTravel && (\r\n                                        <CustomError text={errors.selectTravel} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <Label text={t(\"labels.type\")} />\r\n                                <div className=\"form-group mb-3\">\r\n                                    <CustomSelect\r\n                                        data={travelTypeListData}\r\n                                        placeholder={t(\"placeholders.type\")}\r\n                                        value={travelClaimFormData?.travelType || ''}\r\n                                        handleChange={(selectedOption) => handleFromChange(selectedOption, \"travelType\")}\r\n                                        name=\"travelType\"\r\n                                    />\r\n                                    {errors?.travelType && (\r\n                                        <CustomError text={errors.travelType} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <Label text={t(\"labels.billNo\")} required={true} />\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.billNo\")}\r\n                                        value={travelClaimFormData?.billNo}\r\n                                        name=\"billNo\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.billNo && (\r\n                                        <CustomError text={errors.billNo} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <Label text={t(\"labels.amount\")} required={true} />\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.amount\")}\r\n                                        value={travelClaimFormData?.amount}\r\n                                        name=\"amount\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.amount && (\r\n                                        <CustomError text={errors.amount} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <Label text={t(\"labels.date\")} required={true} />\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        placeholder={t(\"placeholders.date\")}\r\n                                        value={travelClaimFormData?.date}\r\n                                        name=\"date\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                    />\r\n                                    {errors?.date && (\r\n                                        <CustomError text={errors.date} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <Label text={t(\"labels.description\")} />\r\n                                <div className=\"form-group mb-3\">\r\n                                    <Textarea\r\n                                        placeholder={t(\"placeholders.description\")}\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                        name={\"description\"}\r\n                                        value={travelClaimFormData?.description}\r\n                                    />\r\n                                    {errors?.description && (\r\n                                        <CustomError text={errors.description} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-12\">\r\n                                <Label text={t(\"labels.billImage\")} />\r\n                                <div className=\"form-group mb-3\">\r\n\r\n                                    <input type=\"file\"\r\n                                        id=\"policyFile\"\r\n                                        name=\"poster\"\r\n                                        className={`form-control `}\r\n                                        onChange={handleFileChange}\r\n                                        accept=\".png, .jpeg, .doc, .docx, .pdf\"\r\n                                        ref={fileInputRef}\r\n                                    />\r\n                                    {errors?.billImage && (\r\n                                        <CustomError text={errors.billImage} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* <div className=\"row mt-2\">\r\n                                <div className=\"col-md-3\">\r\n                                    <div className=\"form-group mb-3\">\r\n                                        <Label text={t(\"labels.isDraft\")} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-9\">\r\n                                    <div className=\"form-group mb-3\">\r\n                                        <CustCheckbox\r\n                                            key={\"isDraft\"}\r\n                                            id={`isDraft`}\r\n                                            checked={travelClaimFormData?.isDraft}\r\n                                            handleChange={(e) => handleFromChange(e)}\r\n                                            name={\"isDraft\"}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        {!selectedTravelClaimData && <CustomButton\r\n                            text={\"Draft\"}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitCreateUpdateTravelSetting(\"draft\")}\r\n                            isDisabled={createClaimPending}\r\n                        />}\r\n                        <CustomButton\r\n                            text={actionBtnType ?\"Submit\":selectedTravelClaimData ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                            classNames={\"btn btn-primary\"}\r\n                            handleClick={() => submitCreateUpdateTravelSetting(\"submit\")}\r\n                            isDisabled={selectedTravelClaimData  ? updateClaimPending : createClaimPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddUpdateTravelClaim\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomButton } from '../../globalComponents'\r\nimport { CustomTable, CustomTabs } from '../../reuseableComponents'\r\nimport { Icon } from '../../commanComponent'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { leaveAction, travelAndClaimAction } from '../../../core/resource/actions'\r\nimport { pagination } from '../../../utils/Constants.config'\r\nimport AddUpdateTravelClaim from './AddUpdateTravelClaim'\r\nimport ApproveRejectModal from '../../modal/ApproveRejectModal'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { dateFormate, getBadgeColor, isPermission } from '../../../utils/common'\r\nimport Image from '../../commanComponent/Image'\r\nimport ProgressModel from '../../leave_management/ProgressModel'\r\nimport ViewBillDetail from './ViewBillDetail'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport ViewTravelClaimDetail from './ViewTravelClaimDetail'\r\n\r\nconst TravelClaim = () => {\r\n    const { t } = useCustomTranslation()\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const updateTravelClaimPer=isPermission(\"update_travel_claim\")\r\n    const deleteTravelClaimPer=isPermission(\"delete_travel_claim\")\r\n    const approvalTravelClaimPer=isPermission(\"approval_travel_claim\")\r\n    const draftTravelClaimPer=isPermission(\"draft_travel_claim\")\r\n\r\n    const [claimRequestData, setClaimRequestData] = useState('')\r\n    const {\r\n        getLeaveProgressPending,\r\n        getLeaveProgressRes,\r\n        getLeaveProgressError,\r\n    } = useSelector(state => state.leave);\r\n    const {\r\n        createClaimPending,\r\n        createClaimRes,\r\n        createClaimError,\r\n\r\n        updateClaimPending,\r\n        updateClaimRes,\r\n        updateClaimError,\r\n\r\n        deleteClaimPending,\r\n        deleteClaimRes,\r\n        deleteClaimError,\r\n\r\n        getClaimPending,\r\n        getClaimRes,\r\n        getClaimError,\r\n\r\n        getAllTravelTypePending,\r\n        getAllTravelTypeRes,\r\n        getAllTravelTypeError,\r\n\r\n        getAllTravelApprovalDataPending,\r\n        getAllTravelApprovalDataRes,\r\n        getAllTravelApprovalDataError,\r\n    } = useSelector(state => state.travelAndClaim)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [isOpenTravelClaim, setIsOpenTravelClaim] = useState(false)\r\n    const [travelTypeListData, setTravelTypeListData] = useState('')\r\n    const [selectedTravelClaimData, setSelectedTravelClaimData] = useState('')\r\n    const [deleteTravelClaimId, setDeleteTravelClaimId] = useState('')\r\n    const [isShowDeleteTravelClaimModal, setIsShowDeleteTravelClaimModal] = useState(false)\r\n    const [actionBtnType, setActionBtnType] = useState('')\r\n    const [progressData, setProgressData] = useState('')\r\n    const [openProgressModel, setOpenProgressModel] = useState(false)\r\n    const [isOpenBillDetailModal, setIsOpenBillDetailModal] = useState(false)\r\n    const [isOpenTravelDetailModal, setIsOpenTravelDetailModal] = useState(false)\r\n    const [claimType, setClaimType] = useState('submit')\r\n    const [billImageData, setBillImageData] = useState('')\r\n\r\n    const fields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'travel', label: 'Travel' },\r\n        { key: 'emp_id', label: 'Employee Code' },\r\n        { key: 'name', label: 'Name' },\r\n        { key: 'approvers_status', label: 'Status' },\r\n        { key: 'created_at', label: 'Created Date' },\r\n        { key: 'travel_details', label: 'Claim Detail' },\r\n       ((updateTravelClaimPer ||deleteTravelClaimPer ||approvalTravelClaimPer||draftTravelClaimPer) && { key: 'action', label: 'Action' })\r\n    ]\r\n    const toggleBillDetail = (data) => {\r\n        if (data) {\r\n            setBillImageData(data)\r\n        } else {\r\n            setBillImageData('')\r\n        }\r\n        setIsOpenBillDetailModal(!isOpenBillDetailModal)\r\n\r\n    }\r\n\r\n    const toggleTravelDetail = (data) => {\r\n        if (data) {\r\n            setSelectedTravelClaimData(data)\r\n        } else {\r\n            setSelectedTravelClaimData('')\r\n        }\r\n        setIsOpenTravelDetailModal(!isOpenTravelDetailModal)\r\n\r\n    }\r\n    const scopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        approvers_status: item => (\r\n            <span\r\n                className={`badge ${getBadgeColor(item?.is_draft ? 'inactive' : item.approvers_status)} text-capitalize`}\r\n\r\n            >\r\n                {item?.is_draft ? \"Draft\" : item.approvers_status}\r\n            </span>\r\n        ),\r\n        travel_details: item => (\r\n            <span\r\n                onClick={() => toggleTravelDetail(item)}\r\n            >\r\n                <img src=\"images/info-orange-bg.svg\" alt width=\"32\" />\r\n            </span>\r\n        ),\r\n        created_at: item => (\r\n            <span >\r\n                {dateFormate(item?.created_at)}\r\n            </span>\r\n        ),\r\n        action: item => (\r\n            <>\r\n\r\n                {<div className=\"btn-group actionDrp\">\r\n                    <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                        data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        <i className=\"bi bi-three-dots-vertical\"></i>\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\">\r\n                       {approvalTravelClaimPer && <li>\r\n                            <span className=\"dropdown-item\"\r\n                                onClick={() => {\r\n                                    onHandleProgressModel(\"claim\", item?._id)\r\n                                }}\r\n                            >\r\n                                <Icon className={\"fa fa-check me-1\"} />Approval Status</span>\r\n                        </li>}\r\n                        { item?.is_draft && <>\r\n                           {draftTravelClaimPer && <li>\r\n                                <span className=\"dropdown-item\"\r\n                                    onClick={() => {\r\n                                        navigateToAddUpdate(item, 'draft');\r\n                                    }}\r\n                                >\r\n                                    <Icon className={\"fa fa-file me-1\"} />Draft</span>\r\n                            </li>}\r\n                           {updateTravelClaimPer && <li>\r\n                                <span className=\"dropdown-item\"\r\n                                    onClick={() => {\r\n                                        navigateToAddUpdate(item);\r\n                                    }}\r\n                                >\r\n                                    <Icon className={\"fa fa-edit me-1\"} />Update</span>\r\n                            </li>}\r\n                            {deleteTravelClaimPer&&<li>\r\n                                <span className=\"dropdown-item\"\r\n                                    onClick={() => handleTravelClaimDeleteModal(item._id)}\r\n                                >\r\n                                    <Icon className={\"bi bi-trash me-1\"} />Delete</span>\r\n                            </li>}\r\n                        </>}\r\n                    </ul>\r\n                </div>}\r\n            </>\r\n        )\r\n    }), []);\r\n\r\n    /* approval process b*/\r\n    const onHandleProgressModel = (type, id) => {\r\n        if (type || id) {\r\n            const payload = {\r\n                id: id || '',\r\n                type: type || ''\r\n            }\r\n            dispatch(leaveAction.getLeaveProgressRequest(payload))\r\n        }\r\n\r\n        setOpenProgressModel(!openProgressModel)\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (!getLeaveProgressPending) {\r\n            if (getLeaveProgressError) {\r\n                return;\r\n            }\r\n            if (getLeaveProgressRes) {\r\n                if (getLeaveProgressRes?.code === 200) {\r\n                    setProgressData(getLeaveProgressRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getLeaveProgressRes,\r\n        getLeaveProgressError,\r\n        getLeaveProgressPending\r\n    ]);\r\n    const toggleAddUpdateTravelClaim = (item, type) => {\r\n        if (item) {\r\n            setSelectedTravelClaimData(item)\r\n            setActionBtnType(type)\r\n        } else {\r\n            setSelectedTravelClaimData('')\r\n        }\r\n        setIsOpenTravelClaim(!isOpenTravelClaim)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTravelRequestData()\r\n    }, [currentPage, claimType])\r\n    const getTravelRequestData = () => {\r\n        const payload = {\r\n            is_draft: claimType === \"draft\" ? true : false,\r\n            page: currentPage,\r\n            limit: pagination.limit\r\n        }\r\n        dispatch(travelAndClaimAction.getClaimRequest(payload));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getClaimPending) {\r\n            if (getClaimError) {\r\n                return;\r\n            }\r\n            if (getClaimRes) {\r\n                if (getClaimRes?.code === 200) {\r\n                    setClaimRequestData(getClaimRes?.data)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getClaimPending,\r\n        getClaimRes,\r\n        getClaimError,\r\n    ]);\r\n\r\n\r\n\r\n    /*Create Claim Data */\r\n    const createUpdateClaimRequest = (payload) => {\r\n        if (selectedTravelClaimData) {\r\n            payload[\"_id\"] = selectedTravelClaimData?._id;\r\n            dispatch(travelAndClaimAction.updateClaimRequest(payload));\r\n        } else {\r\n            dispatch(travelAndClaimAction.createClaimRequest(payload));\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!createClaimPending) {\r\n            if (createClaimError) {\r\n                dispatch(travelAndClaimAction.handleClearTravelStore(\"HANDLE_CLEAR_CREATE_CLAIM_STORE\"))\r\n                return;\r\n            }\r\n            if (createClaimRes) {\r\n                if (createClaimRes?.code === 200) {\r\n                    dispatch(travelAndClaimAction.handleClearTravelStore(\"HANDLE_CLEAR_CREATE_CLAIM_STORE\"))\r\n                    toggleAddUpdateTravelClaim()\r\n                    getTravelRequestData()\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        createClaimError,\r\n        createClaimRes,\r\n        createClaimPending\r\n    ]);\r\n    useEffect(() => {\r\n        if (!updateClaimPending) {\r\n            if (updateClaimError) {\r\n                dispatch(travelAndClaimAction.handleClearTravelStore(\"HANDLE_CLEAR_UPDATE_CLAIM_STORE\"))\r\n                return;\r\n            }\r\n            if (updateClaimRes) {\r\n                if (updateClaimRes?.code === 200) {\r\n                    dispatch(travelAndClaimAction.handleClearTravelStore(\"HANDLE_CLEAR_UPDATE_CLAIM_STORE\"))\r\n                    toggleAddUpdateTravelClaim()\r\n                    getTravelRequestData()\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updateClaimError,\r\n        updateClaimRes,\r\n        updateClaimPending\r\n    ]);\r\n\r\n    /*  Delete Travel Claim   */\r\n    const handleTravelClaimDeleteModal = (id) => {\r\n        if (id) {\r\n            setDeleteTravelClaimId(id)\r\n        }\r\n        setIsShowDeleteTravelClaimModal(!isShowDeleteTravelClaimModal)\r\n    }\r\n\r\n    const handleDeleteTravelClaim = (type) => {\r\n        if (type) {\r\n            const params = {\r\n                _id: deleteTravelClaimId\r\n            }\r\n            dispatch(travelAndClaimAction?.deleteClaimRequest(params))\r\n        } else {\r\n            handleTravelClaimDeleteModal()\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!deleteClaimPending) {\r\n            if (deleteClaimError) {\r\n                dispatch(travelAndClaimAction.handleClearTravelStore(\"HANDLE_CLEAR_DELETE_CLAIM_STORE\"))\r\n                return;\r\n            }\r\n            if (deleteClaimRes) {\r\n                if (deleteClaimRes?.code === 200) {\r\n                    dispatch(travelAndClaimAction.handleClearTravelStore(\"HANDLE_CLEAR_DELETE_CLAIM_STORE\"))\r\n                    getTravelRequestData()\r\n                    setIsShowDeleteTravelClaimModal(!isShowDeleteTravelClaimModal)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        deleteClaimError,\r\n        deleteClaimRes,\r\n        deleteClaimPending\r\n    ]);\r\n\r\n\r\n\r\n\r\n    // const travelClaim = [\r\n    //     { name: \"Submitted\", onClickFun: (id) => getTravelClaim(id), id: \"submit_claim\" },\r\n    //     { name: \"Draft\", onClickFun: (id) => getTravelClaim(id), id: \"draft_claim\" },\r\n    // ]\r\n\r\n    // const getTravelClaim = () => {\r\n\r\n    // }\r\n\r\n\r\n    const navigateToAddUpdate = (data,type) => {\r\n        if (data) {\r\n            dispatch(travelAndClaimAction.selectedTravelClaimDetail({...data,action_type:type}))\r\n        }\r\n        navigate(\"add-update-travel-claims\")\r\n    }\r\n\r\n    return (\r\n        <div className='cardBox myRequest mb-3 employeeHistory'>\r\n            <div className=\"d-flex align-items-center justify-content-between gap-3\">\r\n                <div className=\"cardHead d-flex\">\r\n                    <img src=\"images/myrequest-icon.svg\" alt=\"\" width={35} />\r\n                    <h4 className=\"ms-2 \">Travel Claim</h4>\r\n                </div>\r\n                <CustomButton\r\n                    text={\"Add Travel Claim\"}\r\n                    classNames={\"btn btn-primary\"}\r\n                    icon={<Icon className=\"fa fa-plus\" />}\r\n                    handleClick={() => navigateToAddUpdate()}\r\n                    slug={\"add_travel_claim\"}\r\n                />\r\n            </div>\r\n            <hr />\r\n            <div className=\"requestdata\">\r\n                <div className='row'>\r\n                    <div className='col-6'>\r\n                        <div className=\"d-flex align-items-center mb-4 \">\r\n                            <span className=\"fw-bold fs-6 text-black\">Claim Status</span>\r\n                            <ul className=\"nav nav-tabs leaveTabs ms-3\">\r\n                                <li className=\"nav-item\">\r\n                                    <CustomButton\r\n                                        text=\"Submitted\"\r\n                                        classNames={`nav-link px-4 ${claimType === \"submit\" ? \"active\" : \"\"}`}\r\n                                        handleClick={() => setClaimType(\"submit\")}\r\n                                    />\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <CustomButton\r\n                                        text=\"Draft\"\r\n                                        classNames={`nav-link px-4 ${claimType == \"draft\" ? \"active\" : \"\"}`}\r\n                                        handleClick={() => setClaimType(\"draft\")}\r\n                                    />\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* <CustomTabs tabs={travelClaim} type=\"travelClaim\" />\r\n\r\n            <div className=\"tab-content\">\r\n                <div className=\"tab-pane fade active show\" id=\"submit_claim\"> */}\r\n            <CustomTable\r\n                data={claimRequestData?.data}\r\n                fields={fields}\r\n                isLoading={getClaimPending}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={claimRequestData?.totalPages}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={scopedSlots}\r\n            />\r\n            {/* </div>\r\n                <div className=\"tab-pane fade show\" id=\"draft_claim\">\r\n                    <CustomTable\r\n                        data={claimRequestData?.data}\r\n                        fields={fields}\r\n                        isLoading={getClaimPending}\r\n                        pagination={true}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                        totalPages={claimRequestData?.totalPages}\r\n                        isHeader={false}\r\n                        tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                        scopedSlots={scopedSlots}\r\n                    />\r\n                </div>\r\n            </div> */}\r\n\r\n            {isOpenTravelClaim && <AddUpdateTravelClaim\r\n                handleOpenClose={toggleAddUpdateTravelClaim}\r\n                openModel={isOpenTravelClaim}\r\n                createUpdateClaimRequest={createUpdateClaimRequest}\r\n                selectedTravelClaimData={selectedTravelClaimData}\r\n                actionBtnType={actionBtnType}\r\n            />}\r\n\r\n            {isShowDeleteTravelClaimModal && (\r\n                <ApproveRejectModal\r\n                    onApproveReject={handleDeleteTravelClaim}\r\n                    isShow={isShowDeleteTravelClaimModal}\r\n                    desc={t(\"alerts.deletePopup.desc\").replace('$1', \"Travel Claim\")}\r\n                    btnRightLoading={deleteClaimPending}\r\n                    btnTextRight={t(\"btns.delete\")}\r\n                    btnTextLeft={t(\"btns.cancel\")}\r\n\r\n                />)\r\n            }\r\n            {openProgressModel && <ProgressModel\r\n                openModel={openProgressModel}\r\n                handleOpenClose={onHandleProgressModel}\r\n                progressData={progressData}\r\n                processType={\"Travel & Claim\"}\r\n            />}\r\n            {isOpenBillDetailModal && <ViewBillDetail\r\n                handleOpenClose={toggleBillDetail}\r\n                openModel={isOpenBillDetailModal}\r\n                billImageData={billImageData}\r\n            />}\r\n            {isOpenTravelDetailModal && <ViewTravelClaimDetail\r\n                handleOpenClose={toggleTravelDetail}\r\n                openModel={isOpenTravelDetailModal}\r\n                selectedTravelClaimData={selectedTravelClaimData}\r\n                toggleBillDetail={toggleBillDetail}\r\n            />}\r\n        </div>\r\n    )\r\n}\r\nexport default TravelClaim\r\n","import React, { useEffect, useRef, useState } from 'react'\r\n\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { CustomError } from '../../commanComponent'\r\n\r\n\r\nconst ViewBillDetail = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        billImageData,\r\n        openModel,\r\n        handleOpenClose,\r\n    } = props\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* Modal */}\r\n            <div className={`modal fade attendanceLog ${openModel ? 'show d-block' : ''}`}\r\n                tabIndex=\"-1\"\r\n                style={{ zIndex: 1060 }} \r\n                aria-hidden={!openModel}>\r\n\r\n                <div className=\"modal-dialog modal-dialog-centered\" style={{ maxWidth: '700px' }}>\r\n                    <div className=\"modal-content rounded-0 border-0\">\r\n                        <div className=\"modal-header \">\r\n                            <h1 className=\"modal-title fs-5 fw-bold text-primary\">Bill</h1>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"\r\n                                onClick={handleOpenClose}\r\n                            />\r\n                        </div>\r\n                        <div className=\"modal-body pt-3\">\r\n                            <div className=\"formPanel\">\r\n                            {billImageData?.bill_image ?<div className='d-flex gap-3'>\r\n                                <img src={billImageData?.bill_image} alt=\"Bill Image\" height={210} width={210} />\r\n                                \r\n                                </div>:\r\n                               <span className='d-flex justify-content-center'> <CustomError  text={\"No Image Available\"}/></span>\r\n                                }\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Backdrop - Higher z-index than canvas modal */}\r\n            {openModel && (\r\n                <div className=\"modal-backdrop fade show\" style={{ zIndex: 1055 }}></div>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViewBillDetail\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\r\n\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { CustomTable } from '../../reuseableComponents'\r\nimport { dateFormate } from '../../../utils/common'\r\n\r\nconst tempData =[\r\n    {travel_type:\"car\", amount:'111',date:'2024-03-22',bill_no:'1234'}\r\n]\r\nconst ViewTravelClaimDetail = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        selectedTravelClaimData,\r\n        openModel,\r\n        handleOpenClose,\r\n        toggleBillDetail\r\n    } = props\r\n\r\n    const fields=[\r\n        {key:'sn', label: 'S.N' },\r\n        {key:'travel_type_name', label: 'Travel Type' },\r\n        {key:'amount', label: 'Amount' },\r\n        {key:'date', label: 'Date' },\r\n        {key:'bill_no', label: 'Bill No' },\r\n        {key:'bill_image', label: 'Bill ' },\r\n    ]\r\n\r\n        const scopedSlots = useMemo(() => ({\r\n            sn: (_, index) => (\r\n                <span>{index + 1}</span>\r\n            ),\r\n           \r\n            bill_image: item => (\r\n                <span \r\n                onClick={() => toggleBillDetail(item)}\r\n                >\r\n                <img src=\"images/view-icon.svg\" alt width=\"32\" />\r\n              </span>\r\n            ),\r\n            date: item => (\r\n                <span >\r\n                 {dateFormate(item?.created_at)}\r\n              </span>\r\n            ),\r\n         \r\n        }), [selectedTravelClaimData]);\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">Travel Detail</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose()}\r\n                    />\r\n                </div>\r\n\r\n\r\n                <div className=\"offcanvas-body myRequest \">\r\n                    <div className=\"formPanel\">\r\n\r\n\r\n                        <CustomTable\r\n                            data={selectedTravelClaimData?.travel_details ||tempData}\r\n                            fields={fields}\r\n                            // isLoading={getClaimPending}\r\n                            pagination={true}\r\n                            // currentPage={currentPage}\r\n                            // setCurrentPage={setCurrentPage}\r\n                            // totalPages={claimRequestData?.totalPages}\r\n                            isHeader={false}\r\n                            tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                            scopedSlots={scopedSlots}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n\r\n                </div>\r\n\r\n            </div>\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViewTravelClaimDetail\r\n"],"names":["props","_progressData$2","openModel","handleOpenClose","progressData","processType","_jsxs","_Fragment","children","className","tabIndex","id","style","visibility","width","toTitleCase","_jsx","type","onClick","src","alt","length","date","renderHierarchy","_progressData$","_progressData$$approv","approver_data","map","data","ind","isApproved","action_type","isRejected","name","role_name","moment","format","comment","t","useCustomTranslation","updateClaimPending","createClaimPending","useSelector","state","travelAndClaim","selectedTravelClaimData","createUpdateClaimRequest","travelTypeListData","allTravelApprovalData","actionBtnType","errors","setErrors","useState","billImage","setBillImage","travelClaimFormData","setTravelClaimFormData","travelType","billNo","amount","description","isDraft","fileInputRef","useRef","handleFromChange","e","fieldName","_e$target","target","value","checked","prevState","prevErrors","undefined","submitCreateUpdateTravelSetting","async","validationResponse","validateSchema","createUpdateTravelClaimSchema","isValid","selectTravel","formData","FormData","append","_id","useEffect","resetForm","label","travel","travel_id","travel_type_id","bill_no","is_draft","Label","text","required","CustomSelect","placeholder","handleChange","selectedOption","CustomError","Input","onChange","Textarea","file","files","accept","ref","CustomButton","classNames","handleClick","isDisabled","TravelClaim","dispatch","useDispatch","navigate","useNavigate","updateTravelClaimPer","isPermission","deleteTravelClaimPer","approvalTravelClaimPer","draftTravelClaimPer","claimRequestData","setClaimRequestData","getLeaveProgressPending","getLeaveProgressRes","getLeaveProgressError","leave","createClaimRes","createClaimError","updateClaimRes","updateClaimError","deleteClaimPending","deleteClaimRes","deleteClaimError","getClaimPending","getClaimRes","getClaimError","getAllTravelTypePending","getAllTravelTypeRes","getAllTravelTypeError","getAllTravelApprovalDataPending","getAllTravelApprovalDataRes","getAllTravelApprovalDataError","currentPage","setCurrentPage","isOpenTravelClaim","setIsOpenTravelClaim","setTravelTypeListData","setSelectedTravelClaimData","deleteTravelClaimId","setDeleteTravelClaimId","isShowDeleteTravelClaimModal","setIsShowDeleteTravelClaimModal","setActionBtnType","setProgressData","openProgressModel","setOpenProgressModel","isOpenBillDetailModal","setIsOpenBillDetailModal","isOpenTravelDetailModal","setIsOpenTravelDetailModal","claimType","setClaimType","billImageData","setBillImageData","fields","key","toggleBillDetail","toggleTravelDetail","scopedSlots","useMemo","sn","_","index","approvers_status","item","getBadgeColor","travel_details","created_at","dateFormate","action","onHandleProgressModel","Icon","navigateToAddUpdate","handleTravelClaimDeleteModal","payload","leaveAction","getLeaveProgressRequest","code","toggleAddUpdateTravelClaim","getTravelRequestData","page","limit","pagination","travelAndClaimAction","getClaimRequest","handleClearTravelStore","selectedTravelClaimDetail","icon","slug","CustomTable","isLoading","totalPages","isHeader","tableStyle","padding","boxShadow","AddUpdateTravelClaim","updateClaimRequest","createClaimRequest","ApproveRejectModal","onApproveReject","params","deleteClaimRequest","isShow","desc","replace","btnRightLoading","btnTextRight","btnTextLeft","ProgressModel","ViewBillDetail","ViewTravelClaimDetail","zIndex","maxWidth","bill_image","height","tempData","travel_type"],"sourceRoot":""}