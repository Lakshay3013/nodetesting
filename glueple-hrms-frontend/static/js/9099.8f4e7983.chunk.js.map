{"version":3,"file":"static/js/9099.8f4e7983.chunk.js","mappings":"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","sources":["components/admin/approvalManagement/AssignedToRenderer.js","components/admin/approvalManagement/CreateUpdateApprovalManagement.js","components/admin/approvalManagement/ApprovalManagementTable.js","components/admin/approvalManagement/ApprovalManagement.js"],"sourcesContent":["import React from 'react'\r\nimport Image from '../../commanComponent/Image'\r\nimport { Label } from '../../commanComponent'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport CustomSelect from '../../commanComponent/CustomSelect'\r\nimport { CustomError } from '../../globalComponents'\r\nconst AssignedToRenderer = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const { assignTo, handleChange, deleteAssignTo, addAssignTo, allRolesData, usersOnRoleData, assignToError,createUpdateHierarchyFormData } = props\r\n    return (\r\n        <>\r\n            {assignTo && assignTo?.map((rule, index) => (\r\n                <div className=\"row m-2 \" key={index}>\r\n                    <div className=\"row m-0 p-0\">\r\n                        <div className=\"row mt-3 col-6\">\r\n                            <div className=\"col-md-12 form-group  \">\r\n                                <Label text={t(\"labels.approvalTo\")} required={true} />\r\n\r\n                                <CustomSelect\r\n                                    data={allRolesData || []}\r\n                                    placeholder={t(\"placeholders.approvalTo\")}\r\n                                    value={rule?.role_id}\r\n                                    handleChange={(selectedOption) => handleChange(selectedOption, \"role_id\", index)}\r\n                                    name=\"role_id\"\r\n                                />\r\n\r\n                                {assignToError[index]?.role_id && (\r\n                                    <CustomError text={assignToError[index]?.role_id} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-3 col-6\">\r\n                            <div className=\"col-md-12 form-group  \">\r\n                                <Label text={t(\"labels.approvalToEmployee\")} />\r\n                                <CustomSelect\r\n                                    data={usersOnRoleData || []}\r\n                                    placeholder={t(\"placeholders.approvalToEmployee\")}\r\n                                    value={rule?.id}\r\n                                    handleChange={(selectedOption) => handleChange(selectedOption, \"id\", index)}\r\n                                    name=\"id\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end  mt-2\">\r\n                        {(createUpdateHierarchyFormData?.approvalLevel !==null && createUpdateHierarchyFormData?.approvalLevel?.value !==\"single\" && assignTo.length - 1 === index) && (\r\n                            <div className=\"me-2\" onClick={() => addAssignTo(index)}>\r\n                                <Image imgSrc={\"images/add-icon3.svg\"} altText={\"\"} width={32} />\r\n                            </div>\r\n                        )}\r\n                        {assignTo.length > 1 && (\r\n                            <div onClick={() => deleteAssignTo(index)}>\r\n                                <Image imgSrc={\"images/deletebg-Icon.svg\"} altText={\"\"} width={32} />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AssignedToRenderer\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustomButton, CustomError } from '../../globalComponents'\r\nimport { createShortName } from '../../../utils/common'\r\nimport CustomSelect from '../../commanComponent/CustomSelect'\r\nimport { CustCheckbox, Input, Label } from '../../commanComponent'\r\nimport { validateSchema } from '../../../utils/ValidationHelper'\r\nimport { addUpdateHierarchySchema } from '../../../utils/ValidationSchema'\r\nimport { useSelector } from 'react-redux'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport AssignedToRenderer from './AssignedToRenderer'\r\n\r\nconst CreateUpdateApprovalManagement = (props) => {\r\n  const { addHierarchyPending, updateHierarchyPending } = useSelector(state => state?.position)\r\n  const { t } = useCustomTranslation()\r\n  const {\r\n    selectedHierarchyData,\r\n    openModel,\r\n    handleOpenClose,\r\n    allDepartments,\r\n    getSubDepartmentByDepartment,\r\n    allDesignations,\r\n    handleCreateUpdateHierarchy,\r\n    allPosition,\r\n    handleGetPositionByDepartmentDesignation,\r\n    allRolesData,\r\n    usersOnRoleData,\r\n    getUserOnRole,\r\n    allEmployeeList,\r\n    filteredDropdownData,\r\n    subDepartmentList,\r\n    categorySubcategoryData\r\n  } = props\r\n  const [errors, setErrors] = useState({})\r\n  const [assignTo, setAssignTo] = useState([{ role_id: null, id: null }])\r\n  const [assignToError, setAssignToError] = useState([])\r\n  const [createUpdateHierarchyFormData, setCreateUpdateHierarchyFormData] = useState({\r\n    department: null,\r\n    designation: null,\r\n    type: null,\r\n    approvalLevel: null,\r\n    position: null,\r\n    autoApproveAssignAfter: '',\r\n    autoApproveAssignTo: null\r\n  })\r\n\r\n  const handleFromChange = (e, fieldName) => {\r\n    const name = fieldName || e.target?.name;\r\n    const { value, type, checked } = e?.target ? e.target : { value: e };\r\n    if (fieldName === \"department\") {\r\n      getSubDepartmentByDepartment(value?.value)\r\n      setCreateUpdateHierarchyFormData(prevState => ({\r\n        ...prevState,\r\n        [\"selectedSubDepartment\"]: null,\r\n        [\"position\"]: null,\r\n      }));\r\n    }\r\n    if (fieldName === \"designation\") {\r\n      handleGetPositionByDepartmentDesignation(value?.value)\r\n      setCreateUpdateHierarchyFormData(prevState => ({\r\n        ...prevState,\r\n        [\"position\"]: null,\r\n      }));\r\n    }\r\n    if (fieldName === \"approvalLevel\") {\r\n      setAssignTo([{ role_id: null, id: null }])\r\n    }\r\n    setCreateUpdateHierarchyFormData(prevState => {\r\n      const updatedState = {\r\n        ...prevState,\r\n        [name]: type === 'checkbox' ? checked : value,\r\n      };\r\n      return updatedState;\r\n    });\r\n\r\n    /* Reset error for this field */\r\n    setErrors(prevErrors => ({\r\n      ...prevErrors,\r\n      [name]: undefined,\r\n    }));\r\n  };\r\n\r\n  const submitCreateUpdateHierarchy = async () => {\r\n    const validationResponse = await validateSchema(addUpdateHierarchySchema, createUpdateHierarchyFormData);\r\n    const assignedTo = handleAssignToValue(assignTo)\r\n    if (validationResponse.isValid) {\r\n      const {\r\n        department,\r\n        designation,\r\n        position,\r\n        type,\r\n        approvalLevel,\r\n        autoApproveAssignAfter,\r\n        autoApproveAssignTo,\r\n        selectedSubDepartment\r\n      } = createUpdateHierarchyFormData\r\n      const params = {\r\n        department_id: department?.value,\r\n        designation_id: designation?.value,\r\n        position_id: position?.value,\r\n        type: type?.category_value,\r\n        approval_level: approvalLevel?.value,\r\n        auto_approve_assign_after: autoApproveAssignAfter,\r\n        auto_approve_assign_to: autoApproveAssignTo?.value,\r\n        assigned_to: assignedTo || [],\r\n        sub_department_id:selectedSubDepartment?.value\r\n      }\r\n      setErrors({})\r\n      handleCreateUpdateHierarchy(params)\r\n    } else {\r\n      setErrors(validationResponse.errors);\r\n    }\r\n  }\r\n\r\n  const handleAssignToValue = (data) => {\r\n    return data\r\n      ? data\r\n        .map((item) => ({\r\n          ...item,\r\n          role_id: item?.role_id?.value || '',\r\n          id: item?.id?.value || '',\r\n        }))\r\n        .filter((item) => item.role_id !== '' || item.id !== '')\r\n      : [];\r\n  };\r\n\r\n  useEffect(() => {\r\n    return (() => {\r\n      resetForm()\r\n    })\r\n  }, [openModel])\r\n\r\n  useEffect(() => {\r\n    if (selectedHierarchyData) {\r\n      setCreateUpdateHierarchyFormData({\r\n        department: { value: selectedHierarchyData?.department_id, label: selectedHierarchyData?.department_name },\r\n        designation: { value: selectedHierarchyData?.designation_id, label: selectedHierarchyData?.designation_name },\r\n        position: { value: selectedHierarchyData?.position_id, label: selectedHierarchyData?.position_name },\r\n        type: { value: selectedHierarchyData?.type, label: selectedHierarchyData?.type },\r\n        approvalLevel: { value: selectedHierarchyData?.approval_level, label: selectedHierarchyData?.approval_level },\r\n        autoApproveAssignAfter: selectedHierarchyData?.auto_approve_assign_after,\r\n        autoApproveAssignTo: { value: selectedHierarchyData?.auto_approve_assign_to, label: selectedHierarchyData?.auto_approve_assign_to_name },\r\n        selectedSubDepartment:{value:selectedHierarchyData?.sub_department_id,label:selectedHierarchyData?.sub_department_name}\r\n      })\r\n    }\r\n  }, [selectedHierarchyData])\r\n\r\n  const resetForm = () => {\r\n    setCreateUpdateHierarchyFormData({\r\n      department: null,\r\n      designation: null,\r\n      position: null,\r\n      type: null,\r\n      approvalLevel: null,\r\n      autoApproveAssignAfter: '',\r\n      autoApproveAssignTo: null,\r\n      selectedSubDepartment:null\r\n    })\r\n    setErrors({})\r\n    setAssignTo([{ role_id: null, id: null }])\r\n  }\r\n\r\n\r\n  /* CRUD Assigned To */\r\n\r\n  const handleChangeAssignTo = (e, field, index, setAssignTo, assignTo) => {\r\n    const newAssign = [...assignTo];\r\n    if (field === \"role_id\") {\r\n      getUserOnRole(e?.value)\r\n      newAssign[index][\"id\"] = null;\r\n    }\r\n    newAssign[index][field || e.target.name] = field ? e : e.target.value;\r\n    setAssignTo(newAssign); // Update the state with the modified assignTo\r\n    setAssignToError((prevErrors) => {\r\n      const updatedErrors = [...prevErrors];\r\n      updatedErrors[index] = null;\r\n      return updatedErrors;\r\n    });\r\n  };\r\n\r\n  const addAssignTo = (index, setAssignTo, assignTo) => {\r\n    const newAssign = [...assignTo];\r\n    if (!(newAssign[index][\"role_id\"])) {\r\n\r\n      setAssignToError((prevErrors) => {\r\n        const updatedErrors = [...prevErrors];\r\n        updatedErrors[index] = { role_id: \"Role ID is required\" };\r\n        return updatedErrors;\r\n      });\r\n\r\n    } else {\r\n      setAssignTo([...assignTo, { role_id: null, id: null }]);\r\n    }\r\n  };\r\n\r\n  const deleteAssignTo = (index, setAssignTo, assignTo) => {\r\n    const updatedRules = assignTo.filter((_, i) => i !== index);\r\n    setAssignTo(updatedRules);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n        tabIndex={-1}\r\n        style={{\r\n          visibility: openModel ? 'visible' : 'hidden',\r\n          width: \"800px\"\r\n        }}\r\n        id=\"interviewDetail\"\r\n      >\r\n        <div className=\"offcanvas-header\">\r\n          <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">\r\n            {selectedHierarchyData ? t(\"headings.updateHierarchy\") : t(\"headings.createHierarchy\")}\r\n          </h5>\r\n          <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n            onClick={() => handleOpenClose()}\r\n          />\r\n        </div>\r\n\r\n\r\n        <div className=\"offcanvas-body myRequest \">\r\n          <div className=\"formPanel\">\r\n            <div className=\"row\">\r\n             \r\n              <div className=\"col-md-6\">\r\n              <Label text={t(\"labels.selectDepartment\")} required={true} />\r\n                <div className=\"form-group mb-3\">\r\n                  <CustomSelect\r\n                    data={allDepartments}\r\n                    placeholder={t(\"placeholders.selectDepartment\")}\r\n                    value={createUpdateHierarchyFormData?.department || ''}\r\n                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"department\")}\r\n                    name=\"department\"\r\n                  />\r\n                  {errors?.department && (\r\n                    <CustomError text={errors.department} />\r\n                  )}\r\n                </div>\r\n              </div>\r\n             \r\n              <div className=\"col-md-6\">\r\n              <Label text={t(\"labels.subDepartment\")} />\r\n                <div className=\"form-group mb-3\">\r\n                  <CustomSelect\r\n                    data={subDepartmentList}\r\n                    placeholder={t(\"placeholders.selectedSubDepartment\")}\r\n                    value={createUpdateHierarchyFormData?.selectedSubDepartment || ''}\r\n                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"selectedSubDepartment\")}\r\n                    name=\"selectedSubDepartment\"\r\n                  />\r\n                  {errors?.selectedSubDepartment && (\r\n                    <CustomError text={errors.selectedSubDepartment} />\r\n                  )}\r\n                  \r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n              <Label text={t(\"labels.selectDesignation\")} />\r\n                <div className=\"form-group mb-3\">\r\n                  <CustomSelect\r\n                    data={allDesignations}\r\n                    placeholder={t(\"placeholders.selectDesignation\")}\r\n                    value={createUpdateHierarchyFormData?.designation || ''}\r\n                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"designation\")}\r\n                    name=\"designation\"\r\n                  />\r\n                  {/* {errors?.designation && (\r\n                    <CustomError text={errors.designation} />\r\n                  )} */}\r\n                </div>\r\n              </div>\r\n        \r\n              <div className=\"col-md-6\">\r\n              <Label text={t(\"labels.positionName\")} />\r\n                <div className=\"form-group mb-3\">\r\n                  <CustomSelect\r\n                    data={allPosition || []}\r\n                    placeholder=\"Select Position\"\r\n                    value={createUpdateHierarchyFormData?.position || ''}\r\n                    handleChange={(selectedOption) => handleFromChange(selectedOption, 'position')}\r\n                    name=\"position\"\r\n                  />\r\n                  {/* {errors.position_id &&\r\n                    <CustomError\r\n                      text={errors.position_id}\r\n                    />\r\n                  } */}\r\n                </div>\r\n              </div>\r\n\r\n       \r\n              <div className=\"col-md-6\">\r\n              <Label text={t(\"labels.type\")} required={true} />\r\n                <div className=\"form-group mb-3\">\r\n                  <CustomSelect\r\n                    data={filteredDropdownData?.approval_hierarchy || []}\r\n                    placeholder={t(\"placeholders.type\")}\r\n                    value={createUpdateHierarchyFormData?.type || ''}\r\n                    handleChange={(selectedOption) => handleFromChange(selectedOption, 'type')}\r\n                    name=\"type\"\r\n                  />\r\n                  {errors.type &&\r\n                    <CustomError\r\n                      text={errors.type}\r\n                    />\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n        \r\n              <div className=\"col-md-6\">\r\n              <Label text={t(\"labels.autoApproveAssignAfter\")} required={true} />\r\n                <div className=\"form-group mb-3\">\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder={t(\"placeholders.autoApproveAssignAfter\")}\r\n                    value={createUpdateHierarchyFormData?.autoApproveAssignAfter}\r\n                    name=\"autoApproveAssignAfter\"\r\n                    onChange={(e) => handleFromChange(e)}\r\n                  />\r\n                  {errors?.autoApproveAssignAfter && (\r\n                    <CustomError text={errors.autoApproveAssignAfter} />\r\n                  )}\r\n                </div>\r\n              </div>\r\n       \r\n              <div className=\"col-md-6\">\r\n              <Label text={t(\"labels.autoApproveAssignTo\")} required={true} />\r\n                <div className=\"form-group mb-3\">\r\n                  <CustomSelect\r\n                    data={allEmployeeList || []}\r\n                    placeholder={t(\"placeholders.autoApproveAssignTo\")}\r\n                    value={createUpdateHierarchyFormData?.autoApproveAssignTo || ''}\r\n                    handleChange={(selectedOption) => handleFromChange(selectedOption, 'autoApproveAssignTo')}\r\n                    name=\"autoApproveAssignTo\"\r\n                  />\r\n                  {errors.autoApproveAssignTo &&\r\n                    <CustomError\r\n                      text={errors.autoApproveAssignTo}\r\n                    />\r\n                  }\r\n                </div>\r\n              </div>\r\n       \r\n              <div className=\"col-md-6\">\r\n              <Label text={t(\"labels.approvalLevel\")} required={true} />\r\n                <div className=\"form-group mb-3\">\r\n                  <CustomSelect\r\n                    data={categorySubcategoryData?.approvalLevel || []}\r\n                    placeholder={t(\"placeholders.approvalLevel\")}\r\n                    value={createUpdateHierarchyFormData?.approvalLevel || ''}\r\n                    handleChange={(selectedOption) => handleFromChange(selectedOption, 'approvalLevel')}\r\n                    name=\"approvalLevel\"\r\n                  />\r\n                  {errors.approvalLevel &&\r\n                    <CustomError\r\n                      text={errors.approvalLevel}\r\n                    />\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12 form-group mb-3\">\r\n              <Label text={t(\"labels.assignedTo\")} required={true} />\r\n\r\n              <AssignedToRenderer\r\n                assignTo={assignTo}\r\n                addAssignTo={(index) => addAssignTo(index, setAssignTo, assignTo)}\r\n                deleteAssignTo={(index) => deleteAssignTo(index, setAssignTo, assignTo)}\r\n                handleChange={(e, field, index) => handleChangeAssignTo(e, field, index, setAssignTo, assignTo)}\r\n                allRolesData={allRolesData}\r\n                usersOnRoleData={usersOnRoleData}\r\n                assignToError={assignToError}\r\n                createUpdateHierarchyFormData={createUpdateHierarchyFormData}\r\n\r\n              />\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"offcanvas-footer\">\r\n          <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n            <CustomButton\r\n              text={selectedHierarchyData ? t(\"btns.update\") : t(\"btns.submit\")}\r\n              classNames={\"btn btn-org-gradient\"}\r\n              handleClick={() => submitCreateUpdateHierarchy()}\r\n              isLoading={selectedHierarchyData ? updateHierarchyPending : addHierarchyPending}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateUpdateApprovalManagement","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { getBadgeColor, isPermission } from '../../../utils/common'\r\nimport moment from 'moment'\r\nimport { CustomButton } from '../../globalComponents'\r\nimport { CustomTable } from '../../reuseableComponents'\r\nimport { Icon } from '../../commanComponent'\r\n\r\nconst ApprovalManagementTable = (props) => {\r\n\r\n  const {t}=useCustomTranslation()\r\n  const {\r\n      allHierarchy,\r\n      isLoading,\r\n      toggleCreateUpdateHierarchyModal,\r\n      handleHierarchyDeleteModal,\r\n      currentPage,\r\n      setCurrentPage\r\n      \r\n  } = props\r\n  const [hierarchyList, setHierarchyList] = useState(allHierarchy)\r\n  const updateHierarchyPer = isPermission(\"update_hierarchy\")\r\n  const deleteHierarchyPer = isPermission(\"delete_hierarchy\")\r\n\r\n\r\n  const handleUpdateHierarchy = (data) => {\r\n      toggleCreateUpdateHierarchyModal(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n      setHierarchyList(allHierarchy)\r\n  }, [allHierarchy])\r\n\r\n\r\n  const scopedSlots = useMemo(() => ({\r\n      sn: (_, index) => (\r\n          <span>{index+1}</span>\r\n      ),\r\n      \r\n      created_at: item => moment(item.created_at).format(\"DD-MM-YYYY\"),\r\n      action: item => (\r\n        <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                   {updateHierarchyPer && <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => handleUpdateHierarchy(item)}\r\n                        >\r\n                            <Icon className={\"bi bi-pencil-square me-1\"} />Update</span>\r\n                    </li>}\r\n                     {deleteHierarchyPer &&<li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => handleHierarchyDeleteModal(item?._id||item?.id)}\r\n                        >\r\n                            <Icon className={\"bi bi-trash me-1\"} />Delete</span>\r\n                    </li>}\r\n                </ul>\r\n            </div>\r\n         \r\n      )\r\n  }), [toggleCreateUpdateHierarchyModal]);\r\n\r\n\r\n  const fields = [\r\n      { key: 'sn', label: 'S.N' },\r\n      { key: 'department_name', label: 'Departments' },\r\n      { key: 'designation_name', label: 'Designations' },\r\n      { key: 'type', label: 'Type' },\r\n      { key: 'approval_level', label: 'Approval Level' },\r\n      { key: 'created_at', label: 'Created Date' },\r\n     ((deleteHierarchyPer||updateHierarchyPer) &&{ key: 'action', label: 'Action' })\r\n  ];\r\n  return (\r\n    <CustomTable\r\n    data={hierarchyList?.data}\r\n    fields={fields}\r\n    isLoading={isLoading}\r\n    pagination={true}\r\n    currentPage={currentPage}\r\n    setCurrentPage={setCurrentPage}\r\n    totalPages={hierarchyList?.totalPages}\r\n    tableName={\"Hierarchy\"}\r\n    // onSearch={handleSearch}\r\n    scopedSlots={scopedSlots}\r\n/>\r\n  )\r\n}\r\n\r\nexport default ApprovalManagementTable","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CreateUpdateApprovalManagement from './CreateUpdateApprovalManagement';\r\nimport ApprovalManagementTable from './ApprovalManagementTable';\r\nimport ApproveRejectModal from '../../modal/ApproveRejectModal';\r\nimport { pagination } from '../../../utils/Constants.config';\r\nimport { useCustomTranslation } from '../../../translation';\r\nimport { ApprovalManagementActions, commonActions, departmentAction, designationAction, dropdownMasterActions, employeeActions, positionActions, rolesActions } from '../../../core/resource/actions';\r\nimport { CustomButton } from '../../globalComponents';\r\nimport { setFilterDropdownData } from '../../../utils/common';\r\n\r\nconst ApprovalManagement = () => {\r\n  const dispatch = useDispatch()\r\n  const { t } = useCustomTranslation();\r\n\r\n  const {\r\n    addHierarchyPending,\r\n    addHierarchyRes,\r\n    addHierarchyError,\r\n\r\n    getAllHierarchyPending,\r\n    getAllHierarchyRes,\r\n    getAllHierarchyError,\r\n\r\n    updateHierarchyPending,\r\n    updateHierarchyRes,\r\n    updateHierarchyError,\r\n\r\n    deleteHierarchyPending,\r\n    deleteHierarchyRes,\r\n    deleteHierarchyError,\r\n  } = useSelector(state => state.approvalManagement)\r\n  const {\r\n    getDepartmentListRes,\r\n    getDepartmentListError,\r\n    getDepartmentListPending,\r\n\r\n    getSubDepartmentByDepartmentRes,\r\n    getSubDepartmentByDepartmentError,\r\n    getSubDepartmentByDepartmentPending,\r\n  } = useSelector(state => state.department)\r\n  const {\r\n    getDesignationsByDepartmentRes,\r\n    getDesignationsByDepartmentPending,\r\n    getDesignationsByDepartmentError\r\n  } = useSelector(state => state.designation)\r\n  const {\r\n    getPositionsByDepartmentDesignationError,\r\n    getPositionsByDepartmentDesignationPending,\r\n    getPositionsByDepartmentDesignationRes\r\n  } = useSelector(state => state.position)\r\n\r\n  const {\r\n    getConstantByCategorySubcategoryPending,\r\n    getConstantByCategorySubcategoryRes,\r\n    getConstantByCategorySubcategoryError,\r\n  } = useSelector(state => state.common)\r\n\r\n  const {\r\n    getAllRolesPending,\r\n    getAllRolesRes,\r\n    getAllRolesError,\r\n  } = useSelector(state => state.roles)\r\n\r\n  const {\r\n    getUserOnRolePending,\r\n    getUserOnRoleRes,\r\n    getUserOnRoleError,\r\n\r\n    getAllEmployeeRes,\r\n    getAllEmployeeError,\r\n    getAllEmployeePending\r\n\r\n  } = useSelector(state => state.employee)\r\n\r\n  const {\r\n    getFilteredDropdownDataError,\r\n    getFilteredDropdownDataRes,\r\n    getFilteredDropdownDataPending\r\n  } = useSelector(state => state.dropdownMaster)\r\n\r\n  const [isOpenCreateUpdateHierarchy, setIsOpenCreateUpdateHierarchy] = useState(false)\r\n  const [selectedHierarchyData, setSelectedHierarchyData] = useState('')\r\n  const [allDepartments, setAllDepartments] = useState([])\r\n  const [allDesignations, setAllDesignations] = useState([])\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [allHierarchy, setAllHierarchy] = useState({})\r\n  const [isShowDeleteHierarchyModal, setIsShowDeleteHierarchyModal] = useState(false)\r\n  const [deleteHierarchyId, setDeleteHierarchyId] = useState('')\r\n  const [departmentId, setDepartmentId] = useState('')\r\n  const [allPosition, setAllPosition] = useState([])\r\n  const [categorySubcategoryData, setCategorySubcategoryData] = useState([])\r\n  const [allRolesData, setAllRolesData] = useState([])\r\n  const [usersOnRoleData, setUsersOnRoleData] = useState([])\r\n  const [allEmployeeList, setAllEmployeeList] = useState([])\r\n  const [filteredDropdownData, setFilteredDropdownData] = useState('')\r\n   const [subDepartmentList, setSubDepartmentList] = useState('')\r\n\r\n\r\n  useEffect(() => {\r\n    getAllDepartments()\r\n    getConstantByCategorySubcategory()\r\n    getAllEmployee()\r\n    getAllRoles()\r\n    getDropdownFilteredData()\r\n    handleDesignationByDepartment()\r\n  }, [])\r\n\r\n  /* Create Update Hierarchy */\r\n  const toggleCreateUpdateHierarchyModal = (data) => {\r\n    if (!data) {\r\n      setSelectedHierarchyData('')\r\n    } else {\r\n      setSelectedHierarchyData(data)\r\n    }\r\n    setIsOpenCreateUpdateHierarchy(!isOpenCreateUpdateHierarchy)\r\n  }\r\n\r\n  const handleCreateUpdateHierarchy = (params) => {\r\n    if (selectedHierarchyData) {\r\n      params['_id'] = selectedHierarchyData?._id || selectedHierarchyData?.id\r\n      dispatch(ApprovalManagementActions.updateHierarchyRequest(params));\r\n    }\r\n    else {\r\n      dispatch(ApprovalManagementActions.addHierarchyRequest(params));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!addHierarchyPending) {\r\n      if (addHierarchyError) {\r\n        dispatch(ApprovalManagementActions.handleClearHierarchyStore(\"HANDLE_CLEAR_ADD_HIERARCHY_STORE\"))\r\n        return;\r\n      }\r\n      if (addHierarchyRes) {\r\n        if (addHierarchyRes?.code === 200) {\r\n          dispatch(ApprovalManagementActions.handleClearHierarchyStore(\"HANDLE_CLEAR_ADD_HIERARCHY_STORE\"))\r\n          getAllHierarchy()\r\n          setIsOpenCreateUpdateHierarchy(!isOpenCreateUpdateHierarchy)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    addHierarchyRes,\r\n    addHierarchyError,\r\n    addHierarchyPending\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!updateHierarchyPending) {\r\n      if (updateHierarchyError) {\r\n        dispatch(ApprovalManagementActions.handleClearHierarchyStore(\"HANDLE_CLEAR_UPDATE_HIERARCHY_STORE\"))\r\n        return;\r\n      }\r\n      if (updateHierarchyRes) {\r\n        if (updateHierarchyRes?.code === 200) {\r\n          dispatch(ApprovalManagementActions.handleClearHierarchyStore(\"HANDLE_CLEAR_UPDATE_HIERARCHY_STORE\"))\r\n          getAllHierarchy()\r\n          setIsOpenCreateUpdateHierarchy(!isOpenCreateUpdateHierarchy)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    updateHierarchyRes,\r\n    updateHierarchyError,\r\n    updateHierarchyPending\r\n  ]);\r\n\r\n  /* Get All Departments */\r\n  const getAllDepartments = () => {\r\n    const departmentResposnse = getDepartmentListRes?.data\r\n    if (!departmentResposnse?.length) {\r\n      dispatch(departmentAction.getDepartmentListRequest());\r\n    } else {\r\n      setAllDepartments(departmentResposnse)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getDepartmentListPending) {\r\n      if (getDepartmentListError) {\r\n        return;\r\n      }\r\n      if (getDepartmentListRes) {\r\n        if (getDepartmentListRes?.code === 200) {\r\n          const departmentResponse = getDepartmentListRes?.data\r\n          setAllDepartments(departmentResponse)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getDepartmentListRes,\r\n    getDepartmentListError,\r\n    getDepartmentListPending\r\n  ]);\r\n\r\n  const handleDesignationByDepartment = () => {\r\n    dispatch(designationAction.getDesignationsByDepartmentRequest());\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getDesignationsByDepartmentPending) {\r\n      if (getDesignationsByDepartmentError) {\r\n        return;\r\n      }\r\n      if (getDesignationsByDepartmentRes) {\r\n        if (getDesignationsByDepartmentRes?.code === 200) {\r\n          const designationResponse = getDesignationsByDepartmentRes?.data\r\n          setAllDesignations(designationResponse)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getDesignationsByDepartmentRes,\r\n    getDesignationsByDepartmentError,\r\n    getDesignationsByDepartmentPending\r\n  ]);\r\n\r\n\r\n  /* Get Position by Designation api calling */\r\n  const handleGetPositionByDepartmentDesignation = (id) => {\r\n    const params = {\r\n      department_id: departmentId,\r\n      designation_id: id\r\n    }\r\n    dispatch(positionActions.getPositionsByDepartmentDesignationRequest(params))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getPositionsByDepartmentDesignationPending) {\r\n      if (getPositionsByDepartmentDesignationError) {\r\n        return;\r\n      }\r\n      if (getPositionsByDepartmentDesignationRes) {\r\n        if (getPositionsByDepartmentDesignationRes?.code === 200) {\r\n          setAllPosition(getPositionsByDepartmentDesignationRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getPositionsByDepartmentDesignationRes,\r\n    getPositionsByDepartmentDesignationError,\r\n    getPositionsByDepartmentDesignationPending\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    getAllHierarchy()\r\n  }, [currentPage])\r\n\r\n  /* Get All Hierarchy Data */\r\n  const getAllHierarchy = () => {\r\n    const params = {\r\n      page: currentPage,\r\n      limit: pagination.limit,\r\n    }\r\n    dispatch(ApprovalManagementActions.getAllHierarchyRequest(params));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getAllHierarchyPending) {\r\n      if (getAllHierarchyError) {\r\n        return;\r\n      }\r\n      if (getAllHierarchyRes) {\r\n        if (getAllHierarchyRes?.code === 200) {\r\n          setAllHierarchy(getAllHierarchyRes?.data)\r\n\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllHierarchyRes,\r\n    getAllHierarchyError,\r\n    getAllHierarchyPending\r\n  ]);\r\n\r\n\r\n  /*  Delete Hierarchy   */\r\n  const handleHierarchyDeleteModal = (id) => {\r\n    if (id) {\r\n      setDeleteHierarchyId(id)\r\n    }\r\n    setIsShowDeleteHierarchyModal(!isShowDeleteHierarchyModal)\r\n  }\r\n\r\n  const handleDeleteHierarchy = (type) => {\r\n    if (type) {\r\n      const params = {\r\n        _id: deleteHierarchyId\r\n      }\r\n\r\n      dispatch(ApprovalManagementActions?.deleteHierarchyRequest(params))\r\n\r\n    } else {\r\n      handleHierarchyDeleteModal()\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!deleteHierarchyPending) {\r\n      if (deleteHierarchyError) {\r\n        dispatch(ApprovalManagementActions.handleClearHierarchyStore(\"HANDLE_CLEAR_DELETE_HIERARCHY_STORE\"))\r\n        return;\r\n      }\r\n      if (deleteHierarchyRes) {\r\n        if (deleteHierarchyRes?.code === 200) {\r\n          handleHierarchyDeleteModal()\r\n          if (currentPage > 1 && allHierarchy?.data?.length === 1) {\r\n            setCurrentPage((pre => pre -= 1))\r\n          } else {\r\n            getAllHierarchy()\r\n          }\r\n          dispatch(ApprovalManagementActions.handleClearHierarchyStore(\"HANDLE_CLEAR_DELETE_HIERARCHY_STORE\"))\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    deleteHierarchyRes,\r\n    deleteHierarchyError,\r\n    deleteHierarchyPending\r\n  ]);\r\n\r\n  /* Get Constant By Category Subcategory */\r\n  const getConstantByCategorySubcategory = () => {\r\n    const payload = {\r\n      category: \"approvalHierarchyConstant\",\r\n      subcategory: ''\r\n    }\r\n    dispatch(commonActions.getConstantByCategorySubcategoryRequest(payload))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getConstantByCategorySubcategoryPending) {\r\n      if (getConstantByCategorySubcategoryError) {\r\n\r\n        return;\r\n      }\r\n      if (getConstantByCategorySubcategoryRes) {\r\n        if (getConstantByCategorySubcategoryRes?.code === 200) {\r\n          setCategorySubcategoryData(getConstantByCategorySubcategoryRes?.data)\r\n\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getConstantByCategorySubcategoryRes,\r\n    getConstantByCategorySubcategoryError,\r\n    getConstantByCategorySubcategoryPending\r\n  ]);\r\n\r\n\r\n  /* Get All Roles  */\r\n  const getAllRoles = () => {\r\n    dispatch(rolesActions.getAllRolesRequest())\r\n  }\r\n  useEffect(() => {\r\n    if (!getAllRolesPending) {\r\n      if (getAllRolesError) {\r\n        return;\r\n      }\r\n      if (getAllRolesRes) {\r\n        if (getAllRolesRes?.code === 200) {\r\n          setAllRolesData(getAllRolesRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllRolesRes,\r\n    getAllRolesError,\r\n    getAllRolesPending\r\n  ]);\r\n\r\n  /* Get User On Role  */\r\n  const getUserOnRole = (roleId) => {\r\n    const payload = {\r\n      role_id: roleId\r\n    }\r\n    dispatch(employeeActions.getUserOnRoleRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!getUserOnRolePending) {\r\n      if (getUserOnRoleError) {\r\n        return;\r\n      }\r\n      if (getUserOnRoleRes) {\r\n        if (getUserOnRoleRes?.code === 200) {\r\n          setUsersOnRoleData(getUserOnRoleRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getUserOnRoleRes,\r\n    getUserOnRoleError,\r\n    getUserOnRolePending\r\n  ]);\r\n\r\n  /* Get All Employee List*/\r\n  const getAllEmployee = () => {\r\n    dispatch(employeeActions.getAllEmployeeRequest())\r\n  }\r\n  useEffect(() => {\r\n    if (!getAllEmployeePending) {\r\n      if (getAllEmployeeError) {\r\n        return;\r\n      }\r\n      if (getAllEmployeeRes) {\r\n        if (getAllEmployeeRes?.code === 200) {\r\n\r\n          setAllEmployeeList(getAllEmployeeRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllEmployeeRes,\r\n    getAllEmployeeError,\r\n    getAllEmployeePending\r\n  ]);\r\n\r\n\r\n  /* Dropdown Master Filter */\r\n  const getDropdownFilteredData = () => {\r\n    const categories = ['approval_hierarchy',\"approval_level\"]\r\n    let params = { category: categories }\r\n    dispatch(dropdownMasterActions.getFilteredDropdownDataRequest(params))\r\n\r\n  }\r\n  useEffect(() => {\r\n    if (!getFilteredDropdownDataPending) {\r\n      if (getFilteredDropdownDataError) {\r\n        return;\r\n      }\r\n      if (getFilteredDropdownDataRes) {\r\n        if (getFilteredDropdownDataRes?.code === 200) {\r\n          const updateData = setFilterDropdownData(getFilteredDropdownDataRes?.data?.data)\r\n          setFilteredDropdownData(updateData);\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getFilteredDropdownDataRes,\r\n    getFilteredDropdownDataError,\r\n    getFilteredDropdownDataPending\r\n  ]);\r\n\r\n  /* sub department */\r\n\r\n  const getSubDepartmentByDepartment = (id) => {\r\n          const payload = {\r\n              department_id: id\r\n          }\r\n          setDepartmentId(id)\r\n          dispatch(departmentAction.getSubDepartmentByDepartmentRequest(payload))\r\n      }\r\n  \r\n      useEffect(() => {\r\n          if (!getSubDepartmentByDepartmentPending) {\r\n              if (getSubDepartmentByDepartmentError) {\r\n                  return;\r\n              }\r\n              if (getSubDepartmentByDepartmentRes) {\r\n                  if (getSubDepartmentByDepartmentRes?.code === 200) {\r\n                      setSubDepartmentList(getSubDepartmentByDepartmentRes?.data)\r\n                  }\r\n              }\r\n          }\r\n      }, [\r\n          getSubDepartmentByDepartmentRes,\r\n          getSubDepartmentByDepartmentError,\r\n          getSubDepartmentByDepartmentPending\r\n      ]);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex  justify-content-end \">\r\n        <CustomButton\r\n          classNames={\"btn btn-primary gradientBg\"}\r\n          handleClick={() => toggleCreateUpdateHierarchyModal()}\r\n          text={t(\"btns.createNewHierarchy\")}\r\n          slug={\"create_hierarchy\"}\r\n        />\r\n      </div>\r\n      {isOpenCreateUpdateHierarchy &&<CreateUpdateApprovalManagement\r\n        openModel={isOpenCreateUpdateHierarchy}\r\n        handleOpenClose={toggleCreateUpdateHierarchyModal}\r\n        handleCreateUpdateHierarchy={handleCreateUpdateHierarchy}\r\n        selectedHierarchyData={selectedHierarchyData}\r\n        allDepartments={allDepartments}\r\n        getSubDepartmentByDepartment={getSubDepartmentByDepartment}\r\n        allDesignations={allDesignations}\r\n        handleGetPositionByDepartmentDesignation={handleGetPositionByDepartmentDesignation}\r\n        allPosition={allPosition}\r\n        categorySubcategoryData={categorySubcategoryData}\r\n        allRolesData={allRolesData}\r\n        usersOnRoleData={usersOnRoleData}\r\n        getUserOnRole={getUserOnRole}\r\n        allEmployeeList={allEmployeeList}\r\n        filteredDropdownData={filteredDropdownData}\r\n        subDepartmentList={subDepartmentList}\r\n      />}\r\n      <ApprovalManagementTable\r\n        toggleCreateUpdateHierarchyModal={toggleCreateUpdateHierarchyModal}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        allHierarchy={allHierarchy}\r\n        handleHierarchyDeleteModal={handleHierarchyDeleteModal}\r\n        isLoading={getAllHierarchyPending}\r\n\r\n      />\r\n\r\n      {isShowDeleteHierarchyModal && (\r\n        <ApproveRejectModal\r\n          onApproveReject={handleDeleteHierarchy}\r\n          isShow={isShowDeleteHierarchyModal}\r\n          desc={t(\"alerts.deletePopup.desc\").replace('$1', \"Hierarchy\")}\r\n          btnRightLoading={deleteHierarchyPending}\r\n          btnTextRight={t(\"btns.delete\")}\r\n          btnTextLeft={t(\"btns.cancel\")}\r\n\r\n        />)\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ApprovalManagement"],"names":["props","t","useCustomTranslation","assignTo","handleChange","deleteAssignTo","addAssignTo","allRolesData","usersOnRoleData","assignToError","createUpdateHierarchyFormData","_jsx","_Fragment","children","map","rule","index","_assignToError$index","_assignToError$index2","_createUpdateHierarch","_jsxs","className","Label","text","required","CustomSelect","data","placeholder","value","role_id","selectedOption","name","CustomError","id","approvalLevel","length","onClick","Image","imgSrc","altText","width","addHierarchyPending","updateHierarchyPending","useSelector","state","position","selectedHierarchyData","openModel","handleOpenClose","allDepartments","getSubDepartmentByDepartment","allDesignations","handleCreateUpdateHierarchy","allPosition","handleGetPositionByDepartmentDesignation","getUserOnRole","allEmployeeList","filteredDropdownData","subDepartmentList","categorySubcategoryData","errors","setErrors","useState","setAssignTo","setAssignToError","setCreateUpdateHierarchyFormData","department","designation","type","autoApproveAssignAfter","autoApproveAssignTo","handleFromChange","e","fieldName","_e$target","target","checked","prevState","prevErrors","undefined","handleAssignToValue","item","_item$role_id","_item$id","filter","useEffect","resetForm","department_id","label","department_name","designation_id","designation_name","position_id","position_name","approval_level","auto_approve_assign_after","auto_approve_assign_to","auto_approve_assign_to_name","selectedSubDepartment","sub_department_id","sub_department_name","tabIndex","style","visibility","approval_hierarchy","Input","onChange","AssignedToRenderer","updatedErrors","_","i","field","handleChangeAssignTo","newAssign","CustomButton","classNames","handleClick","async","validationResponse","validateSchema","addUpdateHierarchySchema","assignedTo","isValid","params","category_value","assigned_to","submitCreateUpdateHierarchy","isLoading","allHierarchy","toggleCreateUpdateHierarchyModal","handleHierarchyDeleteModal","currentPage","setCurrentPage","hierarchyList","setHierarchyList","updateHierarchyPer","isPermission","deleteHierarchyPer","scopedSlots","useMemo","sn","created_at","moment","format","action","Icon","_id","fields","key","CustomTable","pagination","totalPages","tableName","ApprovalManagement","dispatch","useDispatch","addHierarchyRes","addHierarchyError","getAllHierarchyPending","getAllHierarchyRes","getAllHierarchyError","updateHierarchyRes","updateHierarchyError","deleteHierarchyPending","deleteHierarchyRes","deleteHierarchyError","approvalManagement","getDepartmentListRes","getDepartmentListError","getDepartmentListPending","getSubDepartmentByDepartmentRes","getSubDepartmentByDepartmentError","getSubDepartmentByDepartmentPending","getDesignationsByDepartmentRes","getDesignationsByDepartmentPending","getDesignationsByDepartmentError","getPositionsByDepartmentDesignationError","getPositionsByDepartmentDesignationPending","getPositionsByDepartmentDesignationRes","getConstantByCategorySubcategoryPending","getConstantByCategorySubcategoryRes","getConstantByCategorySubcategoryError","common","getAllRolesPending","getAllRolesRes","getAllRolesError","roles","getUserOnRolePending","getUserOnRoleRes","getUserOnRoleError","getAllEmployeeRes","getAllEmployeeError","getAllEmployeePending","employee","getFilteredDropdownDataError","getFilteredDropdownDataRes","getFilteredDropdownDataPending","dropdownMaster","isOpenCreateUpdateHierarchy","setIsOpenCreateUpdateHierarchy","setSelectedHierarchyData","setAllDepartments","setAllDesignations","setAllHierarchy","isShowDeleteHierarchyModal","setIsShowDeleteHierarchyModal","deleteHierarchyId","setDeleteHierarchyId","departmentId","setDepartmentId","setAllPosition","setCategorySubcategoryData","setAllRolesData","setUsersOnRoleData","setAllEmployeeList","setFilteredDropdownData","setSubDepartmentList","getAllDepartments","getConstantByCategorySubcategory","getAllEmployee","getAllRoles","getDropdownFilteredData","handleDesignationByDepartment","ApprovalManagementActions","handleClearHierarchyStore","code","getAllHierarchy","departmentResposnse","departmentAction","getDepartmentListRequest","departmentResponse","designationAction","getDesignationsByDepartmentRequest","designationResponse","page","limit","getAllHierarchyRequest","_allHierarchy$data","pre","commonActions","getConstantByCategorySubcategoryRequest","category","subcategory","rolesActions","getAllRolesRequest","employeeActions","getAllEmployeeRequest","dropdownMasterActions","getFilteredDropdownDataRequest","_getFilteredDropdownD","updateData","setFilterDropdownData","slug","CreateUpdateApprovalManagement","updateHierarchyRequest","addHierarchyRequest","payload","getSubDepartmentByDepartmentRequest","positionActions","getPositionsByDepartmentDesignationRequest","roleId","getUserOnRoleRequest","ApprovalManagementTable","ApproveRejectModal","onApproveReject","deleteHierarchyRequest","isShow","desc","replace","btnRightLoading","btnTextRight","btnTextLeft"],"sourceRoot":""}