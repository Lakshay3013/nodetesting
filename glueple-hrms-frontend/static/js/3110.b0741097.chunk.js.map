{"version":3,"file":"static/js/3110.b0741097.chunk.js","mappings":"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","sources":["components/commanComponent/BackIcon.js","components/payrollAdmin/employee/investment/ITDeclaration.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst BackIcon = () => {\r\n    return (\r\n        <div >\r\n            <svg\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                x={0}\r\n                y={0}\r\n                viewBox=\"0 0 512 512\"\r\n                xmlSpace=\"preserve\"\r\n                className=\"icon icon-xlg me-2\"\r\n                style={{\r\n                    height: \"23px\",\r\n                    width: \"23px\",\r\n                    cursor: \"pointer\",\r\n                }}\r\n            >\r\n                <circle id=\"Oval-3\" opacity=\".1\" fill=\"#2B76D2\" cx={256} cy={256} r={256} />\r\n                <path\r\n                    fill=\"#2B76D2\"\r\n                    d=\"M277.3 362.7c-5.3 0-10.6-2-14.7-5.9l-85.3-81.5c-4.1-3.9-6.5-9.3-6.6-15-.1-5.7 2-11.1 5.9-15.2l85.3-89.1c8.1-8.5 21.7-8.8 30.2-.7 8.5 8.1 8.8 21.6.7 30.2l-70.6 73.7 69.9 66.8c8.5 8.1 8.8 21.6.7 30.1-4.2 4.4-9.8 6.6-15.5 6.6z\"\r\n                />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackIcon\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BackIcon from '../../../commanComponent/BackIcon'\r\nimport { Link } from 'react-router-dom'\r\nimport { CustCheckbox, CustomStrong, CustRadio, Icon, Input, Label, Textarea } from '../../../commanComponent'\r\nimport { CustomButton, CustomError, CustomSpinner } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { getInputPrefix } from '../../../../utils/common'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { payrollActions } from '../../../../core/resource/actions'\r\nimport BlankTableError from '../../../commanComponent/BlankTableError'\r\n\r\nconst ITDeclaration = () => {\r\n    const { t } = useCustomTranslation()\r\n    const dispatch = useDispatch()\r\n    const {\r\n        selectedEmployeeData,\r\n\r\n        addEmployeeInvestmentPending,\r\n        addEmployeeInvestmentRes,\r\n        addEmployeeInvestmentError,\r\n\r\n        updateEmployeeInvestmentPending,\r\n        updateEmployeeInvestmentRes,\r\n        updateEmployeeInvestmentError,\r\n\r\n        getEmployeeInvestmentPending,\r\n        getEmployeeInvestmentRes,\r\n        getEmployeeInvestmentError,\r\n\r\n        getAllInvestmentCategoryDetailsPending,\r\n        getAllInvestmentCategoryDetailsRes,\r\n        getAllInvestmentCategoryDetailsError,\r\n\r\n    } = useSelector(state => state.payroll)\r\n    const [itData, setItData] = useState('')\r\n    const [taxRegimeType, setTaxRegimeType] = useState('is_eligible_for_old')\r\n    const [itDeclarationData, setItDeclarationData] = useState('')\r\n    const [isCollapsedFields, setIsCollapsedFields] = useState([])\r\n\r\n    const handleCheckboxChange = (e, item) => {\r\n        if (e.target.checked) {\r\n            setIsCollapsedFields((prev) => [...prev, item._id]);\r\n        }\r\n        else {\r\n            setIsCollapsedFields((pre) => pre.filter((collapsedItem) => collapsedItem !== item?._id))\r\n            let updatedData = []\r\n            if (item?.input_type === \"dropdown\") {\r\n                updatedData = itData?.map((invest) =>\r\n                    invest?._id === item?._id\r\n                        ? {\r\n                            ...invest,\r\n                            ['data']: [{ selected_value: '', input_value: '' }],\r\n                        }\r\n                        : invest\r\n                );\r\n            } else {\r\n                updatedData = itData?.map((invest) =>\r\n                    invest?._id === item?._id\r\n                        ? {\r\n                            ...invest,\r\n                            sub_category: invest?.sub_category?.map((subCatItem) => (\r\n                                {\r\n                                    ...subCatItem,\r\n                                    [\"input_value\"]: ''\r\n                                }\r\n                            ))\r\n                        }\r\n                        : invest\r\n                );\r\n            }\r\n            setItData(updatedData);\r\n        }\r\n\r\n    };\r\n\r\n    const submitITDeclaration = () => {\r\n        let tempItDeclarationData = []\r\n        itData.map((item) => {\r\n            if (isCollapsedFields?.includes(item?._id)) {\r\n                let tempSubData = []\r\n                if (item?.input_type === \"dropdown\") {\r\n                    item?.data?.map((subItem) => {\r\n                        if (subItem?.input_value !== '') {\r\n                            tempSubData?.push(subItem)\r\n                        }\r\n                    })\r\n                    item[\"sub_category\"] = [tempSubData]\r\n                    delete item['data']\r\n                } else {\r\n                    item?.sub_category?.map((subItem) => {\r\n                        if (subItem?.input_value !== '') {\r\n                            tempSubData?.push(subItem)\r\n                        }\r\n                    })\r\n                    item[\"sub_category\"] = tempSubData\r\n                }\r\n                tempItDeclarationData.push(item)\r\n            }\r\n        })\r\n\r\n        const payload = {\r\n            employee_id: selectedEmployeeData?._id,\r\n            tax_regime: taxRegimeType,\r\n            section_6a_declarations: tempItDeclarationData,\r\n\r\n        }\r\n\r\n        addUpdateEmployeeInvestment(payload)\r\n\r\n    }\r\n\r\n    /* Add Employee Investment */\r\n    const addUpdateEmployeeInvestment = (payload) => {\r\n        if (itDeclarationData) {\r\n            payload[\"_id\"] = itDeclarationData?._id\r\n            dispatch(payrollActions.updateEmployeeInvestmentRequest(payload));\r\n        } else {\r\n            dispatch(payrollActions.addEmployeeInvestmentRequest(payload));\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!addEmployeeInvestmentPending) {\r\n            if (addEmployeeInvestmentError) {\r\n                dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_EMPLOYEE_INVESTMENT_STORE\"))\r\n                return;\r\n            }\r\n            if (addEmployeeInvestmentRes) {\r\n                if (addEmployeeInvestmentRes?.code === 200) {\r\n                    dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_EMPLOYEE_INVESTMENT_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addEmployeeInvestmentRes,\r\n        addEmployeeInvestmentError,\r\n        addEmployeeInvestmentPending\r\n    ]);\r\n    useEffect(() => {\r\n        if (!updateEmployeeInvestmentPending) {\r\n            if (updateEmployeeInvestmentError) {\r\n                dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_EMPLOYEE_INVESTMENT_STORE\"))\r\n                return;\r\n            }\r\n            if (updateEmployeeInvestmentRes) {\r\n                if (updateEmployeeInvestmentRes?.code === 200) {\r\n                    dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_EMPLOYEE_INVESTMENT_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updateEmployeeInvestmentRes,\r\n        updateEmployeeInvestmentError,\r\n        updateEmployeeInvestmentPending\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        getAllInvestmentCategoryDetailsData()\r\n        getEmployeeItDeclaration()\r\n    }, [])\r\n\r\n    const getEmployeeItDeclaration = () => {\r\n        const payload = {\r\n            _id: selectedEmployeeData?._id\r\n        }\r\n        dispatch(payrollActions.getEmployeeInvestmentRequest(payload))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getEmployeeInvestmentPending) {\r\n            if (getEmployeeInvestmentError) {\r\n                return;\r\n            }\r\n            if (getEmployeeInvestmentRes) {\r\n                if (getEmployeeInvestmentRes?.code === 200) {\r\n                    let tempInvestmentData = []\r\n                    itData && itData?.length > 0 && itData?.map((investmentItem) => {\r\n                        let tempObj = investmentItem\r\n                        getEmployeeInvestmentRes?.data?.[0]?.section_6a_declarations?.map((addedItem) => {\r\n                            setIsCollapsedFields((pre)=>[...pre,addedItem?._id])\r\n                            if (investmentItem?._id === addedItem?._id) {\r\n                                if (addedItem?.input_type === 'dropdown') {\r\n                                    tempObj = {\r\n                                        ...tempObj,\r\n                                        [\"data\"]: addedItem?.sub_category\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    tempObj = {\r\n                                        ...tempObj,\r\n                                        [\"sub_category\"]: addedItem?.sub_category\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                        })\r\n                        tempInvestmentData.push(tempObj)\r\n                    })\r\n                    setItData(tempInvestmentData)\r\n                    setTaxRegimeType(getEmployeeInvestmentRes?.data?.[0]?.tax_regime)\r\n                    setItDeclarationData(getEmployeeInvestmentRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getEmployeeInvestmentRes,\r\n        getEmployeeInvestmentError,\r\n        getEmployeeInvestmentPending\r\n    ]);\r\n\r\n\r\n    const getAllInvestmentCategoryDetailsData = (regimeType) => {\r\n        const payload = {\r\n            status: regimeType || taxRegimeType\r\n        }\r\n        dispatch(payrollActions.getAllInvestmentCategoryDetailsRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!getAllInvestmentCategoryDetailsPending) {\r\n            if (getAllInvestmentCategoryDetailsError) {\r\n                return;\r\n            }\r\n            if (getAllInvestmentCategoryDetailsRes) {\r\n                if (getAllInvestmentCategoryDetailsRes?.code === 200) {\r\n                    let tempSetCategoryData = [];\r\n                    getAllInvestmentCategoryDetailsRes?.data?.forEach((item) => {\r\n                        if (item?.input_type === \"dropdown\") {\r\n                            tempSetCategoryData.push({\r\n                                ...item,\r\n                                data: [{ selected_value: '', input_value: '' }],\r\n                            });\r\n                        } else {\r\n                            tempSetCategoryData?.push(item)\r\n                        }\r\n                    });\r\n                    setItData(tempSetCategoryData)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllInvestmentCategoryDetailsRes,\r\n        getAllInvestmentCategoryDetailsError,\r\n        getAllInvestmentCategoryDetailsPending\r\n    ]);\r\n\r\n    /* ----------------------------New Code-------------------------- */\r\n    const addDeleteSelectFormFields = (action, childInd, parentInd) => {\r\n        if (action === \"add\") {\r\n            setItData((prevState) => {\r\n                let tempITData = [...prevState];\r\n                let newEntryData = {\r\n                    selected_value: '',\r\n                    input_value: ''\r\n                };\r\n\r\n                tempITData[parentInd] = {\r\n                    ...tempITData[parentInd],\r\n                    data: [...tempITData[parentInd]?.data, newEntryData]\r\n                };\r\n                return tempITData;\r\n            });\r\n        }\r\n        else if (action === \"delete\") {\r\n            setItData((prevState) => {\r\n                let tempITData = [...prevState];\r\n                let parentData = { ...tempITData[parentInd] };\r\n                parentData.data = parentData.data.filter((_, ind) => ind !== childInd);\r\n                tempITData[parentInd] = parentData;\r\n\r\n                return tempITData;\r\n            });\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const handleDynamicChange = (e, childInd, parentInd) => {\r\n        const { name, value } = e.target;\r\n\r\n        setItData((prevState) =>\r\n            prevState.map((item, index) => {\r\n                if (index !== parentInd) return item;\r\n\r\n                return {\r\n                    ...item,\r\n                    data: item.data.map((data, ind) => {\r\n                        if (ind !== childInd) return data;\r\n                        if (name === \"selected_value\") {\r\n                            const selectedIndex = parseInt(value);\r\n                            const selectedObj = item?.sub_category?.[selectedIndex];\r\n\r\n                            return {\r\n                                ...data,\r\n                                ...selectedObj,\r\n                                selected_value: selectedIndex,\r\n                            };\r\n                        }\r\n                        return {\r\n                            ...data,\r\n                            [name]: value,\r\n                        };\r\n                    }),\r\n                };\r\n            })\r\n        );\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const renderedAllInvestmentDataFields = () => {\r\n        return itData && itData?.length > 0 ? itData?.map((item, index) => (\r\n            <div key={item._id} className=\"cardBox p-0 mb-3\">\r\n                <div className={`d-flex justify-content-between p-3 ${isCollapsedFields?.includes(item._id) ? \"acc-header\" : ''}`} id={`heading-${index}`}>\r\n                    <h5 className=\"mb-0\">{item?.category}</h5>\r\n                    <div className='d-flex'>\r\n                        <CustomStrong\r\n                            className=\"form-check-label mt-1 pe-4\"\r\n                            text={isCollapsedFields?.[item._id] ? \"Yes\" : \"No\"}\r\n                        />\r\n                        <div className=\"form-check form-switch\">\r\n                            <Input\r\n                                className=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                id={`switch-${item._id}`}\r\n                                style={{ fontSize: \"20px\" }}\r\n                                name={item._id}\r\n                                onChange={(e) => handleCheckboxChange(e, item)}\r\n                                checked={isCollapsedFields?.includes(item._id)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {isCollapsedFields?.includes(item._id) && (\r\n                    <div className=\"card-body\">\r\n                        {renderedAddDeleteFieldsData(item, index)}\r\n                        {item?.alert && <div className=\"mt-3  alert alert-warning\" role=\"alert\" style={{ padding: \"11px\", marginBottom: \"0px\" }}>\r\n                            <span className='text-danger'>Note:</span> {item?.alert}\r\n                        </div>}\r\n                    </div>\r\n\r\n                )}\r\n            </div >\r\n        )) : (\r\n            !getAllInvestmentCategoryDetailsPending && <div className='d-flex justify-content-center'> <BlankTableError /></div>\r\n        )\r\n    };\r\n\r\n    const renderedAddDeleteFieldsData = (item, index) => {\r\n        return (\r\n            <>\r\n                {item?.input_type === \"dropdown\" ? (\r\n                    <>\r\n                        <div className=\"row\">\r\n                            {item?.data.length > 0 && item?.data?.map((selectedSubItem, subCatInd) => (\r\n                                <>\r\n                                    <div className=\"col-md-7 form-group \">\r\n                                        <select\r\n                                            value={selectedSubItem.selected_value ?? \"\"}\r\n                                            className=\"form-control\"\r\n                                            name=\"selected_value\"\r\n                                            onChange={(e) => handleDynamicChange(e, subCatInd, index)}\r\n                                        >\r\n                                            <option value=\"\" disabled>Select an Option</option>\r\n                                            {item?.sub_category?.map((subItem, subIndex) => (\r\n                                                <option key={subIndex} value={subIndex}>\r\n                                                    {subItem?.sub_category_name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n\r\n                                    </div>\r\n                                    <div className='col-md-2'></div>\r\n                                    <div className=\"col-md-3 form-group  \">\r\n                                        <div className=\"input-group \">\r\n                                            {selectedSubItem.input_type === \"number\" && <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                                {getInputPrefix('')}</span>}\r\n                                            <Input\r\n                                                type={selectedSubItem?.input_type}\r\n                                                value={selectedSubItem?.input_value}\r\n                                                name={\"input_value\"}\r\n                                                onChange={(e) => handleDynamicChange(e, subCatInd, index)}\r\n                                            />\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    {item?.data.length > 1 && <div className=\"text-danger d-flex justify-content-end  mb-1\" style={{ cursor: \"pointer\" }}\r\n                                        onClick={() => addDeleteSelectFormFields(\"delete\", subCatInd, index)}>\r\n                                        <Icon className=\"bi bi-trash-fill me-1\" />\r\n                                        <CustomStrong className={\"mt-1\"} text={\"Remove\"} />\r\n                                    </div>}\r\n                                    {item?.data?.length - 1 === subCatInd && <div className=\"text-primary mt-2\" style={{ cursor: \"pointer\" }}\r\n                                        onClick={() => addDeleteSelectFormFields(\"add\", subCatInd, index)}>\r\n                                        <Icon className=\"bi bi-plus-circle-fill me-1\" />\r\n                                        <CustomStrong text={\"Add\"} />\r\n                                    </div>}\r\n\r\n                                </>\r\n\r\n                            ))}\r\n                            {/* \r\n                            {item?.data?.length > 1 && <hr />} */}\r\n                        </div>\r\n                    </>\r\n                )\r\n                    :\r\n                    (\r\n                        item?.sub_category?.map((subCategoryItem, ind) =>\r\n                        (<>\r\n                            <div className=\"row\" key={`${ind}`}>\r\n                                <div className=\"col-md-9 form-group mb-3\">\r\n                                    <p className='loan-para'>{subCategoryItem.sub_category_name}</p>\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <div className='form-group mb-3'>\r\n                                        {renderInputField(subCategoryItem, ind, index)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </>)\r\n                        )\r\n                    )}\r\n            </>\r\n        );\r\n    };\r\n    const renderInputField = (value, childInd, parentInd) => {\r\n        switch (value?.input_type) {\r\n            case \"checkbox\": return (\r\n                <div className=\"col-md-9\">\r\n                    <div className=\"form-group mb-3\">\r\n                        <CustCheckbox\r\n                            key={\"is_active\"}\r\n                            checked={value?.input_value}\r\n                            handleChange={(e) => handleChangeSubCategoryInputValue(e, childInd, parentInd)}\r\n                            name={\"input_value\"}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n            case 'number':\r\n            case 'text':\r\n                return (\r\n                    <div className=\"input-group mb-3\">\r\n                        {value?.input_type === \"number\" && <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                            {getInputPrefix('')}</span>}\r\n                        <Input\r\n                            type={value?.input_type}\r\n                            value={value?.input_value || ''}\r\n                            name={\"input_value\"}\r\n                            onChange={(e) => handleChangeSubCategoryInputValue(e, childInd, parentInd)}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n            default:\r\n                return null;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    const handleChangeSubCategoryInputValue = (e, childInd, parentInd, key) => {\r\n        const { name, value, type, checked } = e.target;\r\n        const inputValue = type === \"checkbox\" ? checked : value;\r\n\r\n        setItData((prevState) =>\r\n            prevState.map((item, index) =>\r\n                index === parentInd\r\n                    ? {\r\n                        ...item,\r\n                        [\"sub_category\"]: item?.[\"sub_category\"].map((data, ind) =>\r\n                            ind === childInd\r\n                                ? {\r\n                                    ...data,\r\n                                    [name]: inputValue,\r\n                                }\r\n                                : data\r\n                        )\r\n                    }\r\n                    : item\r\n            )\r\n        );\r\n    };\r\n\r\n    const handleChangeTaxRegime = (value) => {\r\n        setTaxRegimeType(value)\r\n        getAllInvestmentCategoryDetailsData(value)\r\n        // getEmployeeItDeclaration()\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"cardBox  myRequest p-4\">\r\n            <div className='d-flex'>\r\n                <div >\r\n                    <Link to={\"/payroll-employees/employee-detail\"}>\r\n                        <BackIcon />\r\n                    </Link>\r\n\r\n                </div>\r\n                <div>\r\n                    <h5 >\r\n                        {selectedEmployeeData?.name} IT Declaration\r\n                    </h5>\r\n                </div>\r\n\r\n            </div>\r\n            <hr style={{ margin: \"0px\" }} />\r\n            <div className='mt-3 col-12 it-declaration-body'>\r\n                <div className=\"alert \" role=\"alert\" style={{ background: \"#F7F8FF\" }}>\r\n                    <Icon className={\"bi bi-info-circle-fill\"}\r\n                        style={{ color: \"rgb(43, 118, 210)\" }}\r\n                    /> Enter your planned investment declarations here and choose the desired regime in the following page.\r\n                </div>\r\n                <div>\r\n                    <div className='d-flex gap-3'>\r\n                        <div className={`cardBox it-card ${taxRegimeType === 'is_eligible_for_old' ? \"active\" : ''}`}>\r\n                            <CustRadio\r\n                                htmlFor=\"is_eligible_for_old\"\r\n                                text=\"Old Tax Regime\"\r\n                                name=\"taxType\"\r\n                                value=\"is_eligible_for_old\"\r\n                                checked={taxRegimeType === 'is_eligible_for_old'}\r\n                                handleChange={(e) => handleChangeTaxRegime(e.target.value)}\r\n                                radioClass={\"mt-2\"}\r\n                            />\r\n                        </div>\r\n                        <div className={`cardBox it-card ${taxRegimeType === 'is_eligible_for_new' ? \"active\" : ''}`}>\r\n                            <CustRadio\r\n                                htmlFor=\"is_eligible_for_new\"\r\n                                text=\"New Tax Regime\"\r\n                                name=\"taxType\"\r\n                                value=\"is_eligible_for_new\"\r\n                                checked={taxRegimeType === 'is_eligible_for_new'}\r\n                                handleChange={(e) => handleChangeTaxRegime(e.target.value)}\r\n                                radioClass={\"mt-2\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='mt-4'>\r\n                    <div className='d-flex justify-content-between it-header'>\r\n                        <div>\r\n                            <Label text=\"Particulars\"\r\n                                className=\"text-dark\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Label text=\"Declared Amount\"\r\n                                className=\"text-dark\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <hr style={{ margin: \"0px\" }} />\r\n\r\n                    <div className='it-accordions mt-3'>\r\n                        <div id=\"accordion\">\r\n                            {getAllInvestmentCategoryDetailsPending ?\r\n                                <div className='d-flex justify-content-center'>\r\n                                    <CustomSpinner isShow={getAllInvestmentCategoryDetailsPending} size=\"xl\" />\r\n                                </div>\r\n                                :\r\n                                renderedAllInvestmentDataFields()\r\n                            }\r\n                            { }\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className='d-flex justify-content-end'>\r\n                {itData && itData?.length > 0 && <CustomButton\r\n                    text={itDeclarationData ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                    classNames={\"btn btn-primary\"}\r\n                    handleClick={() => submitITDeclaration()}\r\n                    isLoading={itDeclarationData ? updateEmployeeInvestmentPending : addEmployeeInvestmentPending}\r\n                />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ITDeclaration\r\n"],"names":["BackIcon","_jsx","children","_jsxs","version","id","x","y","viewBox","xmlSpace","className","style","height","width","cursor","opacity","fill","cx","cy","r","d","ITDeclaration","t","useCustomTranslation","dispatch","useDispatch","selectedEmployeeData","addEmployeeInvestmentPending","addEmployeeInvestmentRes","addEmployeeInvestmentError","updateEmployeeInvestmentPending","updateEmployeeInvestmentRes","updateEmployeeInvestmentError","getEmployeeInvestmentPending","getEmployeeInvestmentRes","getEmployeeInvestmentError","getAllInvestmentCategoryDetailsPending","getAllInvestmentCategoryDetailsRes","getAllInvestmentCategoryDetailsError","useSelector","state","payroll","itData","setItData","useState","taxRegimeType","setTaxRegimeType","itDeclarationData","setItDeclarationData","isCollapsedFields","setIsCollapsedFields","addUpdateEmployeeInvestment","payload","_id","payrollActions","updateEmployeeInvestmentRequest","addEmployeeInvestmentRequest","useEffect","handleClearPayrollStore","code","getAllInvestmentCategoryDetailsData","getEmployeeItDeclaration","getEmployeeInvestmentRequest","_getEmployeeInvestmen4","_getEmployeeInvestmen5","tempInvestmentData","length","map","investmentItem","_getEmployeeInvestmen","_getEmployeeInvestmen2","_getEmployeeInvestmen3","tempObj","data","section_6a_declarations","addedItem","pre","input_type","sub_category","push","tax_regime","regimeType","status","getAllInvestmentCategoryDetailsRequest","_getAllInvestmentCate","tempSetCategoryData","forEach","item","selected_value","input_value","addDeleteSelectFormFields","action","childInd","parentInd","prevState","_tempITData$parentInd","tempITData","parentData","filter","_","ind","handleDynamicChange","e","name","value","target","index","_item$sub_category2","selectedIndex","parseInt","selectedObj","renderedAddDeleteFieldsData","_item$data2","_item$sub_category4","_Fragment","selectedSubItem","subCatInd","_selectedSubItem$sele","_item$sub_category3","_item$data3","onChange","disabled","subItem","subIndex","sub_category_name","getInputPrefix","Input","type","onClick","Icon","CustomStrong","text","subCategoryItem","renderInputField","CustCheckbox","checked","handleChange","handleChangeSubCategoryInputValue","key","inputValue","handleChangeTaxRegime","Link","to","margin","role","background","color","CustRadio","htmlFor","radioClass","Label","CustomSpinner","isShow","size","includes","category","fontSize","handleCheckboxChange","prev","collapsedItem","updatedData","invest","_invest$sub_category","subCatItem","alert","padding","marginBottom","BlankTableError","CustomButton","classNames","handleClick","submitITDeclaration","tempItDeclarationData","tempSubData","_item$data","_item$sub_category","employee_id","isLoading"],"sourceRoot":""}