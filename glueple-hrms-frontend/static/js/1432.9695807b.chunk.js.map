{"version":3,"file":"static/js/1432.9695807b.chunk.js","mappings":"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","sources":["components/admin/holiday/HolidayCalenderList.js","components/admin/holiday/HolidayTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Calender from '../../calendar/Calender'\r\nimport HolidayTable from './HolidayTable'\r\nimport { holidaysActions } from '../../../core/resource/actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst HolidayCalenderList = () => {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        getHolidayRes,\r\n        getHolidayPending,\r\n        getHolidayError,\r\n    } = useSelector(state => state.holiday)\r\n    const [allHolidayListData, setAllHolidayListData] = useState([])\r\n\r\n    \r\n    useEffect(() => {\r\n        getAllHoliday()\r\n    }, [])\r\n\r\n    const getAllHoliday = () => {\r\n        dispatch(holidaysActions.getHolidayRequest());\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getHolidayPending) {\r\n            if (getHolidayError) {\r\n                return;\r\n            }\r\n            if (getHolidayRes) {\r\n                if (getHolidayRes?.data?.code === 200) {\r\n                    const getAllHolidayResData = getHolidayRes?.data?.data\r\n                    setAllHolidayListData(getAllHolidayResData)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getHolidayRes,\r\n        getHolidayError,\r\n        getHolidayPending\r\n    ]);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    return (\r\n        <>\r\n            <Calender\r\n            allHolidayListData={allHolidayListData}\r\n            />\r\n            <HolidayTable\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                allHolidayListData={allHolidayListData}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HolidayCalenderList\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomTable } from '../../reuseableComponents'\r\nimport { getBadgeColor } from '../../../utils/common'\r\nimport { CustomButton } from '../../globalComponents'\r\nimport moment from 'moment'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { all } from 'axios'\r\n\r\nconst HolidayTable = (props) => {\r\n    const {t}=useCustomTranslation()\r\n    const {\r\n        setSelectedHolidayData,\r\n        toggleCreateUpdateHolidayModal,\r\n        currentPage,\r\n        setCurrentPage,\r\n        allHolidayListData,\r\n        isLoading,\r\n        toggleHolidayDeleteModal,\r\n        viewType\r\n    } = props\r\n\r\n    const handleUpdateHoliday = (data) => {\r\n        toggleCreateUpdateHolidayModal(data)\r\n    }\r\n\r\n\r\n    const scopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index+1}</span>\r\n        ),\r\n        is_active: item => (\r\n            <span\r\n                className={`badge ${getBadgeColor(item.is_active ? \"Active\" : \"Inactive\")}`}\r\n            >\r\n                {item.is_active ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n        ),\r\n        days: item =>  moment(item.to_date).diff(moment(item.from_date), 'days')+1,\r\n        created_at: item => moment(item.created_at).format(\"DD-MM-YYYY\"),\r\n        from_date: item => moment(item.from_date).format(\"DD-MM-YYYY\"),\r\n        to_date: item => moment(item.to_date).format(\"DD-MM-YYYY\"),\r\n        action: item => (\r\n            <div className=\"actionGroup d-flex gap-2\">\r\n                {viewType ===\"admin\"&&<>\r\n                <CustomButton\r\n                    text={t(\"btns.update\")}\r\n                    classNames=\"btn btn-primary\"\r\n                    handleClick={() => {\r\n                        handleUpdateHoliday(item);\r\n                    }}\r\n                />\r\n                <CustomButton\r\n                    text={t(\"btns.delete\")}\r\n                    handleClick={() => toggleHolidayDeleteModal(item._id)}\r\n                    classNames=\"btn btn-danger\"\r\n                /></>}\r\n            </div>\r\n        )\r\n    }), [setSelectedHolidayData,toggleCreateUpdateHolidayModal]);\r\n\r\n\r\n    const fields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'name', label: 'Holiday Name' },\r\n        { key: 'from_date', label: 'Holiday From' },\r\n        { key: 'to_date', label: 'Holiday To' },\r\n        { key: 'days', label: 'Days' },\r\n        { key: 'action', label: 'Action' }\r\n    ];\r\n  return (\r\n    <>\r\n      <CustomTable\r\n                data={allHolidayListData}\r\n                fields={fields}\r\n                isLoading={isLoading}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                tableName={\"Holiday\"}\r\n                // onSearch={handleSearch}\r\n                scopedSlots={scopedSlots}\r\n            />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HolidayTable\r\n"],"names":["HolidayCalenderList","dispatch","useDispatch","getHolidayRes","getHolidayPending","getHolidayError","useSelector","state","holiday","allHolidayListData","setAllHolidayListData","useState","useEffect","getAllHoliday","holidaysActions","getHolidayRequest","_getHolidayRes$data","data","code","_getHolidayRes$data2","getAllHolidayResData","currentPage","setCurrentPage","_jsxs","_Fragment","children","_jsx","Calender","HolidayTable","props","t","useCustomTranslation","setSelectedHolidayData","toggleCreateUpdateHolidayModal","isLoading","toggleHolidayDeleteModal","viewType","scopedSlots","useMemo","sn","_","index","is_active","item","className","getBadgeColor","days","moment","to_date","diff","from_date","created_at","format","action","CustomButton","text","classNames","handleClick","_id","CustomTable","fields","key","label","pagination","tableName"],"sourceRoot":""}