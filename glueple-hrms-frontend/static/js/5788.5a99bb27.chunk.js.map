{"version":3,"file":"static/js/5788.5a99bb27.chunk.js","mappings":"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","sources":["components/modal/hiring/MrfApprovalModal.js","components/hiring/mrf/MrfModals/MrfSubmissionView.js","components/hiring/mrf/MrfModals/MrfStatusModal.js","components/hiring/mrf/MrfProceses.js","components/hiring/mrf/CreateMrf.js","components/hiring/mrf/MrfSubmissionTable.js","components/hiring/mrf/MrfApprovalTable.js","components/hiring/mrf/Mrf.js"],"sourcesContent":["import React from 'react'\r\nimport { CustomButton } from '../../globalComponents'\r\n\r\nconst MrfApprovalModal = (props) => {\r\nconst { title, onApproveReject, isShow, isLoading, btnTextLeft, btnTextRight,setComment,id,appliedFor,comment } = props\r\nreturn (\r\n    <>\r\n        <div className=\"modal fade correctionAprovel\" id=\"mrfApproval\" style={{ display: isShow ? \"unset !important\" : \"none !important\", opacity: isShow ? \"unset\" : \"0\" }}>\r\n            <div className=\"modal-dialog modal-dialog-centered\">\r\n                <div className=\"modal-content rounded-0 border-0\">\r\n                    <div className=\"modal-header border-0\">\r\n                        <h1 className=\"modal-title fs-5 fw-bold text-primary\">{title}</h1>\r\n                        <CustomButton\r\n                                classNames={\"btn-close\"}\r\n                                handleClick={() => onApproveReject(false)}\r\n                            />\r\n                        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> */}\r\n                    </div>\r\n                    <div className=\"modal-body pt-0\">\r\n                        <div className=\"d-flex align-items-center justify-content-between mb-4\">\r\n                            {id &&<strong className=\"fs-7 text-light\">MRF ID<span\r\n                                className=\"text-primary fw-bolder d-block\">{id}</span></strong>}\r\n                            { appliedFor &&<strong className=\"fs-7 text-light text-end\">Applied For<span\r\n                                className=\"text-primary fw-bolder d-block\">{appliedFor}</span></strong>}\r\n                        </div>\r\n                        <span className=\"text-primary fw-semibold mb-2 d-block fs-8\">Enter Reason</span>\r\n                        <div className=\"form-group mb-3\">\r\n                            <textarea className=\"form-control\" placeholder=\"Enter Reason\" \r\n                            value= {comment}\r\n                            style={{ height: \"70px\" }}\r\n                            onChange={(e)=>setComment(e.target.value)}\r\n                            ></textarea>\r\n                        </div>\r\n                        <div className=\"my-3 d-flex justify-content-center gap-3\">\r\n                            <CustomButton\r\n                                classNames={\"btn btn-danger\"}\r\n                                isLoading={isLoading}\r\n                                text={btnTextLeft || \"Reject\"}\r\n                                handleClick={() => onApproveReject(\"reject\")}\r\n                            />\r\n                            <CustomButton\r\n                                classNames={\"btn btn-success\"}\r\n                                isLoading={isLoading}\r\n                                text={btnTextRight || \"Approve\"}\r\n                                handleClick={() => onApproveReject(\"approve\")}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </>\r\n)\r\n}\r\n\r\nexport default MrfApprovalModal\r\n","import React, { useEffect, useState } from 'react'\r\nimport { transformKey } from '../../../../utils/common';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CustomButton } from '../../../globalComponents';\r\n\r\nconst MrfSubmissionView = (props) => {\r\n    const { openModel, handleSubmissionViewModal, mrfByIdData } = props\r\n    const Navigate = useNavigate()\r\n    const [activeTab, setActiveTab] = useState(\"mrfDetails\");\r\n    const [allMrfData, setAllMrfData] = useState([])\r\n    const [interviewrData, setInterviewerData] = useState([\r\n        {\r\n            \"Department\": '',\r\n            \"Designation\": '',\r\n            \"Interview Stage\": '',\r\n            \"Interview Type\": '',\r\n            \"Interviewer\": '',\r\n        }\r\n    ])\r\n    const moveToMrfProcess = (type, id) => {\r\n        Navigate(`/mrf-process-step/${type}/${id}`)\r\n    }\r\n\r\n    const handleActiveTab = (type) => {\r\n        setActiveTab(type)\r\n    }\r\n    useEffect(() => {\r\n        if (mrfByIdData?.data) {\r\n            const mrfData = mrfByIdData?.data[0]\r\n            setAllMrfData(mrfData)\r\n\r\n            if (Array.isArray(mrfData?.interview_data) && mrfData?.interview_data?.length > 0) {\r\n                setInterviewerData(mrfData?.interview_data.map(item => ({\r\n                    \"Department\": item?.department_name,\r\n                    \"Designation\": item?.designation_name || null,\r\n                    \"Interview Stage\": item?.interview_stage_name || null,\r\n                    \"Interview Type\": item?.interview_type_name || null,\r\n                    \"Interviewer\": item?.interviewer_name || null,\r\n                })));\r\n            }\r\n        }\r\n\r\n    }, [mrfByIdData])\r\n\r\n\r\n\r\n    const interviewData = () => {\r\n        return (\r\n            interviewrData && <>\r\n                {interviewrData?.map((item, index) => (<>\r\n                    <div className=\"row \" key={index}>\r\n                        {Object.entries(item).map(([key, value]) => (\r\n\r\n                            <div className=\"col-md-6 form-group mb-3\" key={`${index}-${key}`}>\r\n                                <label htmlFor={`staticEmail_${index}_${key}`}>{transformKey(key)}:</label>\r\n                                <input type=\"text\" className=\"form-control\" value={value || 'N/A'} name=\"\" id=\"\" disabled />\r\n\r\n\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    {interviewrData.length - 1 !== index && <hr />}\r\n                </>\r\n                ))}\r\n            </> \r\n\r\n        )\r\n    };\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end creatNewTicketOff ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">Mrf Draft Details</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleSubmissionViewModal()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body myRequest \">\r\n                    <div className=\"formPanel mrfMain\">\r\n                        <ul className=\"nav nav-tabs leaveTabs mb-4\">\r\n                            <li className=\"nav-item\">\r\n                                <button\r\n                                    className={`nav-link ${activeTab === \"mrfDetails\" ? \"active\" : \"\"}`}\r\n                                    data-bs-toggle=\"tab\"\r\n                                    data-bs-target=\"#mrfDetails\"\r\n                                    type=\"button\"\r\n                                    onClick={() => handleActiveTab(\"mrfDetails\")}\r\n                                >\r\n                                    MRF Detail\r\n                                </button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button\r\n                                    className={`nav-link ${activeTab === \"jobDescription\" ? \"active\" : \"\"}`}\r\n                                    data-bs-toggle=\"tab\"\r\n                                    data-bs-target=\"#jobDescription\"\r\n                                    type=\"button\"\r\n                                    onClick={() => handleActiveTab(\"jobDescription\")}\r\n                                >\r\n                                    Job Description\r\n                                </button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button\r\n                                    className={`nav-link ${activeTab === \"interviewrDetails\" ? \"active\" : \"\"}`}\r\n                                    data-bs-toggle=\"tab\"\r\n                                    data-bs-target=\"#interviewrDetails\"\r\n                                    type=\"button\"\r\n                                    onClick={() => handleActiveTab(\"interviewrDetails\")}\r\n                                >\r\n                                    Interviewr Details\r\n                                </button>\r\n                            </li>\r\n\r\n                        </ul>\r\n                        <div className=\"tab-content\">\r\n                            <div className={`tab-pane fade ${activeTab === \"mrfDetails\" ? \"show active\" : \"\"}`} id=\"mrfDetails\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6 form-group mb-3\">\r\n                                        <label> Department <span className='text-danger'>*</span></label>\r\n                                        <input type=\"text\" className=\"form-control\" value={allMrfData?.department_name} name=\"\" id=\"\" disabled />\r\n                                    </div>\r\n                                    <div className=\"col-md-6 form-group mb-3\">\r\n                                        <label> Designation <span className='text-danger'>*</span></label>\r\n                                        <input type=\"text\" className=\"form-control\" value={allMrfData?.designation_name} name=\"\" id=\"\" disabled />\r\n                                    </div>\r\n                                    <div className=\"col-md-6 form-group mb-3\">\r\n                                        <label>Position <span className='text-danger'>*</span></label>\r\n                                        <input type=\"text\" className=\"form-control\" value={allMrfData?.position_name} name=\"\" id=\"\"\r\n                                            disabled />\r\n                                    </div>\r\n                                    <div className=\"col-md-6 form-group mb-3\">\r\n                                        <label>Priority <span className='text-danger'>*</span></label>\r\n                                        <input type=\"text\" className=\"form-control\" value={allMrfData?.priority_name} name=\"\" id=\"\"\r\n                                            disabled />\r\n                                    </div>\r\n                                    {allMrfData?.type === \"replacement\" ? <div className=\"col-md-6 form-group mb-3\">\r\n                                        <label>Emp ID <span className='text-danger'>*</span></label>\r\n                                        <input type=\"text\" className=\"form-control\" value={allMrfData?.emp_id_name} name=\"\" id=\"\"\r\n                                            disabled />\r\n                                    </div> : <>\r\n                                        <div className=\"col-md-6 form-group mb-3\">\r\n                                            <label>Min Qualification <span className='text-danger'>*</span></label>\r\n                                            <input type=\"text\" className=\"form-control\" value={allMrfData?.min_qualififcation_name} name=\"\" id=\"\"\r\n                                                disabled />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 form-group mb-3\">\r\n                                            <label>Business Impact <span className='text-danger'>*</span></label>\r\n                                            <input type=\"text\" className=\"form-control\" value={allMrfData?.business_impact_name} name=\"\" id=\"\"\r\n                                                disabled />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 form-group mb-3\">\r\n                                            <label   >Total Vacant Position:</label>\r\n                                            <input type=\"text\" className=\"form-control\" value={allMrfData?.type_of_appointment?.type} name=\"\" id=\"\"\r\n                                                disabled />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 form-group mb-3\">\r\n                                            <label> Year Of Experience <span className='text-danger'>*</span></label>\r\n                                            <input type=\"text\" className=\"form-control\" value={allMrfData?.year_of_experience_name} name=\"\" id=\"\"\r\n                                                disabled />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 form-group mb-3\">\r\n                                            <label>Learning & Development Cost</label>\r\n                                            <input type=\"text\" className=\"form-control\" value={allMrfData?.learning_development_cost?.is_cost} name=\"\" id=\"\"\r\n                                                disabled />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 form-group mb-3\">\r\n                                            <label>Min Learning & Development Cost</label>\r\n                                            <input type=\"text\" className=\"form-control\" value={allMrfData?.learning_development_cost?.is_cost} name=\"\" id=\"\"\r\n                                                disabled />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 form-group mb-3\">\r\n                                            <label>Max Learning & Development Cost</label>\r\n                                            <input type=\"text\" className=\"form-control\" value={allMrfData?.learning_development_cost?.max_cost} name=\"\" id=\"\"\r\n                                                disabled />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 form-group mb-3\">\r\n                                            <label>Type Of Appointment</label>\r\n                                            <input type=\"text\" className=\"form-control\" value={allMrfData?.type_of_appointment?.type} name=\"\" id=\"\"\r\n                                                disabled />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 form-group mb-3\">\r\n                                            <label>Appointment Duration</label>\r\n                                            <input type=\"text\" className=\"form-control\" value={allMrfData?.type_of_appointment?.duration} name=\"\" id=\"\"\r\n                                                disabled />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 form-group mb-3\">\r\n                                            <label>Office Location <span className='text-danger'>*</span></label>\r\n                                            <input type=\"text\" className=\"form-control\" value={allMrfData?.hiring_for_name} name=\"\" id=\"\"\r\n                                                disabled />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 form-group mb-3\">\r\n                                            <label> Preferred Qualification <span className='text-danger'>*</span></label>\r\n                                            <input type=\"text\" className=\"form-control\" value={allMrfData?.preferred_qualification_name} name=\"\" id=\"\"\r\n                                                disabled />\r\n                                        </div>\r\n                                        <div className=\"col-md-12 form-group mb-3\">\r\n                                            <label>Mrf justification <span className='text-danger'>*</span></label>\r\n                                            <textarea type=\"text\" className=\"form-control\" value={allMrfData?.mrf_justification} name=\"\" id=\"\"\r\n                                                disabled />\r\n                                        </div>\r\n                                    </>}\r\n                                </div>\r\n                            </div>\r\n                            <div className={`tab-pane fade ${activeTab === \"jobDescription\" ? \"show active\" : \"\"}`} id=\"jobDescription\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-6 form-group mb-3\">\r\n                                        <label>Responsiblities:</label>\r\n                                        <input type=\"text\" className=\"form-control\" value={allMrfData?.responsiblities} name=\"\" id=\"\" disabled />\r\n                                    </div>\r\n                                    <div className=\"col-md-6 form-group mb-3\">\r\n                                        <label>Training Certificate:</label>\r\n                                        <input type=\"text\" className=\"form-control\" value={allMrfData?.training_certificate_name} name=\"\" id=\"\" disabled />\r\n                                    </div>\r\n                                    <div className=\"col-md-6 form-group mb-3\">\r\n                                        <label>Domain Knowledge:</label>\r\n                                        <input type=\"text\" className=\"form-control\" value={allMrfData?.domain_knowledge} name=\"\" id=\"\"\r\n                                            disabled />\r\n                                    </div>\r\n                                    <div className=\"col-md-6 form-group mb-3\">\r\n                                        <label>Other Skills:</label>\r\n                                        <input type=\"text\" className=\"form-control\" value={allMrfData?.other_skills} name=\"\" id=\"\"\r\n                                            disabled />\r\n                                    </div>\r\n                                    <div className=\"col-md-12 form-group mb-3\">\r\n                                        <label>Role Summary:</label>\r\n                                        <textarea type=\"text\" className=\"form-control\" value={allMrfData?.role_summary} name=\"\" id=\"\"\r\n                                            disabled />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className={`tab-pane fade ${activeTab === \"interviewrDetails\" ? \"show active\" : \"\"}`} id=\"interviewrDetails\">\r\n                                <div className=\"row\">\r\n                                    {interviewData()}\r\n                                    {/* <div className=\"col-md-12 form-group mb-3\">\r\n                                        <label>MRF ID</label>\r\n                                        <input type=\"text\" className=\"form-control\" value=\"Nikita Prajapat\" name=\"\" id=\"\" disabled />\r\n                                    </div> */}\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        {!(allMrfData?.is_submitted) && <CustomButton\r\n                            text={\"Update\"}\r\n                            classNames=\"btn btn-oreang  me-2\"\r\n                            handleClick={() => moveToMrfProcess(allMrfData?.type, allMrfData?._id)}\r\n                        />}\r\n                        {/* <button type=\"button\" className=\"btn btn-secondary\">Back</button> */}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MrfSubmissionView\r\n","import React, { useEffect, useState } from 'react'\r\nimport Image from '../../../commanComponent/Image'\r\nimport moment from 'moment'\r\nimport { dateFormate } from '../../../../utils/common'\r\n\r\nconst MrfStatusModal = (props) => {\r\n    const { handleOpenClose, openModel, mrfByIdData } = props\r\n    const [statusSteps,setStatusSteps]=useState('')\r\n    const [mrfStepsStatus,setMrfStepsStatus]=useState('')\r\n    useEffect(()=>{\r\n        if(mrfByIdData && Object.keys(mrfByIdData)?.length > 0){\r\n            const {approval_status,mrf_statuses} =mrfByIdData?.data[0]\r\n            setStatusSteps(approval_status)\r\n            setMrfStepsStatus(mrf_statuses)\r\n        }\r\n    },[mrfByIdData])\r\n    \r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">Mrf Status</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"detailsCandidate\">\r\n                        <ul className=\"detailsList\">\r\n                            <li className=\"select active\">\r\n                                <figure className=\"m-0\">\r\n                                    <img src=\"images/greenRight.svg\" alt=\"\" width=\"45\" />\r\n                                </figure>\r\n                                <strong>MRF raised</strong>\r\n                            </li>\r\n                            {statusSteps && statusSteps?.map((data,ind)=> <li \r\n                            class={`select \r\n                                ${data.action_type === \"approve\"\r\n                                ? \"active\"\r\n                                : data.action_type === \"reject\"\r\n                                ? \"nonactive\"\r\n                                : \"\"}`}  key={ind}\r\n                            >\r\n                                <figure className=\"m-0\">\r\n                                    <img src={data?.action_type===\"approve\"?\"images/greenRight.svg\":\"images/redCross.svg\"} alt=\"\" width=\"45\" />\r\n                                </figure>\r\n                                <strong>\r\n                                {data.action_type === \"approve\"\r\n                                ? \"Approved by\"\r\n                                : data.action_type === \"reject\"\r\n                                ? \"Reject By\"\r\n                                : \"Pending By\"} {data?.role_name} \r\n                                    \r\n                                <b>{data?.approver_name}</b></strong>\r\n                            </li>\r\n                           )}\r\n                            <li class={`select ${mrfStepsStatus[\"Assigned To Recruiter\"]?\"active\":''}`} >\r\n                                <figure className=\"m-0\">\r\n                                    <img src={mrfStepsStatus[\"Assigned To Recruiter\"]?\"images/greenRight.svg\":\"images/redCross.svg\"} alt=\"\" width=\"45\" />\r\n                                </figure>\r\n                                <strong>Assigned To Recruiter</strong>\r\n                            </li>\r\n                            <li class={`select ${mrfStepsStatus[\"Interview Ongoing\"]?\"active\":''}`}>\r\n                                <figure className=\"m-0\">\r\n                                    <img src={mrfStepsStatus[\"Interview Ongoing\"]?\"images/greenRight.svg\":\"images/redCross.svg\"} alt=\"\" width=\"45\" />\r\n                                </figure>\r\n                                <strong>Interview Ongoing</strong>\r\n                            </li>\r\n                            <li class={`select ${mrfStepsStatus[\"MRF Final\"]?\"active\":''}`}>\r\n                                <figure className=\"m-0\">\r\n                                    <img src={mrfStepsStatus[\"MRF Final\"]?\"images/greenRight.svg\":\"images/redCross.svg\"} alt=\"\" width=\"45\" />\r\n                                </figure>\r\n                                <strong>MRF Final</strong>\r\n                            </li>\r\n                            {/* <li className=\"select nonactive\">\r\n                                <figure className=\"m-0\">\r\n                                    <img src=\"images/redCross.svg\" alt=\"\" width=\"45\" />\r\n                                </figure>\r\n                                <strong>Interview ongoing <b>Date -</b></strong>\r\n                            </li>\r\n                            <li className=\"select \">\r\n                                <figure className=\"m-0\">\r\n                                    <img src=\"images/redCross.svg\" alt=\"\" width=\"45\" />\r\n                                </figure>\r\n                                <strong>Candidate Selected <b>Date -</b></strong>\r\n                            </li>\r\n                            <li className=\"select \">\r\n                                <figure className=\"m-0\">\r\n                                    <img src=\"images/redCross.svg\" alt=\"\" width=\"45\" />\r\n                                </figure>\r\n                                <strong>Final <b>Date -</b></strong>\r\n                            </li> */}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <a type=\"button\" className=\"btn btn-secondary\">Back</a>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MrfStatusModal\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { toTitleCase } from '../../../utils/common';\r\n\r\nconst MrfProceses = (props) => {\r\n    const { mrfDashboardAndHierarchyData } = props;\r\n    const [dashboardCounts, setDashboardCounts] = useState({\r\n        \"Mrf Submitted\":'',\r\n        \"Mrf Completed\":'',\r\n        \"Approval Pending\":'',\r\n        \"Mrf Actioned\":''\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (mrfDashboardAndHierarchyData) {\r\n            const { dashboard_count } = mrfDashboardAndHierarchyData;\r\n            setDashboardCounts(dashboard_count);\r\n        }\r\n    }, [mrfDashboardAndHierarchyData]);\r\n\r\n    // Memoize the dashboard cards to avoid unnecessary re-renders\r\n    const renderDashboardCards = useMemo(() => {\r\n        return Object.keys(dashboardCounts).map((item, index) => {\r\n            const count = dashboardCounts[item] || 0;\r\n            return (\r\n                <div className=\"col-md-6 px-md-2 mb-3\" key={index}>\r\n                    <div className=\"totalBx h-100 p-2\">\r\n                        <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                            <figure className=\"mb-0\">\r\n                                <img src=\"images/applyleavesIcon.svg\" alt=\"\" width=\"40\" />\r\n                            </figure>\r\n                            <h3 className=\"fw-bolder my-0\">{toTitleCase(item)}</h3>\r\n                        </div>\r\n                        <span className=\"d-block text-end\">{count}</span>\r\n                        <img src=\"images/totalattendance.svg\" className=\"cornerLine\" alt=\"\" width=\"95\" />\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }, [dashboardCounts]);\r\n\r\n    return (\r\n        <div className=\"row leavesMain mb-3\">\r\n            <div className=\"col-md-5 pe-md-2 ticketScoreSection\">\r\n                <div className=\"row px-md-1\">\r\n                    {renderDashboardCards}\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-7 ps-md-2\">\r\n                <div className=\"cardBox h-100 newMrfProcess\">\r\n                    <div className=\"cardHead\">\r\n                        <h3>New <span>MRF Process</span></h3>\r\n                        <ul className=\"tackList mt-5 pt-2 pe-4\">\r\n                            <li>Create MRF</li>\r\n                            <li>Add Job Description</li>\r\n                            <li>Add Interviewer</li>\r\n                            <li>Review & Submit</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MrfProceses;\r\n","import React, { useEffect, useState } from 'react'\r\nimport Button from '../../commanComponent/Button'\r\nimport NewHiringOffCanvas from '../../modal/hiring/NewHiringOffCanvas'\r\nimport ReplacementMrfOffcanvas from '../../modal/hiring/ReplacementMrfOffcanvas'\r\nimport Lottie from 'react-lottie-player'\r\nimport businesshiring from \"../../../images/business-hiring.json\"\r\nimport { CustomButton } from '../../globalComponents'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst CreateMrf = (props) => {\r\n    const { mrfDashboardAndHierarchyData } = props\r\n    const [approvalHierarchyData, setApprovalHierarchyData] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (mrfDashboardAndHierarchyData) {\r\n            const { approval_hierarchy } = mrfDashboardAndHierarchyData\r\n            setApprovalHierarchyData(approval_hierarchy)\r\n        }\r\n    }, [mrfDashboardAndHierarchyData])\r\n\r\n    const Navigate = useNavigate()\r\n\r\n    const createMrfProcess = (type) => {\r\n        Navigate(`/mrf-process-step/${type}`)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"cardBox mb-3 createNewMrf newMrfProcess \">\r\n                <div className=\"row align-items-center\">\r\n                    <div className=\"col-md-9 col-xl-10\">\r\n                        <div className=\"row align-items-center\">\r\n                            <div className=\"col-md-3\">\r\n                                <Lottie\r\n                                    loop\r\n                                    animationData={businesshiring}\r\n                                    background=\"transparent\"\r\n                                    speed=\"1\"\r\n                                    play\r\n                                    style={{ width: \"100%\", height: \"124px\" }}\r\n                                    autoPlay></Lottie>\r\n\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"cardHead\">\r\n                                    <h3> <span>Approval Hierarchy</span></h3>\r\n                                    <ul className=\"tackList apphierarchy mt-5 pt-2 pe-4 \">\r\n                                        {approvalHierarchyData && approvalHierarchyData?.length > 0 &&\r\n                                            approvalHierarchyData?.map(item => <li className='text-capitalize' key={item?.role_id}>{item?.role_id}</li>)} \r\n                                        <li>HR Recruiter</li>\r\n\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3 col-xl-2\">\r\n                        <CustomButton\r\n                            classNames=\"btn btn-outline-primary w-100 mb-2\"\r\n                            text=\"New Hiring\"\r\n                            handleClick={() => createMrfProcess(\"vacancy\")}\r\n                        />\r\n                        <CustomButton\r\n                            classNames=\"btn btn-primary gradientBg w-100\"\r\n                            text=\"Replacement\"\r\n                            handleClick={() => createMrfProcess(\"replacement\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateMrf\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { CustomButton, CustomDateRangePicker } from '../../globalComponents';\r\nimport CustomTable from '../../reuseableComponents/customTable/CustomTable';\r\nimport moment from 'moment-timezone'\r\n\r\nimport Image from '../../commanComponent/Image';\r\nimport { getBadgeColor } from '../../../utils/common';\r\nimport CustomSelect from '../../commanComponent/CustomSelect';\r\n\r\n\r\nconst MrfSubmissionTable = (props) => {\r\n    const {\r\n        allMrfListData,\r\n        isLoading,\r\n        currentPage,\r\n        setCurrentPage,\r\n        setSubmissionType,\r\n        submissionType,\r\n        getAllUserMrfData,\r\n        onHandleSubmissionApproveReject,\r\n        handleSubmissionViewModal,\r\n        handleStatusModal,\r\n        setApplyFor,\r\n        setApprovalStatus,\r\n        applyFor,\r\n        approvalStatus,\r\n        startDate,\r\n        endDate,\r\n        handleDateRangeChangeSubmission\r\n\r\n    } = props\r\n\r\n\r\n\r\n\r\n    const mrfSubmittedFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'auto_id', label: 'MRF ID' },\r\n        { key: 'hiring_for_name', label: 'Location' },\r\n        { key: 'type', label: 'Applied For' },\r\n        { key: 'action_by', label: 'Approval To' },\r\n        { key: 'approval_status_name', label: 'Approval Status' },\r\n        { key: 'mrf_status', label: 'MRF Status' },\r\n        { key: 'status', label: 'Status' },\r\n        { key: 'created_at', label: 'Created Date' },\r\n        { key: 'action', label: 'Action' }\r\n    ];\r\n\r\n    const mrfDraftFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'auto_id', label: 'MRF ID' },\r\n        { key: 'hiring_for_name', label: 'Location' },\r\n        { key: 'type', label: 'Applied For' },\r\n        { key: 'mrf_status', label: 'MRF Status' },\r\n        { key: 'created_at', label: 'Created Date' },\r\n        { key: 'action', label: 'Action' }\r\n    ];\r\n\r\n\r\n    const scopedSubmittedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        created_at: item => moment(item.created_at).format(\"DD-MM-YYYY\"),\r\n        mrf_status: item => (\r\n            <span\r\n                className={`badge ${getBadgeColor(item.mrf_status)}`}\r\n            >\r\n                {item.mrf_status}\r\n            </span>\r\n        ),\r\n        approval_status_name: item => (\r\n            <span\r\n                className={`badge ${getBadgeColor(item.approval_status_name)}`}\r\n            >\r\n                {item.approval_status_name}\r\n            </span>\r\n        ),\r\n        status: item => (\r\n            <span\r\n                onClick={() => handleStatusModal(item?._id)}\r\n            >\r\n                <Image imgSrc={\"images/info-orange-bg.svg\"} altText={\"\"} width={32}></Image>\r\n            </span>\r\n        ),\r\n\r\n        action: item => (\r\n            <div className=\"actionGroup d-flex gap-2\">\r\n\r\n                <span onClick={() => handleSubmissionViewModal(item?._id)}>\r\n                    <Image imgSrc={\"images/view-icon.svg\"} altText={\"\"} width={32}></Image>\r\n                </span>\r\n                {!(item?.is_submitted) && <span\r\n                    onClick={() => onHandleSubmissionApproveReject(item?._id)}\r\n                >\r\n                    <Image imgSrc={\"images/nextaction-Icon.svg\"} altText={\"\"}></Image>\r\n                </span>}\r\n            </div>\r\n        )\r\n    }), [allMrfListData]);\r\n\r\n    const scopedDraftSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        created_at: item => moment(item.created_at).format(\"DD-MM-YYYY\"),\r\n        mrf_status: item => (\r\n            <span\r\n                className={`badge ${getBadgeColor(item.mrf_status)}`}\r\n            >\r\n                {item.mrf_status}\r\n            </span>\r\n        ),\r\n        action: item => (\r\n            <div className=\"actionGroup d-flex gap-2\">\r\n\r\n                <span onClick={() => handleSubmissionViewModal(item?._id)}>\r\n                    <Image imgSrc={\"images/view-icon.svg\"} altText={\"\"} width={32}></Image>\r\n                </span>\r\n                {!(item?.is_submitted) && <span\r\n                    onClick={() => onHandleSubmissionApproveReject(item?._id)}\r\n                >\r\n                    <Image imgSrc={\"images/nextaction-Icon.svg\"} altText={\"\"}></Image>\r\n                </span>}\r\n            </div>\r\n        )\r\n    }), [allMrfListData]);\r\n\r\n    const handleSetType = (type) => {\r\n        setSubmissionType(type)\r\n        setCurrentPage(1)\r\n        setApprovalStatus('')\r\n        setApplyFor('')\r\n\r\n\r\n    }\r\n    const applyForData = [{ value: \"vacancy\", label: \"Vacancy\" }, { value: \"replacement\", label: \"Replacement\" }]\r\n    const approvalStatusData = [{ value: \"pending\", label: \"Pending\" }, { value: \"reject\", label: \"Reject\" }, { value: \"approve\", label: \"Approve\" }]\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"tab-pane fade active show\" id=\"mrfSubmissionTb\">\r\n            <div className=\"requestdata\">\r\n                <div className='row'>\r\n                    <div className='col-6'>\r\n                        <div className=\"d-flex align-items-center mb-4 \">\r\n                            <span className=\"fw-bold fs-6 text-black\">MRF Submission Status</span>\r\n                            <ul className=\"nav nav-tabs leaveTabs ms-3\">\r\n                                <li className=\"nav-item\">\r\n                                    <CustomButton\r\n                                        text=\"Submitted\"\r\n                                        classNames={`nav-link px-4 ${submissionType === \"submit\" ? \"active\" : \"\"}`}\r\n                                        handleClick={() => handleSetType(\"submit\")}\r\n                                    />\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <CustomButton\r\n                                        text=\"Draft\"\r\n                                        classNames={`nav-link px-4 ${submissionType == \"draft\" ? \"active\" : \"\"}`}\r\n                                        handleClick={() => handleSetType(\"draft\")}\r\n                                    />\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"d-flex justify-content-end gap-3\">\r\n                    <div className='selectRect'>\r\n                        <CustomSelect\r\n                            placeholder={\"Filter Applied For...\"}\r\n                            data={applyForData}\r\n                            value={applyFor}\r\n                            handleChange={(e) => { setApplyFor(e) }}\r\n                        />\r\n                    </div>\r\n                    {submissionType === \"submit\" && <div className='selectRect'>\r\n                        <CustomSelect\r\n                            placeholder={\"Filter Approval Status...\"}\r\n                            data={approvalStatusData}\r\n                            value={approvalStatus}\r\n                            handleChange={(e) => { setApprovalStatus(e) }}\r\n                        />\r\n                    </div>}\r\n                    <div className=\"selectDate \">\r\n                        <CustomDateRangePicker\r\n                            onDateRangeChange={(dateRange)=>handleDateRangeChangeSubmission(dateRange)}\r\n                            endDefaultDate={endDate}\r\n                            startDefaultDate={startDate}\r\n                            // maxDisableDates={endDate}\r\n                            \r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"tab-content\">\r\n                    <div className=\"tab-pane fade active show\" id=\"sumittedMrfStatus\">\r\n                        <CustomTable\r\n                            data={allMrfListData?.data}\r\n                            fields={submissionType === \"submit\" ? mrfSubmittedFields : mrfDraftFields}\r\n                            isLoading={isLoading}\r\n                            pagination={true}\r\n                            currentPage={currentPage}\r\n                            setCurrentPage={setCurrentPage}\r\n                            totalPages={allMrfListData?.totalPages}\r\n                            isHeader={false}\r\n                            tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                            scopedSlots={submissionType === \"submit\" ? scopedSubmittedSlots : scopedDraftSlots}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MrfSubmissionTable\r\n","import React, { useMemo } from 'react'\r\nimport Image from '../../commanComponent/Image'\r\nimport Button from '../../commanComponent/Button'\r\nimport MrfSubmissionView from './MrfModals/MrfSubmissionView'\r\nimport { Link } from 'react-router-dom'\r\nimport MrfApprovalModal from '../../modal/hiring/MrfApprovalModal'\r\nimport CustomePagination from '../../commanComponent/CustomePagination'\r\nimport CustomTable from '../../reuseableComponents/customTable/CustomTable'\r\nimport { CustomButton } from '../../globalComponents'\r\nimport moment from 'moment-timezone'\r\n\r\nconst MrfApprovalTable = (props) => {\r\n    const {\r\n        mrfApprovalData,\r\n        isLoading,\r\n        currentPage,\r\n        setApprovalCurrPage,\r\n        setApprovalType,\r\n        approvalType,\r\n        getAllUserMrfData,\r\n        onHandleApproveReject,\r\n        handleSubmissionViewModal,\r\n        \r\n    } = props\r\n\r\n    const mrfApprovalFields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'auto_id', label: 'MRF ID' },\r\n        { key: 'hiring_for_name', label: 'Location' },\r\n        { key: 'department_name', label: 'Department' },\r\n        { key: 'designation_name', label: 'Designation' },\r\n        { key: 'priority_name', label: 'Prority' },\r\n        { key: 'created_by_name', label: 'Created By' },\r\n        { key: 'created_at', label: 'Created At' },\r\n        { key: 'action', label: 'Action' }\r\n    ];\r\n\r\n    const scopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n\r\n        created_at: item => moment(item.created_at).format(\"DD-MM-YYYY\"),\r\n        action: item => (\r\n            <div className=\"actionGroup d-flex gap-2\">\r\n               \r\n                <span\r\n                 onClick={()=> handleSubmissionViewModal(item?.collection_id)}\r\n                >\r\n                    <Image imgSrc={\"images/view-icon.svg\"} altText={\"\"} width={32}></Image>\r\n                </span >\r\n                {(item?.action_type === \"pending\") && <span\r\n                onClick={()=>onHandleApproveReject(item?._id,item?.mrf_type)}\r\n                >\r\n                    <Image imgSrc={\"images/nextaction-Icon.svg\"} altText={\"\"}></Image>\r\n                </span>}\r\n\r\n            </div>\r\n        )\r\n    }), [mrfApprovalData]);\r\n\r\n\r\n    const handleSetType = (type) => {\r\n        setApprovalType(type)\r\n        setApprovalCurrPage(1)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tab-pane fade\" id=\"mrfApprovalTb\">\r\n                <div className=\"requestdata\">\r\n                    <div className=\"d-flex align-items-center mb-4\">\r\n                        <span className=\"fw-bold fs-6 text-black\">MRF Approval Status</span>\r\n                        <ul className=\"nav nav-tabs leaveTabs ms-3\">\r\n                            <li className=\"nav-item\">\r\n\r\n                                <CustomButton\r\n                                    text=\"Pending\"\r\n                                    classNames={`nav-link px-4 ${approvalType === \"pending\" ? \"active\" : \"\"}`}\r\n                                    handleClick={() => handleSetType(\"pending\")}\r\n                                />\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n\r\n                                <CustomButton\r\n                                    text=\"Approved\"\r\n                                    classNames={`nav-link px-4 ${approvalType === \"approve\" ? \"active\" : \"\"}`}\r\n                                    handleClick={() => handleSetType(\"approve\")}\r\n                                />\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n\r\n                                <CustomButton\r\n                                    text=\"Reject\"\r\n                                    classNames={`nav-link px-4 ${approvalType === \"reject\" ? \"active\" : \"\"}`}\r\n                                    handleClick={() => handleSetType(\"reject\")}\r\n                                />\r\n\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"tab-content\">\r\n                        <div className=\"tab-pane fade active show\" id=\"pendingMrfStatus\">\r\n                            <div className=\"table-responsive tableDiv text-nowrap\">\r\n                                <CustomTable\r\n                                    data={mrfApprovalData?.data}\r\n                                    fields={mrfApprovalFields}\r\n                                    isLoading={isLoading}\r\n                                    pagination={true}\r\n                                    currentPage={currentPage}\r\n                                    setCurrentPage={setApprovalCurrPage}\r\n                                    totalPages={mrfApprovalData?.totalPages}\r\n                                    isHeader={false}\r\n                                    tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                                    scopedSlots={scopedSlots}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MrfApprovalTable\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { mrfActions } from '../../../core/resource/actions'\r\nimport { pagination } from '../../../utils/Constants.config'\r\nimport MrfApprovalModal from '../../modal/hiring/MrfApprovalModal'\r\nimport ApproveRejectModal from '../../modal/ApproveRejectModal'\r\nimport MrfSubmissionView from './MrfModals/MrfSubmissionView'\r\nimport MrfStatusModal from './MrfModals/MrfStatusModal'\r\nimport moment from 'moment'\r\nimport MrfProceses from './MrfProceses'\r\nimport CreateMrf from './CreateMrf'\r\nimport MrfSubmissionTable from './MrfSubmissionTable'\r\nimport MrfApprovalTable from './MrfApprovalTable'\r\n\r\nconst Mrf = () => {\r\n    const dispatch = useDispatch()\r\n    const {\r\n        getAllUserMrfPending,\r\n        getAllUserMrfRes,\r\n        getAllUserMrfError,\r\n\r\n        getMrfDashboardAndHierarchyPending,\r\n        getMrfDashboardAndHierarchyRes,\r\n        getMrfDashboardAndHierarchyError,\r\n\r\n        getMrfForApprovalDataPending,\r\n        getMrfForApprovalDataRes,\r\n        getMrfForApprovalDataError,\r\n\r\n        approveRejectMrfPending,\r\n        approveRejectMrfRes,\r\n        approveRejectMrfError,\r\n\r\n        getMrfDataByIdError,\r\n        getMrfDataByIdRes,\r\n        getMrfDataByIdPending,\r\n\r\n        submitDraftMrfPending,\r\n        submitDraftMrfRes,\r\n        submitDraftMrfError,\r\n\r\n    } = useSelector(state => state.mrf)\r\n    const [allMrfListData, setAllMrfListData] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [approvalCurrPage, setApprovalCurrPage] = useState(1);\r\n    const [submissionType, setSubmissionType] = useState(\"submit\")\r\n    const [approvalType, setApprovalType] = useState(\"pending\")\r\n    const [mrfDashboardAndHierarchyData, setMrfDashboardAndHierarchyData] = useState()\r\n    const [mrfApprovalData, setMrfApprovalData] = useState([])\r\n    const approvalCalling = useRef(false);\r\n    const [showApproveRejectMrfModal, setShowApproveRejectMrfModal] = useState(false)\r\n    const [showSubmissionApproveRejectModal, setShowSubmissionApproveRejectModal] = useState(false)\r\n    const [mrfId, setMrfId] = useState('')\r\n    const [appliedFor, setAppliedFor] = useState('')\r\n    const [approveRejectComment, setApproveRejectComment] = useState('')\r\n    const [mrfSubmissionId, setMrfSubmissionId] = useState('')\r\n    const [showSubmitionViewModal, setShowSubmitionViewModal] = useState(false)\r\n    const [mrfByIdData, setMrfByIdData] = useState({})\r\n    const [openStatusModal, setOpenStatusModal] = useState(false)\r\n    const [applyFor, setApplyFor] = useState('')\r\n    const [approvalStatus, setApprovalStatus] = useState('')\r\n    const [startDate, setStartDate] = useState(moment().subtract(3, 'months').format('YYYY-MM-DD'))\r\n    const [endDate, setEndDate] = useState(moment().format('YYYY-MM-DD'))\r\n    useEffect(() => {\r\n        getMrfDashboardAndHierarchyData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getAllUserMrfData()\r\n    }, [currentPage, submissionType, approvalStatus, applyFor, endDate, startDate])\r\n\r\n\r\n    const onApproveRejectMrfSubmission = (type) => {\r\n        if (type) {\r\n            const params = {\r\n                query_type: \"submit\",\r\n                _id: mrfSubmissionId\r\n            }\r\n            dispatch(mrfActions.submitDraftMrfRequest(params))\r\n            setShowSubmissionApproveRejectModal(!showSubmissionApproveRejectModal)\r\n        }\r\n        else {\r\n            setShowSubmissionApproveRejectModal(!showSubmissionApproveRejectModal)\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (!submitDraftMrfPending) {\r\n            if (submitDraftMrfError) {\r\n                return;\r\n            }\r\n            if (submitDraftMrfRes) {\r\n                if (submitDraftMrfRes?.code === 200) {\r\n                    dispatch(mrfActions.handleClearMrfStore('HANDLE_CLEAR_SUBMIT_DRAFT_MRF_STORE'))\r\n                    getAllUserMrfData()\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        submitDraftMrfPending,\r\n        submitDraftMrfError,\r\n        submitDraftMrfRes\r\n    ]);\r\n\r\n    const getAllUserMrfData = (subType) => {\r\n        if (startDate && endDate) {\r\n            let params = {\r\n                query_type: \"user\",\r\n                type: subType || submissionType,\r\n                page: currentPage,\r\n                limit: pagination.limit,\r\n                start_date: moment(startDate).format(\"YYYY-MM-DD\"),\r\n                end_date: moment(endDate).format(\"YYYY-MM-DD\")\r\n            }\r\n            if (applyFor) params[\"applied_for\"] = applyFor?.value\r\n            if (approvalStatus) params[\"approval_status\"] = approvalStatus?.value\r\n            dispatch(mrfActions.getAllUserMrfRequest(params))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getAllUserMrfPending) {\r\n            if (getAllUserMrfError) {\r\n                return;\r\n            }\r\n            if (getAllUserMrfRes) {\r\n                if (getAllUserMrfRes?.code === 200) {\r\n                    const getAllUserMrfData = getAllUserMrfRes?.data\r\n                    setAllMrfListData(getAllUserMrfData)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllUserMrfRes,\r\n        getAllUserMrfError,\r\n        getAllUserMrfPending\r\n    ]);\r\n\r\n    // get Mrf Dashboard And Hierarchy Pending api call\r\n    const getMrfDashboardAndHierarchyData = () => {\r\n        dispatch(mrfActions.getMrfDashboardAndHierarchyRequest())\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getMrfDashboardAndHierarchyPending) {\r\n            if (getMrfDashboardAndHierarchyError) {\r\n                return;\r\n            }\r\n            if (getMrfDashboardAndHierarchyRes) {\r\n                if (getMrfDashboardAndHierarchyRes?.code === 200) {\r\n                    const mrfDashboardAndHierarchyTempData = getMrfDashboardAndHierarchyRes?.data\r\n                    setMrfDashboardAndHierarchyData(mrfDashboardAndHierarchyTempData)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getMrfDashboardAndHierarchyRes,\r\n        getMrfDashboardAndHierarchyError,\r\n        getMrfDashboardAndHierarchyPending\r\n    ]);\r\n\r\n    //  get Mrf Approval Data api call\r\n    useEffect(() => {\r\n        if (approvalCalling.current) {\r\n            getMrfApprovalData()\r\n        } else {\r\n            approvalCalling.current = true;\r\n        }\r\n    }, [approvalCurrPage, approvalType])\r\n\r\n\r\n    const getMrfApprovalData = (actionType, currPage) => {\r\n        const params = {\r\n            action_type: actionType || approvalType,\r\n            page: approvalCurrPage,\r\n            limit: pagination.limit,\r\n        }\r\n        dispatch(mrfActions.getMrfForApprovalDataRequest(params))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (!getMrfForApprovalDataPending) {\r\n            if (getMrfForApprovalDataError) {\r\n                return;\r\n            }\r\n            if (getMrfForApprovalDataRes) {\r\n                if (getMrfForApprovalDataRes?.code === 200) {\r\n                    const getMrfForApprovalTempData = getMrfForApprovalDataRes?.data\r\n                    setMrfApprovalData(getMrfForApprovalTempData)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getMrfForApprovalDataRes,\r\n        getMrfForApprovalDataError,\r\n        getMrfForApprovalDataPending\r\n    ]);\r\n\r\n    const onTabChange = (tbType) => {\r\n        if (tbType === \"mrfApprovalTb\") {\r\n            getMrfApprovalData()\r\n        } else {\r\n            getAllUserMrfData()\r\n        }\r\n\r\n    }\r\n    // approve reject mrf\r\n    const onApproveRejectMrf = (type) => {\r\n        if (type) {\r\n            const params = {\r\n                _id: mrfId,\r\n                action_type: type,\r\n                comment: approveRejectComment\r\n            }\r\n            dispatch(mrfActions?.approveRejectMrfRequest(params))\r\n        } else {\r\n            setShowApproveRejectMrfModal(!showApproveRejectMrfModal)\r\n        }\r\n\r\n    }\r\n\r\n    const onHandleApproveReject = (id, type) => {\r\n        setMrfId(id)\r\n        setAppliedFor(type)\r\n        setShowApproveRejectMrfModal(!showApproveRejectMrfModal)\r\n    }\r\n    // approve reject submission modal\r\n    const onHandleSubmissionApproveReject = (id) => {\r\n        setMrfSubmissionId(id)\r\n        setShowSubmissionApproveRejectModal(!showSubmissionApproveRejectModal)\r\n    }\r\n    useEffect(() => {\r\n        if (!approveRejectMrfPending) {\r\n            if (approveRejectMrfError) {\r\n                setShowApproveRejectMrfModal(!showApproveRejectMrfModal)\r\n                dispatch(mrfActions.handleClearMrfStore('HANDLE_CLEAR_APPROVE_REJECT_MRF_STORE'))\r\n                return;\r\n            }\r\n            if (approveRejectMrfRes) {\r\n                if (approveRejectMrfRes?.code === 200) {\r\n                    setMrfId('')\r\n                    setAppliedFor('')\r\n                    setApproveRejectComment('')\r\n                    getMrfApprovalData()\r\n                    dispatch(mrfActions.handleClearMrfStore('HANDLE_CLEAR_APPROVE_REJECT_MRF_STORE'))\r\n                    setShowApproveRejectMrfModal(!showApproveRejectMrfModal)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        approveRejectMrfRes,\r\n        approveRejectMrfError,\r\n        approveRejectMrfPending\r\n    ]);\r\n\r\n    const handleSubmissionViewModal = (id) => {\r\n        if (id) {\r\n            getMrfDataById(id)\r\n            setShowSubmitionViewModal(!showSubmitionViewModal)\r\n        }\r\n        setShowSubmitionViewModal(!showSubmitionViewModal)\r\n        dispatch(mrfActions.handleClearMrfStore('HANDLE_CLEAR_GET_MRF_DATA_BY_ID_STORE'))\r\n\r\n    }\r\n\r\n    const getMrfDataById = (id) => {\r\n\r\n        const params = {\r\n            _id: id\r\n        }\r\n        dispatch(mrfActions.getMrfDataByIdRequest(params))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getMrfDataByIdPending) {\r\n            if (getMrfDataByIdError) {\r\n                return;\r\n            }\r\n            if (getMrfDataByIdRes) {\r\n                if (getMrfDataByIdRes?.code === 200) {\r\n                    const getMrfDataById = getMrfDataByIdRes?.data\r\n                    setMrfByIdData(getMrfDataById)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getMrfDataByIdPending,\r\n        getMrfDataByIdError,\r\n        getMrfDataByIdRes\r\n    ]);\r\n\r\n    const handleStatusModal = (id) => {\r\n        if (id) {\r\n            getMrfDataById(id)\r\n            setOpenStatusModal(!openStatusModal)\r\n        }\r\n        setOpenStatusModal(!openStatusModal)\r\n        dispatch(mrfActions.handleClearMrfStore('HANDLE_CLEAR_GET_MRF_DATA_BY_ID_STORE'))\r\n\r\n    }\r\n    const handleDateRangeChangeSubmission = (dateRange) => {\r\n\r\n        setStartDate(dateRange[0])\r\n        setEndDate(dateRange[1])\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            \r\n            <MrfProceses mrfDashboardAndHierarchyData={mrfDashboardAndHierarchyData} />\r\n            <CreateMrf mrfDashboardAndHierarchyData={mrfDashboardAndHierarchyData} />\r\n\r\n            <div class=\"cardBox myRequest mb-3\">\r\n                <div class=\"cardHead\">\r\n                    <img src=\"images/myrequest-icon.svg\" alt=\"\" width=\"35\" />\r\n                    <h3 class=\"ms-2\">MRF Status</h3>\r\n                </div>\r\n                <ul class=\"nav nav-tabs leaveTabs mb-4\">\r\n                    <li class=\"nav-item\">\r\n                        {/* <CustomButton\r\n                        text={\"MRF Submission\"}\r\n                        class={`nav-link active`}\r\n                        /> */}\r\n                        <button\r\n                            class=\"nav-link active\"\r\n                            data-bs-toggle=\"tab\"\r\n                            data-bs-target=\"#mrfSubmissionTb\"\r\n                            type=\"button\"\r\n                            onClick={() => onTabChange(\"mrfSubmissionTb\")}\r\n                        >\r\n                            MRF Submission\r\n                        </button>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <button\r\n                            class=\"nav-link\"\r\n                            data-bs-toggle=\"tab\"\r\n                            data-bs-target=\"#mrfApprovalTb\"\r\n                            type=\"button\"\r\n                            onClick={() => onTabChange(\"mrfApprovalTb\")}\r\n                        >\r\n                            MRF Approval\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n                <div class=\"tab-content\">\r\n                    <MrfSubmissionTable\r\n                        allMrfListData={allMrfListData}\r\n                        isLoading={getAllUserMrfPending}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                        setSubmissionType={setSubmissionType}\r\n                        submissionType={submissionType}\r\n                        getAllUserMrfData={getAllUserMrfData}\r\n                        onHandleSubmissionApproveReject={onHandleSubmissionApproveReject}\r\n                        handleSubmissionViewModal={handleSubmissionViewModal}\r\n                        handleStatusModal={handleStatusModal}\r\n                        setApplyFor={setApplyFor}\r\n                        setApprovalStatus={setApprovalStatus}\r\n                        applyFor={applyFor}\r\n                        approvalStatus={approvalStatus}\r\n                        endDate={endDate}\r\n                        startDate={startDate}\r\n                        handleDateRangeChangeSubmission={handleDateRangeChangeSubmission}\r\n\r\n                    />\r\n\r\n                    <MrfApprovalTable\r\n                        mrfApprovalData={mrfApprovalData}\r\n                        isLoading={getMrfForApprovalDataPending}\r\n                        currentPage={approvalCurrPage}\r\n                        setApprovalCurrPage={setApprovalCurrPage}\r\n                        setApprovalType={setApprovalType}\r\n                        approvalType={approvalType}\r\n                        getAllUserMrfData={getAllUserMrfData}\r\n                        onHandleApproveReject={onHandleApproveReject}\r\n                        handleSubmissionViewModal={handleSubmissionViewModal}\r\n\r\n\r\n                    />\r\n\r\n                    {showApproveRejectMrfModal && <MrfApprovalModal\r\n                        title={'MRF Approval'}\r\n                        onApproveReject={onApproveRejectMrf}\r\n                        isShow={showApproveRejectMrfModal}\r\n                        // isLoading={approveRejectMrfPending}\r\n                        id={mrfId}\r\n                        appliedFor={appliedFor}\r\n                        setComment={setApproveRejectComment}\r\n                        comment={approveRejectComment}\r\n\r\n                    />}\r\n\r\n                    {showSubmissionApproveRejectModal && (\r\n                        <ApproveRejectModal\r\n                            onApproveReject={onApproveRejectMrfSubmission}\r\n                            isShow={showSubmissionApproveRejectModal}\r\n                            desc={\"You want to Submit MRF \"}\r\n                            // btnRightLoading={approveRejectMrfPending}\r\n                            btnTextLeft={\"Cancel\"}\r\n                            btnTextRight={\"Send\"}\r\n                        />)\r\n                    }\r\n                </div>\r\n            </div>\r\n            <MrfSubmissionView\r\n                handleSubmissionViewModal={handleSubmissionViewModal}\r\n                openModel={showSubmitionViewModal}\r\n                mrfByIdData={mrfByIdData}\r\n\r\n            />\r\n            {/* <CompleteMrfSteps /> */}\r\n            <MrfStatusModal\r\n                handleOpenClose={handleStatusModal}\r\n                openModel={openStatusModal}\r\n                mrfByIdData={mrfByIdData}\r\n            />\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Mrf\r\n"],"names":["props","title","onApproveReject","isShow","isLoading","btnTextLeft","btnTextRight","setComment","id","appliedFor","comment","_jsx","_Fragment","children","className","style","display","opacity","_jsxs","CustomButton","classNames","handleClick","placeholder","value","height","onChange","e","target","text","_allMrfData$type_of_a","_allMrfData$learning_","_allMrfData$learning_2","_allMrfData$learning_3","_allMrfData$type_of_a2","_allMrfData$type_of_a3","openModel","handleSubmissionViewModal","mrfByIdData","Navigate","useNavigate","activeTab","setActiveTab","useState","allMrfData","setAllMrfData","interviewrData","setInterviewerData","handleActiveTab","type","useEffect","data","_mrfData$interview_da","mrfData","Array","isArray","interview_data","length","map","item","department_name","designation_name","interview_stage_name","interview_type_name","interviewer_name","tabIndex","visibility","width","onClick","name","disabled","position_name","priority_name","emp_id_name","min_qualififcation_name","business_impact_name","type_of_appointment","year_of_experience_name","learning_development_cost","is_cost","max_cost","duration","hiring_for_name","preferred_qualification_name","mrf_justification","responsiblities","training_certificate_name","domain_knowledge","other_skills","role_summary","index","Object","entries","_ref","key","htmlFor","transformKey","is_submitted","moveToMrfProcess","_id","handleOpenClose","statusSteps","setStatusSteps","mrfStepsStatus","setMrfStepsStatus","_Object$keys","keys","approval_status","mrf_statuses","src","alt","ind","class","action_type","role_name","approver_name","mrfDashboardAndHierarchyData","dashboardCounts","setDashboardCounts","dashboard_count","renderDashboardCards","useMemo","count","toTitleCase","approvalHierarchyData","setApprovalHierarchyData","approval_hierarchy","createMrfProcess","Lottie","loop","animationData","businesshiring","background","speed","play","autoPlay","role_id","allMrfListData","currentPage","setCurrentPage","setSubmissionType","submissionType","getAllUserMrfData","onHandleSubmissionApproveReject","handleStatusModal","setApplyFor","setApprovalStatus","applyFor","approvalStatus","startDate","endDate","handleDateRangeChangeSubmission","scopedSubmittedSlots","sn","_","created_at","moment","format","mrf_status","getBadgeColor","approval_status_name","status","Image","imgSrc","altText","action","scopedDraftSlots","handleSetType","CustomSelect","label","handleChange","CustomDateRangePicker","onDateRangeChange","dateRange","endDefaultDate","startDefaultDate","CustomTable","fields","pagination","totalPages","isHeader","tableStyle","padding","boxShadow","scopedSlots","mrfApprovalData","setApprovalCurrPage","setApprovalType","approvalType","onHandleApproveReject","collection_id","mrf_type","Mrf","dispatch","useDispatch","getAllUserMrfPending","getAllUserMrfRes","getAllUserMrfError","getMrfDashboardAndHierarchyPending","getMrfDashboardAndHierarchyRes","getMrfDashboardAndHierarchyError","getMrfForApprovalDataPending","getMrfForApprovalDataRes","getMrfForApprovalDataError","approveRejectMrfPending","approveRejectMrfRes","approveRejectMrfError","getMrfDataByIdError","getMrfDataByIdRes","getMrfDataByIdPending","submitDraftMrfPending","submitDraftMrfRes","submitDraftMrfError","useSelector","state","mrf","setAllMrfListData","approvalCurrPage","setMrfDashboardAndHierarchyData","setMrfApprovalData","approvalCalling","useRef","showApproveRejectMrfModal","setShowApproveRejectMrfModal","showSubmissionApproveRejectModal","setShowSubmissionApproveRejectModal","mrfId","setMrfId","setAppliedFor","approveRejectComment","setApproveRejectComment","mrfSubmissionId","setMrfSubmissionId","showSubmitionViewModal","setShowSubmitionViewModal","setMrfByIdData","openStatusModal","setOpenStatusModal","setStartDate","subtract","setEndDate","getMrfDashboardAndHierarchyData","code","mrfActions","handleClearMrfStore","subType","params","query_type","page","limit","start_date","end_date","getAllUserMrfRequest","getMrfDashboardAndHierarchyRequest","mrfDashboardAndHierarchyTempData","current","getMrfApprovalData","actionType","currPage","getMrfForApprovalDataRequest","getMrfForApprovalTempData","onTabChange","tbType","getMrfDataById","getMrfDataByIdRequest","MrfProceses","CreateMrf","MrfSubmissionTable","MrfApprovalTable","MrfApprovalModal","approveRejectMrfRequest","ApproveRejectModal","submitDraftMrfRequest","desc","MrfSubmissionView","MrfStatusModal"],"sourceRoot":""}