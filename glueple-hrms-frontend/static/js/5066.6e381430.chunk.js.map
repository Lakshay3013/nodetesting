{"version":3,"file":"static/js/5066.6e381430.chunk.js","mappings":"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","sources":["components/commanComponent/BackIcon.js","components/payrollAdmin/payRuns/regularPayroll/RegularPayRollCard.js","components/payrollAdmin/payRuns/regularPayroll/RegularPayRollTable.js","components/payrollAdmin/payRuns/regularPayroll/RegularPayRoll.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst BackIcon = () => {\r\n    return (\r\n        <div >\r\n            <svg\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                x={0}\r\n                y={0}\r\n                viewBox=\"0 0 512 512\"\r\n                xmlSpace=\"preserve\"\r\n                className=\"icon icon-xlg me-2\"\r\n                style={{\r\n                    height: \"23px\",\r\n                    width: \"23px\",\r\n                    cursor: \"pointer\",\r\n                }}\r\n            >\r\n                <circle id=\"Oval-3\" opacity=\".1\" fill=\"#2B76D2\" cx={256} cy={256} r={256} />\r\n                <path\r\n                    fill=\"#2B76D2\"\r\n                    d=\"M277.3 362.7c-5.3 0-10.6-2-14.7-5.9l-85.3-81.5c-4.1-3.9-6.5-9.3-6.6-15-.1-5.7 2-11.1 5.9-15.2l85.3-89.1c8.1-8.5 21.7-8.8 30.2-.7 8.5 8.1 8.8 21.6.7 30.2l-70.6 73.7 69.9 66.8c8.5 8.1 8.8 21.6.7 30.1-4.2 4.4-9.8 6.6-15.5 6.6z\"\r\n                />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackIcon\r\n","import React from 'react'\r\nimport { dateFormate } from '../../../../utils/common'\r\nimport { CustomButton } from '../../../globalComponents'\r\n\r\nconst RegularPayRollCard = (props) => {\r\n    const { payRunDashboardData } = props\r\n    return (\r\n        <>\r\n            <div class=\"cardBox mypayroll mb-3\">\r\n                \r\n                <div className=\"row \">\r\n                    <div className=\"col-md-3 d-flex flex-wrap\">\r\n                        <h2 className=\"w-100\"><span>Regular</span> Payroll</h2>\r\n                        <figure className=\"rupeeImageGroup mt-auto\">\r\n                            <img src=\"images/rupeeBg.svg\" alt=\"\" width={130} />\r\n                            {/* <lottie-player src=\"images/rupee.json\" background=\"transparent\" speed={1} style={{ width: '65px', height: '65px' }} loop autoPlay /> */}\r\n                        </figure>\r\n                    </div>\r\n                    <div className=\"col-md-9\">\r\n                        <div className=\"row px-md-1\">\r\n                            <div className=\"col-md-4 px-md-2 my-2\">\r\n                                <div className=\"pyrollTxt\">\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <figure>\r\n                                            <img src=\"images/pay-days-icon.svg\" alt=\"\" width={35} />\r\n                                        </figure>\r\n                                        <span>Pay Month</span>\r\n                                    </div>\r\n                                    <div className>\r\n                                        <strong>{dateFormate(payRunDashboardData?.year_month, \"MMM YYYY\")}</strong>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4 px-md-2 my-2\">\r\n                                <div className=\"pyrollTxt\">\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <figure><img src=\"images/present-days-icon.svg\" alt=\"\" width={35} /></figure>\r\n                                        <span>Employees</span>\r\n                                    </div>\r\n                                    <div className>\r\n                                        <strong>{payRunDashboardData?.total_employees}</strong>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4 px-md-2 my-2\">\r\n                                <div className=\"pyrollTxt\">\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <figure><img src=\"images/bonus-icon.svg\" alt=\"\" width={35} /></figure>\r\n                                        <span>Employees Net Pays</span>\r\n                                    </div>\r\n                                    <div className>\r\n                                        <strong>Rs <b>\r\n                                            {payRunDashboardData?.total_net_pay}\r\n                                        </b>\r\n                                        </strong>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4 px-md-2 my-2\">\r\n                                <div className=\"pyrollTxt\">\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <figure> <img src=\"images/bonus-icon.svg\" alt=\"\" width={35} /></figure>\r\n                                        <span>Payroll Cost</span>\r\n                                    </div>\r\n                                    <div className>\r\n                                        <strong>Rs <b> {payRunDashboardData?.payroll_cost}</b></strong>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4 px-md-2 my-2\">\r\n                                <div className=\"pyrollTxt\">\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <figure><img src=\"images/bonus-icon.svg\" alt=\"\" width={35} /></figure>\r\n                                        <span>Hold Payroll Cost</span>\r\n                                    </div>\r\n                                    <div className=\"\">\r\n                                        {/* <button type=\"button\" className=\"viewBtn\"><i className=\"bi bi-eye\" /></button> */}\r\n                                        <strong>Rs <b>{payRunDashboardData?.hold_payroll_cost}</b></strong>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-4 px-md-2 my-2\">\r\n                                <div className=\"pyrollTxt\">\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <figure><img src=\"images/paymonth-icon.svg\" alt=\"\" width={35} /></figure>\r\n                                        <span>Hold Employee Net Pay</span>\r\n                                    </div>\r\n                                    <div className=\"\">\r\n                                        {/* <button type=\"button\" className=\"viewBtn\"><i className=\"bi bi-eye\" /></button> */}\r\n                                        <div>\r\n\r\n                                            <strong>Rs <b>{payRunDashboardData?.hold_net_pay}</b></strong>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegularPayRollCard\r\n","import React, { useMemo, useState } from 'react'\r\nimport { CustomTable } from '../../../reuseableComponents';\r\nimport { CustCheckbox } from '../../../commanComponent';\r\n\r\nconst RegularPayRollTable = (props) => {\r\n    const { payRunData,currentPage,setCurrentPage ,isLoading} = props\r\n    const payrollTableFields = [\r\n        { key: \"sn\", label: \"SN\" },\r\n        // { key: \"checkRegularPayroll\", label: \"select\" },\r\n        { key: \"employee_name\", label: \"Employee Name\" },\r\n        { key: \"emp_code\", label: \"Employee Code\" },\r\n        { key: \"paid_days\", label: \"Present Days\" },\r\n        { key: \"arrear_day\", label: \"Arrear Day\" },\r\n        { key: \"is_hold\", label: \"Is Hold\" },\r\n        \r\n    ];\r\n\r\n    const loanScopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        // checkRegularPayroll: () => (\r\n        //     <span>\r\n\r\n        //         <CustCheckbox\r\n        //             key={\"checkRegularPayroll\"}\r\n        //             id={`checkRegularPayroll`}\r\n        //             // checked={isActive}\r\n        //             // handleChange={(e) => setIsActive(!isActive)}\r\n        //             name={\"checkRegularPayroll\"}\r\n        //         />\r\n        //     </span>\r\n        // )\r\n\r\n\r\n\r\n    }), [payRunData])\r\nconsole.log(payRunData?.data,\"payRunData---------\")\r\n    return (\r\n        <>\r\n        {/* <CustCheckbox\r\n            key={\"checkRegularPayroll\"}\r\n            id={`checkRegularPayroll`}\r\n            label={\"Select All\"}\r\n            // checked={isActive}\r\n            // handleChange={(e) => setIsActive(!isActive)}\r\n            name={\"checkRegularPayroll\"}\r\n            labelClass={\"text-primary \"}\r\n        /> */}\r\n            <CustomTable\r\n                data={payRunData &&payRunData?.data}\r\n                fields={payrollTableFields}\r\n                isLoading={isLoading}\r\n                pagination={true}\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={payRunData?.totalPages}\r\n                // tableName={\"\"}\r\n                // onSearch={handleSearch}\r\n                isHeader={false}\r\n                tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                scopedSlots={loanScopedSlots}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegularPayRollTable\r\n","import React, { useEffect, useState } from 'react'\r\nimport RegularPayRollCard from './RegularPayRollCard'\r\nimport { CustomTabs } from '../../../reuseableComponents';\r\nimport RegularPayRollTable from './RegularPayRollTable';\r\nimport { CustomButton } from '../../../globalComponents';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { payrollActions } from '../../../../core/resource/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { dateFormate } from '../../../../utils/common';\r\nimport BackIcon from '../../../commanComponent/BackIcon';\r\nimport { pagination } from '../../../../utils/Constants.config';\r\n\r\nconst RegularPayRoll = () => {\r\n  const { payMonth } = useParams()\r\n  const dispatch = useDispatch()\r\n  const {\r\n    getPayRunPending,\r\n    getPayRunRes,\r\n    getPayRunError,\r\n\r\n    getPayRunDashboardDataPending,\r\n    getPayRunDashboardDataRes,\r\n    getPayRunDashboardDataError,\r\n\r\n    approvePayrollPending,\r\n    approvePayrollRes,\r\n    approvePayrollError,\r\n\r\n  } = useSelector(state => state.payroll)\r\n  const [payRunData, setPayRunData] = useState('')\r\n  const [payRunDashboardData, setPayRunDashboardData] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n\r\n  useEffect(() => {\r\n    if (payMonth && currentPage) {\r\n      const payload = {\r\n        month: dateFormate(payMonth, \"YYYY-MM\"),\r\n        page: currentPage,\r\n        limit: pagination.limit\r\n      }\r\n      getPayRunData(payload)\r\n    }\r\n  }, [payMonth, currentPage])\r\n  useEffect(() => {\r\n    if (payMonth) {\r\n      const payload = {\r\n        month: dateFormate(payMonth, \"YYYY-MM\")\r\n      }\r\n      getPayRunDashboardData(payload)\r\n    }\r\n  }, [payMonth])\r\n  /* Get Pay Run Data */\r\n  const getPayRunData = (payload) => {\r\n    dispatch(payrollActions.getPayRunRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!getPayRunPending) {\r\n      if (getPayRunError) {\r\n        return;\r\n      }\r\n      if (getPayRunRes) {\r\n        if (getPayRunRes?.code === 200) {\r\n          setPayRunData(getPayRunRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getPayRunRes,\r\n    getPayRunError,\r\n    getPayRunPending\r\n  ]);\r\n\r\n\r\n  /* Get Pay Run Data */\r\n  const getPayRunDashboardData = (payload) => {\r\n    dispatch(payrollActions.getPayRunDashboardDataRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!getPayRunDashboardDataPending) {\r\n      if (getPayRunDashboardDataError) {\r\n        return;\r\n      }\r\n      if (getPayRunDashboardDataRes) {\r\n        if (getPayRunDashboardDataRes?.code === 200) {\r\n          setPayRunDashboardData(getPayRunDashboardDataRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getPayRunDashboardDataRes,\r\n    getPayRunDashboardDataError,\r\n    getPayRunDashboardDataPending\r\n  ]);\r\n\r\n  /* Get Pay Run Data */\r\n  const approvePayroll = () => {\r\n    const {\r\n      payroll_cost,\r\n      total_net_pay,\r\n      tex,\r\n      pre_tex_deduction,\r\n      pay_date,\r\n      year_month,\r\n      total_employees,\r\n    }=payRunDashboardData\r\n    const payload ={\r\n      payroll_cost,\r\n      payroll_netPay:total_net_pay,\r\n      tex:tex||0,\r\n      pre_tex_deduction:0,\r\n      employee_no:total_employees,\r\n      pay_date:'',\r\n      pay_month:year_month,\r\n      status:true\r\n    }\r\n    dispatch(payrollActions.approvePayrollRequest(payload))\r\n  }\r\n  useEffect(() => {\r\n    if (!approvePayrollPending) {\r\n      if (approvePayrollError) {\r\n        return;\r\n      }\r\n      if (approvePayrollRes) {\r\n        if (approvePayrollRes?.code === 200) {\r\n          setPayRunDashboardData(approvePayrollRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    approvePayrollRes,\r\n    approvePayrollError,\r\n    approvePayrollPending\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <RegularPayRollCard\r\n        payRunDashboardData={payRunDashboardData}\r\n      />\r\n      <div className='cardBox'>\r\n        <div className=\"cardHead d-flex justify-content-between\">\r\n          <div className=\"d-flex align-items-center\">\r\n            <Link to={\"/pay-runs\"} ><BackIcon /></Link>\r\n            <div className=\"\">\r\n              <h3> Home</h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"searchB me-0 \">\r\n            <CustomButton\r\n              classNames={\"btn btn-primary gradientBg\"}\r\n              // handleClick={() => toggleCreateUpdateHierarchyModal()}\r\n              text={\"Send Salary Slip To Selected\"}\r\n              icon={<i class=\"fa fa-envelope mt-1\" aria-hidden=\"true\"></i>}\r\n            />\r\n          </div>\r\n        </div>\r\n        <RegularPayRollTable\r\n          payRunData={payRunData}\r\n          currentPage={currentPage}\r\n          setCurrentPage={setCurrentPage}\r\n          isLoading={getPayRunPending}\r\n        />\r\n        <div className='d-flex justify-content-end'>\r\n            <CustomButton\r\n              isLoading={approvePayrollPending}\r\n              classNames={\"btn btn-primary gradientBg\"}\r\n              handleClick={() => approvePayroll()}\r\n              text={\"Approve Payroll\"}\r\n              icon={<i class=\"fa fa-check mt-1\" aria-hidden=\"true\"></i>}\r\n            />\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default RegularPayRoll\r\n"],"names":["BackIcon","_jsx","children","_jsxs","version","id","x","y","viewBox","xmlSpace","className","style","height","width","cursor","opacity","fill","cx","cy","r","d","props","payRunDashboardData","_Fragment","class","src","alt","dateFormate","year_month","total_employees","total_net_pay","payroll_cost","hold_payroll_cost","hold_net_pay","payRunData","currentPage","setCurrentPage","isLoading","loanScopedSlots","useMemo","sn","_","index","console","log","data","CustomTable","fields","key","label","pagination","totalPages","isHeader","tableStyle","padding","boxShadow","scopedSlots","RegularPayRoll","payMonth","useParams","dispatch","useDispatch","getPayRunPending","getPayRunRes","getPayRunError","getPayRunDashboardDataPending","getPayRunDashboardDataRes","getPayRunDashboardDataError","approvePayrollPending","approvePayrollRes","approvePayrollError","useSelector","state","payroll","setPayRunData","useState","setPayRunDashboardData","useEffect","payload","month","page","limit","getPayRunData","getPayRunDashboardData","payrollActions","getPayRunRequest","code","getPayRunDashboardDataRequest","RegularPayRollCard","Link","to","CustomButton","classNames","text","icon","RegularPayRollTable","handleClick","approvePayroll","tex","pre_tex_deduction","pay_date","payroll_netPay","employee_no","pay_month","status","approvePayrollRequest"],"sourceRoot":""}