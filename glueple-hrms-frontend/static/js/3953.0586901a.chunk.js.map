{"version":3,"file":"static/js/3953.0586901a.chunk.js","mappings":"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","sources":["components/commanComponent/BackIcon.js","components/travelAndClaim/claim/AddUpdateTravelClaims.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst BackIcon = () => {\r\n    return (\r\n        <div >\r\n            <svg\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                x={0}\r\n                y={0}\r\n                viewBox=\"0 0 512 512\"\r\n                xmlSpace=\"preserve\"\r\n                className=\"icon icon-xlg me-2\"\r\n                style={{\r\n                    height: \"23px\",\r\n                    width: \"23px\",\r\n                    cursor: \"pointer\",\r\n                }}\r\n            >\r\n                <circle id=\"Oval-3\" opacity=\".1\" fill=\"#2B76D2\" cx={256} cy={256} r={256} />\r\n                <path\r\n                    fill=\"#2B76D2\"\r\n                    d=\"M277.3 362.7c-5.3 0-10.6-2-14.7-5.9l-85.3-81.5c-4.1-3.9-6.5-9.3-6.6-15-.1-5.7 2-11.1 5.9-15.2l85.3-89.1c8.1-8.5 21.7-8.8 30.2-.7 8.5 8.1 8.8 21.6.7 30.2l-70.6 73.7 69.9 66.8c8.5 8.1 8.8 21.6.7 30.1-4.2 4.4-9.8 6.6-15.5 6.6z\"\r\n                />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackIcon\r\n","import React, { useEffect, useReducer, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { travelAndClaimAction } from '../../../core/resource/actions'\r\nimport { CustomButton, CustomError } from '../../globalComponents'\r\nimport { Icon, Input, Label } from '../../commanComponent'\r\nimport CustomSelect from '../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport TableDataHeader from '../../reuseableComponents/customTable/TableDataHeader'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport BackIcon from '../../commanComponent/BackIcon'\r\nimport Image from '../../commanComponent/Image'\r\n\r\nconst AddUpdateTravelClaims = () => {\r\n    const dispatch = useDispatch()\r\n    const {\r\n\r\n        createClaimPending,\r\n        createClaimRes,\r\n        createClaimError,\r\n\r\n        updateClaimPending,\r\n        updateClaimRes,\r\n        updateClaimError,\r\n\r\n        getAllTravelApprovalDataPending,\r\n        getAllTravelApprovalDataRes,\r\n        getAllTravelApprovalDataError,\r\n\r\n        getAllTravelTypePending,\r\n        getAllTravelTypeRes,\r\n        getAllTravelTypeError,\r\n\r\n        selectedTravelClaimDetail\r\n    } = useSelector(state => state.travelAndClaim)\r\n    const { t } = useCustomTranslation()\r\n    const fileInputRef = useReducer(null);\r\n    const navigate =useNavigate()\r\n    const [allTravelApprovalData, setAllTravelApprovalData] = useState('')\r\n    const [travelTypeListData, setTravelTypeListData] = useState('')\r\n    const [errors, setErrors] = useState({})\r\n    // const [selectedTravelClaimDetail, setSelectedTravelClaimData] = useState('')\r\n    const [actionBtnType, setActionBtnType] = useState('')\r\n    const [travelName, setTravelName] = useState()\r\n    const [travelClaimHeader, setTravelClaimHeader] = useState([\r\n        { label: 'S.N' },\r\n        { label: 'Travel Type' },\r\n        { label: 'Amount' },\r\n        { label: 'Bill No' },\r\n        { label: 'Bill Image ' },\r\n        { label: 'Date' },\r\n        { label: 'Action' }\r\n    ])\r\n    const [travelClaimDetailData, setTravelClaimDetailData] = useState([\r\n        { travelType: null, amount: '', date: '', billNo: '', billImage: '' }\r\n    ])\r\n    useEffect(() => {\r\n        getAllTravelApprovalDataClaim()\r\n        getTravelTypeData()\r\n    }, [])\r\n\r\n\r\n    const getAllTravelApprovalDataClaim = () => {\r\n        dispatch(travelAndClaimAction.getAllTravelApprovalDataRequest())\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getAllTravelApprovalDataPending) {\r\n            if (getAllTravelApprovalDataError) {\r\n                return;\r\n            }\r\n            if (getAllTravelApprovalDataRes) {\r\n                if (getAllTravelApprovalDataRes?.code === 200) {\r\n                    setAllTravelApprovalData(getAllTravelApprovalDataRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n\r\n        getAllTravelApprovalDataPending,\r\n        getAllTravelApprovalDataRes,\r\n        getAllTravelApprovalDataError,\r\n    ]);\r\n\r\n    /*Get Travel Type Data */\r\n    const getTravelTypeData = () => {\r\n        dispatch(travelAndClaimAction.getAllTravelTypeRequest());\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getAllTravelTypePending) {\r\n            if (getAllTravelTypeError) {\r\n                return;\r\n            }\r\n            if (getAllTravelTypeRes) {\r\n                if (getAllTravelTypeRes?.code === 200) {\r\n                    setTravelTypeListData(getAllTravelTypeRes?.data)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllTravelTypePending,\r\n        getAllTravelTypeRes,\r\n        getAllTravelTypeError\r\n    ]);\r\n\r\n    const tdStyle = {\r\n        padding: '0.75rem',\r\n        verticalAlign: 'top',\r\n        borderTop: '1px solid #dee2e6',\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    // Handle form changes for individual rows\r\n    const handleFromChange = (e, index, fieldName) => {\r\n        // const { name, value } = e.target || {};\r\n        const name = fieldName || e.target?.name;\r\n        const { value } = e?.target ? e?.target : { value: e };\r\n        const updatedData = [...travelClaimDetailData];\r\n        updatedData[index] = { ...updatedData[index], [name]: value };\r\n        setTravelClaimDetailData(updatedData);\r\n    };\r\n\r\n    // Handle file upload\r\n    const handleFileChange = (e, index) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const updatedData = [...travelClaimDetailData];\r\n            updatedData[index] = { ...updatedData[index], billImage: file };\r\n            setTravelClaimDetailData(updatedData);\r\n        }\r\n    };\r\n\r\n    // Add a new row with default values\r\n    const handleAddRow = () => {\r\n        setTravelClaimDetailData([\r\n            ...travelClaimDetailData,\r\n            { travelType: '', amount: '', date: '', billNo: '', billImage: null }\r\n        ]);\r\n    };\r\n\r\n    // Remove a row by index\r\n    const handleRemoveRow = (index) => {\r\n        const updatedData = travelClaimDetailData.filter((_, i) => i !== index);\r\n        setTravelClaimDetailData(updatedData);\r\n    };\r\n\r\n    const renderTableRows = () => {\r\n        return travelClaimDetailData?.map((item, index) => (\r\n            <tr key={index}>\r\n                <td style={tdStyle} className='mt-2'>{index + 1}</td>\r\n                <td style={{ ...tdStyle, width: \"250px\" }}>\r\n                    <CustomSelect\r\n                        data={travelTypeListData}\r\n                        placeholder={t(\"placeholders.type\")}\r\n                        value={item.travelType}\r\n                        handleChange={(selectedOption) => handleFromChange(selectedOption, index, \"travelType\")}\r\n                        name=\"travelType\"\r\n                    />\r\n                </td>\r\n                <td style={{ ...tdStyle, width: \"250px\" }}>\r\n                    <div className=\"form-group\">\r\n                        <Input\r\n                            type=\"number\"\r\n                            placeholder={t(\"placeholders.amount\")}\r\n                            value={item.amount}\r\n                            name=\"amount\"\r\n                            onChange={(e) => handleFromChange(e, index)}\r\n                        />\r\n                    </div>\r\n                </td>\r\n\r\n                <td style={{ ...tdStyle, width: \"250px\" }}>\r\n                    <div className=\"form-group\">\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder={t(\"placeholders.billNo\")}\r\n                            value={item.billNo}\r\n                            name=\"billNo\"\r\n                            onChange={(e) => handleFromChange(e, index)}\r\n                        />\r\n                        {errors?.billNo && <CustomError text={errors.billNo} />}\r\n                    </div>\r\n                </td>\r\n                <td style={{ ...tdStyle, width: \"250px\" }}>\r\n                    <div className=\"d-flex align-items-center gap-2\">\r\n                        <input\r\n                            type=\"file\"\r\n                            id={`policyFile-${index}`} \r\n                            name=\"poster\"\r\n                            className=\"d-none\"\r\n                            onChange={(e) => handleFileChange(e, index)}\r\n                            accept=\".png, .jpeg, .doc, .docx, .pdf\"\r\n                        />\r\n\r\n                        <span\r\n                            style={{ color: \"#0279df\", cursor: \"pointer\", fontSize: \"20px\" }}\r\n                            onClick={() => document.getElementById(`policyFile-${index}`).click()}\r\n                        >\r\n                            <i className=\"fa fa-file\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n\r\n                        {travelClaimDetailData[index]?.billImage && (\r\n                            <span className=\"text-truncate\" style={{ maxWidth: \"150px\" }}>\r\n                                {travelClaimDetailData[index]?.billImage?.name}\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                    {errors?.billImage && <CustomError text={errors.billImage} />}\r\n                </td>\r\n                <td style={{ ...tdStyle, width: \"250px\" }}>\r\n                    <div className=\"form-group\">\r\n                        <Input\r\n                            type=\"date\"\r\n                            placeholder={t(\"placeholders.date\")}\r\n                            value={item.date}\r\n                            name=\"date\"\r\n                            onChange={(e) => handleFromChange(e, index)}\r\n                        />\r\n                        {errors?.date && <CustomError text={errors.date} />}\r\n                    </div>\r\n                </td>\r\n                <td style={{ ...tdStyle, width: \"100px\" }}>\r\n                    <div className='d-flex gap-2'>\r\n                        {travelClaimDetailData?.length - 1 === index && <span onClick={handleAddRow} style={{\r\n                            padding: \"3px 7px\",\r\n                            background: \"lightblue\",\r\n                            borderRadius: \"5px\",\r\n                            cursor: \"pointer\"\r\n                        }}>\r\n                            <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                        </span>}\r\n                        {travelClaimDetailData?.length > 1 && <span onClick={() => handleRemoveRow(index)} style={{\r\n                            padding: \"3px 7px\",\r\n                            background: \"#FFD1B4\",\r\n                            borderRadius: \"5px\",\r\n                            cursor: \"pointer\"\r\n                        }}>\r\n                            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                        </span>}\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        ));\r\n    };\r\n\r\n\r\n\r\n    /*Create Claim Data */\r\n    const createUpdateClaimRequest = (payload) => {\r\n        if (selectedTravelClaimDetail) {\r\n            payload[\"_id\"] = selectedTravelClaimDetail?._id;\r\n            dispatch(travelAndClaimAction.updateClaimRequest(payload));\r\n        } else {\r\n            dispatch(travelAndClaimAction.createClaimRequest(payload));\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!createClaimPending) {\r\n            if (createClaimError) {\r\n                dispatch(travelAndClaimAction.handleClearTravelStore(\"HANDLE_CLEAR_CREATE_CLAIM_STORE\"))\r\n                return;\r\n            }\r\n            if (createClaimRes) {\r\n                if (createClaimRes?.code === 200) {\r\n                    dispatch(travelAndClaimAction.handleClearTravelStore(\"HANDLE_CLEAR_CREATE_CLAIM_STORE\"))\r\n                    navigateToBack()\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        createClaimError,\r\n        createClaimRes,\r\n        createClaimPending\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!updateClaimPending) {\r\n            if (updateClaimError) {\r\n                dispatch(travelAndClaimAction.handleClearTravelStore(\"HANDLE_CLEAR_UPDATE_CLAIM_STORE\"))\r\n                return;\r\n            }\r\n            if (updateClaimRes) {\r\n                if (updateClaimRes?.code === 200) {\r\n                    dispatch(travelAndClaimAction.handleClearTravelStore(\"HANDLE_CLEAR_UPDATE_CLAIM_STORE\"))\r\n                    // toggleAddUpdateTravelClaim()\r\n                    navigateToBack()\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updateClaimError,\r\n        updateClaimRes,\r\n        updateClaimPending\r\n    ]);\r\n    const submitCreateUpdateTravelSetting = async (type) => {\r\n        const formData = new FormData();\r\n\r\n        // Append travel_name\r\n        formData.append(\"travel_id\", travelName?.value);\r\n        formData.append(\"is_draft\", type === \"draft\" ? true : false);\r\n        travelClaimDetailData.forEach((item, index) => {\r\n            formData.append(`travel_details[${index}][travel_type]`, item.travelType?.value);\r\n            formData.append(`travel_details[${index}][amount]`, item.amount);\r\n            formData.append(`travel_details[${index}][date]`, item.date);\r\n            formData.append(`travel_details[${index}][bill_no]`, item.billNo);\r\n\r\n            if (item.billImage instanceof File) {\r\n                formData.append(`travel_details[${index}][bill_image]`, item.billImage);\r\n            }\r\n        });\r\n\r\n        createUpdateClaimRequest(formData)\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (selectedTravelClaimDetail) {\r\n            setTravelName({\r\n                label: selectedTravelClaimDetail?.travel,\r\n                value: selectedTravelClaimDetail?._id\r\n            });\r\n\r\n            if (selectedTravelClaimDetail?.travel_details) {\r\n                setTravelClaimDetailData(selectedTravelClaimDetail.travel_details.map(item => ({\r\n                    travelType: { label: item.travel_type_name, value: item?.travel_type },\r\n                    amount: item?.amount,\r\n                    date: item?.date,\r\n                    billNo: item?.bill_no,\r\n                    billImage: item?.bill_image\r\n                })));\r\n            }\r\n        }\r\n    }, [selectedTravelClaimDetail]);\r\n\r\n\r\n\r\n    const resetFormData = () => {\r\n\r\n        setTravelName(null)\r\n    }\r\n\r\n    const navigateToBack =()=>{\r\n        if(selectedTravelClaimDetail){\r\n            dispatch(travelAndClaimAction.handleClearTravelStore(\"HANDLE_CLEAR_SELECTED_TRAVEL_CLAIM_Detail_STORE\"))\r\n        }\r\n        navigate(\"/travel-claim\")\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='cardBox myRequest mb-3 employeeHistory'>\r\n            <div className=\"d-flex align-items-center\">\r\n                <span onClick={()=>navigateToBack()} ><BackIcon /></span>\r\n                <div className=\"\">\r\n                    <h5> {selectedTravelClaimDetail ? \"Update\" : \"Add\"} Travel Claim</h5>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-md-12 mb-3\">\r\n                    <div className=\"col-md-4 \" >\r\n                        <div className=\"form-group mb-2\">\r\n                            <Label text={t(\"labels.selectTravel\")} required={true} />\r\n                            <CustomSelect\r\n                                data={allTravelApprovalData}\r\n                                placeholder={t(\"placeholders.selectTravel\")}\r\n                                value={travelName || ''}\r\n                                handleChange={(selectedOption) => setTravelName(selectedOption)}\r\n\r\n                            />\r\n                            {errors?.selectTravel && (\r\n                                <CustomError text={errors.selectTravel} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h5> Add Travel Detail</h5>\r\n                <div className=\"table-responsive tableDiv\" style={{ height: \"341px\", overflow: \"scroll\" }}>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <TableDataHeader tableHeader={travelClaimHeader} />\r\n                        </thead>\r\n                        {renderTableRows()}\r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-end gap-3 mt-3\">\r\n                {!selectedTravelClaimDetail && <CustomButton\r\n                    text={\"Draft\"}\r\n                    classNames={\"btn btn-org-gradient\"}\r\n                    handleClick={() => submitCreateUpdateTravelSetting(\"draft\")}\r\n                    isDisabled={createClaimPending}\r\n                />}\r\n                <CustomButton\r\n                    text={selectedTravelClaimDetail?.action_type ===\"draft\" ? \"Submit\" : selectedTravelClaimDetail ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                    classNames={\"btn btn-primary\"}\r\n                    handleClick={() => submitCreateUpdateTravelSetting(\"submit\")}\r\n                    isDisabled={selectedTravelClaimDetail ? updateClaimPending : createClaimPending}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUpdateTravelClaims\r\n"],"names":["BackIcon","_jsx","children","_jsxs","version","id","x","y","viewBox","xmlSpace","className","style","height","width","cursor","opacity","fill","cx","cy","r","d","AddUpdateTravelClaims","dispatch","useDispatch","createClaimPending","createClaimRes","createClaimError","updateClaimPending","updateClaimRes","updateClaimError","getAllTravelApprovalDataPending","getAllTravelApprovalDataRes","getAllTravelApprovalDataError","getAllTravelTypePending","getAllTravelTypeRes","getAllTravelTypeError","selectedTravelClaimDetail","useSelector","state","travelAndClaim","t","useCustomTranslation","navigate","useReducer","useNavigate","allTravelApprovalData","setAllTravelApprovalData","useState","travelTypeListData","setTravelTypeListData","errors","setErrors","actionBtnType","setActionBtnType","travelName","setTravelName","travelClaimHeader","setTravelClaimHeader","label","travelClaimDetailData","setTravelClaimDetailData","travelType","amount","date","billNo","billImage","useEffect","getAllTravelApprovalDataClaim","getTravelTypeData","travelAndClaimAction","getAllTravelApprovalDataRequest","code","data","getAllTravelTypeRequest","tdStyle","padding","verticalAlign","borderTop","handleFromChange","e","index","fieldName","_e$target","name","target","value","updatedData","handleAddRow","handleClearTravelStore","navigateToBack","submitCreateUpdateTravelSetting","async","formData","FormData","payload","append","type","forEach","item","_item$travelType","File","_id","updateClaimRequest","createClaimRequest","travel","travel_details","map","travel_type_name","travel_type","bill_no","bill_image","onClick","Label","text","required","CustomSelect","placeholder","handleChange","selectedOption","selectTravel","CustomError","overflow","TableDataHeader","tableHeader","_travelClaimDetailDat","_travelClaimDetailDat2","_travelClaimDetailDat3","Input","onChange","handleFileChange","file","files","accept","color","fontSize","document","getElementById","click","maxWidth","length","background","borderRadius","filter","_","i","handleRemoveRow","CustomButton","classNames","handleClick","isDisabled","action_type"],"sourceRoot":""}