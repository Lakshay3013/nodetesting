{"version":3,"file":"static/js/3064.f5a4e6f3.chunk.js","mappings":"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","sources":["components/commanComponent/BackIcon.js","components/travelAndClaim/travelSetting/AddDetailModal.js","components/travelAndClaim/travelSetting/AssignRuleDesignations.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst BackIcon = () => {\r\n    return (\r\n        <div >\r\n            <svg\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                x={0}\r\n                y={0}\r\n                viewBox=\"0 0 512 512\"\r\n                xmlSpace=\"preserve\"\r\n                className=\"icon icon-xlg me-2\"\r\n                style={{\r\n                    height: \"23px\",\r\n                    width: \"23px\",\r\n                    cursor: \"pointer\",\r\n                }}\r\n            >\r\n                <circle id=\"Oval-3\" opacity=\".1\" fill=\"#2B76D2\" cx={256} cy={256} r={256} />\r\n                <path\r\n                    fill=\"#2B76D2\"\r\n                    d=\"M277.3 362.7c-5.3 0-10.6-2-14.7-5.9l-85.3-81.5c-4.1-3.9-6.5-9.3-6.6-15-.1-5.7 2-11.1 5.9-15.2l85.3-89.1c8.1-8.5 21.7-8.8 30.2-.7 8.5 8.1 8.8 21.6.7 30.2l-70.6 73.7 69.9 66.8c8.5 8.1 8.8 21.6.7 30.1-4.2 4.4-9.8 6.6-15.5 6.6z\"\r\n                />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackIcon\r\n","import React from 'react'\r\nimport { CustomButton } from '../../globalComponents'\r\n\r\nconst AddDetailModal = ({\r\n    isShow,\r\n    openCloseModal,\r\n}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"modal fade correctionAprovel\" id=\"mrfApproval\" style={{ display: isShow ? \"unset !important\" : \"none !important\", opacity: isShow ? \"unset\" : \"0\" }}>\r\n                <div className=\"modal-dialog modal-dialog-centered\">\r\n                    <div className=\"modal-content rounded-0 border-0\">\r\n                        <div className=\"modal-header border-0\">\r\n                            <h1 className=\"modal-title fs-5 fw-bold text-primary\">Add Rule</h1>\r\n                            <CustomButton\r\n                                classNames={\"btn-close\"}\r\n                                handleClick={() => openCloseModal('')}\r\n                            />\r\n                            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button> */}\r\n                        </div>\r\n                        <div className=\"modal-body pt-0\">\r\n\r\n\r\n                            <div className=\"form-group mb-3\">\r\n\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        <div className=\"modal-footer justify-content-center\">\r\n                            <button className=\"btn btn-org-gradient text-white px-5\" >Save</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isShow && <div className=\"modal-backdrop fade show\"></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddDetailModal\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport BackIcon from '../../commanComponent/BackIcon'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CustomSelect from '../../commanComponent/CustomSelect'\r\nimport { departmentAction, designationAction, travelAndClaimAction } from '../../../core/resource/actions'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { CustomMultiSelect, Label } from '../../commanComponent'\r\nimport { CustomButton, CustomSpinner } from '../../globalComponents'\r\nimport BlankTableError from '../../commanComponent/BlankTableError'\r\nimport AddDetailModal from './AddDetailModal'\r\n\r\n\r\n\r\nconst AssignRuleDesignations = () => {\r\n    const dispatch = useDispatch()\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    } = useSelector(state => state.department)\r\n    const {\r\n        getDesignationsByDepartmentRes,\r\n        getDesignationsByDepartmentPending,\r\n        getDesignationsByDepartmentError\r\n    } = useSelector(state => state.designation)\r\n\r\n    const {\r\n        getAllTravelTypePending,\r\n        getAllTravelTypeRes,\r\n        getAllTravelTypeError,\r\n\r\n        getAllTravelAndClaimRulePending,\r\n        getAllTravelAndClaimRuleRes,\r\n        getAllTravelAndClaimRuleError,\r\n\r\n        assignRulePending,\r\n        assignRuleRes,\r\n        assignRuleError,\r\n\r\n        getAssignRulePending,\r\n        getAssignRuleRes,\r\n        getAssignRuleError,\r\n    } = useSelector(state => state.travelAndClaim)\r\n\r\n    const [allDepartments, setAllDepartments] = useState([])\r\n    const [allDesignations, setAllDesignations] = useState([])\r\n    const [selectedDepartment, setSelectedDepartment] = useState('')\r\n    const [allTravelList, setAllTravelList] = useState('')\r\n    const [isShowModal, setIsShowModal] = useState(false)\r\n    const [travelRules, setTravelRules] = useState('')\r\n    const [travelRuleAssignFormData, setTravelRuleAssignFormData] = useState([])\r\n    const [selectedData, setSelectedData] = useState('')\r\n\r\n    const [travelRuleFields, setTravelRuleFields] = useState([\r\n        // { key: 'sn', label: 'S.N' },\r\n        { key: 'name', label: 'Designation Name' },\r\n    ])\r\n\r\n    const getAllTravelAndClaimRule = () => {\r\n        dispatch(travelAndClaimAction.getAllTravelAndClaimRuleRequest())\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getAllTravelAndClaimRulePending) {\r\n            if (getAllTravelAndClaimRuleError) {\r\n                return;\r\n            }\r\n            if (getAllTravelAndClaimRuleRes) {\r\n                if (getAllTravelAndClaimRuleRes?.code === 200) {\r\n                    setTravelRules(getAllTravelAndClaimRuleRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllTravelAndClaimRulePending,\r\n        getAllTravelAndClaimRuleRes,\r\n        getAllTravelAndClaimRuleError,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        getAllDepartments()\r\n        getAllTravelTypeList()\r\n        getAllTravelAndClaimRule()\r\n        handleDesignationByDepartment()\r\n        getAssignRule()\r\n    }, [])\r\n\r\n    /* Get All Departments */\r\n    const getAllDepartments = () => {\r\n        const departmentResposnse = getDepartmentListRes?.data\r\n        if (!departmentResposnse?.length) {\r\n            dispatch(departmentAction.getDepartmentListRequest());\r\n        } else {\r\n            setAllDepartments(departmentResposnse)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getDepartmentListPending) {\r\n            if (getDepartmentListError) {\r\n                return;\r\n            }\r\n            if (getDepartmentListRes) {\r\n                if (getDepartmentListRes?.code === 200) {\r\n                    const departmentResponse = getDepartmentListRes?.data\r\n                    setAllDepartments(departmentResponse)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDepartmentListRes,\r\n        getDepartmentListError,\r\n        getDepartmentListPending\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (selectedDepartment) {\r\n            handleDesignationByDepartment(selectedDepartment?._id)\r\n        }\r\n    }, [selectedDepartment])\r\n\r\n    const handleDesignationByDepartment = (id) => {\r\n        const params = {\r\n            department_id: id\r\n        }\r\n        dispatch(designationAction.getDesignationsByDepartmentRequest(id && params));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getDesignationsByDepartmentPending) {\r\n            if (getDesignationsByDepartmentError) {\r\n                return;\r\n            }\r\n            if (getDesignationsByDepartmentRes) {\r\n                if (getDesignationsByDepartmentRes?.code === 200) {\r\n                    const designationResponse = getDesignationsByDepartmentRes?.data\r\n                    setAllDesignations(designationResponse)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getDesignationsByDepartmentRes,\r\n        getDesignationsByDepartmentError,\r\n        getDesignationsByDepartmentPending\r\n    ]);\r\n\r\n    /* all travel Type / reimbursement type */\r\n\r\n    const getAllTravelTypeList = () => {\r\n        const getAllTravelTypeResData = getAllTravelTypeRes?.data\r\n        if (!getAllTravelTypeResData?.length) {\r\n            dispatch(travelAndClaimAction.getAllTravelTypeRequest());\r\n        }\r\n        else {\r\n            setAllTravelList(getAllTravelTypeRes?.data)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getAllTravelTypePending) {\r\n            if (getAllTravelTypeError) {\r\n                return;\r\n            }\r\n            if (getAllTravelTypeRes) {\r\n                if (getAllTravelTypeRes?.code === 200) {\r\n                    setAllTravelList(getAllTravelTypeRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllTravelTypeRes,\r\n        getAllTravelTypeError,\r\n        getAllTravelTypePending\r\n    ]);\r\n\r\n    const renderTableBody = () => {\r\n        if (allDesignations && allDesignations.length > 0) {\r\n            return (\r\n                <>\r\n                    {allDesignations.map((designation, designationIndex) => (\r\n                        <tr key={designation?.id || designation?.label}>\r\n                            <td>\r\n                                <div style={{ width: \"200px\" }}>\r\n                                    {designation?.label}\r\n                                </div>\r\n                            </td>\r\n                            {allTravelList.map((travel, index) => {\r\n                                return (\r\n                                    <td key={travel?.id || travel?.label}>\r\n\r\n                                        <div style={{ width: \"150px\" }}>\r\n                                          \r\n                                            <CustomMultiSelect\r\n                                                optionsData={travelRules?.filter((item) => item?.travel_id === travel?._id)}\r\n                                                placeholder=\"Select...\"\r\n                                                values={travelRuleAssignFormData[designation?._id]?.[`${travel?._id}`] || []}\r\n                                                onChange={(data) => handleOnChange(data, designation?._id, travel?._id)}\r\n                                            />\r\n                                        </div>\r\n                                    </td>\r\n                                )\r\n                            }\r\n                            )}\r\n                        </tr>\r\n                    ))}\r\n                </>\r\n            );\r\n        } else {\r\n            return (\r\n                !getDesignationsByDepartmentPending && (\r\n                    <BlankTableError totalField={travelRuleFields?.length} />\r\n                )\r\n            );\r\n        }\r\n    };\r\n    const toggleModalOpens = (data) => {\r\n        setIsShowModal(!isShowModal)\r\n    }\r\n\r\n\r\n    const handleOnChange = (data, designationId, travelId) => {\r\n        setTravelRuleAssignFormData((prevState) => {\r\n            let updatedData = { ...prevState };\r\n            if (!updatedData[designationId]) {\r\n                updatedData[designationId] = {}; \r\n            }\r\n            updatedData[designationId][`${travelId}`] = data;\r\n\r\n            return updatedData;\r\n        });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedData && travelRules?.length && allDesignations?.length) {\r\n            setAssignTravelData()\r\n\r\n        }\r\n    }, [selectedData, travelRules, allDesignations])\r\n\r\n    const setAssignTravelData = () => {\r\n        let updatedFormData = {};\r\n\r\n        allDesignations?.forEach((designation) => {\r\n            selectedData?.forEach((selectedItem) => {\r\n                if (selectedItem?.designation_id === designation?._id) {\r\n                    travelRules?.forEach((rule) => {\r\n                        if (selectedItem?.travel_rule_ids?.includes(rule?._id)) {\r\n                            const key = `${rule?.travel_id}`;\r\n\r\n                            if (!updatedFormData[designation?._id]) {\r\n                                updatedFormData[designation?._id] = {};\r\n                            }\r\n\r\n                            if (!updatedFormData[designation?._id][key]) {\r\n                                updatedFormData[designation?._id][key] = [];\r\n                            }\r\n\r\n                            updatedFormData[designation?._id][key].push(rule);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        setTravelRuleAssignFormData(updatedFormData);\r\n    };\r\n\r\n\r\n\r\n    const assignTravelRules = () => {\r\n\r\n        let payloadData = Object.entries(travelRuleAssignFormData).map(([designationId, rules]) => ({\r\n            designation_id: designationId,\r\n            department_id :selectedDepartment?._id,\r\n            details: Object.values(rules).flat().map(item => item?._id)\r\n        }));\r\n        const params ={\r\n            rule_details:payloadData\r\n        }\r\n        assignRule(params)\r\n        \r\n\r\n    }\r\n\r\n    const assignRule = (payload) => {\r\n        dispatch(travelAndClaimAction.assignRuleRequest(payload))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!assignRulePending) {\r\n            if (assignRuleError) {\r\n                dispatch(travelAndClaimAction.handleClearTravelStore(\"HANDLE_CLEAR_ASSIGN_RULE_STORE\"))\r\n                return;\r\n            }\r\n            if (assignRuleRes) {\r\n                if (assignRuleRes?.code === 200) {\r\n                    dispatch(travelAndClaimAction.handleClearTravelStore(\"HANDLE_CLEAR_ASSIGN_RULE_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        assignRulePending,\r\n        assignRuleRes,\r\n        assignRuleError,\r\n    ]);\r\n\r\n    const getAssignRule = (payload) => {\r\n        dispatch(travelAndClaimAction.getAssignRuleRequest(payload))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getAssignRulePending) {\r\n            if (getAssignRuleError) {\r\n\r\n                return;\r\n            }\r\n            if (getAssignRuleRes) {\r\n                if (getAssignRuleRes?.code === 200) {\r\n                    setSelectedData(getAssignRuleRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAssignRulePending,\r\n        getAssignRuleRes,\r\n        getAssignRuleError,\r\n    ]);\r\n\r\n    return (\r\n        <div className='cardBox myRequest mb-3 employeeHistory'>\r\n            <div className=\"cardHead d-flex justify-content-between\">\r\n                <div className=\"d-flex align-items-center\">\r\n                    <Link to={\"/travel-setting\"} ><BackIcon /></Link>\r\n                    <div >\r\n                        <h5 className=\"mt-1\"> Assign Travel Rules</h5>\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex gap-2 w-25 \">\r\n                    <Label className={\"mt-2\"} text={t(\"labels.selectDepartment\")} />\r\n                    <div className='w-75'>\r\n                        <CustomSelect\r\n                            data={allDepartments || []}\r\n                            placeholder={t(\"placeholders.selectDepartment\")}\r\n                            value={selectedDepartment}\r\n                            handleChange={(selectedOption) => setSelectedDepartment(selectedOption)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"table-responsive tableDiv\" style={{    height: \"437px\"}}>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            {travelRuleFields?.map((header) => (\r\n                                <th key={header.key}>{header.label}</th>\r\n                            ))}\r\n\r\n                            {allTravelList && allTravelList?.map((item) => (\r\n                                <th key={item?.id || item?.label}>{item?.label}</th>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {getDesignationsByDepartmentPending ? <tr> <td colSpan={travelRuleFields?.length}> <CustomSpinner isShow={getDesignationsByDepartmentPending} size=\"xl\" /> </td></tr> : renderTableBody()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n          \r\n            <div className='d-flex justify-content-end mt-3'>\r\n                <CustomButton\r\n                    text={t(\"btns.submit\")}\r\n                    classNames={\"btn btn-primary\"}\r\n                    handleClick={() => assignTravelRules()}\r\n                    isLoading={assignRulePending}\r\n                />\r\n            </div>\r\n\r\n\r\n            {isShowModal && <AddDetailModal\r\n                isShow={isShowModal}\r\n                openCloseModal={toggleModalOpens}\r\n            />}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AssignRuleDesignations\r\n"],"names":["BackIcon","_jsx","children","_jsxs","version","id","x","y","viewBox","xmlSpace","className","style","height","width","cursor","opacity","fill","cx","cy","r","d","_ref","isShow","openCloseModal","display","CustomButton","classNames","handleClick","AssignRuleDesignations","dispatch","useDispatch","t","useCustomTranslation","getDepartmentListRes","getDepartmentListError","getDepartmentListPending","useSelector","state","department","getDesignationsByDepartmentRes","getDesignationsByDepartmentPending","getDesignationsByDepartmentError","designation","getAllTravelTypePending","getAllTravelTypeRes","getAllTravelTypeError","getAllTravelAndClaimRulePending","getAllTravelAndClaimRuleRes","getAllTravelAndClaimRuleError","assignRulePending","assignRuleRes","assignRuleError","getAssignRulePending","getAssignRuleRes","getAssignRuleError","travelAndClaim","allDepartments","setAllDepartments","useState","allDesignations","setAllDesignations","selectedDepartment","setSelectedDepartment","allTravelList","setAllTravelList","isShowModal","setIsShowModal","travelRules","setTravelRules","travelRuleAssignFormData","setTravelRuleAssignFormData","selectedData","setSelectedData","travelRuleFields","setTravelRuleFields","key","label","useEffect","code","data","getAllDepartments","getAllTravelTypeList","travelAndClaimAction","getAllTravelAndClaimRuleRequest","handleDesignationByDepartment","getAssignRule","departmentResposnse","length","departmentAction","getDepartmentListRequest","departmentResponse","_id","params","department_id","designationAction","getDesignationsByDepartmentRequest","designationResponse","getAllTravelTypeResData","getAllTravelTypeRequest","handleOnChange","designationId","travelId","prevState","updatedData","setAssignTravelData","updatedFormData","forEach","selectedItem","designation_id","rule","_selectedItem$travel_","travel_rule_ids","includes","travel_id","push","assignRule","payload","assignRuleRequest","handleClearTravelStore","getAssignRuleRequest","Link","to","Label","text","CustomSelect","placeholder","value","handleChange","selectedOption","map","header","item","colSpan","CustomSpinner","size","_Fragment","designationIndex","travel","index","_travelRuleAssignForm","CustomMultiSelect","optionsData","filter","values","onChange","BlankTableError","totalField","assignTravelRules","payloadData","Object","entries","rules","details","flat","rule_details","isLoading","AddDetailModal"],"sourceRoot":""}