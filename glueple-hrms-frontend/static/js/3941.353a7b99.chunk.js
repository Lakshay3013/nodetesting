"use strict";(self.webpackChunkglueple_user=self.webpackChunkglueple_user||[]).push([[3941,5623],{93941:(n,e,i)=>{i.r(e),i.d(e,{default:()=>D});var a=i(65043),t=i(70579);const r=n=>{const{feedbackDashboardData:e}=n;return(0,t.jsxs)("div",{className:"",children:[(0,t.jsx)("div",{className:"cardHead d-flex justify-content-between align-items-center",children:(0,t.jsx)("h3",{className:"text-primary",children:" Summary"})}),(0,t.jsx)("div",{className:" leaveAppli position-relative z-1",children:(0,t.jsxs)("div",{className:"row selectModal px-md-1 ",children:[(0,t.jsx)("div",{className:"col-md-3 px-md-2 mb-3",children:(0,t.jsxs)("div",{className:"totalBx h-100 bg-white shadow-none",children:[(0,t.jsxs)("div",{className:"d-flex justify-content-between align-items-start text-end",children:[(0,t.jsx)("figure",{children:(0,t.jsx)("img",{src:"images/average-rating-Icon.svg",alt:"",width:40})}),(0,t.jsxs)("h3",{className:"fw-bolder my-0",children:["Feedback Received ",(0,t.jsx)("span",{className:"mt-4",children:null===e||void 0===e?void 0:e.received_feedback})]})]}),(0,t.jsx)("img",{src:"images/annualrating-line.svg",className:"cornerLine",alt:"",width:65})]})}),(0,t.jsx)("div",{className:"col-md-3 px-md-2 mb-3",children:(0,t.jsxs)("div",{className:"totalBx h-100 bg-white shadow-none",children:[(0,t.jsxs)("div",{className:"d-flex justify-content-between align-items-start text-end",children:[(0,t.jsx)("figure",{children:(0,t.jsx)("img",{src:"images/average-rating-Icon.svg",alt:"",width:40})}),(0,t.jsxs)("h3",{className:"fw-bolder my-0",children:["Feedback Given ",(0,t.jsx)("span",{className:"mt-4",children:null===e||void 0===e?void 0:e.given_feedback})]})]}),(0,t.jsx)("img",{src:"images/cornerline-review.svg",className:"cornerLine",alt:"",width:45})]})}),(0,t.jsx)("div",{className:"col-md-3 px-md-2 mb-3",children:(0,t.jsxs)("div",{className:"totalBx h-100 bg-white shadow-none",children:[(0,t.jsxs)("div",{className:"d-flex justify-content-between align-items-start text-end",children:[(0,t.jsx)("figure",{children:(0,t.jsx)("img",{src:"images/average-rating-Icon.svg ",alt:"",width:40})}),(0,t.jsxs)("h3",{className:"fw-bolder my-0",children:["Received Kudos",(0,t.jsx)("span",{className:"mt-4",children:null===e||void 0===e?void 0:e.received_feedback})]})]}),(0,t.jsx)("img",{src:"images/cornerline-review.svg",className:"cornerLine",alt:"",width:45})]})}),(0,t.jsx)("div",{className:"col-md-3 px-md-2 mb-3",children:(0,t.jsxs)("div",{className:"totalBx h-100 bg-white shadow-none",children:[(0,t.jsxs)("div",{className:"d-flex justify-content-between align-items-start text-end",children:[(0,t.jsx)("figure",{children:(0,t.jsx)("img",{src:"images/average-rating-Icon.svg",alt:"",width:40})}),(0,t.jsxs)("h3",{className:"fw-bolder my-0",children:["Given Kudos ",(0,t.jsx)("span",{className:"mt-4",children:null===e||void 0===e?void 0:e.given_kudos})]})]}),(0,t.jsx)("img",{src:"images/firstlineBlue.svg",className:"cornerLine",alt:"",width:75})]})})]})})]})};var o=i(85831),l=i(94140),s=i(49985);const m=n=>{const{isLoading:e,toggleFeedbackKudosModal:i,givenFeedback:a}=n;return(0,t.jsx)("div",{className:"tab-pane fade",id:"givenFeedback",children:(0,t.jsxs)("div",{className:"cardBox myRequest mb-3",children:[(0,t.jsxs)("div",{className:"cardHead d-flex align-items-center",children:[(0,t.jsx)("img",{src:"images/kpi-guidline.svg",alt:"",width:40,className:"me-2 fw-bold"}),(0,t.jsx)("h3",{children:" Given Feedback"})]}),(0,t.jsx)("div",{className:"mykpiMain",children:(0,t.jsx)("ul",{className:"subCategoryUl",children:e?(0,t.jsx)("div",{className:"d-flex justify-content-center m-5",children:(0,t.jsx)(o.L,{isShow:e,size:"md"})}):(null===a||void 0===a?void 0:a.length)>0?null===a||void 0===a?void 0:a.map(((n,e)=>(0,t.jsx)("li",{children:(0,t.jsx)("div",{onClick:()=>i("Feedback",n),className:"subCategry",children:(0,t.jsxs)("div",{className:"row",children:[(0,t.jsxs)("div",{className:"col-md-9 border-end",children:[(0,t.jsxs)("div",{className:"d-flex gap-3",children:[(0,t.jsx)("figure",{className:"mb-0",children:(0,t.jsx)("img",{src:"images/profile.png",alt:"",width:40})}),(0,t.jsxs)("div",{children:[(0,t.jsx)("span",{children:null===n||void 0===n?void 0:n.name}),(0,t.jsx)("p",{children:null===n||void 0===n?void 0:n.designation_name})]})]}),(0,t.jsx)("strong",{className:"pt-2",children:"Feedback"}),(0,t.jsx)("p",{children:null===n||void 0===n?void 0:n.feedback_description})]}),(0,t.jsx)("div",{className:"col-md-3",children:(0,t.jsxs)("div",{className:"d-flex flex-wrap justify-content-center h-100 text-center ",children:[(0,t.jsx)("p",{className:"w-100 mb-auto mt-2",children:(0,s.Rl)(null===n||void 0===n?void 0:n.created_at,"DD MMM YYYY")}),(0,t.jsx)("div",{className:"mt-auto mb-4",children:(0,t.jsx)("img",{src:"images/arrow-right.svg",width:35})})]})})]})})},e))):(0,t.jsx)("div",{className:"d-flex justify-content-center",children:(0,t.jsx)(l.A,{})})})})]})})},u=JSON.parse('{"v":"5.9.0","fr":25,"ip":29,"op":81,"w":171,"h":171,"nm":"Comp 6","ddd":0,"assets":[{"id":"comp_0","nm":"Pre-comp 1","fr":25,"layers":[{"ddd":0,"ind":1,"ty":3,"nm":"Null 1","sr":1,"ks":{"o":{"a":0,"k":0,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[140.5,133.5,0],"ix":2,"l":2},"a":{"a":0,"k":[50,50,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ip":0,"op":120,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Layer 3","parent":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[50,50,0],"ix":2,"l":2},"a":{"a":0,"k":[175,175,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Kleaner","np":34,"mn":"Pseudo/Duik Kleaner v3.2","ix":1,"en":1,"ef":[{"ty":7,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0001","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0003","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0004","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","mn":"Pseudo/Duik Kleaner v3.2-0005","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","mn":"Pseudo/Duik Kleaner v3.2-0006","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0007","ix":7,"v":0},{"ty":6,"nm":"Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0008","ix":8,"v":0},{"ty":0,"nm":"Slow In","mn":"Pseudo/Duik Kleaner v3.2-0009","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","mn":"Pseudo/Duik Kleaner v3.2-0010","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0011","ix":11,"v":0},{"ty":6,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0012","ix":12,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/Duik Kleaner v3.2-0013","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","mn":"Pseudo/Duik Kleaner v3.2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","mn":"Pseudo/Duik Kleaner v3.2-0015","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","mn":"Pseudo/Duik Kleaner v3.2-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","mn":"Pseudo/Duik Kleaner v3.2-0017","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0018","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","mn":"Pseudo/Duik Kleaner v3.2-0019","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0020","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","mn":"Pseudo/Duik Kleaner v3.2-0021","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0022","ix":22,"v":0},{"ty":7,"nm":"Overlap","mn":"Pseudo/Duik Kleaner v3.2-0023","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","mn":"Pseudo/Duik Kleaner v3.2-0024","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","mn":"Pseudo/Duik Kleaner v3.2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0026","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0027","ix":27,"v":0},{"ty":7,"nm":"Soft Body","mn":"Pseudo/Duik Kleaner v3.2-0028","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","mn":"Pseudo/Duik Kleaner v3.2-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0030","ix":30,"v":0},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0031","ix":31,"v":0},{"ty":0,"nm":"Precision","mn":"Pseudo/Duik Kleaner v3.2-0032","ix":32,"v":{"a":0,"k":1,"ix":32}}]},{"ty":5,"nm":"Kleaner 2","np":34,"mn":"Pseudo/Duik Kleaner v3.2","ix":2,"en":1,"ef":[{"ty":7,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0001","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0003","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0004","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","mn":"Pseudo/Duik Kleaner v3.2-0005","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","mn":"Pseudo/Duik Kleaner v3.2-0006","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0007","ix":7,"v":0},{"ty":6,"nm":"Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0008","ix":8,"v":0},{"ty":0,"nm":"Slow In","mn":"Pseudo/Duik Kleaner v3.2-0009","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","mn":"Pseudo/Duik Kleaner v3.2-0010","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0011","ix":11,"v":0},{"ty":6,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0012","ix":12,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/Duik Kleaner v3.2-0013","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","mn":"Pseudo/Duik Kleaner v3.2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","mn":"Pseudo/Duik Kleaner v3.2-0015","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","mn":"Pseudo/Duik Kleaner v3.2-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","mn":"Pseudo/Duik Kleaner v3.2-0017","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0018","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","mn":"Pseudo/Duik Kleaner v3.2-0019","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0020","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","mn":"Pseudo/Duik Kleaner v3.2-0021","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0022","ix":22,"v":0},{"ty":7,"nm":"Overlap","mn":"Pseudo/Duik Kleaner v3.2-0023","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","mn":"Pseudo/Duik Kleaner v3.2-0024","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","mn":"Pseudo/Duik Kleaner v3.2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0026","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0027","ix":27,"v":0},{"ty":7,"nm":"Soft Body","mn":"Pseudo/Duik Kleaner v3.2-0028","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","mn":"Pseudo/Duik Kleaner v3.2-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0030","ix":30,"v":0},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0031","ix":31,"v":0},{"ty":0,"nm":"Precision","mn":"Pseudo/Duik Kleaner v3.2-0032","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.032,-1.353],[0,0],[0.824,2.761],[0,0],[0,0]],"o":[[0,0],[-2.032,1.353],[0,0],[0,0],[2.285,1.788]],"v":[[3.803,6.314],[3.803,6.314],[-2.125,3.392],[-5.172,-6.816],[3.277,-0.205]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.125,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[198.331,157.778],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.034,-1.355],[0,0],[0.821,2.764],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[-2.034,1.355],[0,0],[0,0],[0,0],[0,0],[2.29,1.786]],"v":[[13.55,9.763],[1.056,18.085],[-4.873,15.157],[-10.162,-2.649],[-14.92,-18.588],[-1.728,-8.266],[13.019,3.24]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.125,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[206.009,166.522],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.006,-1.472],[0,0],[3.402,-2.266],[0,0],[2.774,4.058],[0,0],[-1.227,0.817],[0,0]],"o":[[0,0],[2.79,4.082],[0,0],[-3.383,2.253],[0,0],[-1.006,-1.472],[0,0],[1.227,-0.817]],"v":[[4.72,-10.769],[10.203,-2.749],[9.09,8.793],[5.35,11.284],[-5.844,8.002],[-11.356,-0.062],[-10.956,-4.207],[0.676,-11.955]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.125,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[262.983,253.765],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.16,-0.24],[0,0],[0,0],[0,0],[0,0],[3.41,-2.25],[0,0],[2.82,4.03],[0,0],[0,0]],"o":[[0.14,0.25],[0,0],[0,0],[0,0],[0,0],[2.81,4.09],[0,0],[-3.42,2.25],[0,0],[0,0],[0,0]],"v":[[-27.095,-45.81],[-26.625,-45.16],[-25.825,-44.01],[-19.955,-35.42],[19.765,22.73],[25.275,30.76],[24.175,42.29],[20.435,44.76],[9.225,41.49],[3.735,33.4],[-16.385,4.03]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.125,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[247.905,220.284],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.14,-0.22],[0,0]],"o":[[0.15,0.23],[0,0],[0,0]],"v":[[-9.15,-13.41],[-8.68,-12.68],[9.15,13.41]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.125,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[213.92,198.474],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":15,"s":[191.193,149.123],"to":[-15.75,0],"ti":[3.25,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":30,"s":[96.693,149.123],"to":[-3.25,0],"ti":[0,-2.5]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":45,"s":[171.693,149.123],"to":[0,2.5],"ti":[4.833,-2.5]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":50,"s":[96.693,164.123],"to":[-4.833,2.5],"ti":[-15.75,2.5]},{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0},"t":65,"s":[142.693,164.123],"to":[15.75,-2.5],"ti":[-8.083,2.5]},{"t":80,"s":[191.193,149.123]}],"ix":2},"a":{"a":0,"k":[191.193,149.123],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":15,"s":[0]},{"t":80,"s":[0]}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":120,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Layer 2","parent":1,"td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[50,50,0],"ix":2,"l":2},"a":{"a":0,"k":[175,175,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Kleaner","np":34,"mn":"Pseudo/Duik Kleaner v3.2","ix":1,"en":1,"ef":[{"ty":7,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0001","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0003","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0004","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","mn":"Pseudo/Duik Kleaner v3.2-0005","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","mn":"Pseudo/Duik Kleaner v3.2-0006","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0007","ix":7,"v":0},{"ty":6,"nm":"Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0008","ix":8,"v":0},{"ty":0,"nm":"Slow In","mn":"Pseudo/Duik Kleaner v3.2-0009","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","mn":"Pseudo/Duik Kleaner v3.2-0010","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0011","ix":11,"v":0},{"ty":6,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0012","ix":12,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/Duik Kleaner v3.2-0013","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","mn":"Pseudo/Duik Kleaner v3.2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","mn":"Pseudo/Duik Kleaner v3.2-0015","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","mn":"Pseudo/Duik Kleaner v3.2-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","mn":"Pseudo/Duik Kleaner v3.2-0017","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0018","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","mn":"Pseudo/Duik Kleaner v3.2-0019","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0020","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","mn":"Pseudo/Duik Kleaner v3.2-0021","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0022","ix":22,"v":0},{"ty":7,"nm":"Overlap","mn":"Pseudo/Duik Kleaner v3.2-0023","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","mn":"Pseudo/Duik Kleaner v3.2-0024","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","mn":"Pseudo/Duik Kleaner v3.2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0026","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0027","ix":27,"v":0},{"ty":7,"nm":"Soft Body","mn":"Pseudo/Duik Kleaner v3.2-0028","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","mn":"Pseudo/Duik Kleaner v3.2-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0030","ix":30,"v":0},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0031","ix":31,"v":0},{"ty":0,"nm":"Precision","mn":"Pseudo/Duik Kleaner v3.2-0032","ix":32,"v":{"a":0,"k":1,"ix":32}}]},{"ty":5,"nm":"Kleaner 2","np":34,"mn":"Pseudo/Duik Kleaner v3.2","ix":2,"en":1,"ef":[{"ty":7,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0001","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0003","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0004","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","mn":"Pseudo/Duik Kleaner v3.2-0005","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","mn":"Pseudo/Duik Kleaner v3.2-0006","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0007","ix":7,"v":0},{"ty":6,"nm":"Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0008","ix":8,"v":0},{"ty":0,"nm":"Slow In","mn":"Pseudo/Duik Kleaner v3.2-0009","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","mn":"Pseudo/Duik Kleaner v3.2-0010","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0011","ix":11,"v":0},{"ty":6,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0012","ix":12,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/Duik Kleaner v3.2-0013","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","mn":"Pseudo/Duik Kleaner v3.2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","mn":"Pseudo/Duik Kleaner v3.2-0015","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","mn":"Pseudo/Duik Kleaner v3.2-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","mn":"Pseudo/Duik Kleaner v3.2-0017","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0018","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","mn":"Pseudo/Duik Kleaner v3.2-0019","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0020","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","mn":"Pseudo/Duik Kleaner v3.2-0021","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0022","ix":22,"v":0},{"ty":7,"nm":"Overlap","mn":"Pseudo/Duik Kleaner v3.2-0023","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","mn":"Pseudo/Duik Kleaner v3.2-0024","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","mn":"Pseudo/Duik Kleaner v3.2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0026","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0027","ix":27,"v":0},{"ty":7,"nm":"Soft Body","mn":"Pseudo/Duik Kleaner v3.2-0028","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","mn":"Pseudo/Duik Kleaner v3.2-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0030","ix":30,"v":0},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0031","ix":31,"v":0},{"ty":0,"nm":"Precision","mn":"Pseudo/Duik Kleaner v3.2-0032","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.032,-1.353],[0,0],[0.824,2.761],[0,0],[0,0]],"o":[[0,0],[-2.032,1.353],[0,0],[0,0],[2.285,1.788]],"v":[[3.803,6.314],[3.803,6.314],[-2.125,3.392],[-5.172,-6.816],[3.277,-0.205]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.125,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[198.331,157.778],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.034,-1.355],[0,0],[0.821,2.764],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[-2.034,1.355],[0,0],[0,0],[0,0],[0,0],[2.29,1.786]],"v":[[13.55,9.763],[1.056,18.085],[-4.873,15.157],[-10.162,-2.649],[-14.92,-18.588],[-1.728,-8.266],[13.019,3.24]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.125,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[206.009,166.522],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.006,-1.472],[0,0],[3.402,-2.266],[0,0],[2.774,4.058],[0,0],[-1.227,0.817],[0,0]],"o":[[0,0],[2.79,4.082],[0,0],[-3.383,2.253],[0,0],[-1.006,-1.472],[0,0],[1.227,-0.817]],"v":[[4.72,-10.769],[10.203,-2.749],[9.09,8.793],[5.35,11.284],[-5.844,8.002],[-11.356,-0.062],[-10.956,-4.207],[0.676,-11.955]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.125,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[262.983,253.765],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":3,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.16,-0.24],[0,0],[0,0],[0,0],[0,0],[3.41,-2.25],[0,0],[2.82,4.03],[0,0],[0,0]],"o":[[0.14,0.25],[0,0],[0,0],[0,0],[0,0],[2.81,4.09],[0,0],[-3.42,2.25],[0,0],[0,0],[0,0]],"v":[[-27.095,-45.81],[-26.625,-45.16],[-25.825,-44.01],[-19.955,-35.42],[19.765,22.73],[25.275,30.76],[24.175,42.29],[20.435,44.76],[9.225,41.49],[3.735,33.4],[-43.009,-34.282]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.125,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[247.905,220.284],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.14,-0.22],[0,0]],"o":[[0.15,0.23],[0,0],[0,0]],"v":[[-9.15,-13.41],[-8.68,-12.68],[9.15,13.41]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.125,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[213.92,198.474],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":15,"s":[191.193,149.123],"to":[-15.75,0],"ti":[3.25,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":30,"s":[96.693,149.123],"to":[-3.25,0],"ti":[0,-2.5]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":45,"s":[171.693,149.123],"to":[0,2.5],"ti":[4.833,-2.5]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":50,"s":[96.693,164.123],"to":[-4.833,2.5],"ti":[-15.75,2.5]},{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0},"t":65,"s":[142.693,164.123],"to":[15.75,-2.5],"ti":[-8.083,2.5]},{"t":80,"s":[191.193,149.123]}],"ix":2},"a":{"a":0,"k":[191.193,149.123],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":15,"s":[0]},{"t":80,"s":[0]}],"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":5,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false}],"ip":0,"op":120,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"Layer 1","parent":1,"tt":2,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[50,50,0],"ix":2,"l":2},"a":{"a":0,"k":[175,175,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Kleaner","np":34,"mn":"Pseudo/Duik Kleaner v3.2","ix":1,"en":1,"ef":[{"ty":7,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0001","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0003","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0004","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","mn":"Pseudo/Duik Kleaner v3.2-0005","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","mn":"Pseudo/Duik Kleaner v3.2-0006","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0007","ix":7,"v":0},{"ty":6,"nm":"Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0008","ix":8,"v":0},{"ty":0,"nm":"Slow In","mn":"Pseudo/Duik Kleaner v3.2-0009","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","mn":"Pseudo/Duik Kleaner v3.2-0010","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0011","ix":11,"v":0},{"ty":6,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0012","ix":12,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/Duik Kleaner v3.2-0013","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","mn":"Pseudo/Duik Kleaner v3.2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","mn":"Pseudo/Duik Kleaner v3.2-0015","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","mn":"Pseudo/Duik Kleaner v3.2-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","mn":"Pseudo/Duik Kleaner v3.2-0017","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0018","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","mn":"Pseudo/Duik Kleaner v3.2-0019","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0020","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","mn":"Pseudo/Duik Kleaner v3.2-0021","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0022","ix":22,"v":0},{"ty":7,"nm":"Overlap","mn":"Pseudo/Duik Kleaner v3.2-0023","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","mn":"Pseudo/Duik Kleaner v3.2-0024","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","mn":"Pseudo/Duik Kleaner v3.2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0026","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0027","ix":27,"v":0},{"ty":7,"nm":"Soft Body","mn":"Pseudo/Duik Kleaner v3.2-0028","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","mn":"Pseudo/Duik Kleaner v3.2-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0030","ix":30,"v":0},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0031","ix":31,"v":0},{"ty":0,"nm":"Precision","mn":"Pseudo/Duik Kleaner v3.2-0032","ix":32,"v":{"a":0,"k":1,"ix":32}}]},{"ty":5,"nm":"Kleaner 2","np":34,"mn":"Pseudo/Duik Kleaner v3.2","ix":2,"en":1,"ef":[{"ty":7,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0001","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0003","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0004","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","mn":"Pseudo/Duik Kleaner v3.2-0005","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","mn":"Pseudo/Duik Kleaner v3.2-0006","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0007","ix":7,"v":0},{"ty":6,"nm":"Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0008","ix":8,"v":0},{"ty":0,"nm":"Slow In","mn":"Pseudo/Duik Kleaner v3.2-0009","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","mn":"Pseudo/Duik Kleaner v3.2-0010","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0011","ix":11,"v":0},{"ty":6,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0012","ix":12,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/Duik Kleaner v3.2-0013","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","mn":"Pseudo/Duik Kleaner v3.2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","mn":"Pseudo/Duik Kleaner v3.2-0015","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","mn":"Pseudo/Duik Kleaner v3.2-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","mn":"Pseudo/Duik Kleaner v3.2-0017","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0018","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","mn":"Pseudo/Duik Kleaner v3.2-0019","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0020","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","mn":"Pseudo/Duik Kleaner v3.2-0021","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0022","ix":22,"v":0},{"ty":7,"nm":"Overlap","mn":"Pseudo/Duik Kleaner v3.2-0023","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","mn":"Pseudo/Duik Kleaner v3.2-0024","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","mn":"Pseudo/Duik Kleaner v3.2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0026","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0027","ix":27,"v":0},{"ty":7,"nm":"Soft Body","mn":"Pseudo/Duik Kleaner v3.2-0028","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","mn":"Pseudo/Duik Kleaner v3.2-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0030","ix":30,"v":0},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0031","ix":31,"v":0},{"ty":0,"nm":"Precision","mn":"Pseudo/Duik Kleaner v3.2-0032","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":30,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-36.936,0],[-36.788,0]],"c":false}]},{"t":45,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-36.936,0],[36.936,0]],"c":false}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.125,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[133.291,147.935],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":50,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-24.068,0],[-23.679,0]],"c":false}]},{"t":64,"s":[{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[-24.068,0],[24.068,0]],"c":false}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.125,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[120.423,163.72],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[120.423,163.72],"ix":2},"a":{"a":0,"k":[120.423,163.72],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.394,-0.798],[0,0],[-0.35,-0.051],[0,0],[0.637,-0.621],[0,0],[-0.06,-0.348],[0,0],[0.787,0.414],[0,0],[0.313,-0.164],[0,0],[-0.15,0.877],[0,0],[0.253,0.247],[0,0],[-0.88,0.128],[0,0],[-0.156,0.317],[0,0]],"o":[[0,0],[0.156,0.317],[0,0],[0.88,0.128],[0,0],[-0.253,0.247],[0,0],[0.15,0.877],[0,0],[-0.313,-0.164],[0,0],[-0.787,0.414],[0,0],[0.06,-0.348],[0,0],[-0.637,-0.621],[0,0],[0.35,-0.051],[0,0],[0.394,-0.798]],"v":[[0.962,-12.265],[4.293,-5.516],[5.102,-4.929],[12.55,-3.846],[13.145,-2.016],[7.755,3.238],[7.446,4.188],[8.719,11.606],[7.161,12.738],[0.499,9.235],[-0.499,9.235],[-7.161,12.738],[-8.719,11.606],[-7.446,4.188],[-7.755,3.238],[-13.145,-2.016],[-12.55,-3.846],[-5.102,-4.929],[-4.293,-5.516],[-0.962,-12.265]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.125,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":4},"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":20,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":25,"s":[100]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":70,"s":[100]},{"t":75,"s":[0]}],"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[109.125,111.985],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":15,"s":[100,100]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":20,"s":[120,120]},{"t":25,"s":[100,100]}],"ix":3,"x":"var $bm_rt;\\nvar fx = effect(\'Kleaner 2\');\\nvar doAnticipation = fx(1).value;\\nvar doInterpolation = fx(2).value;\\nvar doFollowThrough = fx(3).value;\\nvar damping = $bm_div(fx(15).value, 10);\\nvar elasticity = $bm_div(fx(13).value, 10);\\nvar bounce = fx(17).value;\\nvar anticipationDuration = fx(5).value;\\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\\nvar slowIn = $bm_div(fx(9).value, 100);\\nvar slowOut = $bm_div(fx(10).value, 100);\\nvar spatialMode = fx(21).value;\\nvar spatialDoInterpolation = fx(20).value;\\nvar moBlurPrecision = fx(32).value;\\nvar elasticityRandom = fx(14).value;\\nvar dampingRandom = fx(16).value;\\nvar softBody = fx(28).value;\\nvar flexibility = $bm_div(fx(29).value, 100);\\nvar doOverlap = fx(23).value;\\nvar overlapDuration = fx(24).value;\\nvar overlapRandom = fx(25).value;\\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\\nvar zeroValue;\\nif ($bm_isInstanceOfArray(value)) {\\n    if (value.length == 2)\\n        zeroValue = [\\n            0,\\n            0\\n        ];\\n    else if (value.length == 3)\\n        zeroValue = [\\n            0,\\n            0,\\n            0\\n        ];\\n    else if (value.length == 4)\\n        zeroValue = [\\n            0,\\n            0,\\n            0,\\n            0\\n        ];\\n} else\\n    zeroValue = 0;\\nvar isThisSpatial = isSpatial(thisProperty);\\nvar isThisPosition = thisProperty === $bm_transform.position;\\nvar simulate = false;\\nif (isThisSpatial) {\\n    doInterpolation = doInterpolation && spatialDoInterpolation;\\n    if (isThisPosition && thisProperty.numKeys > 0) {\\n        doOverlap = false;\\n        simulate = false;\\n    } else {\\n        simulate = spatialMode == 2;\\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\\n    }\\n} else {\\n    doOverlap = false;\\n}\\nif (!doOverlap) {\\n    overlapDuration = 0;\\n}\\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\\n    if (doFollowThrough) {\\n        elasticity = $bm_div(elasticity, distanceRatio);\\n        damping = $bm_div(damping, distanceRatio);\\n    }\\n    if (doOverlap) {\\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\\n    }\\n}\\nseedRandom(0, true);\\nif (doFollowThrough) {\\n    if (elasticityRandom > 0)\\n        elasticity = addNoise(elasticity, elasticityRandom);\\n    if (dampingRandom > 0)\\n        damping = addNoise(damping, dampingRandom);\\n}\\nif (doOverlap) {\\n    if (doOverlap && overlapRandom > 0)\\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\\n}\\nvar result = value;\\nfunction isSpatial(prop) {\\n    if (!(prop.value instanceof Array))\\n        return false;\\n    if (prop.value.length != 2 && prop.value.length != 3)\\n        return false;\\n    try {\\n        if (typeof prop.speed !== \'undefined\')\\n            return true;\\n    } catch (e) {\\n        return false;\\n    }\\n}\\nfunction addNoise(val, quantity) {\\n    var randomValue = random(0.9, 1.1);\\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\\n}\\nfunction isAfterLastKey() {\\n    if (numKeys == 0)\\n        return false;\\n    var nKey = nearestKey(time);\\n    return nKey.time <= time && nKey.index == numKeys;\\n}\\nfunction isStill(t, threshold) {\\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\\n    if ($bm_isInstanceOfArray(d)) {\\n        for (var i = 0; i < d.length; i++) {\\n            d[i] = Math.abs(d[i]);\\n            if (d[i] >= threshold) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    } else {\\n        d = Math.abs(d);\\n        return d < threshold;\\n    }\\n}\\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\\n    if (arguments.length !== 5 && arguments.length !== 6)\\n        return t;\\n    var a = $bm_sub(value2, value1);\\n    var b = $bm_sub(tMax, tMin);\\n    if (b == 0)\\n        return t;\\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\\n        bezierPoints = [\\n            0.33,\\n            0,\\n            0.66,\\n            1\\n        ];\\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\\n    function h(f, g) {\\n        var x = $bm_mul(3, g[0]);\\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\\n        var k = $bm_sub($bm_sub(1, x), j);\\n        var l = $bm_mul(3, g[1]);\\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\\n        var n = $bm_sub($bm_sub(1, l), m);\\n        var d = f;\\n        for (var i = 0; i < 5; i++) {\\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\\n            if (Math.abs(z) < 0.001)\\n                break;\\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\\n        }\\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\\n    }\\n}\\nfunction getPropWorldSpeed(t, prop) {\\n    return length(getPropWorldVelocity(t, prop));\\n}\\nfunction getPrevKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time <= t)\\n        return nKey;\\n    if (nKey.index > 1)\\n        return key($bm_sub(nKey.index, 1));\\n    return null;\\n}\\nfunction getNextKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time >= t)\\n        return nKey;\\n    if (nKey.index < numKeys)\\n        return key($bm_sum(nKey.index, 1));\\n    return null;\\n}\\nfunction getPropWorldVelocity(t, prop) {\\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\\n}\\nfunction getLayerWorldPos(t, l) {\\n    return l.toWorld(l.anchorPoint, t);\\n}\\nfunction getPropWorldValue(t, prop) {\\n    if (isPosition(prop))\\n        return getLayerWorldPos(t, thisLayer);\\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\\n}\\nfunction isPosition(prop) {\\n    return prop === $bm_transform.position;\\n}\\nfunction isKeyTop(k, axis) {\\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\\n    if ($bm_isInstanceOfArray(value)) {\\n        prevSpeed = prevSpeed[axis];\\n        nextSpeed = nextSpeed[axis];\\n    }\\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\\n        return true;\\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\\n}\\nfunction anticipate() {\\n    var anticipation = zeroValue;\\n    if (isAfterLastKey())\\n        return anticipation;\\n    if (numKeys < 2)\\n        return anticipation;\\n    var nextKey = getNextKey(time);\\n    var aKey = nextKey;\\n    if (!isStill(aKey.time - 0.1, 0.1)) {\\n        aKey = getPrevKey(time);\\n        if (!isStill(aKey.time - 0.1, 0.1))\\n            return anticipation;\\n    }\\n    if (aKey.index == numKeys)\\n        return anticipation;\\n    var anticipationMiddle = aKey.time;\\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\\n    var anticipationEnd = key(aKey.index + 1).time;\\n    var startValue = anticipation;\\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\\n    var endValue = anticipation;\\n    if (time < anticipationStart) {\\n        return anticipation;\\n    } else if (time < anticipationMiddle) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else if (time <= anticipationEnd) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else {\\n        return anticipation;\\n    }\\n}\\nfunction followThroughAtTime(t) {\\n    var fThrough = zeroValue;\\n    if (elasticity == 0)\\n        return fThrough;\\n    var propSpeed;\\n    if (!simulate) {\\n        if (numKeys < 2)\\n            return fThrough;\\n        if (nearestKey(t).index == 1)\\n            return fThrough;\\n        propSpeed = length(velocityAtTime(t));\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    } else {\\n        propSpeed = getPropWorldSpeed(t, thisProperty);\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    }\\n    var fThroughStart = 0;\\n    var fThroughTime = 0;\\n    if (simulate) {\\n        var speedI = getPropWorldSpeed(t, thisProperty);\\n        var i = t;\\n        while (speedI < threshold && i > 0) {\\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\\n            speedI = getPropWorldSpeed(i, thisProperty);\\n        }\\n        fThroughStart = i;\\n    } else {\\n        var fThroughKey = getPrevKey(t);\\n        fThroughStart = fThroughKey.time;\\n    }\\n    if (fThroughStart == 0)\\n        return fThrough;\\n    fThroughTime = $bm_sub(t, fThroughStart);\\n    if (simulate)\\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\\n    else\\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\\n    if (bounce) {\\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\\n        cycleDuration = framesToTime(cycleDuration);\\n        var midDuration = $bm_div(cycleDuration, 2);\\n        var maxValue = $bm_mul(fThrough, midDuration);\\n        var cycvarime = fThroughTime;\\n        var numEndCycles = 1;\\n        while (cycvarime > cycleDuration) {\\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\\n            if (cycleDuration < 2) {\\n                cycleDuration = 2;\\n                numEndCycles++;\\n            }\\n            cycleDuration = framesToTime(cycleDuration);\\n            midDuration = $bm_div(cycleDuration, 2);\\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\\n            if (numEndCycles > 100 / damping && maxValue < threshold)\\n                return zeroValue;\\n        }\\n        if (cycvarime < midDuration)\\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\\n                0,\\n                0.1,\\n                slowIn,\\n                1\\n            ]);\\n        else\\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\\n                $bm_sub(1, slowIn),\\n                0,\\n                1,\\n                0.9\\n            ]);\\n    } else {\\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\\n        sinus = Math.sin(sinus);\\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\\n        sinus = $bm_div(sinus, damp);\\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\\n            return 0;\\n        fThrough = $bm_mul(fThrough, sinus);\\n        if (threshold > 0) {\\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\\n        }\\n    }\\n    if (bounce) {\\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\\n        var startValue = valueAtTime(fThroughStart);\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < prevValue.length; i++) {\\n                if (prevValue[i] > startValue[i])\\n                    fThrough[i] = Math.abs(fThrough[i]);\\n                if (prevValue[i] < startValue[i])\\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\\n            }\\n        } else {\\n            if (prevValue > startValue)\\n                fThrough = Math.abs(fThrough);\\n            if (prevValue < startValue)\\n                fThrough = $bm_neg(Math.abs(fThrough));\\n        }\\n    }\\n    if (simulate) {\\n        if (!isThisPosition) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\\n        } else if (thisLayer.hasParent) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\\n        }\\n    }\\n    return fThrough;\\n}\\nfunction followThrough() {\\n    var propSpeed = length(velocity);\\n    if (propSpeed < threshold)\\n        return followThroughAtTime($bm_sub(time, overlapDuration));\\n    var fThrough = zeroValue;\\n    var t = time;\\n    while (t > 0) {\\n        t = $bm_sub(t, thisComp.frameDuration);\\n        if (simulate)\\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\\n        else\\n            propSpeed = length(velocityAtTime(t));\\n        if (propSpeed < threshold) {\\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\\n            break;\\n        }\\n    }\\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\\n}\\nfunction smartSmooth(axis) {\\n    var startKey = nearestKey(time);\\n    var endKey = startKey;\\n    if (time == startKey.time)\\n        return 0;\\n    if (time < startKey.time && startKey.index == 1)\\n        return 0;\\n    if (time > startKey.time && startKey.index == numKeys)\\n        return 0;\\n    if (time < startKey.time)\\n        startKey = key($bm_sub(startKey.index, 1));\\n    if (time > startKey.time)\\n        endKey = key($bm_sum(startKey.index, 1));\\n    var sI = 0.66;\\n    var sO = 0.33;\\n    var sIV = 1;\\n    var sOV = 0;\\n    var sVal = startKey.value;\\n    var eVal = endKey.value;\\n    if ($bm_isInstanceOfArray(value)) {\\n        sVal = sVal[axis];\\n        eVal = eVal[axis];\\n    }\\n    var sTime = startKey.time;\\n    var eTime = endKey.time;\\n    if (isKeyTop(startKey, axis))\\n        sO = slowOut;\\n    else {\\n        var prevKey = key($bm_sub(startKey.index, 1));\\n        var pVal = prevKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            pVal = pVal[axis];\\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\\n    }\\n    if (isKeyTop(endKey, axis)) {\\n        sI = slowIn;\\n        if (endKey.index != numKeys) {\\n            var nextKey = key($bm_sum(endKey.index, 1));\\n            var nVal = nextKey.value;\\n            if ($bm_isInstanceOfArray(value))\\n                nVal = nVal[axis];\\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\\n                sI = 1;\\n        }\\n    } else {\\n        var nextKey = key($bm_sum(endKey.index, 1));\\n        var nVal = nextKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            nVal = nVal[axis];\\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\\n    }\\n    if (endKey.index == numKeys && doFollowThrough) {\\n        sI = 1;\\n    }\\n    var val = value;\\n    if ($bm_isInstanceOfArray(value))\\n        val = val[axis];\\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\\n        sO,\\n        sOV,\\n        sI,\\n        sIV\\n    ]), val);\\n}\\nfunction overlap() {\\n    var ol = zeroValue;\\n    if (isThisPosition && !hasParent)\\n        return zeroValue;\\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\\n    if (isThisPosition) {\\n        var originalDistance = length(valueAtTime(0));\\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\\n    }\\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\\n    ol = thisLayer.fromWorld(ol);\\n    if (!isThisPosition)\\n        ol = $bm_sub(ol, value);\\n    else {\\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\\n    }\\n    return ol;\\n}\\nvar okToGo = false;\\nif (simulate && fx.enabled)\\n    okToGo = true;\\nelse if (numKeys > 1 && fx.enabled)\\n    okToGo = true;\\nif (okToGo) {\\n    var smartSmoothResult = zeroValue;\\n    if (doInterpolation) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            if (value.length == 2)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1)\\n                ];\\n            else if (value.length == 3)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2)\\n                ];\\n            else if (value.length == 4)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2),\\n                    smartSmooth(3)\\n                ];\\n        } else {\\n            smartSmoothResult = smartSmooth(0);\\n        }\\n    }\\n    if (doAnticipation)\\n        result = $bm_sum(result, anticipate());\\n    result = $bm_sum(result, smartSmoothResult);\\n    if (doFollowThrough)\\n        result = $bm_sum(result, followThrough());\\n    if (doOverlap)\\n        result = $bm_sum(result, overlap());\\n}\\n$bm_rt = result;"},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":15,"s":[0]},{"t":25,"s":[360]}],"ix":6,"x":"var $bm_rt;\\nvar fx = effect(\'Kleaner 2\');\\nvar doAnticipation = fx(1).value;\\nvar doInterpolation = fx(2).value;\\nvar doFollowThrough = fx(3).value;\\nvar damping = $bm_div(fx(15).value, 10);\\nvar elasticity = $bm_div(fx(13).value, 10);\\nvar bounce = fx(17).value;\\nvar anticipationDuration = fx(5).value;\\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\\nvar slowIn = $bm_div(fx(9).value, 100);\\nvar slowOut = $bm_div(fx(10).value, 100);\\nvar spatialMode = fx(21).value;\\nvar spatialDoInterpolation = fx(20).value;\\nvar moBlurPrecision = fx(32).value;\\nvar elasticityRandom = fx(14).value;\\nvar dampingRandom = fx(16).value;\\nvar softBody = fx(28).value;\\nvar flexibility = $bm_div(fx(29).value, 100);\\nvar doOverlap = fx(23).value;\\nvar overlapDuration = fx(24).value;\\nvar overlapRandom = fx(25).value;\\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\\nvar zeroValue;\\nif ($bm_isInstanceOfArray(value)) {\\n    if (value.length == 2)\\n        zeroValue = [\\n            0,\\n            0\\n        ];\\n    else if (value.length == 3)\\n        zeroValue = [\\n            0,\\n            0,\\n            0\\n        ];\\n    else if (value.length == 4)\\n        zeroValue = [\\n            0,\\n            0,\\n            0,\\n            0\\n        ];\\n} else\\n    zeroValue = 0;\\nvar isThisSpatial = isSpatial(thisProperty);\\nvar isThisPosition = thisProperty === $bm_transform.position;\\nvar simulate = false;\\nif (isThisSpatial) {\\n    doInterpolation = doInterpolation && spatialDoInterpolation;\\n    if (isThisPosition && thisProperty.numKeys > 0) {\\n        doOverlap = false;\\n        simulate = false;\\n    } else {\\n        simulate = spatialMode == 2;\\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\\n    }\\n} else {\\n    doOverlap = false;\\n}\\nif (!doOverlap) {\\n    overlapDuration = 0;\\n}\\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\\n    if (doFollowThrough) {\\n        elasticity = $bm_div(elasticity, distanceRatio);\\n        damping = $bm_div(damping, distanceRatio);\\n    }\\n    if (doOverlap) {\\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\\n    }\\n}\\nseedRandom(0, true);\\nif (doFollowThrough) {\\n    if (elasticityRandom > 0)\\n        elasticity = addNoise(elasticity, elasticityRandom);\\n    if (dampingRandom > 0)\\n        damping = addNoise(damping, dampingRandom);\\n}\\nif (doOverlap) {\\n    if (doOverlap && overlapRandom > 0)\\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\\n}\\nvar result = value;\\nfunction isSpatial(prop) {\\n    if (!(prop.value instanceof Array))\\n        return false;\\n    if (prop.value.length != 2 && prop.value.length != 3)\\n        return false;\\n    try {\\n        if (typeof prop.speed !== \'undefined\')\\n            return true;\\n    } catch (e) {\\n        return false;\\n    }\\n}\\nfunction addNoise(val, quantity) {\\n    var randomValue = random(0.9, 1.1);\\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\\n}\\nfunction isAfterLastKey() {\\n    if (numKeys == 0)\\n        return false;\\n    var nKey = nearestKey(time);\\n    return nKey.time <= time && nKey.index == numKeys;\\n}\\nfunction isStill(t, threshold) {\\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\\n    if ($bm_isInstanceOfArray(d)) {\\n        for (var i = 0; i < d.length; i++) {\\n            d[i] = Math.abs(d[i]);\\n            if (d[i] >= threshold) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    } else {\\n        d = Math.abs(d);\\n        return d < threshold;\\n    }\\n}\\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\\n    if (arguments.length !== 5 && arguments.length !== 6)\\n        return t;\\n    var a = $bm_sub(value2, value1);\\n    var b = $bm_sub(tMax, tMin);\\n    if (b == 0)\\n        return t;\\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\\n        bezierPoints = [\\n            0.33,\\n            0,\\n            0.66,\\n            1\\n        ];\\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\\n    function h(f, g) {\\n        var x = $bm_mul(3, g[0]);\\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\\n        var k = $bm_sub($bm_sub(1, x), j);\\n        var l = $bm_mul(3, g[1]);\\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\\n        var n = $bm_sub($bm_sub(1, l), m);\\n        var d = f;\\n        for (var i = 0; i < 5; i++) {\\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\\n            if (Math.abs(z) < 0.001)\\n                break;\\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\\n        }\\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\\n    }\\n}\\nfunction getPropWorldSpeed(t, prop) {\\n    return length(getPropWorldVelocity(t, prop));\\n}\\nfunction getPrevKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time <= t)\\n        return nKey;\\n    if (nKey.index > 1)\\n        return key($bm_sub(nKey.index, 1));\\n    return null;\\n}\\nfunction getNextKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time >= t)\\n        return nKey;\\n    if (nKey.index < numKeys)\\n        return key($bm_sum(nKey.index, 1));\\n    return null;\\n}\\nfunction getPropWorldVelocity(t, prop) {\\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\\n}\\nfunction getLayerWorldPos(t, l) {\\n    return l.toWorld(l.anchorPoint, t);\\n}\\nfunction getPropWorldValue(t, prop) {\\n    if (isPosition(prop))\\n        return getLayerWorldPos(t, thisLayer);\\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\\n}\\nfunction isPosition(prop) {\\n    return prop === $bm_transform.position;\\n}\\nfunction isKeyTop(k, axis) {\\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\\n    if ($bm_isInstanceOfArray(value)) {\\n        prevSpeed = prevSpeed[axis];\\n        nextSpeed = nextSpeed[axis];\\n    }\\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\\n        return true;\\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\\n}\\nfunction anticipate() {\\n    var anticipation = zeroValue;\\n    if (isAfterLastKey())\\n        return anticipation;\\n    if (numKeys < 2)\\n        return anticipation;\\n    var nextKey = getNextKey(time);\\n    var aKey = nextKey;\\n    if (!isStill(aKey.time - 0.1, 0.1)) {\\n        aKey = getPrevKey(time);\\n        if (!isStill(aKey.time - 0.1, 0.1))\\n            return anticipation;\\n    }\\n    if (aKey.index == numKeys)\\n        return anticipation;\\n    var anticipationMiddle = aKey.time;\\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\\n    var anticipationEnd = key(aKey.index + 1).time;\\n    var startValue = anticipation;\\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\\n    var endValue = anticipation;\\n    if (time < anticipationStart) {\\n        return anticipation;\\n    } else if (time < anticipationMiddle) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else if (time <= anticipationEnd) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else {\\n        return anticipation;\\n    }\\n}\\nfunction followThroughAtTime(t) {\\n    var fThrough = zeroValue;\\n    if (elasticity == 0)\\n        return fThrough;\\n    var propSpeed;\\n    if (!simulate) {\\n        if (numKeys < 2)\\n            return fThrough;\\n        if (nearestKey(t).index == 1)\\n            return fThrough;\\n        propSpeed = length(velocityAtTime(t));\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    } else {\\n        propSpeed = getPropWorldSpeed(t, thisProperty);\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    }\\n    var fThroughStart = 0;\\n    var fThroughTime = 0;\\n    if (simulate) {\\n        var speedI = getPropWorldSpeed(t, thisProperty);\\n        var i = t;\\n        while (speedI < threshold && i > 0) {\\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\\n            speedI = getPropWorldSpeed(i, thisProperty);\\n        }\\n        fThroughStart = i;\\n    } else {\\n        var fThroughKey = getPrevKey(t);\\n        fThroughStart = fThroughKey.time;\\n    }\\n    if (fThroughStart == 0)\\n        return fThrough;\\n    fThroughTime = $bm_sub(t, fThroughStart);\\n    if (simulate)\\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\\n    else\\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\\n    if (bounce) {\\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\\n        cycleDuration = framesToTime(cycleDuration);\\n        var midDuration = $bm_div(cycleDuration, 2);\\n        var maxValue = $bm_mul(fThrough, midDuration);\\n        var cycvarime = fThroughTime;\\n        var numEndCycles = 1;\\n        while (cycvarime > cycleDuration) {\\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\\n            if (cycleDuration < 2) {\\n                cycleDuration = 2;\\n                numEndCycles++;\\n            }\\n            cycleDuration = framesToTime(cycleDuration);\\n            midDuration = $bm_div(cycleDuration, 2);\\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\\n            if (numEndCycles > 100 / damping && maxValue < threshold)\\n                return zeroValue;\\n        }\\n        if (cycvarime < midDuration)\\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\\n                0,\\n                0.1,\\n                slowIn,\\n                1\\n            ]);\\n        else\\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\\n                $bm_sub(1, slowIn),\\n                0,\\n                1,\\n                0.9\\n            ]);\\n    } else {\\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\\n        sinus = Math.sin(sinus);\\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\\n        sinus = $bm_div(sinus, damp);\\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\\n            return 0;\\n        fThrough = $bm_mul(fThrough, sinus);\\n        if (threshold > 0) {\\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\\n        }\\n    }\\n    if (bounce) {\\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\\n        var startValue = valueAtTime(fThroughStart);\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < prevValue.length; i++) {\\n                if (prevValue[i] > startValue[i])\\n                    fThrough[i] = Math.abs(fThrough[i]);\\n                if (prevValue[i] < startValue[i])\\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\\n            }\\n        } else {\\n            if (prevValue > startValue)\\n                fThrough = Math.abs(fThrough);\\n            if (prevValue < startValue)\\n                fThrough = $bm_neg(Math.abs(fThrough));\\n        }\\n    }\\n    if (simulate) {\\n        if (!isThisPosition) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\\n        } else if (thisLayer.hasParent) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\\n        }\\n    }\\n    return fThrough;\\n}\\nfunction followThrough() {\\n    var propSpeed = length(velocity);\\n    if (propSpeed < threshold)\\n        return followThroughAtTime($bm_sub(time, overlapDuration));\\n    var fThrough = zeroValue;\\n    var t = time;\\n    while (t > 0) {\\n        t = $bm_sub(t, thisComp.frameDuration);\\n        if (simulate)\\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\\n        else\\n            propSpeed = length(velocityAtTime(t));\\n        if (propSpeed < threshold) {\\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\\n            break;\\n        }\\n    }\\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\\n}\\nfunction smartSmooth(axis) {\\n    var startKey = nearestKey(time);\\n    var endKey = startKey;\\n    if (time == startKey.time)\\n        return 0;\\n    if (time < startKey.time && startKey.index == 1)\\n        return 0;\\n    if (time > startKey.time && startKey.index == numKeys)\\n        return 0;\\n    if (time < startKey.time)\\n        startKey = key($bm_sub(startKey.index, 1));\\n    if (time > startKey.time)\\n        endKey = key($bm_sum(startKey.index, 1));\\n    var sI = 0.66;\\n    var sO = 0.33;\\n    var sIV = 1;\\n    var sOV = 0;\\n    var sVal = startKey.value;\\n    var eVal = endKey.value;\\n    if ($bm_isInstanceOfArray(value)) {\\n        sVal = sVal[axis];\\n        eVal = eVal[axis];\\n    }\\n    var sTime = startKey.time;\\n    var eTime = endKey.time;\\n    if (isKeyTop(startKey, axis))\\n        sO = slowOut;\\n    else {\\n        var prevKey = key($bm_sub(startKey.index, 1));\\n        var pVal = prevKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            pVal = pVal[axis];\\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\\n    }\\n    if (isKeyTop(endKey, axis)) {\\n        sI = slowIn;\\n        if (endKey.index != numKeys) {\\n            var nextKey = key($bm_sum(endKey.index, 1));\\n            var nVal = nextKey.value;\\n            if ($bm_isInstanceOfArray(value))\\n                nVal = nVal[axis];\\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\\n                sI = 1;\\n        }\\n    } else {\\n        var nextKey = key($bm_sum(endKey.index, 1));\\n        var nVal = nextKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            nVal = nVal[axis];\\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\\n    }\\n    if (endKey.index == numKeys && doFollowThrough) {\\n        sI = 1;\\n    }\\n    var val = value;\\n    if ($bm_isInstanceOfArray(value))\\n        val = val[axis];\\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\\n        sO,\\n        sOV,\\n        sI,\\n        sIV\\n    ]), val);\\n}\\nfunction overlap() {\\n    var ol = zeroValue;\\n    if (isThisPosition && !hasParent)\\n        return zeroValue;\\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\\n    if (isThisPosition) {\\n        var originalDistance = length(valueAtTime(0));\\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\\n    }\\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\\n    ol = thisLayer.fromWorld(ol);\\n    if (!isThisPosition)\\n        ol = $bm_sub(ol, value);\\n    else {\\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\\n    }\\n    return ol;\\n}\\nvar okToGo = false;\\nif (simulate && fx.enabled)\\n    okToGo = true;\\nelse if (numKeys > 1 && fx.enabled)\\n    okToGo = true;\\nif (okToGo) {\\n    var smartSmoothResult = zeroValue;\\n    if (doInterpolation) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            if (value.length == 2)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1)\\n                ];\\n            else if (value.length == 3)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2)\\n                ];\\n            else if (value.length == 4)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2),\\n                    smartSmooth(3)\\n                ];\\n        } else {\\n            smartSmoothResult = smartSmooth(0);\\n        }\\n    }\\n    if (doAnticipation)\\n        result = $bm_sum(result, anticipate());\\n    result = $bm_sum(result, smartSmoothResult);\\n    if (doFollowThrough)\\n        result = $bm_sum(result, followThrough());\\n    if (doOverlap)\\n        result = $bm_sum(result, overlap());\\n}\\n$bm_rt = result;"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.394,-0.798],[0,0],[-0.35,-0.051],[0,0],[0.637,-0.621],[0,0],[-0.06,-0.348],[0,0],[0.787,0.414],[0,0],[0.313,-0.164],[0,0],[-0.15,0.877],[0,0],[0.253,0.247],[0,0],[-0.88,0.128],[0,0],[-0.156,0.317],[0,0]],"o":[[0,0],[0.156,0.317],[0,0],[0.88,0.128],[0,0],[-0.253,0.247],[0,0],[0.15,0.877],[0,0],[-0.313,-0.164],[0,0],[-0.787,0.414],[0,0],[0.06,-0.348],[0,0],[-0.637,-0.621],[0,0],[0.35,-0.051],[0,0],[0.394,-0.798]],"v":[[0.962,-12.265],[4.293,-5.516],[5.102,-4.929],[12.55,-3.846],[13.145,-2.016],[7.755,3.238],[7.446,4.188],[8.719,11.606],[7.161,12.738],[0.499,9.235],[-0.499,9.235],[-7.161,12.738],[-8.719,11.606],[-7.446,4.188],[-7.755,3.238],[-13.145,-2.016],[-12.55,-3.846],[-5.102,-4.929],[-4.293,-5.516],[-0.962,-12.265]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.125,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":4},"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":25,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":30,"s":[100]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":70,"s":[100]},{"t":75,"s":[0]}],"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[152.295,111.985],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":20,"s":[100,100]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":25,"s":[120,120]},{"t":30,"s":[100,100]}],"ix":3,"x":"var $bm_rt;\\nvar fx = effect(\'Kleaner 2\');\\nvar doAnticipation = fx(1).value;\\nvar doInterpolation = fx(2).value;\\nvar doFollowThrough = fx(3).value;\\nvar damping = $bm_div(fx(15).value, 10);\\nvar elasticity = $bm_div(fx(13).value, 10);\\nvar bounce = fx(17).value;\\nvar anticipationDuration = fx(5).value;\\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\\nvar slowIn = $bm_div(fx(9).value, 100);\\nvar slowOut = $bm_div(fx(10).value, 100);\\nvar spatialMode = fx(21).value;\\nvar spatialDoInterpolation = fx(20).value;\\nvar moBlurPrecision = fx(32).value;\\nvar elasticityRandom = fx(14).value;\\nvar dampingRandom = fx(16).value;\\nvar softBody = fx(28).value;\\nvar flexibility = $bm_div(fx(29).value, 100);\\nvar doOverlap = fx(23).value;\\nvar overlapDuration = fx(24).value;\\nvar overlapRandom = fx(25).value;\\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\\nvar zeroValue;\\nif ($bm_isInstanceOfArray(value)) {\\n    if (value.length == 2)\\n        zeroValue = [\\n            0,\\n            0\\n        ];\\n    else if (value.length == 3)\\n        zeroValue = [\\n            0,\\n            0,\\n            0\\n        ];\\n    else if (value.length == 4)\\n        zeroValue = [\\n            0,\\n            0,\\n            0,\\n            0\\n        ];\\n} else\\n    zeroValue = 0;\\nvar isThisSpatial = isSpatial(thisProperty);\\nvar isThisPosition = thisProperty === $bm_transform.position;\\nvar simulate = false;\\nif (isThisSpatial) {\\n    doInterpolation = doInterpolation && spatialDoInterpolation;\\n    if (isThisPosition && thisProperty.numKeys > 0) {\\n        doOverlap = false;\\n        simulate = false;\\n    } else {\\n        simulate = spatialMode == 2;\\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\\n    }\\n} else {\\n    doOverlap = false;\\n}\\nif (!doOverlap) {\\n    overlapDuration = 0;\\n}\\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\\n    if (doFollowThrough) {\\n        elasticity = $bm_div(elasticity, distanceRatio);\\n        damping = $bm_div(damping, distanceRatio);\\n    }\\n    if (doOverlap) {\\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\\n    }\\n}\\nseedRandom(0, true);\\nif (doFollowThrough) {\\n    if (elasticityRandom > 0)\\n        elasticity = addNoise(elasticity, elasticityRandom);\\n    if (dampingRandom > 0)\\n        damping = addNoise(damping, dampingRandom);\\n}\\nif (doOverlap) {\\n    if (doOverlap && overlapRandom > 0)\\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\\n}\\nvar result = value;\\nfunction isSpatial(prop) {\\n    if (!(prop.value instanceof Array))\\n        return false;\\n    if (prop.value.length != 2 && prop.value.length != 3)\\n        return false;\\n    try {\\n        if (typeof prop.speed !== \'undefined\')\\n            return true;\\n    } catch (e) {\\n        return false;\\n    }\\n}\\nfunction addNoise(val, quantity) {\\n    var randomValue = random(0.9, 1.1);\\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\\n}\\nfunction isAfterLastKey() {\\n    if (numKeys == 0)\\n        return false;\\n    var nKey = nearestKey(time);\\n    return nKey.time <= time && nKey.index == numKeys;\\n}\\nfunction isStill(t, threshold) {\\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\\n    if ($bm_isInstanceOfArray(d)) {\\n        for (var i = 0; i < d.length; i++) {\\n            d[i] = Math.abs(d[i]);\\n            if (d[i] >= threshold) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    } else {\\n        d = Math.abs(d);\\n        return d < threshold;\\n    }\\n}\\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\\n    if (arguments.length !== 5 && arguments.length !== 6)\\n        return t;\\n    var a = $bm_sub(value2, value1);\\n    var b = $bm_sub(tMax, tMin);\\n    if (b == 0)\\n        return t;\\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\\n        bezierPoints = [\\n            0.33,\\n            0,\\n            0.66,\\n            1\\n        ];\\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\\n    function h(f, g) {\\n        var x = $bm_mul(3, g[0]);\\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\\n        var k = $bm_sub($bm_sub(1, x), j);\\n        var l = $bm_mul(3, g[1]);\\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\\n        var n = $bm_sub($bm_sub(1, l), m);\\n        var d = f;\\n        for (var i = 0; i < 5; i++) {\\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\\n            if (Math.abs(z) < 0.001)\\n                break;\\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\\n        }\\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\\n    }\\n}\\nfunction getPropWorldSpeed(t, prop) {\\n    return length(getPropWorldVelocity(t, prop));\\n}\\nfunction getPrevKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time <= t)\\n        return nKey;\\n    if (nKey.index > 1)\\n        return key($bm_sub(nKey.index, 1));\\n    return null;\\n}\\nfunction getNextKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time >= t)\\n        return nKey;\\n    if (nKey.index < numKeys)\\n        return key($bm_sum(nKey.index, 1));\\n    return null;\\n}\\nfunction getPropWorldVelocity(t, prop) {\\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\\n}\\nfunction getLayerWorldPos(t, l) {\\n    return l.toWorld(l.anchorPoint, t);\\n}\\nfunction getPropWorldValue(t, prop) {\\n    if (isPosition(prop))\\n        return getLayerWorldPos(t, thisLayer);\\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\\n}\\nfunction isPosition(prop) {\\n    return prop === $bm_transform.position;\\n}\\nfunction isKeyTop(k, axis) {\\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\\n    if ($bm_isInstanceOfArray(value)) {\\n        prevSpeed = prevSpeed[axis];\\n        nextSpeed = nextSpeed[axis];\\n    }\\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\\n        return true;\\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\\n}\\nfunction anticipate() {\\n    var anticipation = zeroValue;\\n    if (isAfterLastKey())\\n        return anticipation;\\n    if (numKeys < 2)\\n        return anticipation;\\n    var nextKey = getNextKey(time);\\n    var aKey = nextKey;\\n    if (!isStill(aKey.time - 0.1, 0.1)) {\\n        aKey = getPrevKey(time);\\n        if (!isStill(aKey.time - 0.1, 0.1))\\n            return anticipation;\\n    }\\n    if (aKey.index == numKeys)\\n        return anticipation;\\n    var anticipationMiddle = aKey.time;\\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\\n    var anticipationEnd = key(aKey.index + 1).time;\\n    var startValue = anticipation;\\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\\n    var endValue = anticipation;\\n    if (time < anticipationStart) {\\n        return anticipation;\\n    } else if (time < anticipationMiddle) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else if (time <= anticipationEnd) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else {\\n        return anticipation;\\n    }\\n}\\nfunction followThroughAtTime(t) {\\n    var fThrough = zeroValue;\\n    if (elasticity == 0)\\n        return fThrough;\\n    var propSpeed;\\n    if (!simulate) {\\n        if (numKeys < 2)\\n            return fThrough;\\n        if (nearestKey(t).index == 1)\\n            return fThrough;\\n        propSpeed = length(velocityAtTime(t));\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    } else {\\n        propSpeed = getPropWorldSpeed(t, thisProperty);\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    }\\n    var fThroughStart = 0;\\n    var fThroughTime = 0;\\n    if (simulate) {\\n        var speedI = getPropWorldSpeed(t, thisProperty);\\n        var i = t;\\n        while (speedI < threshold && i > 0) {\\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\\n            speedI = getPropWorldSpeed(i, thisProperty);\\n        }\\n        fThroughStart = i;\\n    } else {\\n        var fThroughKey = getPrevKey(t);\\n        fThroughStart = fThroughKey.time;\\n    }\\n    if (fThroughStart == 0)\\n        return fThrough;\\n    fThroughTime = $bm_sub(t, fThroughStart);\\n    if (simulate)\\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\\n    else\\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\\n    if (bounce) {\\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\\n        cycleDuration = framesToTime(cycleDuration);\\n        var midDuration = $bm_div(cycleDuration, 2);\\n        var maxValue = $bm_mul(fThrough, midDuration);\\n        var cycvarime = fThroughTime;\\n        var numEndCycles = 1;\\n        while (cycvarime > cycleDuration) {\\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\\n            if (cycleDuration < 2) {\\n                cycleDuration = 2;\\n                numEndCycles++;\\n            }\\n            cycleDuration = framesToTime(cycleDuration);\\n            midDuration = $bm_div(cycleDuration, 2);\\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\\n            if (numEndCycles > 100 / damping && maxValue < threshold)\\n                return zeroValue;\\n        }\\n        if (cycvarime < midDuration)\\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\\n                0,\\n                0.1,\\n                slowIn,\\n                1\\n            ]);\\n        else\\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\\n                $bm_sub(1, slowIn),\\n                0,\\n                1,\\n                0.9\\n            ]);\\n    } else {\\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\\n        sinus = Math.sin(sinus);\\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\\n        sinus = $bm_div(sinus, damp);\\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\\n            return 0;\\n        fThrough = $bm_mul(fThrough, sinus);\\n        if (threshold > 0) {\\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\\n        }\\n    }\\n    if (bounce) {\\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\\n        var startValue = valueAtTime(fThroughStart);\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < prevValue.length; i++) {\\n                if (prevValue[i] > startValue[i])\\n                    fThrough[i] = Math.abs(fThrough[i]);\\n                if (prevValue[i] < startValue[i])\\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\\n            }\\n        } else {\\n            if (prevValue > startValue)\\n                fThrough = Math.abs(fThrough);\\n            if (prevValue < startValue)\\n                fThrough = $bm_neg(Math.abs(fThrough));\\n        }\\n    }\\n    if (simulate) {\\n        if (!isThisPosition) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\\n        } else if (thisLayer.hasParent) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\\n        }\\n    }\\n    return fThrough;\\n}\\nfunction followThrough() {\\n    var propSpeed = length(velocity);\\n    if (propSpeed < threshold)\\n        return followThroughAtTime($bm_sub(time, overlapDuration));\\n    var fThrough = zeroValue;\\n    var t = time;\\n    while (t > 0) {\\n        t = $bm_sub(t, thisComp.frameDuration);\\n        if (simulate)\\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\\n        else\\n            propSpeed = length(velocityAtTime(t));\\n        if (propSpeed < threshold) {\\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\\n            break;\\n        }\\n    }\\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\\n}\\nfunction smartSmooth(axis) {\\n    var startKey = nearestKey(time);\\n    var endKey = startKey;\\n    if (time == startKey.time)\\n        return 0;\\n    if (time < startKey.time && startKey.index == 1)\\n        return 0;\\n    if (time > startKey.time && startKey.index == numKeys)\\n        return 0;\\n    if (time < startKey.time)\\n        startKey = key($bm_sub(startKey.index, 1));\\n    if (time > startKey.time)\\n        endKey = key($bm_sum(startKey.index, 1));\\n    var sI = 0.66;\\n    var sO = 0.33;\\n    var sIV = 1;\\n    var sOV = 0;\\n    var sVal = startKey.value;\\n    var eVal = endKey.value;\\n    if ($bm_isInstanceOfArray(value)) {\\n        sVal = sVal[axis];\\n        eVal = eVal[axis];\\n    }\\n    var sTime = startKey.time;\\n    var eTime = endKey.time;\\n    if (isKeyTop(startKey, axis))\\n        sO = slowOut;\\n    else {\\n        var prevKey = key($bm_sub(startKey.index, 1));\\n        var pVal = prevKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            pVal = pVal[axis];\\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\\n    }\\n    if (isKeyTop(endKey, axis)) {\\n        sI = slowIn;\\n        if (endKey.index != numKeys) {\\n            var nextKey = key($bm_sum(endKey.index, 1));\\n            var nVal = nextKey.value;\\n            if ($bm_isInstanceOfArray(value))\\n                nVal = nVal[axis];\\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\\n                sI = 1;\\n        }\\n    } else {\\n        var nextKey = key($bm_sum(endKey.index, 1));\\n        var nVal = nextKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            nVal = nVal[axis];\\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\\n    }\\n    if (endKey.index == numKeys && doFollowThrough) {\\n        sI = 1;\\n    }\\n    var val = value;\\n    if ($bm_isInstanceOfArray(value))\\n        val = val[axis];\\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\\n        sO,\\n        sOV,\\n        sI,\\n        sIV\\n    ]), val);\\n}\\nfunction overlap() {\\n    var ol = zeroValue;\\n    if (isThisPosition && !hasParent)\\n        return zeroValue;\\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\\n    if (isThisPosition) {\\n        var originalDistance = length(valueAtTime(0));\\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\\n    }\\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\\n    ol = thisLayer.fromWorld(ol);\\n    if (!isThisPosition)\\n        ol = $bm_sub(ol, value);\\n    else {\\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\\n    }\\n    return ol;\\n}\\nvar okToGo = false;\\nif (simulate && fx.enabled)\\n    okToGo = true;\\nelse if (numKeys > 1 && fx.enabled)\\n    okToGo = true;\\nif (okToGo) {\\n    var smartSmoothResult = zeroValue;\\n    if (doInterpolation) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            if (value.length == 2)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1)\\n                ];\\n            else if (value.length == 3)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2)\\n                ];\\n            else if (value.length == 4)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2),\\n                    smartSmooth(3)\\n                ];\\n        } else {\\n            smartSmoothResult = smartSmooth(0);\\n        }\\n    }\\n    if (doAnticipation)\\n        result = $bm_sum(result, anticipate());\\n    result = $bm_sum(result, smartSmoothResult);\\n    if (doFollowThrough)\\n        result = $bm_sum(result, followThrough());\\n    if (doOverlap)\\n        result = $bm_sum(result, overlap());\\n}\\n$bm_rt = result;"},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":20,"s":[0]},{"t":30,"s":[360]}],"ix":6,"x":"var $bm_rt;\\nvar fx = effect(\'Kleaner 2\');\\nvar doAnticipation = fx(1).value;\\nvar doInterpolation = fx(2).value;\\nvar doFollowThrough = fx(3).value;\\nvar damping = $bm_div(fx(15).value, 10);\\nvar elasticity = $bm_div(fx(13).value, 10);\\nvar bounce = fx(17).value;\\nvar anticipationDuration = fx(5).value;\\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\\nvar slowIn = $bm_div(fx(9).value, 100);\\nvar slowOut = $bm_div(fx(10).value, 100);\\nvar spatialMode = fx(21).value;\\nvar spatialDoInterpolation = fx(20).value;\\nvar moBlurPrecision = fx(32).value;\\nvar elasticityRandom = fx(14).value;\\nvar dampingRandom = fx(16).value;\\nvar softBody = fx(28).value;\\nvar flexibility = $bm_div(fx(29).value, 100);\\nvar doOverlap = fx(23).value;\\nvar overlapDuration = fx(24).value;\\nvar overlapRandom = fx(25).value;\\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\\nvar zeroValue;\\nif ($bm_isInstanceOfArray(value)) {\\n    if (value.length == 2)\\n        zeroValue = [\\n            0,\\n            0\\n        ];\\n    else if (value.length == 3)\\n        zeroValue = [\\n            0,\\n            0,\\n            0\\n        ];\\n    else if (value.length == 4)\\n        zeroValue = [\\n            0,\\n            0,\\n            0,\\n            0\\n        ];\\n} else\\n    zeroValue = 0;\\nvar isThisSpatial = isSpatial(thisProperty);\\nvar isThisPosition = thisProperty === $bm_transform.position;\\nvar simulate = false;\\nif (isThisSpatial) {\\n    doInterpolation = doInterpolation && spatialDoInterpolation;\\n    if (isThisPosition && thisProperty.numKeys > 0) {\\n        doOverlap = false;\\n        simulate = false;\\n    } else {\\n        simulate = spatialMode == 2;\\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\\n    }\\n} else {\\n    doOverlap = false;\\n}\\nif (!doOverlap) {\\n    overlapDuration = 0;\\n}\\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\\n    if (doFollowThrough) {\\n        elasticity = $bm_div(elasticity, distanceRatio);\\n        damping = $bm_div(damping, distanceRatio);\\n    }\\n    if (doOverlap) {\\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\\n    }\\n}\\nseedRandom(0, true);\\nif (doFollowThrough) {\\n    if (elasticityRandom > 0)\\n        elasticity = addNoise(elasticity, elasticityRandom);\\n    if (dampingRandom > 0)\\n        damping = addNoise(damping, dampingRandom);\\n}\\nif (doOverlap) {\\n    if (doOverlap && overlapRandom > 0)\\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\\n}\\nvar result = value;\\nfunction isSpatial(prop) {\\n    if (!(prop.value instanceof Array))\\n        return false;\\n    if (prop.value.length != 2 && prop.value.length != 3)\\n        return false;\\n    try {\\n        if (typeof prop.speed !== \'undefined\')\\n            return true;\\n    } catch (e) {\\n        return false;\\n    }\\n}\\nfunction addNoise(val, quantity) {\\n    var randomValue = random(0.9, 1.1);\\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\\n}\\nfunction isAfterLastKey() {\\n    if (numKeys == 0)\\n        return false;\\n    var nKey = nearestKey(time);\\n    return nKey.time <= time && nKey.index == numKeys;\\n}\\nfunction isStill(t, threshold) {\\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\\n    if ($bm_isInstanceOfArray(d)) {\\n        for (var i = 0; i < d.length; i++) {\\n            d[i] = Math.abs(d[i]);\\n            if (d[i] >= threshold) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    } else {\\n        d = Math.abs(d);\\n        return d < threshold;\\n    }\\n}\\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\\n    if (arguments.length !== 5 && arguments.length !== 6)\\n        return t;\\n    var a = $bm_sub(value2, value1);\\n    var b = $bm_sub(tMax, tMin);\\n    if (b == 0)\\n        return t;\\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\\n        bezierPoints = [\\n            0.33,\\n            0,\\n            0.66,\\n            1\\n        ];\\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\\n    function h(f, g) {\\n        var x = $bm_mul(3, g[0]);\\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\\n        var k = $bm_sub($bm_sub(1, x), j);\\n        var l = $bm_mul(3, g[1]);\\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\\n        var n = $bm_sub($bm_sub(1, l), m);\\n        var d = f;\\n        for (var i = 0; i < 5; i++) {\\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\\n            if (Math.abs(z) < 0.001)\\n                break;\\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\\n        }\\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\\n    }\\n}\\nfunction getPropWorldSpeed(t, prop) {\\n    return length(getPropWorldVelocity(t, prop));\\n}\\nfunction getPrevKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time <= t)\\n        return nKey;\\n    if (nKey.index > 1)\\n        return key($bm_sub(nKey.index, 1));\\n    return null;\\n}\\nfunction getNextKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time >= t)\\n        return nKey;\\n    if (nKey.index < numKeys)\\n        return key($bm_sum(nKey.index, 1));\\n    return null;\\n}\\nfunction getPropWorldVelocity(t, prop) {\\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\\n}\\nfunction getLayerWorldPos(t, l) {\\n    return l.toWorld(l.anchorPoint, t);\\n}\\nfunction getPropWorldValue(t, prop) {\\n    if (isPosition(prop))\\n        return getLayerWorldPos(t, thisLayer);\\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\\n}\\nfunction isPosition(prop) {\\n    return prop === $bm_transform.position;\\n}\\nfunction isKeyTop(k, axis) {\\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\\n    if ($bm_isInstanceOfArray(value)) {\\n        prevSpeed = prevSpeed[axis];\\n        nextSpeed = nextSpeed[axis];\\n    }\\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\\n        return true;\\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\\n}\\nfunction anticipate() {\\n    var anticipation = zeroValue;\\n    if (isAfterLastKey())\\n        return anticipation;\\n    if (numKeys < 2)\\n        return anticipation;\\n    var nextKey = getNextKey(time);\\n    var aKey = nextKey;\\n    if (!isStill(aKey.time - 0.1, 0.1)) {\\n        aKey = getPrevKey(time);\\n        if (!isStill(aKey.time - 0.1, 0.1))\\n            return anticipation;\\n    }\\n    if (aKey.index == numKeys)\\n        return anticipation;\\n    var anticipationMiddle = aKey.time;\\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\\n    var anticipationEnd = key(aKey.index + 1).time;\\n    var startValue = anticipation;\\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\\n    var endValue = anticipation;\\n    if (time < anticipationStart) {\\n        return anticipation;\\n    } else if (time < anticipationMiddle) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else if (time <= anticipationEnd) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else {\\n        return anticipation;\\n    }\\n}\\nfunction followThroughAtTime(t) {\\n    var fThrough = zeroValue;\\n    if (elasticity == 0)\\n        return fThrough;\\n    var propSpeed;\\n    if (!simulate) {\\n        if (numKeys < 2)\\n            return fThrough;\\n        if (nearestKey(t).index == 1)\\n            return fThrough;\\n        propSpeed = length(velocityAtTime(t));\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    } else {\\n        propSpeed = getPropWorldSpeed(t, thisProperty);\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    }\\n    var fThroughStart = 0;\\n    var fThroughTime = 0;\\n    if (simulate) {\\n        var speedI = getPropWorldSpeed(t, thisProperty);\\n        var i = t;\\n        while (speedI < threshold && i > 0) {\\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\\n            speedI = getPropWorldSpeed(i, thisProperty);\\n        }\\n        fThroughStart = i;\\n    } else {\\n        var fThroughKey = getPrevKey(t);\\n        fThroughStart = fThroughKey.time;\\n    }\\n    if (fThroughStart == 0)\\n        return fThrough;\\n    fThroughTime = $bm_sub(t, fThroughStart);\\n    if (simulate)\\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\\n    else\\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\\n    if (bounce) {\\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\\n        cycleDuration = framesToTime(cycleDuration);\\n        var midDuration = $bm_div(cycleDuration, 2);\\n        var maxValue = $bm_mul(fThrough, midDuration);\\n        var cycvarime = fThroughTime;\\n        var numEndCycles = 1;\\n        while (cycvarime > cycleDuration) {\\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\\n            if (cycleDuration < 2) {\\n                cycleDuration = 2;\\n                numEndCycles++;\\n            }\\n            cycleDuration = framesToTime(cycleDuration);\\n            midDuration = $bm_div(cycleDuration, 2);\\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\\n            if (numEndCycles > 100 / damping && maxValue < threshold)\\n                return zeroValue;\\n        }\\n        if (cycvarime < midDuration)\\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\\n                0,\\n                0.1,\\n                slowIn,\\n                1\\n            ]);\\n        else\\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\\n                $bm_sub(1, slowIn),\\n                0,\\n                1,\\n                0.9\\n            ]);\\n    } else {\\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\\n        sinus = Math.sin(sinus);\\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\\n        sinus = $bm_div(sinus, damp);\\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\\n            return 0;\\n        fThrough = $bm_mul(fThrough, sinus);\\n        if (threshold > 0) {\\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\\n        }\\n    }\\n    if (bounce) {\\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\\n        var startValue = valueAtTime(fThroughStart);\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < prevValue.length; i++) {\\n                if (prevValue[i] > startValue[i])\\n                    fThrough[i] = Math.abs(fThrough[i]);\\n                if (prevValue[i] < startValue[i])\\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\\n            }\\n        } else {\\n            if (prevValue > startValue)\\n                fThrough = Math.abs(fThrough);\\n            if (prevValue < startValue)\\n                fThrough = $bm_neg(Math.abs(fThrough));\\n        }\\n    }\\n    if (simulate) {\\n        if (!isThisPosition) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\\n        } else if (thisLayer.hasParent) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\\n        }\\n    }\\n    return fThrough;\\n}\\nfunction followThrough() {\\n    var propSpeed = length(velocity);\\n    if (propSpeed < threshold)\\n        return followThroughAtTime($bm_sub(time, overlapDuration));\\n    var fThrough = zeroValue;\\n    var t = time;\\n    while (t > 0) {\\n        t = $bm_sub(t, thisComp.frameDuration);\\n        if (simulate)\\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\\n        else\\n            propSpeed = length(velocityAtTime(t));\\n        if (propSpeed < threshold) {\\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\\n            break;\\n        }\\n    }\\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\\n}\\nfunction smartSmooth(axis) {\\n    var startKey = nearestKey(time);\\n    var endKey = startKey;\\n    if (time == startKey.time)\\n        return 0;\\n    if (time < startKey.time && startKey.index == 1)\\n        return 0;\\n    if (time > startKey.time && startKey.index == numKeys)\\n        return 0;\\n    if (time < startKey.time)\\n        startKey = key($bm_sub(startKey.index, 1));\\n    if (time > startKey.time)\\n        endKey = key($bm_sum(startKey.index, 1));\\n    var sI = 0.66;\\n    var sO = 0.33;\\n    var sIV = 1;\\n    var sOV = 0;\\n    var sVal = startKey.value;\\n    var eVal = endKey.value;\\n    if ($bm_isInstanceOfArray(value)) {\\n        sVal = sVal[axis];\\n        eVal = eVal[axis];\\n    }\\n    var sTime = startKey.time;\\n    var eTime = endKey.time;\\n    if (isKeyTop(startKey, axis))\\n        sO = slowOut;\\n    else {\\n        var prevKey = key($bm_sub(startKey.index, 1));\\n        var pVal = prevKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            pVal = pVal[axis];\\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\\n    }\\n    if (isKeyTop(endKey, axis)) {\\n        sI = slowIn;\\n        if (endKey.index != numKeys) {\\n            var nextKey = key($bm_sum(endKey.index, 1));\\n            var nVal = nextKey.value;\\n            if ($bm_isInstanceOfArray(value))\\n                nVal = nVal[axis];\\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\\n                sI = 1;\\n        }\\n    } else {\\n        var nextKey = key($bm_sum(endKey.index, 1));\\n        var nVal = nextKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            nVal = nVal[axis];\\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\\n    }\\n    if (endKey.index == numKeys && doFollowThrough) {\\n        sI = 1;\\n    }\\n    var val = value;\\n    if ($bm_isInstanceOfArray(value))\\n        val = val[axis];\\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\\n        sO,\\n        sOV,\\n        sI,\\n        sIV\\n    ]), val);\\n}\\nfunction overlap() {\\n    var ol = zeroValue;\\n    if (isThisPosition && !hasParent)\\n        return zeroValue;\\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\\n    if (isThisPosition) {\\n        var originalDistance = length(valueAtTime(0));\\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\\n    }\\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\\n    ol = thisLayer.fromWorld(ol);\\n    if (!isThisPosition)\\n        ol = $bm_sub(ol, value);\\n    else {\\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\\n    }\\n    return ol;\\n}\\nvar okToGo = false;\\nif (simulate && fx.enabled)\\n    okToGo = true;\\nelse if (numKeys > 1 && fx.enabled)\\n    okToGo = true;\\nif (okToGo) {\\n    var smartSmoothResult = zeroValue;\\n    if (doInterpolation) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            if (value.length == 2)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1)\\n                ];\\n            else if (value.length == 3)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2)\\n                ];\\n            else if (value.length == 4)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2),\\n                    smartSmooth(3)\\n                ];\\n        } else {\\n            smartSmoothResult = smartSmooth(0);\\n        }\\n    }\\n    if (doAnticipation)\\n        result = $bm_sum(result, anticipate());\\n    result = $bm_sum(result, smartSmoothResult);\\n    if (doFollowThrough)\\n        result = $bm_sum(result, followThrough());\\n    if (doOverlap)\\n        result = $bm_sum(result, overlap());\\n}\\n$bm_rt = result;"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.394,-0.798],[0,0],[-0.35,-0.051],[0,0],[0.637,-0.621],[0,0],[-0.06,-0.348],[0,0],[0.787,0.414],[0,0],[0.313,-0.164],[0,0],[-0.15,0.877],[0,0],[0.253,0.247],[0,0],[-0.88,0.128],[0,0],[-0.156,0.317],[0,0]],"o":[[0,0],[0.156,0.317],[0,0],[0.88,0.128],[0,0],[-0.253,0.247],[0,0],[0.15,0.877],[0,0],[-0.313,-0.164],[0,0],[-0.787,0.414],[0,0],[0.06,-0.348],[0,0],[-0.637,-0.621],[0,0],[0.35,-0.051],[0,0],[0.394,-0.798]],"v":[[0.962,-12.265],[4.293,-5.516],[5.102,-4.929],[12.55,-3.846],[13.145,-2.016],[7.755,3.238],[7.446,4.188],[8.719,11.606],[7.161,12.738],[0.499,9.235],[-0.499,9.235],[-7.161,12.738],[-8.719,11.606],[-7.446,4.188],[-7.755,3.238],[-13.145,-2.016],[-12.55,-3.846],[-5.102,-4.929],[-4.293,-5.516],[-0.962,-12.265]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.125,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[195.464,111.985],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":25,"s":[100,100]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":30,"s":[120,120]},{"t":35,"s":[100,100]}],"ix":3,"x":"var $bm_rt;\\nvar fx = effect(\'Kleaner 2\');\\nvar doAnticipation = fx(1).value;\\nvar doInterpolation = fx(2).value;\\nvar doFollowThrough = fx(3).value;\\nvar damping = $bm_div(fx(15).value, 10);\\nvar elasticity = $bm_div(fx(13).value, 10);\\nvar bounce = fx(17).value;\\nvar anticipationDuration = fx(5).value;\\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\\nvar slowIn = $bm_div(fx(9).value, 100);\\nvar slowOut = $bm_div(fx(10).value, 100);\\nvar spatialMode = fx(21).value;\\nvar spatialDoInterpolation = fx(20).value;\\nvar moBlurPrecision = fx(32).value;\\nvar elasticityRandom = fx(14).value;\\nvar dampingRandom = fx(16).value;\\nvar softBody = fx(28).value;\\nvar flexibility = $bm_div(fx(29).value, 100);\\nvar doOverlap = fx(23).value;\\nvar overlapDuration = fx(24).value;\\nvar overlapRandom = fx(25).value;\\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\\nvar zeroValue;\\nif ($bm_isInstanceOfArray(value)) {\\n    if (value.length == 2)\\n        zeroValue = [\\n            0,\\n            0\\n        ];\\n    else if (value.length == 3)\\n        zeroValue = [\\n            0,\\n            0,\\n            0\\n        ];\\n    else if (value.length == 4)\\n        zeroValue = [\\n            0,\\n            0,\\n            0,\\n            0\\n        ];\\n} else\\n    zeroValue = 0;\\nvar isThisSpatial = isSpatial(thisProperty);\\nvar isThisPosition = thisProperty === $bm_transform.position;\\nvar simulate = false;\\nif (isThisSpatial) {\\n    doInterpolation = doInterpolation && spatialDoInterpolation;\\n    if (isThisPosition && thisProperty.numKeys > 0) {\\n        doOverlap = false;\\n        simulate = false;\\n    } else {\\n        simulate = spatialMode == 2;\\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\\n    }\\n} else {\\n    doOverlap = false;\\n}\\nif (!doOverlap) {\\n    overlapDuration = 0;\\n}\\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\\n    if (doFollowThrough) {\\n        elasticity = $bm_div(elasticity, distanceRatio);\\n        damping = $bm_div(damping, distanceRatio);\\n    }\\n    if (doOverlap) {\\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\\n    }\\n}\\nseedRandom(0, true);\\nif (doFollowThrough) {\\n    if (elasticityRandom > 0)\\n        elasticity = addNoise(elasticity, elasticityRandom);\\n    if (dampingRandom > 0)\\n        damping = addNoise(damping, dampingRandom);\\n}\\nif (doOverlap) {\\n    if (doOverlap && overlapRandom > 0)\\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\\n}\\nvar result = value;\\nfunction isSpatial(prop) {\\n    if (!(prop.value instanceof Array))\\n        return false;\\n    if (prop.value.length != 2 && prop.value.length != 3)\\n        return false;\\n    try {\\n        if (typeof prop.speed !== \'undefined\')\\n            return true;\\n    } catch (e) {\\n        return false;\\n    }\\n}\\nfunction addNoise(val, quantity) {\\n    var randomValue = random(0.9, 1.1);\\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\\n}\\nfunction isAfterLastKey() {\\n    if (numKeys == 0)\\n        return false;\\n    var nKey = nearestKey(time);\\n    return nKey.time <= time && nKey.index == numKeys;\\n}\\nfunction isStill(t, threshold) {\\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\\n    if ($bm_isInstanceOfArray(d)) {\\n        for (var i = 0; i < d.length; i++) {\\n            d[i] = Math.abs(d[i]);\\n            if (d[i] >= threshold) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    } else {\\n        d = Math.abs(d);\\n        return d < threshold;\\n    }\\n}\\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\\n    if (arguments.length !== 5 && arguments.length !== 6)\\n        return t;\\n    var a = $bm_sub(value2, value1);\\n    var b = $bm_sub(tMax, tMin);\\n    if (b == 0)\\n        return t;\\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\\n        bezierPoints = [\\n            0.33,\\n            0,\\n            0.66,\\n            1\\n        ];\\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\\n    function h(f, g) {\\n        var x = $bm_mul(3, g[0]);\\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\\n        var k = $bm_sub($bm_sub(1, x), j);\\n        var l = $bm_mul(3, g[1]);\\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\\n        var n = $bm_sub($bm_sub(1, l), m);\\n        var d = f;\\n        for (var i = 0; i < 5; i++) {\\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\\n            if (Math.abs(z) < 0.001)\\n                break;\\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\\n        }\\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\\n    }\\n}\\nfunction getPropWorldSpeed(t, prop) {\\n    return length(getPropWorldVelocity(t, prop));\\n}\\nfunction getPrevKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time <= t)\\n        return nKey;\\n    if (nKey.index > 1)\\n        return key($bm_sub(nKey.index, 1));\\n    return null;\\n}\\nfunction getNextKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time >= t)\\n        return nKey;\\n    if (nKey.index < numKeys)\\n        return key($bm_sum(nKey.index, 1));\\n    return null;\\n}\\nfunction getPropWorldVelocity(t, prop) {\\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\\n}\\nfunction getLayerWorldPos(t, l) {\\n    return l.toWorld(l.anchorPoint, t);\\n}\\nfunction getPropWorldValue(t, prop) {\\n    if (isPosition(prop))\\n        return getLayerWorldPos(t, thisLayer);\\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\\n}\\nfunction isPosition(prop) {\\n    return prop === $bm_transform.position;\\n}\\nfunction isKeyTop(k, axis) {\\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\\n    if ($bm_isInstanceOfArray(value)) {\\n        prevSpeed = prevSpeed[axis];\\n        nextSpeed = nextSpeed[axis];\\n    }\\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\\n        return true;\\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\\n}\\nfunction anticipate() {\\n    var anticipation = zeroValue;\\n    if (isAfterLastKey())\\n        return anticipation;\\n    if (numKeys < 2)\\n        return anticipation;\\n    var nextKey = getNextKey(time);\\n    var aKey = nextKey;\\n    if (!isStill(aKey.time - 0.1, 0.1)) {\\n        aKey = getPrevKey(time);\\n        if (!isStill(aKey.time - 0.1, 0.1))\\n            return anticipation;\\n    }\\n    if (aKey.index == numKeys)\\n        return anticipation;\\n    var anticipationMiddle = aKey.time;\\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\\n    var anticipationEnd = key(aKey.index + 1).time;\\n    var startValue = anticipation;\\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\\n    var endValue = anticipation;\\n    if (time < anticipationStart) {\\n        return anticipation;\\n    } else if (time < anticipationMiddle) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else if (time <= anticipationEnd) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else {\\n        return anticipation;\\n    }\\n}\\nfunction followThroughAtTime(t) {\\n    var fThrough = zeroValue;\\n    if (elasticity == 0)\\n        return fThrough;\\n    var propSpeed;\\n    if (!simulate) {\\n        if (numKeys < 2)\\n            return fThrough;\\n        if (nearestKey(t).index == 1)\\n            return fThrough;\\n        propSpeed = length(velocityAtTime(t));\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    } else {\\n        propSpeed = getPropWorldSpeed(t, thisProperty);\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    }\\n    var fThroughStart = 0;\\n    var fThroughTime = 0;\\n    if (simulate) {\\n        var speedI = getPropWorldSpeed(t, thisProperty);\\n        var i = t;\\n        while (speedI < threshold && i > 0) {\\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\\n            speedI = getPropWorldSpeed(i, thisProperty);\\n        }\\n        fThroughStart = i;\\n    } else {\\n        var fThroughKey = getPrevKey(t);\\n        fThroughStart = fThroughKey.time;\\n    }\\n    if (fThroughStart == 0)\\n        return fThrough;\\n    fThroughTime = $bm_sub(t, fThroughStart);\\n    if (simulate)\\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\\n    else\\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\\n    if (bounce) {\\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\\n        cycleDuration = framesToTime(cycleDuration);\\n        var midDuration = $bm_div(cycleDuration, 2);\\n        var maxValue = $bm_mul(fThrough, midDuration);\\n        var cycvarime = fThroughTime;\\n        var numEndCycles = 1;\\n        while (cycvarime > cycleDuration) {\\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\\n            if (cycleDuration < 2) {\\n                cycleDuration = 2;\\n                numEndCycles++;\\n            }\\n            cycleDuration = framesToTime(cycleDuration);\\n            midDuration = $bm_div(cycleDuration, 2);\\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\\n            if (numEndCycles > 100 / damping && maxValue < threshold)\\n                return zeroValue;\\n        }\\n        if (cycvarime < midDuration)\\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\\n                0,\\n                0.1,\\n                slowIn,\\n                1\\n            ]);\\n        else\\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\\n                $bm_sub(1, slowIn),\\n                0,\\n                1,\\n                0.9\\n            ]);\\n    } else {\\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\\n        sinus = Math.sin(sinus);\\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\\n        sinus = $bm_div(sinus, damp);\\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\\n            return 0;\\n        fThrough = $bm_mul(fThrough, sinus);\\n        if (threshold > 0) {\\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\\n        }\\n    }\\n    if (bounce) {\\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\\n        var startValue = valueAtTime(fThroughStart);\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < prevValue.length; i++) {\\n                if (prevValue[i] > startValue[i])\\n                    fThrough[i] = Math.abs(fThrough[i]);\\n                if (prevValue[i] < startValue[i])\\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\\n            }\\n        } else {\\n            if (prevValue > startValue)\\n                fThrough = Math.abs(fThrough);\\n            if (prevValue < startValue)\\n                fThrough = $bm_neg(Math.abs(fThrough));\\n        }\\n    }\\n    if (simulate) {\\n        if (!isThisPosition) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\\n        } else if (thisLayer.hasParent) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\\n        }\\n    }\\n    return fThrough;\\n}\\nfunction followThrough() {\\n    var propSpeed = length(velocity);\\n    if (propSpeed < threshold)\\n        return followThroughAtTime($bm_sub(time, overlapDuration));\\n    var fThrough = zeroValue;\\n    var t = time;\\n    while (t > 0) {\\n        t = $bm_sub(t, thisComp.frameDuration);\\n        if (simulate)\\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\\n        else\\n            propSpeed = length(velocityAtTime(t));\\n        if (propSpeed < threshold) {\\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\\n            break;\\n        }\\n    }\\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\\n}\\nfunction smartSmooth(axis) {\\n    var startKey = nearestKey(time);\\n    var endKey = startKey;\\n    if (time == startKey.time)\\n        return 0;\\n    if (time < startKey.time && startKey.index == 1)\\n        return 0;\\n    if (time > startKey.time && startKey.index == numKeys)\\n        return 0;\\n    if (time < startKey.time)\\n        startKey = key($bm_sub(startKey.index, 1));\\n    if (time > startKey.time)\\n        endKey = key($bm_sum(startKey.index, 1));\\n    var sI = 0.66;\\n    var sO = 0.33;\\n    var sIV = 1;\\n    var sOV = 0;\\n    var sVal = startKey.value;\\n    var eVal = endKey.value;\\n    if ($bm_isInstanceOfArray(value)) {\\n        sVal = sVal[axis];\\n        eVal = eVal[axis];\\n    }\\n    var sTime = startKey.time;\\n    var eTime = endKey.time;\\n    if (isKeyTop(startKey, axis))\\n        sO = slowOut;\\n    else {\\n        var prevKey = key($bm_sub(startKey.index, 1));\\n        var pVal = prevKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            pVal = pVal[axis];\\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\\n    }\\n    if (isKeyTop(endKey, axis)) {\\n        sI = slowIn;\\n        if (endKey.index != numKeys) {\\n            var nextKey = key($bm_sum(endKey.index, 1));\\n            var nVal = nextKey.value;\\n            if ($bm_isInstanceOfArray(value))\\n                nVal = nVal[axis];\\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\\n                sI = 1;\\n        }\\n    } else {\\n        var nextKey = key($bm_sum(endKey.index, 1));\\n        var nVal = nextKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            nVal = nVal[axis];\\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\\n    }\\n    if (endKey.index == numKeys && doFollowThrough) {\\n        sI = 1;\\n    }\\n    var val = value;\\n    if ($bm_isInstanceOfArray(value))\\n        val = val[axis];\\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\\n        sO,\\n        sOV,\\n        sI,\\n        sIV\\n    ]), val);\\n}\\nfunction overlap() {\\n    var ol = zeroValue;\\n    if (isThisPosition && !hasParent)\\n        return zeroValue;\\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\\n    if (isThisPosition) {\\n        var originalDistance = length(valueAtTime(0));\\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\\n    }\\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\\n    ol = thisLayer.fromWorld(ol);\\n    if (!isThisPosition)\\n        ol = $bm_sub(ol, value);\\n    else {\\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\\n    }\\n    return ol;\\n}\\nvar okToGo = false;\\nif (simulate && fx.enabled)\\n    okToGo = true;\\nelse if (numKeys > 1 && fx.enabled)\\n    okToGo = true;\\nif (okToGo) {\\n    var smartSmoothResult = zeroValue;\\n    if (doInterpolation) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            if (value.length == 2)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1)\\n                ];\\n            else if (value.length == 3)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2)\\n                ];\\n            else if (value.length == 4)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2),\\n                    smartSmooth(3)\\n                ];\\n        } else {\\n            smartSmoothResult = smartSmooth(0);\\n        }\\n    }\\n    if (doAnticipation)\\n        result = $bm_sum(result, anticipate());\\n    result = $bm_sum(result, smartSmoothResult);\\n    if (doFollowThrough)\\n        result = $bm_sum(result, followThrough());\\n    if (doOverlap)\\n        result = $bm_sum(result, overlap());\\n}\\n$bm_rt = result;"},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":25,"s":[0]},{"t":35,"s":[360]}],"ix":6,"x":"var $bm_rt;\\nvar fx = effect(\'Kleaner 2\');\\nvar doAnticipation = fx(1).value;\\nvar doInterpolation = fx(2).value;\\nvar doFollowThrough = fx(3).value;\\nvar damping = $bm_div(fx(15).value, 10);\\nvar elasticity = $bm_div(fx(13).value, 10);\\nvar bounce = fx(17).value;\\nvar anticipationDuration = fx(5).value;\\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\\nvar slowIn = $bm_div(fx(9).value, 100);\\nvar slowOut = $bm_div(fx(10).value, 100);\\nvar spatialMode = fx(21).value;\\nvar spatialDoInterpolation = fx(20).value;\\nvar moBlurPrecision = fx(32).value;\\nvar elasticityRandom = fx(14).value;\\nvar dampingRandom = fx(16).value;\\nvar softBody = fx(28).value;\\nvar flexibility = $bm_div(fx(29).value, 100);\\nvar doOverlap = fx(23).value;\\nvar overlapDuration = fx(24).value;\\nvar overlapRandom = fx(25).value;\\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\\nvar zeroValue;\\nif ($bm_isInstanceOfArray(value)) {\\n    if (value.length == 2)\\n        zeroValue = [\\n            0,\\n            0\\n        ];\\n    else if (value.length == 3)\\n        zeroValue = [\\n            0,\\n            0,\\n            0\\n        ];\\n    else if (value.length == 4)\\n        zeroValue = [\\n            0,\\n            0,\\n            0,\\n            0\\n        ];\\n} else\\n    zeroValue = 0;\\nvar isThisSpatial = isSpatial(thisProperty);\\nvar isThisPosition = thisProperty === $bm_transform.position;\\nvar simulate = false;\\nif (isThisSpatial) {\\n    doInterpolation = doInterpolation && spatialDoInterpolation;\\n    if (isThisPosition && thisProperty.numKeys > 0) {\\n        doOverlap = false;\\n        simulate = false;\\n    } else {\\n        simulate = spatialMode == 2;\\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\\n    }\\n} else {\\n    doOverlap = false;\\n}\\nif (!doOverlap) {\\n    overlapDuration = 0;\\n}\\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\\n    if (doFollowThrough) {\\n        elasticity = $bm_div(elasticity, distanceRatio);\\n        damping = $bm_div(damping, distanceRatio);\\n    }\\n    if (doOverlap) {\\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\\n    }\\n}\\nseedRandom(0, true);\\nif (doFollowThrough) {\\n    if (elasticityRandom > 0)\\n        elasticity = addNoise(elasticity, elasticityRandom);\\n    if (dampingRandom > 0)\\n        damping = addNoise(damping, dampingRandom);\\n}\\nif (doOverlap) {\\n    if (doOverlap && overlapRandom > 0)\\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\\n}\\nvar result = value;\\nfunction isSpatial(prop) {\\n    if (!(prop.value instanceof Array))\\n        return false;\\n    if (prop.value.length != 2 && prop.value.length != 3)\\n        return false;\\n    try {\\n        if (typeof prop.speed !== \'undefined\')\\n            return true;\\n    } catch (e) {\\n        return false;\\n    }\\n}\\nfunction addNoise(val, quantity) {\\n    var randomValue = random(0.9, 1.1);\\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\\n}\\nfunction isAfterLastKey() {\\n    if (numKeys == 0)\\n        return false;\\n    var nKey = nearestKey(time);\\n    return nKey.time <= time && nKey.index == numKeys;\\n}\\nfunction isStill(t, threshold) {\\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\\n    if ($bm_isInstanceOfArray(d)) {\\n        for (var i = 0; i < d.length; i++) {\\n            d[i] = Math.abs(d[i]);\\n            if (d[i] >= threshold) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    } else {\\n        d = Math.abs(d);\\n        return d < threshold;\\n    }\\n}\\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\\n    if (arguments.length !== 5 && arguments.length !== 6)\\n        return t;\\n    var a = $bm_sub(value2, value1);\\n    var b = $bm_sub(tMax, tMin);\\n    if (b == 0)\\n        return t;\\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\\n        bezierPoints = [\\n            0.33,\\n            0,\\n            0.66,\\n            1\\n        ];\\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\\n    function h(f, g) {\\n        var x = $bm_mul(3, g[0]);\\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\\n        var k = $bm_sub($bm_sub(1, x), j);\\n        var l = $bm_mul(3, g[1]);\\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\\n        var n = $bm_sub($bm_sub(1, l), m);\\n        var d = f;\\n        for (var i = 0; i < 5; i++) {\\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\\n            if (Math.abs(z) < 0.001)\\n                break;\\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\\n        }\\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\\n    }\\n}\\nfunction getPropWorldSpeed(t, prop) {\\n    return length(getPropWorldVelocity(t, prop));\\n}\\nfunction getPrevKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time <= t)\\n        return nKey;\\n    if (nKey.index > 1)\\n        return key($bm_sub(nKey.index, 1));\\n    return null;\\n}\\nfunction getNextKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time >= t)\\n        return nKey;\\n    if (nKey.index < numKeys)\\n        return key($bm_sum(nKey.index, 1));\\n    return null;\\n}\\nfunction getPropWorldVelocity(t, prop) {\\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\\n}\\nfunction getLayerWorldPos(t, l) {\\n    return l.toWorld(l.anchorPoint, t);\\n}\\nfunction getPropWorldValue(t, prop) {\\n    if (isPosition(prop))\\n        return getLayerWorldPos(t, thisLayer);\\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\\n}\\nfunction isPosition(prop) {\\n    return prop === $bm_transform.position;\\n}\\nfunction isKeyTop(k, axis) {\\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\\n    if ($bm_isInstanceOfArray(value)) {\\n        prevSpeed = prevSpeed[axis];\\n        nextSpeed = nextSpeed[axis];\\n    }\\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\\n        return true;\\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\\n}\\nfunction anticipate() {\\n    var anticipation = zeroValue;\\n    if (isAfterLastKey())\\n        return anticipation;\\n    if (numKeys < 2)\\n        return anticipation;\\n    var nextKey = getNextKey(time);\\n    var aKey = nextKey;\\n    if (!isStill(aKey.time - 0.1, 0.1)) {\\n        aKey = getPrevKey(time);\\n        if (!isStill(aKey.time - 0.1, 0.1))\\n            return anticipation;\\n    }\\n    if (aKey.index == numKeys)\\n        return anticipation;\\n    var anticipationMiddle = aKey.time;\\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\\n    var anticipationEnd = key(aKey.index + 1).time;\\n    var startValue = anticipation;\\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\\n    var endValue = anticipation;\\n    if (time < anticipationStart) {\\n        return anticipation;\\n    } else if (time < anticipationMiddle) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else if (time <= anticipationEnd) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else {\\n        return anticipation;\\n    }\\n}\\nfunction followThroughAtTime(t) {\\n    var fThrough = zeroValue;\\n    if (elasticity == 0)\\n        return fThrough;\\n    var propSpeed;\\n    if (!simulate) {\\n        if (numKeys < 2)\\n            return fThrough;\\n        if (nearestKey(t).index == 1)\\n            return fThrough;\\n        propSpeed = length(velocityAtTime(t));\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    } else {\\n        propSpeed = getPropWorldSpeed(t, thisProperty);\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    }\\n    var fThroughStart = 0;\\n    var fThroughTime = 0;\\n    if (simulate) {\\n        var speedI = getPropWorldSpeed(t, thisProperty);\\n        var i = t;\\n        while (speedI < threshold && i > 0) {\\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\\n            speedI = getPropWorldSpeed(i, thisProperty);\\n        }\\n        fThroughStart = i;\\n    } else {\\n        var fThroughKey = getPrevKey(t);\\n        fThroughStart = fThroughKey.time;\\n    }\\n    if (fThroughStart == 0)\\n        return fThrough;\\n    fThroughTime = $bm_sub(t, fThroughStart);\\n    if (simulate)\\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\\n    else\\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\\n    if (bounce) {\\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\\n        cycleDuration = framesToTime(cycleDuration);\\n        var midDuration = $bm_div(cycleDuration, 2);\\n        var maxValue = $bm_mul(fThrough, midDuration);\\n        var cycvarime = fThroughTime;\\n        var numEndCycles = 1;\\n        while (cycvarime > cycleDuration) {\\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\\n            if (cycleDuration < 2) {\\n                cycleDuration = 2;\\n                numEndCycles++;\\n            }\\n            cycleDuration = framesToTime(cycleDuration);\\n            midDuration = $bm_div(cycleDuration, 2);\\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\\n            if (numEndCycles > 100 / damping && maxValue < threshold)\\n                return zeroValue;\\n        }\\n        if (cycvarime < midDuration)\\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\\n                0,\\n                0.1,\\n                slowIn,\\n                1\\n            ]);\\n        else\\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\\n                $bm_sub(1, slowIn),\\n                0,\\n                1,\\n                0.9\\n            ]);\\n    } else {\\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\\n        sinus = Math.sin(sinus);\\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\\n        sinus = $bm_div(sinus, damp);\\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\\n            return 0;\\n        fThrough = $bm_mul(fThrough, sinus);\\n        if (threshold > 0) {\\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\\n        }\\n    }\\n    if (bounce) {\\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\\n        var startValue = valueAtTime(fThroughStart);\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < prevValue.length; i++) {\\n                if (prevValue[i] > startValue[i])\\n                    fThrough[i] = Math.abs(fThrough[i]);\\n                if (prevValue[i] < startValue[i])\\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\\n            }\\n        } else {\\n            if (prevValue > startValue)\\n                fThrough = Math.abs(fThrough);\\n            if (prevValue < startValue)\\n                fThrough = $bm_neg(Math.abs(fThrough));\\n        }\\n    }\\n    if (simulate) {\\n        if (!isThisPosition) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\\n        } else if (thisLayer.hasParent) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\\n        }\\n    }\\n    return fThrough;\\n}\\nfunction followThrough() {\\n    var propSpeed = length(velocity);\\n    if (propSpeed < threshold)\\n        return followThroughAtTime($bm_sub(time, overlapDuration));\\n    var fThrough = zeroValue;\\n    var t = time;\\n    while (t > 0) {\\n        t = $bm_sub(t, thisComp.frameDuration);\\n        if (simulate)\\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\\n        else\\n            propSpeed = length(velocityAtTime(t));\\n        if (propSpeed < threshold) {\\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\\n            break;\\n        }\\n    }\\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\\n}\\nfunction smartSmooth(axis) {\\n    var startKey = nearestKey(time);\\n    var endKey = startKey;\\n    if (time == startKey.time)\\n        return 0;\\n    if (time < startKey.time && startKey.index == 1)\\n        return 0;\\n    if (time > startKey.time && startKey.index == numKeys)\\n        return 0;\\n    if (time < startKey.time)\\n        startKey = key($bm_sub(startKey.index, 1));\\n    if (time > startKey.time)\\n        endKey = key($bm_sum(startKey.index, 1));\\n    var sI = 0.66;\\n    var sO = 0.33;\\n    var sIV = 1;\\n    var sOV = 0;\\n    var sVal = startKey.value;\\n    var eVal = endKey.value;\\n    if ($bm_isInstanceOfArray(value)) {\\n        sVal = sVal[axis];\\n        eVal = eVal[axis];\\n    }\\n    var sTime = startKey.time;\\n    var eTime = endKey.time;\\n    if (isKeyTop(startKey, axis))\\n        sO = slowOut;\\n    else {\\n        var prevKey = key($bm_sub(startKey.index, 1));\\n        var pVal = prevKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            pVal = pVal[axis];\\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\\n    }\\n    if (isKeyTop(endKey, axis)) {\\n        sI = slowIn;\\n        if (endKey.index != numKeys) {\\n            var nextKey = key($bm_sum(endKey.index, 1));\\n            var nVal = nextKey.value;\\n            if ($bm_isInstanceOfArray(value))\\n                nVal = nVal[axis];\\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\\n                sI = 1;\\n        }\\n    } else {\\n        var nextKey = key($bm_sum(endKey.index, 1));\\n        var nVal = nextKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            nVal = nVal[axis];\\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\\n    }\\n    if (endKey.index == numKeys && doFollowThrough) {\\n        sI = 1;\\n    }\\n    var val = value;\\n    if ($bm_isInstanceOfArray(value))\\n        val = val[axis];\\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\\n        sO,\\n        sOV,\\n        sI,\\n        sIV\\n    ]), val);\\n}\\nfunction overlap() {\\n    var ol = zeroValue;\\n    if (isThisPosition && !hasParent)\\n        return zeroValue;\\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\\n    if (isThisPosition) {\\n        var originalDistance = length(valueAtTime(0));\\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\\n    }\\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\\n    ol = thisLayer.fromWorld(ol);\\n    if (!isThisPosition)\\n        ol = $bm_sub(ol, value);\\n    else {\\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\\n    }\\n    return ol;\\n}\\nvar okToGo = false;\\nif (simulate && fx.enabled)\\n    okToGo = true;\\nelse if (numKeys > 1 && fx.enabled)\\n    okToGo = true;\\nif (okToGo) {\\n    var smartSmoothResult = zeroValue;\\n    if (doInterpolation) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            if (value.length == 2)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1)\\n                ];\\n            else if (value.length == 3)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2)\\n                ];\\n            else if (value.length == 4)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2),\\n                    smartSmooth(3)\\n                ];\\n        } else {\\n            smartSmoothResult = smartSmooth(0);\\n        }\\n    }\\n    if (doAnticipation)\\n        result = $bm_sum(result, anticipate());\\n    result = $bm_sum(result, smartSmoothResult);\\n    if (doFollowThrough)\\n        result = $bm_sum(result, followThrough());\\n    if (doOverlap)\\n        result = $bm_sum(result, overlap());\\n}\\n$bm_rt = result;"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[195.464,111.985],"ix":2},"a":{"a":0,"k":[195.464,111.985],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":3,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,-8.249],[0,0],[-8.249,0],[0,0],[-1.312,-6.999],[0,0],[0,0],[-4.874,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,8.249],[0,0],[8.249,0],[0,0]],"o":[[0,0],[-8.249,0],[0,0],[0,8.249],[0,0],[7.124,0],[0,0],[0,0],[2.75,-3.999],[0,0],[0,0],[0,0],[0,0],[0,0],[8.249,0],[0,0],[0,-8.249],[0,0],[0,0]],"v":[[-33.496,-71.741],[-68.179,-71.741],[-83.114,-56.805],[-83.114,10.686],[-68.179,25.622],[-55.618,25.622],[-40.995,37.745],[-34.496,71.741],[-6.812,31.996],[5.437,25.622],[42.869,25.622],[46.057,25.622],[53.993,25.622],[67.366,25.622],[68.179,25.622],[83.114,10.686],[83.114,-56.805],[68.179,-71.741],[-20.622,-71.741]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[0,0.21568627451,0.41568627451,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":3.125,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[158.114,155.637],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[123.049,227.066],"ix":2},"a":{"a":0,"k":[123.049,227.066],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.341,0.341],"y":[1,1]},"o":{"x":[0.333,0.333],"y":[0,0]},"t":0,"s":[100,100]},{"i":{"x":[0.667,0.667],"y":[1,1]},"o":{"x":[0.681,0.681],"y":[0,0]},"t":7.5,"s":[80,80]},{"t":15,"s":[100,100]}],"ix":3,"x":"var $bm_rt;\\nvar fx = effect(\'Kleaner\');\\nvar doAnticipation = fx(1).value;\\nvar doInterpolation = fx(2).value;\\nvar doFollowThrough = fx(3).value;\\nvar damping = $bm_div(fx(15).value, 10);\\nvar elasticity = $bm_div(fx(13).value, 10);\\nvar bounce = fx(17).value;\\nvar anticipationDuration = fx(5).value;\\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\\nvar slowIn = $bm_div(fx(9).value, 100);\\nvar slowOut = $bm_div(fx(10).value, 100);\\nvar spatialMode = fx(21).value;\\nvar spatialDoInterpolation = fx(20).value;\\nvar moBlurPrecision = fx(32).value;\\nvar elasticityRandom = fx(14).value;\\nvar dampingRandom = fx(16).value;\\nvar softBody = fx(28).value;\\nvar flexibility = $bm_div(fx(29).value, 100);\\nvar doOverlap = fx(23).value;\\nvar overlapDuration = fx(24).value;\\nvar overlapRandom = fx(25).value;\\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\\nvar zeroValue;\\nif ($bm_isInstanceOfArray(value)) {\\n    if (value.length == 2)\\n        zeroValue = [\\n            0,\\n            0\\n        ];\\n    else if (value.length == 3)\\n        zeroValue = [\\n            0,\\n            0,\\n            0\\n        ];\\n    else if (value.length == 4)\\n        zeroValue = [\\n            0,\\n            0,\\n            0,\\n            0\\n        ];\\n} else\\n    zeroValue = 0;\\nvar isThisSpatial = isSpatial(thisProperty);\\nvar isThisPosition = thisProperty === $bm_transform.position;\\nvar simulate = false;\\nif (isThisSpatial) {\\n    doInterpolation = doInterpolation && spatialDoInterpolation;\\n    if (isThisPosition && thisProperty.numKeys > 0) {\\n        doOverlap = false;\\n        simulate = false;\\n    } else {\\n        simulate = spatialMode == 2;\\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\\n    }\\n} else {\\n    doOverlap = false;\\n}\\nif (!doOverlap) {\\n    overlapDuration = 0;\\n}\\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\\n    if (doFollowThrough) {\\n        elasticity = $bm_div(elasticity, distanceRatio);\\n        damping = $bm_div(damping, distanceRatio);\\n    }\\n    if (doOverlap) {\\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\\n    }\\n}\\nseedRandom(0, true);\\nif (doFollowThrough) {\\n    if (elasticityRandom > 0)\\n        elasticity = addNoise(elasticity, elasticityRandom);\\n    if (dampingRandom > 0)\\n        damping = addNoise(damping, dampingRandom);\\n}\\nif (doOverlap) {\\n    if (doOverlap && overlapRandom > 0)\\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\\n}\\nvar result = value;\\nfunction isSpatial(prop) {\\n    if (!(prop.value instanceof Array))\\n        return false;\\n    if (prop.value.length != 2 && prop.value.length != 3)\\n        return false;\\n    try {\\n        if (typeof prop.speed !== \'undefined\')\\n            return true;\\n    } catch (e) {\\n        return false;\\n    }\\n}\\nfunction addNoise(val, quantity) {\\n    var randomValue = random(0.9, 1.1);\\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\\n}\\nfunction isAfterLastKey() {\\n    if (numKeys == 0)\\n        return false;\\n    var nKey = nearestKey(time);\\n    return nKey.time <= time && nKey.index == numKeys;\\n}\\nfunction isStill(t, threshold) {\\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\\n    if ($bm_isInstanceOfArray(d)) {\\n        for (var i = 0; i < d.length; i++) {\\n            d[i] = Math.abs(d[i]);\\n            if (d[i] >= threshold) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    } else {\\n        d = Math.abs(d);\\n        return d < threshold;\\n    }\\n}\\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\\n    if (arguments.length !== 5 && arguments.length !== 6)\\n        return t;\\n    var a = $bm_sub(value2, value1);\\n    var b = $bm_sub(tMax, tMin);\\n    if (b == 0)\\n        return t;\\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\\n        bezierPoints = [\\n            0.33,\\n            0,\\n            0.66,\\n            1\\n        ];\\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\\n    function h(f, g) {\\n        var x = $bm_mul(3, g[0]);\\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\\n        var k = $bm_sub($bm_sub(1, x), j);\\n        var l = $bm_mul(3, g[1]);\\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\\n        var n = $bm_sub($bm_sub(1, l), m);\\n        var d = f;\\n        for (var i = 0; i < 5; i++) {\\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\\n            if (Math.abs(z) < 0.001)\\n                break;\\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\\n        }\\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\\n    }\\n}\\nfunction getPropWorldSpeed(t, prop) {\\n    return length(getPropWorldVelocity(t, prop));\\n}\\nfunction getPrevKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time <= t)\\n        return nKey;\\n    if (nKey.index > 1)\\n        return key($bm_sub(nKey.index, 1));\\n    return null;\\n}\\nfunction getNextKey(t) {\\n    if (numKeys == 0)\\n        return null;\\n    var nKey = nearestKey(t);\\n    if (nKey.time >= t)\\n        return nKey;\\n    if (nKey.index < numKeys)\\n        return key($bm_sum(nKey.index, 1));\\n    return null;\\n}\\nfunction getPropWorldVelocity(t, prop) {\\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\\n}\\nfunction getLayerWorldPos(t, l) {\\n    return l.toWorld(l.anchorPoint, t);\\n}\\nfunction getPropWorldValue(t, prop) {\\n    if (isPosition(prop))\\n        return getLayerWorldPos(t, thisLayer);\\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\\n}\\nfunction isPosition(prop) {\\n    return prop === $bm_transform.position;\\n}\\nfunction isKeyTop(k, axis) {\\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\\n    if ($bm_isInstanceOfArray(value)) {\\n        prevSpeed = prevSpeed[axis];\\n        nextSpeed = nextSpeed[axis];\\n    }\\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\\n        return true;\\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\\n}\\nfunction anticipate() {\\n    var anticipation = zeroValue;\\n    if (isAfterLastKey())\\n        return anticipation;\\n    if (numKeys < 2)\\n        return anticipation;\\n    var nextKey = getNextKey(time);\\n    var aKey = nextKey;\\n    if (!isStill(aKey.time - 0.1, 0.1)) {\\n        aKey = getPrevKey(time);\\n        if (!isStill(aKey.time - 0.1, 0.1))\\n            return anticipation;\\n    }\\n    if (aKey.index == numKeys)\\n        return anticipation;\\n    var anticipationMiddle = aKey.time;\\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\\n    var anticipationEnd = key(aKey.index + 1).time;\\n    var startValue = anticipation;\\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\\n    var endValue = anticipation;\\n    if (time < anticipationStart) {\\n        return anticipation;\\n    } else if (time < anticipationMiddle) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else if (time <= anticipationEnd) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < value.length; i++) {\\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\\n                    slowOut,\\n                    0,\\n                    slowIn,\\n                    1\\n                ]);\\n            }\\n            return anticipation;\\n        } else {\\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\\n                slowOut,\\n                0,\\n                slowIn,\\n                1\\n            ]);\\n        }\\n    } else {\\n        return anticipation;\\n    }\\n}\\nfunction followThroughAtTime(t) {\\n    var fThrough = zeroValue;\\n    if (elasticity == 0)\\n        return fThrough;\\n    var propSpeed;\\n    if (!simulate) {\\n        if (numKeys < 2)\\n            return fThrough;\\n        if (nearestKey(t).index == 1)\\n            return fThrough;\\n        propSpeed = length(velocityAtTime(t));\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    } else {\\n        propSpeed = getPropWorldSpeed(t, thisProperty);\\n        if (propSpeed >= threshold)\\n            return fThrough;\\n    }\\n    var fThroughStart = 0;\\n    var fThroughTime = 0;\\n    if (simulate) {\\n        var speedI = getPropWorldSpeed(t, thisProperty);\\n        var i = t;\\n        while (speedI < threshold && i > 0) {\\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\\n            speedI = getPropWorldSpeed(i, thisProperty);\\n        }\\n        fThroughStart = i;\\n    } else {\\n        var fThroughKey = getPrevKey(t);\\n        fThroughStart = fThroughKey.time;\\n    }\\n    if (fThroughStart == 0)\\n        return fThrough;\\n    fThroughTime = $bm_sub(t, fThroughStart);\\n    if (simulate)\\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\\n    else\\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\\n    if (bounce) {\\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\\n        cycleDuration = framesToTime(cycleDuration);\\n        var midDuration = $bm_div(cycleDuration, 2);\\n        var maxValue = $bm_mul(fThrough, midDuration);\\n        var cycvarime = fThroughTime;\\n        var numEndCycles = 1;\\n        while (cycvarime > cycleDuration) {\\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\\n            if (cycleDuration < 2) {\\n                cycleDuration = 2;\\n                numEndCycles++;\\n            }\\n            cycleDuration = framesToTime(cycleDuration);\\n            midDuration = $bm_div(cycleDuration, 2);\\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\\n            if (numEndCycles > 100 / damping && maxValue < threshold)\\n                return zeroValue;\\n        }\\n        if (cycvarime < midDuration)\\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\\n                0,\\n                0.1,\\n                slowIn,\\n                1\\n            ]);\\n        else\\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\\n                $bm_sub(1, slowIn),\\n                0,\\n                1,\\n                0.9\\n            ]);\\n    } else {\\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\\n        sinus = Math.sin(sinus);\\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\\n        sinus = $bm_div(sinus, damp);\\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\\n            return 0;\\n        fThrough = $bm_mul(fThrough, sinus);\\n        if (threshold > 0) {\\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\\n        }\\n    }\\n    if (bounce) {\\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\\n        var startValue = valueAtTime(fThroughStart);\\n        if ($bm_isInstanceOfArray(value)) {\\n            for (var i = 0; i < prevValue.length; i++) {\\n                if (prevValue[i] > startValue[i])\\n                    fThrough[i] = Math.abs(fThrough[i]);\\n                if (prevValue[i] < startValue[i])\\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\\n            }\\n        } else {\\n            if (prevValue > startValue)\\n                fThrough = Math.abs(fThrough);\\n            if (prevValue < startValue)\\n                fThrough = $bm_neg(Math.abs(fThrough));\\n        }\\n    }\\n    if (simulate) {\\n        if (!isThisPosition) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\\n        } else if (thisLayer.hasParent) {\\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\\n        }\\n    }\\n    return fThrough;\\n}\\nfunction followThrough() {\\n    var propSpeed = length(velocity);\\n    if (propSpeed < threshold)\\n        return followThroughAtTime($bm_sub(time, overlapDuration));\\n    var fThrough = zeroValue;\\n    var t = time;\\n    while (t > 0) {\\n        t = $bm_sub(t, thisComp.frameDuration);\\n        if (simulate)\\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\\n        else\\n            propSpeed = length(velocityAtTime(t));\\n        if (propSpeed < threshold) {\\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\\n            break;\\n        }\\n    }\\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\\n}\\nfunction smartSmooth(axis) {\\n    var startKey = nearestKey(time);\\n    var endKey = startKey;\\n    if (time == startKey.time)\\n        return 0;\\n    if (time < startKey.time && startKey.index == 1)\\n        return 0;\\n    if (time > startKey.time && startKey.index == numKeys)\\n        return 0;\\n    if (time < startKey.time)\\n        startKey = key($bm_sub(startKey.index, 1));\\n    if (time > startKey.time)\\n        endKey = key($bm_sum(startKey.index, 1));\\n    var sI = 0.66;\\n    var sO = 0.33;\\n    var sIV = 1;\\n    var sOV = 0;\\n    var sVal = startKey.value;\\n    var eVal = endKey.value;\\n    if ($bm_isInstanceOfArray(value)) {\\n        sVal = sVal[axis];\\n        eVal = eVal[axis];\\n    }\\n    var sTime = startKey.time;\\n    var eTime = endKey.time;\\n    if (isKeyTop(startKey, axis))\\n        sO = slowOut;\\n    else {\\n        var prevKey = key($bm_sub(startKey.index, 1));\\n        var pVal = prevKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            pVal = pVal[axis];\\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\\n    }\\n    if (isKeyTop(endKey, axis)) {\\n        sI = slowIn;\\n        if (endKey.index != numKeys) {\\n            var nextKey = key($bm_sum(endKey.index, 1));\\n            var nVal = nextKey.value;\\n            if ($bm_isInstanceOfArray(value))\\n                nVal = nVal[axis];\\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\\n                sI = 1;\\n        }\\n    } else {\\n        var nextKey = key($bm_sum(endKey.index, 1));\\n        var nVal = nextKey.value;\\n        if ($bm_isInstanceOfArray(value))\\n            nVal = nVal[axis];\\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\\n    }\\n    if (endKey.index == numKeys && doFollowThrough) {\\n        sI = 1;\\n    }\\n    var val = value;\\n    if ($bm_isInstanceOfArray(value))\\n        val = val[axis];\\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\\n        sO,\\n        sOV,\\n        sI,\\n        sIV\\n    ]), val);\\n}\\nfunction overlap() {\\n    var ol = zeroValue;\\n    if (isThisPosition && !hasParent)\\n        return zeroValue;\\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\\n    if (isThisPosition) {\\n        var originalDistance = length(valueAtTime(0));\\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\\n    }\\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\\n    ol = thisLayer.fromWorld(ol);\\n    if (!isThisPosition)\\n        ol = $bm_sub(ol, value);\\n    else {\\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\\n    }\\n    return ol;\\n}\\nvar okToGo = false;\\nif (simulate && fx.enabled)\\n    okToGo = true;\\nelse if (numKeys > 1 && fx.enabled)\\n    okToGo = true;\\nif (okToGo) {\\n    var smartSmoothResult = zeroValue;\\n    if (doInterpolation) {\\n        if ($bm_isInstanceOfArray(value)) {\\n            if (value.length == 2)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1)\\n                ];\\n            else if (value.length == 3)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2)\\n                ];\\n            else if (value.length == 4)\\n                smartSmoothResult = [\\n                    smartSmooth(0),\\n                    smartSmooth(1),\\n                    smartSmooth(2),\\n                    smartSmooth(3)\\n                ];\\n        } else {\\n            smartSmoothResult = smartSmooth(0);\\n        }\\n    }\\n    if (doAnticipation)\\n        result = $bm_sum(result, anticipate());\\n    result = $bm_sum(result, smartSmoothResult);\\n    if (doFollowThrough)\\n        result = $bm_sum(result, followThrough());\\n    if (doOverlap)\\n        result = $bm_sum(result, overlap());\\n}\\n$bm_rt = result;"},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":120,"st":0,"bm":0}]}],"layers":[{"ddd":0,"ind":1,"ty":0,"nm":"Pre-comp 1","refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[97.5,91.5,0],"ix":2,"l":2},"a":{"a":0,"k":[140.5,133.5,0],"ix":1,"l":2},"s":{"a":0,"k":[70,70,100],"ix":6,"l":2}},"ao":0,"w":281,"h":267,"ip":0,"op":120,"st":0,"bm":0}],"markers":[]}');var d=i(94097),v=i(90607);const h=n=>{const{t:e}=(0,v.K)(),{toggleGiveFeedbackModal:i}=n;return(0,t.jsx)("div",{className:"cardBox mb-3 createNewMrf",children:(0,t.jsxs)("div",{className:"row align-items-center",children:[(0,t.jsx)("div",{className:"col-md-9 col-xl-10",children:(0,t.jsxs)("div",{className:"row align-items-center",children:[(0,t.jsx)("div",{className:"col-md-3",children:(0,t.jsx)(d.A,{loop:!0,animationData:u,background:"transparent",speed:"1",play:!0,style:{width:"100%",height:"124px"},autoPlay:!0})}),(0,t.jsx)("div",{className:"col-md-9",children:(0,t.jsxs)("div",{className:"cardHead pb-0",children:[(0,t.jsxs)("h3",{children:["Give ",(0,t.jsx)("span",{children:"Feedback"})]}),(0,t.jsx)("p",{className:"mb-0",children:"Feedback is an important part of a corporate culture and can help employees improve their performance and grow professionally."})]})})]})}),(0,t.jsx)("div",{className:"col-md-3 col-xl-2",children:(0,t.jsx)(o.Sv,{classNames:"btn btn-primary gradientBg w-100",text:e("btns.giveFeedback"),handleClick:()=>i()})})]})})};var p=i(29829);const c=n=>{const{receivedFeedbackTabs:e,toggleFeedbackKudosModal:i,receivedFeedbackData:a,isLoading:r=!1}=n,m=()=>(null===a||void 0===a?void 0:a.length)>0?null===a||void 0===a?void 0:a.map((()=>(0,t.jsx)("li",{children:(0,t.jsx)("div",{className:"subCategry",children:(0,t.jsxs)("div",{className:"row",children:[(0,t.jsxs)("div",{className:"col-md-9 border-end",children:[(0,t.jsxs)("div",{className:"d-flex gap-3",children:[(0,t.jsx)("figure",{className:"mb-0",children:(0,t.jsx)("img",{src:"images/profile.png",alt:"",width:40})}),(0,t.jsxs)("div",{children:[(0,t.jsx)("span",{children:"Abhay Sharma"}),(0,t.jsx)("p",{children:"Finance Manager"})]})]}),(0,t.jsx)("strong",{className:"pt-2",children:"Feedback Context"}),(0,t.jsx)("p",{children:"Great leadership and performance in quarter 3"})]}),(0,t.jsx)("div",{className:"col-md-3",children:(0,t.jsxs)("div",{className:"d-flex flex-wrap justify-content-center h-100 text-center ",children:[(0,t.jsxs)("div",{className:"text-center",children:[(0,t.jsx)("span",{children:"Scored / Scorable"}),(0,t.jsxs)("b",{children:["4 ",(0,t.jsx)("span",{children:"/ 5"})]})]}),(0,t.jsx)("p",{className:"w-100 mt-auto text-end",children:"04 Sep, 2024"})]})})]})})}))):(0,t.jsx)("div",{className:"d-flex justify-content-center",children:(0,t.jsx)(l.A,{})});return(0,t.jsx)("div",{className:"tab-pane fade show active",id:"receivedFeedback",children:(0,t.jsxs)("div",{className:"cardBox myRequest mb-3",children:[(0,t.jsxs)("div",{className:"cardHead d-flex justify-content-between",children:[(0,t.jsxs)("div",{className:"d-flex align-items-center",children:[(0,t.jsx)("img",{src:"images/kpi-guidline.svg",alt:"",width:40,className:"me-2 fw-bold"}),(0,t.jsx)("div",{className:"",children:(0,t.jsx)("h3",{children:" Received Feedback"})})]}),(0,t.jsx)("div",{className:"searchB me-0 ",children:(0,t.jsx)("input",{type:"text",className:"form-control w-100 fs-7",placeholder:"Search"})})]}),(0,t.jsx)(p.QE,{tabs:e,type:"receivedFeedback"}),(0,t.jsxs)("div",{className:"tab-content mykpiMain",children:[(0,t.jsx)("div",{className:"tab-pane fade active show",id:"all",children:(0,t.jsx)("ul",{className:"subCategoryUl",children:r?(0,t.jsx)("div",{className:"d-flex justify-content-center m-5",children:(0,t.jsx)(o.L,{isShow:r,size:"md"})}):(null===a||void 0===a?void 0:a.length)>0?null===a||void 0===a?void 0:a.map(((n,e)=>(0,t.jsx)("li",{children:(0,t.jsx)("div",{onClick:()=>{i("Feedback",n)},className:"subCategry",children:(0,t.jsxs)("div",{className:"row",children:[(0,t.jsxs)("div",{className:"col-md-9 border-end",children:[(0,t.jsxs)("div",{className:"d-flex gap-3",children:[(0,t.jsx)("figure",{className:"mb-0",children:(0,t.jsx)("img",{src:"images/profile.png",alt:"",width:40})}),(0,t.jsxs)("div",{children:[(0,t.jsx)("span",{children:null===n||void 0===n?void 0:n.name}),(0,t.jsx)("p",{children:null===n||void 0===n?void 0:n.designation_name})]})]}),(0,t.jsx)("strong",{className:"pt-2",children:"Feedback"}),(0,t.jsx)("p",{children:null===n||void 0===n?void 0:n.feedback_description})]}),(0,t.jsx)("div",{className:"col-md-3",children:(0,t.jsxs)("div",{className:"d-flex flex-wrap justify-content-center h-100 text-center ",children:[(0,t.jsx)("p",{className:"w-100 mb-auto mt-2",children:(0,s.Rl)(null===n||void 0===n?void 0:n.created_at,"DD MMM YYYY")}),(0,t.jsx)("div",{className:"mt-auto mb-4",children:(0,t.jsx)("img",{src:"images/arrow-right.svg",width:35})})]})})]})})},e))):(0,t.jsx)("div",{className:"d-flex justify-content-center",children:(0,t.jsx)(l.A,{})})})}),(0,t.jsx)("div",{className:"tab-pane fade",id:"teamLeader",children:(0,t.jsx)("ul",{className:"subCategoryUl",children:r?(0,t.jsx)("div",{className:"d-flex justify-content-center m-5",children:(0,t.jsx)(o.L,{isShow:r,size:"md"})}):(null===a||void 0===a?void 0:a.length)>0?null===a||void 0===a?void 0:a.map((()=>(0,t.jsx)("li",{children:(0,t.jsx)("div",{className:"subCategry",children:(0,t.jsxs)("div",{className:"row",children:[(0,t.jsxs)("div",{className:"col-md-9 border-end",children:[(0,t.jsxs)("div",{className:"d-flex gap-3",children:[(0,t.jsx)("figure",{className:"mb-0",children:(0,t.jsx)("img",{src:"images/profile.png",alt:"",width:40})}),(0,t.jsxs)("div",{children:[(0,t.jsx)("span",{children:"Abhay Sharma"}),(0,t.jsx)("p",{children:"Finance Manager"})]})]}),(0,t.jsx)("strong",{className:"pt-2",children:"Feedback Context"}),(0,t.jsx)("p",{children:"Great leadership and performance in quarter 3"})]}),(0,t.jsx)("div",{className:"col-md-3",children:(0,t.jsxs)("div",{className:"d-flex flex-wrap justify-content-center h-100 text-center ",children:[(0,t.jsxs)("div",{className:"text-center",children:[(0,t.jsx)("span",{children:"Scored / Scorable"}),(0,t.jsxs)("b",{children:["4 ",(0,t.jsx)("span",{children:"/ 5"})]})]}),(0,t.jsx)("p",{className:"w-100 mt-auto text-end",children:"04 Sep, 2024"})]})})]})})}))):(0,t.jsx)("div",{className:"d-flex justify-content-center",children:(0,t.jsx)(l.A,{})})})}),(0,t.jsx)("div",{className:"tab-pane fade",id:"manager",children:(0,t.jsx)("ul",{className:"subCategoryUl",children:r?(0,t.jsx)("div",{className:"d-flex justify-content-center m-5",children:(0,t.jsx)(o.L,{isShow:r,size:"md"})}):m()})}),(0,t.jsx)("div",{className:"tab-pane fade",id:"functionalHead",children:(0,t.jsx)("ul",{className:"subCategoryUl",children:r?(0,t.jsx)("div",{className:"d-flex justify-content-center m-5",children:(0,t.jsx)(o.L,{isShow:r,size:"md"})}):m()})})]})]})})};var f=i(65623),b=i(45531),y=i(56462),x=i(52027),g=i(26181),_=i(80728);const $=n=>{const{t:e}=(0,v.K)(),{openModel:i,handleOpenClose:r,toggleTeamMemberModal:l,allEmployeeList:m,feedbackTeamData:u,createFeedback:d}=n,[h,c]=(0,a.useState)({}),[f,g]=(0,a.useState)(0),[_,$]=(0,a.useState)(""),[k,T]=(0,a.useState)({type:!1,feedback_to:[],feedback_title:"",feedback_description:"",feedback_type:"",selectFeedbackTeam:null,giveRating:!1}),K=(n,e)=>{var i;const a=e||(null===(i=n.target)||void 0===i?void 0:i.name),{value:t,type:r,checked:o}=null!==n&&void 0!==n&&n.target?n.target:{value:n};T((n=>({...n,[a]:"checkbox"===r?o:t}))),c((n=>({...n,[a]:void 0})))};(0,a.useEffect)((()=>()=>{V()}),[i]);const V=()=>{T({type:!1,feedback_to:[],feedback_title:"",feedback_description:"",feedback_rating:"",feedback_type:"",selectFeedbackTeam:"",giveRating:!1})};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)("div",{className:"offcanvas offcanvas-end  "+(i?"show":""),tabIndex:-1,style:{visibility:i?"visible":"hidden",width:"700px"},id:"offcanvasExampleLabel",children:[(0,t.jsxs)("div",{className:"offcanvas-header",children:[(0,t.jsx)("h5",{className:"offcanvas-title  fs-6 fw-bold text-primary",children:"Give Feedback"}),(0,t.jsx)("button",{type:"button",className:"btn-close","data-bs-dismiss":"offcanvas","aria-label":"Close",onClick:()=>r()})]}),(0,t.jsx)("div",{className:"offcanvas-body",children:(0,t.jsxs)("div",{className:"formPanel",children:[(0,t.jsxs)("div",{className:"form-group mb-3 d-flex align-items-center gap-4",children:[(0,t.jsx)(b.JU,{text:"Select Feedback Type"}),(0,t.jsx)(b.Yq,{id:"switchques1",name:"type",checked:null===k||void 0===k?void 0:k.type,onChange:n=>K(n),labelLeft:"Individual",labelRight:"Team",className:"text-light "})]}),null!==k&&void 0!==k&&k.type?(0,t.jsxs)("div",{className:"form-group mb-3 d-flex align-items-center align-items-center gap-3",children:[(0,t.jsxs)("div",{className:"w-75",children:[(0,t.jsx)(b.JU,{text:"Select Team"}),(0,t.jsx)(y.A,{data:u||[],placeholder:e("placeholders.team"),value:null===k||void 0===k?void 0:k.selectFeedbackTeam,handleChange:n=>K(n,"selectFeedbackTeam"),name:"selectFeedbackTeam"})]}),(0,t.jsx)(o.Sv,{classNames:"btn btn-primary gradientBg mt-auto",text:e("btns.createTeam"),handleClick:()=>l()})]}):(0,t.jsxs)("div",{className:"form-group mb-3",children:[(0,t.jsx)(b.JU,{text:"Select Recipient"}),(0,t.jsx)(y.A,{data:m||[],placeholder:e("placeholders.employee"),value:null===k||void 0===k?void 0:k.feedback_to,handleChange:n=>K(n,"feedback_to"),isMulti:!0})]}),(0,t.jsxs)("div",{className:"form-group mb-3",children:[(0,t.jsx)(b.JU,{text:"Title",required:!0}),(0,t.jsx)(b.pd,{type:"text",name:"feedback_title",placeholder:"Enter here..",value:null===k||void 0===k?void 0:k.feedback_title,onChange:n=>K(n)}),(null===h||void 0===h?void 0:h.title)&&(0,t.jsx)(o.eo,{text:h.title})]}),(0,t.jsxs)("div",{className:"form-group mb-3",children:[(0,t.jsx)(b.JU,{text:"Enter Feedback"}),(0,t.jsx)("div",{children:(0,t.jsx)(p.HG,{editorData:_,setEditorData:$,bodyData:"",editorSize:"sm"})})]}),(0,t.jsx)("div",{className:"form-group mb-2",children:(0,t.jsx)(b.Yq,{id:"switchques3",name:"giveRating",checked:null===k||void 0===k?void 0:k.giveRating,onChange:n=>K(n),labelRight:"Give Rating( if Required)",className:"text-primary fw-semibold"})}),(null===k||void 0===k?void 0:k.giveRating)&&(0,t.jsx)("div",{className:"form-group mb-3 d-flex gap-3 align-items-center",children:(0,t.jsx)("div",{className:"d-flex gap-2 ",children:(0,t.jsx)(b.i_,{rating:f,setRating:g})})}),(0,t.jsx)("div",{className:"form-group mb-3 d-flex align-items-center gap-3",children:(0,t.jsx)(b.rD,{data:x.oY,name:"feedback_type",handleChange:n=>K(n),selectedValue:null===k||void 0===k?void 0:k.feedback_type})})]})}),(0,t.jsx)("div",{className:"offcanvas-footer",children:(0,t.jsx)("div",{className:"d-flex align-items-center justify-content-end gap-3",children:(0,t.jsx)(o.Sv,{classNames:"btn btn-primary gradientBg ",text:e("btns.submit"),handleClick:()=>(async()=>{var n;const e=(0,s.mu)(null===k||void 0===k?void 0:k.feedback_to),i={type:null!==k&&void 0!==k&&k.type?"team":"individual",feedback_to:e||[],feedback_title:null===k||void 0===k?void 0:k.feedback_title,feedback_description:_,feedback_rating:f,feedback_type:null===k||void 0===k?void 0:k.feedback_type,feedback_team:(null===k||void 0===k||null===(n=k.selectFeedbackTeam)||void 0===n?void 0:n.value)||null};d(i)})()})})})]}),i&&(0,t.jsx)("div",{className:"modal-backdrop fade show"})]})},k=n=>{const{t:e}=(0,v.K)(),{openModel:i,handleOpenClose:r,allEmployeeList:l,createFeedbackTeam:m}=n,[u,d]=(0,a.useState)({}),[h,p]=(0,a.useState)({teamName:"",employees:null}),c=(n,e)=>{var i;const a=e||(null===(i=n.target)||void 0===i?void 0:i.name),{value:t,type:r,checked:o}=null!==n&&void 0!==n&&n.target?n.target:{value:n};p((n=>({...n,[a]:"checkbox"===r?o:t}))),d((n=>({...n,[a]:void 0})))};(0,a.useEffect)((()=>()=>{f()}),[i]);const f=()=>{p({teamName:"",employees:null})};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("div",{className:"modal fade selectTeamMemeber "+(i?"show":""),id:"selectTeam",tabIndex:"-1",style:{display:i?"block":"none"},"aria-hidden":!i,children:(0,t.jsx)("div",{className:"modal-dialog modal-dialog-centered",style:{maxWidth:"530px"},children:(0,t.jsxs)("div",{className:"modal-content rounded-0 border-0",children:[(0,t.jsxs)("div",{className:"modal-header",children:[(0,t.jsx)("h1",{className:"modal-title fs-6 text-primary fw-semibold",children:"Create Team"}),(0,t.jsx)("button",{type:"button",className:"btn-close","data-bs-dismiss":"modal","aria-label":"Close",onClick:()=>r()})]}),(0,t.jsx)("div",{className:"modal-body",children:(0,t.jsxs)("div",{className:"formPanel row",children:[(0,t.jsx)("div",{className:"col-12",children:(0,t.jsxs)("div",{className:"form-group mb-3",children:[(0,t.jsx)(b.JU,{text:e("labels.teamName"),required:!0}),(0,t.jsx)(b.pd,{type:"text",placeholder:e("placeholders.teamName"),value:null===h||void 0===h?void 0:h.teamName,name:"teamName",onChange:n=>c(n)}),(null===u||void 0===u?void 0:u.teamName)&&(0,t.jsx)(o.eo,{text:u.teamName})]})}),(0,t.jsx)("div",{className:"col-12",children:(0,t.jsxs)("div",{className:"form-group mb-3",children:[(0,t.jsx)(b.JU,{text:e("labels.selectEmployee"),required:!0}),(0,t.jsx)(y.A,{data:l||[],placeholder:e("placeholders.employees"),value:null===h||void 0===h?void 0:h.employees,handleChange:n=>c(n,"employees"),isMulti:!0}),(null===u||void 0===u?void 0:u.employees)&&(0,t.jsx)(o.eo,{text:u.employees})]})})]})}),(0,t.jsx)("div",{className:"modal-footer justify-content-end ",children:(0,t.jsx)(o.Sv,{classNames:"btn btn-oreang btnShadow text-white ",text:e("btns.save"),handleClick:()=>(async()=>{const n=await(0,g.i6)(_.tN,h);if(n.isValid){const n={name:null===h||void 0===h?void 0:h.teamName,emp_ids:(0,s.mu)(null===h||void 0===h?void 0:h.employees)};m(n)}else d(n.errors)})()})})]})})}),i&&(0,t.jsx)("div",{className:"modal-backdrop fade show"})]})},T=n=>{const{openModel:e,handleOpenClose:i,feedbackKudosModalName:a,selectedFeedbackData:r}=n;return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("div",{className:"modal fade feedbackModal "+(e?"show":""),id:"feedbackModal",tabIndex:"-1",style:{display:e?"block":"none"},"aria-hidden":!e,children:(0,t.jsx)("div",{className:"modal-dialog modal-dialog-centered",children:(0,t.jsxs)("div",{className:"modal-content rounded-1 border-0",children:[(0,t.jsxs)("div",{className:"modal-header border-0",children:[(0,t.jsx)("h1",{className:"modal-title fs-5 fw-bold text-primary",children:a}),(0,t.jsx)("button",{type:"button",className:"btn-close","data-bs-dismiss":"modal","aria-label":"Close",onClick:()=>i()})]}),(0,t.jsxs)("div",{className:"modal-body ",children:["Kudos"===a&&(0,t.jsxs)("div",{class:"d-flex gap-3 justify-content-between align-items-center mb-3",children:[(0,t.jsx)("strong",{class:"pt-0",children:"Appreciation By"}),(0,t.jsx)("p",{children:(0,s.Rl)(null===r||void 0===r?void 0:r.created_at,"DD MMM YYYY")})]}),(0,t.jsxs)("div",{className:"subCategry",children:[(0,t.jsxs)("div",{className:"d-flex gap-3 justify-content-between",children:[(0,t.jsxs)("div",{className:"d-flex gap-3",children:[(0,t.jsx)("figure",{className:"mb-0",children:(0,t.jsx)("img",{src:"images/profile.png",alt:"",width:40})}),(0,t.jsxs)("div",{children:[(0,t.jsx)("span",{children:null===r||void 0===r?void 0:r.name}),(0,t.jsx)("p",{children:null===r||void 0===r?void 0:r.designation_name})]})]}),"Feedback"===a&&(0,t.jsx)("p",{children:(0,s.Rl)(null===r||void 0===r?void 0:r.created_at,"DD MMM YYYY")})]}),(0,t.jsx)("strong",{className:"pt-2",children:"Feedback"}),(0,t.jsx)("p",{children:null===r||void 0===r?void 0:r.feedback_description}),"Feedback"===a&&(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("strong",{className:"pt-2",children:"Rating"}),(0,t.jsxs)("div",{className:"d-flex gap-3 mb-3",children:[(0,t.jsxs)("b",{children:[null===r||void 0===r?void 0:r.feedback_rating,(0,t.jsx)("span",{children:"/ 5"})]}),(0,t.jsx)(b.i_,{rating:Number(null===r||void 0===r?void 0:r.feedback_rating)})]})]}),"Kudos"===a&&(0,t.jsxs)("div",{class:"w-12  ",children:[(0,t.jsx)("strong",{children:"Points"}),(0,t.jsx)("b",{class:"purpleTxtColor",children:"50"})]})]})]})]})})}),e&&(0,t.jsx)("div",{className:"modal-backdrop fade show"})]})};var K=i(22166),V=i(94174);const D=()=>{const n=(0,K.wA)(),{getAllEmployeeRes:e,getAllEmployeeError:i,getAllEmployeePending:o}=(0,K.d4)((n=>n.employee)),{createFeedbackTeamRes:l,createFeedbackTeamError:s,createFeedbackTeamPending:u,getAllFeedbackTeamsPending:d,getAllFeedbackTeamsRes:v,getAllFeedbackTeamsError:b,createFeedbackPending:y,createFeedbackRes:x,createFeedbackError:g,givenFeedbackPending:_,givenFeedbackRes:D,givenFeedbackError:P,getReceivedFeedbackOnFilterPending:S,getReceivedFeedbackOnFilterRes:j,getReceivedFeedbackOnFilterError:w,getFeedbackDashboardDataPending:A,getFeedbackDashboardDataRes:I,getFeedbackDashboardDataError:O}=(0,K.d4)((n=>n.feedback)),[M,N]=(0,a.useState)(!1),[R,z]=(0,a.useState)(!1),[F,W]=(0,a.useState)(!1),[E,L]=(0,a.useState)(""),[B,C]=(0,a.useState)([]),[G,q]=(0,a.useState)([]),[Y,Q]=(0,a.useState)(""),[U,H]=(0,a.useState)(""),[J,X]=(0,a.useState)(""),[Z,nn]=(0,a.useState)(""),en=[{name:"All",onClickFun:n=>an(n),id:"all"},{name:"Team Leader",onClickFun:n=>an(n),id:"teamLeader"},{name:"Manager",onClickFun:n=>an(n),id:"manager"},{name:"Functional Head",onClickFun:n=>an(n),id:"functionalHead"}],an=n=>{},tn=[{name:"Received Kudos",onClickFun:n=>rn(n),id:"receivedKudos"},{name:"Given Kudos",onClickFun:n=>rn(n),id:"givenKudos"}],rn=n=>{},on=()=>{N(!M)},ln=()=>{z(!R)},sn=(n,e)=>{nn(e||""),L(n),W(!F)},mn=[{name:"Received Feedback",onClickFun:n=>un(n),id:"receivedFeedback"},{name:"Given Feedback",onClickFun:n=>un(n),id:"givenFeedback"},{name:"Kudos",onClickFun:n=>un(n),id:"kudos"}],un=n=>{"receivedFeedback"===n?cn():"givenFeedback"===n&&pn()};(0,a.useEffect)((()=>{vn(),dn(),hn(),cn()}),[]);const dn=()=>{n(V.mM.getAllEmployeeRequest())};(0,a.useEffect)((()=>{if(!o){if(i)return;e&&200===(null===e||void 0===e?void 0:e.code)&&C(null===e||void 0===e?void 0:e.data)}}),[e,i,o]);(0,a.useEffect)((()=>{if(!u){if(s)return void n(V.nn.handleClearFeedbackStore("HANDLE_CLEAR_CREATE_FEEDBACK_TEAM_STORE"));l&&200===(null===l||void 0===l?void 0:l.code)&&(n(V.nn.handleClearFeedbackStore("HANDLE_CLEAR_CREATE_FEEDBACK_TEAM_STORE")),ln(),vn())}}),[l,s,u]);const vn=e=>{n(V.nn.getAllFeedbackTeamsRequest(e))};(0,a.useEffect)((()=>{if(!d){if(b)return;v&&200===(null===v||void 0===v?void 0:v.code)&&q(null===v||void 0===v?void 0:v.data)}}),[v,b,d]);(0,a.useEffect)((()=>{if(!y){if(g)return void n(V.nn.handleClearFeedbackStore("HANDLE_CLEAR_CREATE_FEEDBACK_STORE"));x&&200===(null===x||void 0===x?void 0:x.code)&&(n(V.nn.handleClearFeedbackStore("HANDLE_CLEAR_CREATE_FEEDBACK_STORE")),on())}}),[x,g,y]);const hn=()=>{n(V.nn.getFeedbackDashboardDataRequest())};(0,a.useEffect)((()=>{if(!A){if(O)return;I&&200===(null===I||void 0===I?void 0:I.code)&&Q(null===I||void 0===I?void 0:I.data[0])}}),[I,O,A]);const pn=e=>{n(V.nn.givenFeedbackRequest())};(0,a.useEffect)((()=>{if(!_){if(P)return;D&&200===(null===D||void 0===D?void 0:D.code)&&X(null===D||void 0===D?void 0:D.data)}}),[D,P,_]);const cn=e=>{n(V.nn.getReceivedFeedbackOnFilterRequest(e))};return(0,a.useEffect)((()=>{if(!S){if(w)return;j&&200===(null===j||void 0===j?void 0:j.code)&&(console.log(null===j||void 0===j?void 0:j.data),H(null===j||void 0===j?void 0:j.data))}}),[j,w,S]),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r,{feedbackDashboardData:Y}),(0,t.jsx)(h,{toggleGiveFeedbackModal:on}),(0,t.jsx)(p.QE,{tabs:mn,type:"feedback",ulClass:"mb-3 feedBackTab"}),(0,t.jsxs)("div",{class:"tab-content feedBackTabContent",children:[(0,t.jsx)(c,{toggleFeedbackKudosModal:sn,receivedFeedbackTabs:en,receivedFeedbackData:U,isLoading:S}),(0,t.jsx)(m,{toggleFeedbackKudosModal:sn,givenFeedback:J,isLoading:_}),(0,t.jsx)(f.default,{toggleFeedbackKudosModal:sn,kudosTabs:tn})]}),M&&(0,t.jsx)($,{openModel:M,handleOpenClose:on,toggleTeamMemberModal:ln,allEmployeeList:B,feedbackTeamData:G,createFeedback:e=>{n(V.nn.createFeedbackRequest(e))}}),R&&(0,t.jsx)(k,{openModel:R,handleOpenClose:ln,allEmployeeList:B,createFeedbackTeam:e=>{n(V.nn.createFeedbackTeamRequest(e))}}),F&&(0,t.jsx)(T,{openModel:F,handleOpenClose:sn,feedbackKudosModalName:E,selectedFeedbackData:Z})]})}},65623:(n,e,i)=>{i.r(e),i.d(e,{default:()=>s});i(65043);var a=i(29829),t=i(94140),r=i(85831),o=i(70579);const l=[{name:"Mohd Sarfaraz"}],s=n=>{const{kudosTabs:e,toggleFeedbackKudosModal:i,isLoading:s}=n,m=()=>(null===l||void 0===l?void 0:l.length)>0?null===l||void 0===l?void 0:l.map((()=>(0,o.jsx)("li",{children:(0,o.jsx)("div",{onClick:()=>i("Kudos"),className:"subCategry",children:(0,o.jsxs)("div",{className:"row",children:[(0,o.jsxs)("div",{className:"col-md-9 border-end",children:[(0,o.jsxs)("div",{className:"d-flex gap-3",children:[(0,o.jsx)("figure",{className:"mb-0",children:(0,o.jsx)("img",{src:"images/profile.png",alt:"",width:40})}),(0,o.jsxs)("div",{children:[(0,o.jsx)("span",{children:"Priya Prajapat"}),(0,o.jsx)("p",{children:"Finance Manager"})]})]}),(0,o.jsx)("strong",{className:"pt-2",children:"Feedback"}),(0,o.jsx)("p",{children:"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."})]}),(0,o.jsx)("div",{className:"col-md-3",children:(0,o.jsxs)("div",{className:"d-flex flex-wrap justify-content-center h-100 text-center ",children:[(0,o.jsx)("p",{className:"w-100 mt-auto text-center",children:"04 Sep, 2024"}),(0,o.jsxs)("div",{className:"text-center d-flex align-items-end gap-1",children:[(0,o.jsx)("b",{children:"40 "}),(0,o.jsx)("span",{className:"mb-2 fw-normal",children:"Points"})]})]})})]})})}))):(0,o.jsx)("div",{className:"d-flex justify-content-center",children:(0,o.jsx)(t.A,{})});return(0,o.jsx)("div",{className:"tab-pane fade",id:"kudos",children:(0,o.jsxs)("div",{className:"cardBox myRequest mb-3",children:[(0,o.jsxs)("div",{className:"cardHead d-flex align-items-center",children:[(0,o.jsx)("img",{src:"images/kpi-guidline.svg",alt:"",width:40,className:"me-2 fw-bold"}),(0,o.jsx)("h3",{children:" Kudos"})]}),(0,o.jsx)(a.QE,{tabs:e,type:"kudos"}),(0,o.jsxs)("div",{className:"tab-content mykpiMain",children:[(0,o.jsx)("div",{className:"tab-pane fade active show",id:"receivedKudos",children:(0,o.jsx)("ul",{className:"subCategoryUl",children:s?(0,o.jsx)("div",{className:"d-flex justify-content-center m-5",children:(0,o.jsx)(r.L,{isShow:s,size:"md"})}):m()})}),(0,o.jsx)("div",{className:"tab-pane fade",id:"givenKudos",children:(0,o.jsx)("ul",{className:"subCategoryUl",children:s?(0,o.jsx)("div",{className:"d-flex justify-content-center m-5",children:(0,o.jsx)(r.L,{isShow:s,size:"md"})}):m()})})]})]})})}}}]);
//# sourceMappingURL=3941.353a7b99.chunk.js.map