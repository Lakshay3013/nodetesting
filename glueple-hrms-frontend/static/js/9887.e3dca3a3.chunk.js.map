{"version":3,"file":"static/js/9887.e3dca3a3.chunk.js","mappings":"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","sources":["components/commanComponent/BackIcon.js","components/performanceManagement/pmsEmployee/createKRA/assignKRAEmployee/AssignKRAEmployees.js","components/performanceManagement/pmsEmployee/createKRA/assignKRAEmployee/AssignKRAModal.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst BackIcon = () => {\r\n    return (\r\n        <div >\r\n            <svg\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                x={0}\r\n                y={0}\r\n                viewBox=\"0 0 512 512\"\r\n                xmlSpace=\"preserve\"\r\n                className=\"icon icon-xlg me-2\"\r\n                style={{\r\n                    height: \"23px\",\r\n                    width: \"23px\",\r\n                    cursor: \"pointer\",\r\n                }}\r\n            >\r\n                <circle id=\"Oval-3\" opacity=\".1\" fill=\"#2B76D2\" cx={256} cy={256} r={256} />\r\n                <path\r\n                    fill=\"#2B76D2\"\r\n                    d=\"M277.3 362.7c-5.3 0-10.6-2-14.7-5.9l-85.3-81.5c-4.1-3.9-6.5-9.3-6.6-15-.1-5.7 2-11.1 5.9-15.2l85.3-89.1c8.1-8.5 21.7-8.8 30.2-.7 8.5 8.1 8.8 21.6.7 30.2l-70.6 73.7 69.9 66.8c8.5 8.1 8.8 21.6.7 30.1-4.2 4.4-9.8 6.6-15.5 6.6z\"\r\n                />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackIcon\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CustomTable } from '../../../../reuseableComponents';\r\nimport { CustCheckbox, Icon } from '../../../../commanComponent';\r\nimport { employeeActions, pmsActions } from '../../../../../core/resource/actions';\r\nimport { CustomButton } from '../../../../globalComponents';\r\nimport { Link } from 'react-router-dom';\r\nimport BackIcon from '../../../../commanComponent/BackIcon';\r\nimport { multiSelectIDs, setStatusColor } from '../../../../../utils/common';\r\nimport AssignKRAModal from './AssignKRAModal';\r\nimport ApproveRejectModal from '../../../../modal/ApproveRejectModal';\r\nimport { useCustomTranslation } from '../../../../../translation';\r\n\r\nconst AssignKRAEmployees = () => {\r\n  const {t}=useCustomTranslation()\r\n  const dispatch = useDispatch()\r\n  const {\r\n    getEmployeeByKraPending,\r\n    getEmployeeByKraRes,\r\n    getEmployeeByKraError,\r\n\r\n    assignKraPending,\r\n    assignKraRes,\r\n    assignKraError,\r\n\r\n    updateAssignKraPending,\r\n    updateAssignKraRes,\r\n    updateAssignKraError,\r\n\r\n    getAllKraDetailsDataPending,\r\n    getAllKraDetailsDataRes,\r\n    getAllKraDetailsDataError,\r\n\r\n    deleteAssignKraPending,\r\n    deleteAssignKraRes,\r\n    deleteAssignKraError,\r\n\r\n    selectedKraDetailData\r\n  } = useSelector(state => state.pms)\r\n  const {employeeDetailsData}=useSelector(state => state.employee)\r\n\r\n  const [selectedAssignKRAEmp, setSelectedAssignKRAEmp] = useState('')\r\n  const [allEmployeeListData, setAllEmployeeListData] = useState([])\r\n  const [isShowAssignKRA, setIsShowAssignKRA] = useState(false)\r\n  const [selectedEmployee, setSelectedEmployee] = useState('')\r\n  const [allKraDetailsData, setAllKraDetailsData] = useState('')\r\n  const [isShowDeleteAssignKraModal, setIsShowDeleteAssignKraModal] = useState('')\r\n\r\n  useEffect(() => {\r\n    getAllEmployeeData()\r\n    getAllKraDetailsData()\r\n  }, [])\r\n\r\n\r\n  /* Get All Employee Data */\r\n  // console.log(employeeDetailsData)\r\n  const getAllEmployeeData = () => {\r\n    const payload={\r\n      reported_to:employeeDetailsData?.id\r\n  }\r\n    dispatch(pmsActions.getEmployeeByKraRequest(payload));\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getEmployeeByKraPending) {\r\n      if (getEmployeeByKraError) {\r\n        return;\r\n      }\r\n      if (getEmployeeByKraRes) {\r\n        if (getEmployeeByKraRes?.code === 200) {\r\n          const allEmployeeList = getEmployeeByKraRes?.data\r\n          setAllEmployeeListData(allEmployeeList)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getEmployeeByKraRes,\r\n    getEmployeeByKraError,\r\n    getEmployeeByKraPending\r\n  ]);\r\n\r\n  const ratingDurationField = [\r\n    { key: 'sn', label: 'S.N' },\r\n    { key: 'select', label: 'Select' },\r\n    { key: 'emp_id', label: 'Emp Code' },\r\n    { key: 'name', label: 'Name' },\r\n    { key: 'email', label: 'Email' },\r\n    { key: 'account_status', label: 'Account Status' },\r\n    { key: 'kra_name', label: 'Assigned KRA' },\r\n    { key: 'action', label: 'Action' }\r\n  ];\r\n  const handleCorrectionMultiCheck = (e, item) => {\r\n    setSelectedAssignKRAEmp(prev => {\r\n      if (e.target.checked) {\r\n        return [...prev, item];\r\n      } else {\r\n        return prev.filter(checkedItem => checkedItem !== item);\r\n      }\r\n    });\r\n  };\r\n  const ratingDurationScopedSlots = useMemo(() => ({\r\n    sn: (_, index) => (\r\n      <span className='srNum'>{index + 1}</span>\r\n    ),\r\n    account_status: (item) => (\r\n      <span\r\n          className={`${setStatusColor(item?.account_status)} text-capitalize`}\r\n      >\r\n          {item?.account_status}\r\n      </span>\r\n  ),\r\n    kra_name: (item) => (\r\n      <span className='text-success'>{item?.kra_name !== null ? ` ${item?.kra_name}` : \"-\"}</span>\r\n    ),\r\n    select: (item, index) => (\r\n      <span>\r\n        <CustCheckbox\r\n          key={`select_${index}`}\r\n          id={`select_${index}`}\r\n          checked={item?.kra_name ? true : false || selectedAssignKRAEmp.includes(item)}\r\n          handleChange={(e) => handleCorrectionMultiCheck(e, item)}\r\n          name={`select_${index}`}\r\n          isDisable={item?.kra_name}\r\n        />\r\n      </span>\r\n    ),\r\n    action: item => (\r\n      <>\r\n        {item?.kra_name && <div className=\"btn-group actionDrp\">\r\n          <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n            data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            <i className=\"bi bi-three-dots-vertical\"></i>\r\n          </button>\r\n          <ul className=\"dropdown-menu\">\r\n            <li>\r\n              <span className=\"dropdown-item\"\r\n                onClick={() => toggleAssignKRA(item)}\r\n              >\r\n                <Icon className={\"bi bi-pencil-square\"} /> Edit</span>\r\n            </li>\r\n            <li>\r\n              <span className=\"dropdown-item\"\r\n                onClick={() => toggleDeleteAssignKRAModal(item)}\r\n              >\r\n                <Icon className={\"bi bi-trash\"} /> Delete</span>\r\n            </li>\r\n\r\n          </ul>\r\n        </div>}\r\n      </>\r\n    )\r\n  }), [allEmployeeListData, selectedAssignKRAEmp]);\r\n\r\n  const onSubmitAssignKRAModal = () => {\r\n    const empData = multiSelectIDs(selectedAssignKRAEmp)\r\n    const payload = {\r\n      kra_id: selectedKraDetailData?._id,\r\n      employee_ids: empData\r\n    }\r\n    handleAssignKra(payload)\r\n  }\r\n  const multiSelectIDs = (filterData) => {\r\n    const Ids = []\r\n    filterData?.map((item) => {\r\n      Ids.push(item?._id)\r\n    })\r\n    return Ids\r\n  }\r\n\r\n\r\n  /*--------------------------------------assign / update Kra---------------------------*/\r\n\r\n\r\n  const handleAssignKra = (payload) => {\r\n    if (selectedEmployee) {\r\n      payload[\"employee_id\"] = selectedEmployee?._id\r\n      payload[\"_id\"] = selectedEmployee?.assign_id\r\n\r\n      dispatch(pmsActions.updateAssignKraRequest(payload))\r\n    } else {\r\n      dispatch(pmsActions.assignKraRequest(payload))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!assignKraPending) {\r\n      if (assignKraError) {\r\n        dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_ASSIGN_KRA_STORE\"))\r\n        return;\r\n      }\r\n      if (assignKraRes) {\r\n        if (assignKraRes?.code === 200) {\r\n          dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_ASSIGN_KRA_STORE\"))\r\n          setSelectedAssignKRAEmp('')\r\n          getAllEmployeeData()\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    assignKraPending,\r\n    assignKraRes,\r\n    assignKraError,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!updateAssignKraPending) {\r\n      if (updateAssignKraError) {\r\n        dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_UPDATE_ASSIGN_KRA_STORE\"))\r\n        return;\r\n      }\r\n      if (updateAssignKraRes) {\r\n        if (updateAssignKraRes?.code === 200) {\r\n          dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_UPDATE_ASSIGN_KRA_STORE\"))\r\n          getAllEmployeeData()\r\n          setSelectedEmployee('')\r\n          toggleAssignKRA()\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    updateAssignKraPending,\r\n    updateAssignKraRes,\r\n    updateAssignKraError,\r\n  ]);\r\n\r\n  const toggleAssignKRA = (data) => {\r\n    if (data) {\r\n      setSelectedEmployee(data)\r\n    }\r\n    setIsShowAssignKRA(!isShowAssignKRA)\r\n  }\r\n\r\n  /* ---------Get All Kra Details Data----------- */\r\n  const getAllKraDetailsData = (payload) => {\r\n    dispatch(pmsActions.getAllKraDetailsDataRequest(payload))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getAllKraDetailsDataPending) {\r\n      if (getAllKraDetailsDataError) {\r\n\r\n        return;\r\n      }\r\n      if (getAllKraDetailsDataRes) {\r\n        if (getAllKraDetailsDataRes?.code === 200) {\r\n          setAllKraDetailsData(getAllKraDetailsDataRes?.data)\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    getAllKraDetailsDataPending,\r\n    getAllKraDetailsDataRes,\r\n    getAllKraDetailsDataError,\r\n  ]);\r\n\r\n\r\n  /* Delete Kra Parameter Detail */\r\n  const toggleDeleteAssignKRAModal = (data) => {\r\n    if (data) {\r\n      setSelectedEmployee(data)\r\n    } else {\r\n      setSelectedEmployee('')\r\n    }\r\n    setIsShowDeleteAssignKraModal(!isShowDeleteAssignKraModal)\r\n  }\r\n\r\n  const handleDeleteAssignKra = (type) => {\r\n    if (type) {\r\n      const params = {\r\n        _id: selectedEmployee?.assign_id\r\n      }\r\n      dispatch(pmsActions?.deleteAssignKraRequest(params))\r\n    } else {\r\n      toggleDeleteAssignKRAModal()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!deleteAssignKraPending) {\r\n      if (deleteAssignKraError) {\r\n        dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_DELETE_ASSIGN_KRA_STORE\"))\r\n        return;\r\n      }\r\n      if (deleteAssignKraRes) {\r\n        if (deleteAssignKraRes?.code === 200) {\r\n          dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_DELETE_ASSIGN_KRA_STORE\"))\r\n          toggleDeleteAssignKRAModal()\r\n          // getAllKraDetailsData()\r\n          getAllEmployeeData()\r\n\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    deleteAssignKraPending,\r\n    deleteAssignKraRes,\r\n    deleteAssignKraError,\r\n  ]);\r\n\r\n\r\n\r\n  return (\r\n    <div className='cardBox'>\r\n      <div className=\"d-flex align-items-center\">\r\n        <Link to={\"/create-kra\"} ><BackIcon /></Link>\r\n        <div className=\"mt-2\">\r\n          <h5> Assign KRA</h5>\r\n        </div>\r\n      </div>\r\n      <div className='table-responsive tableDiv' style={{ height: \"500px\" }}>\r\n        <CustomTable\r\n          data={allEmployeeListData || []}\r\n          fields={ratingDurationField}\r\n          isLoading={getEmployeeByKraPending}\r\n          pagination={true}\r\n          totalPages={allEmployeeListData?.totalPages}\r\n          isHeader={false}\r\n          tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n          scopedSlots={ratingDurationScopedSlots}\r\n        />\r\n      </div>\r\n      {selectedAssignKRAEmp && selectedAssignKRAEmp?.length > 0 && <>\r\n        <hr />\r\n        <div className=\" mb-4\">\r\n          <CustomButton\r\n            text={`Assign (${selectedAssignKRAEmp?.length})`}\r\n            classNames=\"btn btn-primary gradientBg\"\r\n            handleClick={() => onSubmitAssignKRAModal()}\r\n          />\r\n        </div>\r\n      </>}\r\n\r\n      {isShowAssignKRA && <AssignKRAModal\r\n        openModel={isShowAssignKRA}\r\n        handleOpenClose={toggleAssignKRA}\r\n        selectedEmployee={selectedEmployee}\r\n        allKraDetailsData={allKraDetailsData}\r\n        handleAssignKra={handleAssignKra}\r\n      />}\r\n\r\n      {isShowDeleteAssignKraModal && (\r\n        <ApproveRejectModal\r\n          onApproveReject={handleDeleteAssignKra}\r\n          isShow={isShowDeleteAssignKraModal}\r\n          desc={t(\"alerts.deletePopup.desc\").replace('$1', \"Assign KRA\")}\r\n          btnRightLoading={deleteAssignKraPending}\r\n          btnTextRight={t(\"btns.delete\")}\r\n          btnTextLeft={t(\"btns.cancel\")}\r\n        />)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AssignKRAEmployees\r\n","import React, { useState } from 'react'\r\nimport { CustCheckbox, CustomMultiSelect, Label } from '../../../../commanComponent'\r\nimport CustomSelect from '../../../../commanComponent/CustomSelect'\r\nimport { useCustomTranslation } from '../../../../../translation'\r\nimport { CustomButton } from '../../../../globalComponents'\r\n\r\nconst AssignKRAModal = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        openModel,\r\n        handleOpenClose,\r\n        allKraDetailsData,\r\n        handleAssignKra\r\n    } = props\r\n    const [assignBy, setAssignBy] = useState(null)\r\n\r\n    const onSubmitAssign = () => {\r\n        let payload = {\r\n            kra_id:assignBy?.value,\r\n        }\r\n        handleAssignKra(payload)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"modal fade attendanceViewodal\"\r\n                id=\"assignKra\"\r\n                style={\r\n                    {\r\n                        display: openModel ? \"unset !important\" : \"none !important\",\r\n                        opacity: openModel ? \"unset\" : \"0\"\r\n                    }\r\n                }\r\n            >\r\n                <div className=\"modal-dialog modal-dialog-centered\">\r\n                    <div className=\"modal-content rounded-0 border-0\">\r\n                        <div className=\"modal-header border-0\">\r\n                            <h1 className=\"modal-title fs-5 fw-bold text-primary\">Assign KRA</h1>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn-close\"\r\n                                data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                onClick={() => handleOpenClose()}\r\n                            />\r\n                        </div>\r\n                        <div className=\"modal-body \">\r\n\r\n\r\n                            <div className=\"approveSlct mb-3\">\r\n                                <Label text={\"Assign To\"} required={true} />\r\n\r\n                                <CustomSelect\r\n                                    data={allKraDetailsData || []}\r\n                                    placeholder={\"Select KRA\"}\r\n                                    value={assignBy}\r\n                                    handleChange={(selectedOption) => setAssignBy(selectedOption)}\r\n                                    name=\"id\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"py-2\">\r\n                                <CustomButton\r\n                                    classNames=\"btn btn-primary gradientBg mt-2\"\r\n                                    text={\"Assign KRA\"}\r\n                                    handleClick={() => onSubmitAssign()}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AssignKRAModal\r\n"],"names":["BackIcon","_jsx","children","_jsxs","version","id","x","y","viewBox","xmlSpace","className","style","height","width","cursor","opacity","fill","cx","cy","r","d","AssignKRAEmployees","t","useCustomTranslation","dispatch","useDispatch","getEmployeeByKraPending","getEmployeeByKraRes","getEmployeeByKraError","assignKraPending","assignKraRes","assignKraError","updateAssignKraPending","updateAssignKraRes","updateAssignKraError","getAllKraDetailsDataPending","getAllKraDetailsDataRes","getAllKraDetailsDataError","deleteAssignKraPending","deleteAssignKraRes","deleteAssignKraError","selectedKraDetailData","useSelector","state","pms","employeeDetailsData","employee","selectedAssignKRAEmp","setSelectedAssignKRAEmp","useState","allEmployeeListData","setAllEmployeeListData","isShowAssignKRA","setIsShowAssignKRA","selectedEmployee","setSelectedEmployee","allKraDetailsData","setAllKraDetailsData","isShowDeleteAssignKraModal","setIsShowDeleteAssignKraModal","useEffect","getAllEmployeeData","getAllKraDetailsData","payload","reported_to","pmsActions","getEmployeeByKraRequest","code","allEmployeeList","data","ratingDurationScopedSlots","useMemo","sn","_","index","account_status","item","setStatusColor","kra_name","select","CustCheckbox","checked","includes","handleChange","e","handleCorrectionMultiCheck","prev","target","filter","checkedItem","name","isDisable","action","_Fragment","type","onClick","toggleAssignKRA","Icon","toggleDeleteAssignKRAModal","multiSelectIDs","filterData","Ids","map","push","_id","handleAssignKra","assign_id","updateAssignKraRequest","assignKraRequest","handleClearPMSStore","getAllKraDetailsDataRequest","Link","to","CustomTable","fields","key","label","isLoading","pagination","totalPages","isHeader","tableStyle","padding","boxShadow","scopedSlots","length","CustomButton","text","classNames","handleClick","onSubmitAssignKRAModal","empData","kra_id","employee_ids","AssignKRAModal","openModel","handleOpenClose","ApproveRejectModal","onApproveReject","params","deleteAssignKraRequest","isShow","desc","replace","btnRightLoading","btnTextRight","btnTextLeft","props","assignBy","setAssignBy","display","Label","required","CustomSelect","placeholder","value","selectedOption","onSubmitAssign"],"sourceRoot":""}