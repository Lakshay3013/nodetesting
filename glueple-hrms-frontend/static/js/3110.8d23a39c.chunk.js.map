{"version":3,"file":"static/js/3110.8d23a39c.chunk.js","mappings":"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","sources":["components/commanComponent/BackIcon.js","components/payrollAdmin/employee/investment/ITDeclaration.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst BackIcon = () => {\r\n    return (\r\n        <div >\r\n            <svg\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                x={0}\r\n                y={0}\r\n                viewBox=\"0 0 512 512\"\r\n                xmlSpace=\"preserve\"\r\n                className=\"icon icon-xlg me-2\"\r\n                style={{\r\n                    height: \"23px\",\r\n                    width: \"23px\",\r\n                    cursor: \"pointer\",\r\n                }}\r\n            >\r\n                <circle id=\"Oval-3\" opacity=\".1\" fill=\"#2B76D2\" cx={256} cy={256} r={256} />\r\n                <path\r\n                    fill=\"#2B76D2\"\r\n                    d=\"M277.3 362.7c-5.3 0-10.6-2-14.7-5.9l-85.3-81.5c-4.1-3.9-6.5-9.3-6.6-15-.1-5.7 2-11.1 5.9-15.2l85.3-89.1c8.1-8.5 21.7-8.8 30.2-.7 8.5 8.1 8.8 21.6.7 30.2l-70.6 73.7 69.9 66.8c8.5 8.1 8.8 21.6.7 30.1-4.2 4.4-9.8 6.6-15.5 6.6z\"\r\n                />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackIcon\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport BackIcon from '../../../commanComponent/BackIcon'\r\nimport { Link } from 'react-router-dom'\r\nimport { CustCheckbox, CustomStrong, CustRadio, Icon, Input, Label, Textarea } from '../../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../../globalComponents'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { getInputPrefix } from '../../../../utils/common'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport { payrollActions } from '../../../../core/resource/actions'\r\n\r\nconst ITDeclaration = () => {\r\n    const { t } = useCustomTranslation()\r\n    const dispatch = useDispatch()\r\n    const {\r\n        selectedEmployeeData,\r\n\r\n        addEmployeeInvestmentPending,\r\n        addEmployeeInvestmentRes,\r\n        addEmployeeInvestmentError,\r\n\r\n        updateEmployeeInvestmentPending,\r\n        updateEmployeeInvestmentRes,\r\n        updateEmployeeInvestmentError,\r\n\r\n        getEmployeeInvestmentPending,\r\n        getEmployeeInvestmentRes,\r\n        getEmployeeInvestmentError,\r\n\r\n        getAllInvestmentCategoryDetailsPending,\r\n        getAllInvestmentCategoryDetailsRes,\r\n        getAllInvestmentCategoryDetailsError,\r\n\r\n    } = useSelector(state => state.payroll)\r\n    const [itData, setItData] = useState('')\r\n\r\n    const [iTDeclarationDynamicFormData, setITDeclarationDynamicFormData] = useState()\r\n    const [iTDeclarationFormData, setITDeclarationFormData] = useState({\r\n        taxType: \"old_tax_regime\",\r\n        houseRent: [\r\n            {\r\n                from: '',\r\n                to: '',\r\n                amount: '',\r\n                address: '',\r\n                landlord_name: '',\r\n                metroNonMetro: null,\r\n                landlord_pan: ''\r\n            }\r\n\r\n        ],\r\n        letOutPropertyDeclarations: [\r\n            {\r\n                annualRentReceived: '',\r\n                municipalTaxesPaid: '',\r\n                netAnnualValue: '',\r\n                netIncomeLoss: '',\r\n                repayingHomeLoan: false,\r\n            }\r\n        ],\r\n        investment80C: [\r\n            {\r\n                investment: null,\r\n                amount: ''\r\n            }\r\n        ],\r\n        investment80D: [\r\n            {\r\n                investment: null,\r\n                amount: ''\r\n            }\r\n        ],\r\n        otherInvestment: [\r\n            {\r\n                investment: null,\r\n                amount: ''\r\n            }\r\n        ],\r\n        previousEmployment: [\r\n            {\r\n                incomeTax: \"\",\r\n                professionalTax: '',\r\n                employeeProvidentFund: '',\r\n                leaveEncashmentExemptions: ''\r\n            }\r\n        ],\r\n        homeLoanDeclarations: [{\r\n            principalPaid: '',\r\n            interestPaid: '',\r\n            lenderName: '',\r\n            lenderPen: ''\r\n        }],\r\n        otherSourceIncome: [\r\n            {\r\n                otherSources: '',\r\n                savingsDeposit: '',\r\n                fixedDeposit: '',\r\n                nationalIncome: ''\r\n            }\r\n        ]\r\n    })\r\n    const [isCollapsedFields, setIsCollapsedFields] = useState({\r\n        employeeRent: false,\r\n        employeeRepaying: false,\r\n        employeeReceivingIncome: false,\r\n        otherSourceIncome: false,\r\n        previousEmployment: false\r\n    })\r\n    const [errors, setErrors] = useState('')\r\n    const [itDeclarationData, setItDeclarationData] = useState([])\r\n    const [investmentCategoryData, setInvestmentCategoryData] = useState([])\r\n    const [formValues, setFormValues] = useState('')\r\n\r\n    const handleFromChange = (e, fieldName, index, parentField) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n\r\n        setITDeclarationFormData(prevState => {\r\n            let updatedState = { ...prevState };\r\n            if (parentField) {\r\n                updatedState[parentField] = prevState[parentField].map((item, idx) =>\r\n                    idx === index ? { ...item, [name]: type === 'checkbox' ? checked : value } : item\r\n                );\r\n            } else {\r\n                updatedState[name] = value;\r\n            }\r\n            return updatedState;\r\n        });\r\n    };\r\n\r\n\r\n    const handleCheckboxChange = (e, categoryId) => {\r\n        setIsCollapsedFields(prev => ({\r\n            ...prev,\r\n            [categoryId]: e.target.checked\r\n        }));\r\n    };\r\n\r\n    const addDeleteFormFields = (actionName, fieldName, index) => {\r\n        setITDeclarationFormData(prev => {\r\n            const fieldData = prev[fieldName] || [];\r\n\r\n            const defaultEntries = {\r\n                houseRent: { from: '', to: '', amount: '', address: '', landlord_name: '', metroNonMetro: null, landlord_pan: '' },\r\n                letOutPropertyDeclarations: { annualRentReceived: '', municipalTaxesPaid: '', netAnnualValue: '', netIncomeLoss: '', repayingHomeLoan: false },\r\n                investment80C: { investment: null, amount: '' },\r\n                investment80D: { investment: null, amount: '' },\r\n                otherInvestment: { investment: null, amount: '' },\r\n                previousEmployment: { incomeTax: \"\", professionalTax: '', employeeProvidentFund: '', leaveEncashmentExemptions: '' },\r\n                otherSourceIncome: { otherSources: '', savingsDeposit: '', fixedDeposit: '', nationalIncome: '' }\r\n            };\r\n\r\n            if (actionName === \"add\") {\r\n                return {\r\n                    ...prev,\r\n                    [fieldName]: [...fieldData, defaultEntries[fieldName] || {}]\r\n                };\r\n            }\r\n\r\n            if (actionName === \"delete\" && index !== undefined) {\r\n                return {\r\n                    ...prev,\r\n                    [fieldName]: fieldData.filter((_, i) => i !== index)\r\n                };\r\n            }\r\n\r\n            return prev;\r\n        });\r\n    };\r\n\r\n\r\n\r\n    const renderedEmpHouseRentFields = () => {\r\n        const { houseRent } = iTDeclarationFormData\r\n\r\n        return (\r\n            houseRent?.map((rent, index) => (\r\n                <div className=\"card-body\" key={index}>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <h6 style={{ fontWeight: \"600\" }}>House Rent Details</h6>\r\n                        {houseRent?.length > 1 && <div\r\n                            onClick={() => addDeleteFormFields(\"delete\", \"houseRent\", index)}\r\n                        >\r\n                            <Icon\r\n                                className={\"bi bi-trash text-danger\"}\r\n                                style={{ fontSize: \"18px\" }}\r\n                            />\r\n                        </div>}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 form-group mb-3\">\r\n                            <Label text={t(\"labels.rentalPeriod\")} required={true} />\r\n                            <div className='d-flex gap-2'>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.from\")}\r\n                                    value={rent?.from}\r\n                                    name=\"from\"\r\n                                    onChange={(e) => handleFromChange(e, null, index, \"houseRent\")}\r\n                                />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.to\")}\r\n                                    value={rent?.to}\r\n                                    name=\"to\"\r\n                                    onChange={(e) => handleFromChange(e, null, index, \"houseRent\")}\r\n                                />\r\n                            </div>\r\n                            {errors?.name && (\r\n                                <CustomError text={errors.name} />\r\n                            )}\r\n                        </div>\r\n                        <div className=\"col-md-3 \"></div>\r\n                        <div className=\"col-md-3 \">\r\n                            <div className='form-group mb-3'>\r\n                                <div>\r\n                                    <Label\r\n                                        text={t(\"labels.amount\")}\r\n                                        required={true}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                        {getInputPrefix('')}</span>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        placeholder={t(\"placeholders.amount\")}\r\n                                        value={rent?.amount}\r\n                                        name=\"amount\"\r\n                                        onChange={(e) => handleFromChange(e, null, index, \"houseRent\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12 form-group mb-3\">\r\n                            <div className='col-6'>\r\n                                <Label text={t(\"labels.address\")} required={true} />\r\n                                <Textarea\r\n                                    placeholder={\"Enter here....\"}\r\n                                    onChange={(e) => handleFromChange(e, null, index, \"houseRent\")}\r\n                                    name={\"address\"}\r\n                                    value={rent?.address}\r\n                                />\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.landlord_name\")}\r\n                                    value={rent?.landlord_name}\r\n                                    name=\"landlord_name\"\r\n                                    onChange={(e) => handleFromChange(e, null, index, \"houseRent\")}\r\n                                    className=\"mt-3\"\r\n                                />\r\n                                <div className='row mt-3'>\r\n                                    <div className='col-6'>\r\n                                        <CustomSelect\r\n                                            data={[]}\r\n                                            placeholder={t(\"placeholders.metroNonMetro\")}\r\n                                            value={rent?.metroNonMetro}\r\n                                            handleChange={(e) => handleFromChange(e, \"metroNonMetro\", index, \"houseRent\")}\r\n                                        // handleChange={(selectedOption) => handleFromChange(selectedOption, \"metroNonMetro\")}\r\n                                        />\r\n                                    </div>\r\n                                    <div className='col-6'>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            placeholder={t(\"placeholders.landlord_pan\")}\r\n                                            value={rent?.landlord_pan}\r\n                                            name=\"landlord_pan\"\r\n                                            onChange={(e) => handleFromChange(e, null, index, \"houseRent\")}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {houseRent?.length - 1 === index && <div className=\"text-primary mt-2\" style={{ cursor: \"pointer\" }}\r\n                        onClick={() => addDeleteFormFields(\"add\", \"houseRent\", index)\r\n                        }\r\n                    >\r\n                        <Icon className={\"bi bi-plus-circle-fill me-1\"} />\r\n                        <CustomStrong text={\"Add Rent House\"} />\r\n                    </div>}\r\n                    {houseRent?.length > 1 && <hr />}\r\n                </div>\r\n            ))\r\n        )\r\n\r\n    }\r\n    const renderHomeLoanDeclarations = () => {\r\n        const { homeLoanDeclarations } = iTDeclarationFormData\r\n        return (\r\n            homeLoanDeclarations?.map((item, index) => (\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-9 form-group mb-3\">\r\n                        <p className='loan-para'>{t(\"labels.principalPaid\")}</p>\r\n                    </div>\r\n                    <div className=\"col-md-3 \">\r\n                        <div className='form-group mb-3'>\r\n                            <div className=\"input-group mb-3\">\r\n                                <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                    {getInputPrefix('')}</span>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.amount\")}\r\n                                    value={item?.principalPaid}\r\n                                    name=\"principalPaid\"\r\n                                    onChange={(e) => handleFromChange(e, null, index, \"homeLoanDeclarations\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-9 form-group mb-3\">\r\n                        <p className='loan-para'>{t(\"labels.interestPaid\")}</p>\r\n                    </div>\r\n                    <div className=\"col-md-3 \">\r\n                        <div className='form-group mb-3'>\r\n                            <div className=\"input-group mb-3\">\r\n                                <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                    {getInputPrefix('')}</span>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.amount\")}\r\n                                    value={item?.interestPaid}\r\n                                    name=\"interestPaid\"\r\n                                    onChange={(e) => handleFromChange(e, null, index, \"homeLoanDeclarations\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-9 form-group mb-3\">\r\n                        <p className='loan-para'>{t(\"labels.lenderName\")}</p>\r\n                    </div>\r\n                    <div className=\"col-md-3 \">\r\n                        <div className='form-group mb-3'>\r\n                            <div className=\"input-group mb-3\">\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.name\")}\r\n                                    value={item?.lenderName}\r\n                                    name=\"lenderName\"\r\n                                    onChange={(e) => handleFromChange(e, null, index, \"homeLoanDeclarations\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-9 form-group mb-3\">\r\n                        <p className='loan-para'>{t(\"labels.lenderPen\")}</p>\r\n                    </div>\r\n                    <div className=\"col-md-3 \">\r\n                        <div className='form-group mb-3'>\r\n                            <div className=\"input-group mb-3\">\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.pan\")}\r\n                                    value={item?.lenderPen}\r\n                                    name=\"lenderPen\"\r\n                                    onChange={(e) => handleFromChange(e, null, index, \"homeLoanDeclarations\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))\r\n        )\r\n\r\n    }\r\n    const renderedLetOutPropertyDeclarations = () => {\r\n        const { letOutPropertyDeclarations } = iTDeclarationFormData\r\n        return (\r\n            letOutPropertyDeclarations.map((income, index) => (\r\n                <div className=\"card-body\" key={index}>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <h6 style={{ fontWeight: \"600\" }}>Letout Property</h6>\r\n                        {letOutPropertyDeclarations?.length > 1 && <div\r\n                            onClick={() => addDeleteFormFields(\"delete\", \"letOutPropertyDeclarations\", index)}\r\n                        >\r\n                            <Icon\r\n                                className={\"bi bi-trash text-danger\"}\r\n                                style={{ fontSize: \"18px\" }}\r\n                            />\r\n                        </div>}\r\n                    </div>\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col-md-9 form-group mb-3\">\r\n                            <p className='loan-para'>{t(\"labels.annualRentReceived\")}</p>\r\n                        </div>\r\n                        <div className=\"col-md-3 \">\r\n                            <div className='form-group mb-3'>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                        {getInputPrefix('')}</span>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.amount\")}\r\n                                        value={income?.annualRentReceived}\r\n                                        name=\"annualRentReceived\"\r\n                                        onChange={(e) => handleFromChange(e, null, index, \"letOutPropertyDeclarations\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9 form-group mb-3\">\r\n                            <p className='loan-para'>{t(\"labels.municipalTaxesPaid\")}</p>\r\n                        </div>\r\n                        <div className=\"col-md-3 \">\r\n                            <div className='form-group mb-3'>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                        {getInputPrefix('')}</span>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.amount\")}\r\n                                        value={income?.municipalTaxesPaid}\r\n                                        name=\"municipalTaxesPaid\"\r\n                                        onChange={(e) => handleFromChange(e, null, index, \"letOutPropertyDeclarations\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9 form-group mb-3\">\r\n                            <p className='loan-para'>{t(\"labels.netAnnualValue\")}</p>\r\n                        </div>\r\n                        <div className=\"col-md-3 \">\r\n                            <div className='form-group mb-3'>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                        {getInputPrefix('')}</span>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.amount\")}\r\n                                        value={income?.netAnnualValue}\r\n                                        name=\"netAnnualValue\"\r\n                                        onChange={(e) => handleFromChange(e, null, index, \"letOutPropertyDeclarations\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9 form-group mb-3\">\r\n                            <p className='loan-para'>{t(\"labels.standardDeductionAnnual\")}</p>\r\n                        </div>\r\n                        <div className=\"col-md-3 \">\r\n                            <div className='form-group mb-3'>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                        {getInputPrefix('')}</span>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.amount\")}\r\n                                        value={income?.standardDeductionAnnual}\r\n                                        name=\"standardDeductionAnnual\"\r\n                                        onChange={(e) => handleFromChange(e, null, index, \"letOutPropertyDeclarations\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9 form-group mb-3\">\r\n                            <p className='loan-para'>{t(\"labels.netIncomeLoss\")}</p>\r\n                        </div>\r\n                        <div className=\"col-md-3 \">\r\n                            <div className='form-group mb-3'>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                        {getInputPrefix('')}</span>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.amount\")}\r\n                                        value={income?.netIncomeLoss}\r\n                                        name=\"netIncomeLoss\"\r\n                                        onChange={(e) => handleFromChange(e, null, index, \"letOutPropertyDeclarations\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12 form-group mb-3\">\r\n                            <CustCheckbox\r\n                                key={\"repayingHomeLoan\"}\r\n                                id={`repayingHomeLoan`}\r\n                                label={\"Repaying Home Loan for This Property\"}\r\n                                checked={income?.repayingHomeLoan}\r\n                                handleChange={(e) => handleFromChange(e, null, index, \"letOutPropertyDeclarations\")}\r\n                                name={\"repayingHomeLoan\"}\r\n                            // labelStyle={{fontSize:\"16px\"}}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {letOutPropertyDeclarations?.length - 1 === index && <div className=\"text-primary mt-2\" style={{ cursor: \"pointer\" }}\r\n                        onClick={() => addDeleteFormFields(\"add\", \"letOutPropertyDeclarations\", index)\r\n                        }\r\n                    >\r\n                        <Icon className={\"bi bi-plus-circle-fill me-1\"} />\r\n                        <CustomStrong text={\"Add Rent House\"} />\r\n                    </div>}\r\n                    {letOutPropertyDeclarations?.length > 1 && <hr />}\r\n                </div>\r\n            ))\r\n        )\r\n    }\r\n    const render80CInvestment = () => {\r\n        const { investment80C } = iTDeclarationFormData\r\n        return (\r\n            investment80C?.map((item, index) => (\r\n                <>\r\n                    <div className=\"col-md-8 form-group mb-3\">\r\n                        <CustomSelect\r\n                            data={[]}\r\n                            placeholder={t(\"placeholders.selectAnInvestment\")}\r\n                            value={item?.investment}\r\n                            handleChange={(e) => handleFromChange(e, \"investment\", index, \"letOutPropertyDeclarations\")}\r\n                        />\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                    <div className=\"col-md-3 \">\r\n                        <div className='form-group mb-3'>\r\n                            <div className=\"input-group mb-3\">\r\n                                <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                    {getInputPrefix('')}</span>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.amount\")}\r\n                                    value={item?.amount}\r\n                                    name=\"amount\"\r\n                                    onChange={(e) => handleFromChange(e, null, index, \"investment80C\")}\r\n                                />\r\n                                {investment80C?.length > 1 &&\r\n                                    <span className='mt-2'\r\n                                        onClick={() => addDeleteFormFields(\"delete\", \"investment80C\", index)}\r\n                                    >\r\n                                        <Icon className={\"bi bi-dash-circle-fill text-danger ps-2\"} />\r\n                                    </span>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {investment80C?.length - 1 === index && <div className=\"text-primary mt-2\" style={{ cursor: \"pointer\" }}\r\n                        onClick={() => addDeleteFormFields(\"add\", \"investment80C\", index)\r\n                        }\r\n                    >\r\n                        <Icon className={\"bi bi-plus-circle-fill me-1\"} />\r\n                        <CustomStrong text={\"Add an Investment\"} />\r\n                    </div>}\r\n                </>\r\n            )\r\n            ))\r\n    }\r\n    const render80DInvestment = () => {\r\n        const { investment80D } = iTDeclarationFormData\r\n        return (\r\n            investment80D?.map((item, index) => (\r\n                <>\r\n                    <div className=\"col-md-8 form-group mb-3\">\r\n                        <CustomSelect\r\n                            data={[]}\r\n                            placeholder={t(\"placeholders.selectAnInvestment\")}\r\n                            value={item?.investment}\r\n                            handleChange={(selectedOption) => handleFromChange(selectedOption, \"investment\", index, \"investment80D\")}\r\n                        />\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                    <div className=\"col-md-3 \">\r\n                        <div className='form-group mb-3'>\r\n                            <div className=\"input-group mb-3\">\r\n                                <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                    {getInputPrefix('')}</span>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.amount\")}\r\n                                    value={item?.amount}\r\n                                    name=\"amount\"\r\n                                    onChange={(e) => handleFromChange(e, null, index, \"investment80D\")}\r\n                                />\r\n                                {investment80D?.length > 1 &&\r\n                                    <span className='mt-2'\r\n                                        onClick={() => addDeleteFormFields(\"delete\", \"investment80D\", index)}\r\n                                    >\r\n                                        <Icon className={\"bi bi-dash-circle-fill text-danger ps-2\"} />\r\n                                    </span>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {investment80D?.length - 1 === index && <div className=\"text-primary mt-2\" style={{ cursor: \"pointer\" }}\r\n                        onClick={() => addDeleteFormFields(\"add\", \"investment80D\", index)\r\n                        }\r\n                    >\r\n                        <Icon className={\"bi bi-plus-circle-fill me-1\"} />\r\n                        <CustomStrong text={\"Add an Investment\"} />\r\n                    </div>}\r\n                </>\r\n            )\r\n            ))\r\n    }\r\n    const renderOtherInvestment = () => {\r\n        const { otherInvestment } = iTDeclarationFormData\r\n        return (\r\n            otherInvestment?.map((item, index) => (\r\n                <>\r\n                    <div className=\"col-md-8 form-group mb-3\">\r\n                        <CustomSelect\r\n                            data={[]}\r\n                            placeholder={t(\"placeholders.selectAnInvestment\")}\r\n                            value={item?.investment}\r\n                            handleChange={(selectedOption) => handleFromChange(selectedOption, \"investment\", index, \"otherInvestment\")}\r\n                        />\r\n                    </div>\r\n                    <div className='col-1'></div>\r\n                    <div className=\"col-md-3 \">\r\n                        <div className='form-group mb-3'>\r\n                            <div className=\"input-group mb-3\">\r\n                                <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                    {getInputPrefix('')}</span>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.amount\")}\r\n                                    value={item?.amount}\r\n                                    name=\"amount\"\r\n                                    onChange={(e) => handleFromChange(e, null, index, \"otherInvestment\")}\r\n                                />\r\n                                {otherInvestment?.length > 1 &&\r\n                                    <span className='mt-2'\r\n                                        onClick={() => addDeleteFormFields(\"delete\", \"otherInvestment\", index)}\r\n                                    >\r\n                                        <Icon className={\"bi bi-dash-circle-fill text-danger ps-2\"} />\r\n                                    </span>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {otherInvestment?.length - 1 === index && <div className=\"text-primary mt-2\" style={{ cursor: \"pointer\" }}\r\n                        onClick={() => addDeleteFormFields(\"add\", \"otherInvestment\", index)\r\n                        }\r\n                    >\r\n                        <Icon className={\"bi bi-plus-circle-fill me-1\"} />\r\n                        <CustomStrong text={\"Add an Investment\"} />\r\n                    </div>}\r\n                </>\r\n            )\r\n            ))\r\n    }\r\n    const renderedPreviousEmployment = () => {\r\n        const { previousEmployment } = iTDeclarationFormData\r\n        return (\r\n            previousEmployment?.map((income, index) => (\r\n                <div className=\"card-body\" key={index}>\r\n\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col-md-9 form-group mb-3\">\r\n                            <p className='loan-para'>{t(\"labels.afterExemptions\")}</p>\r\n                        </div>\r\n                        <div className=\"col-md-3 \">\r\n                            <div className='form-group mb-3'>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                        {getInputPrefix('')}</span>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.amount\")}\r\n                                        value={income?.afterExemptions}\r\n                                        name=\"afterExemptions\"\r\n                                        onChange={(e) => handleFromChange(e, null, index, \"previousEmployment\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9 form-group mb-3\">\r\n                            <p className='loan-para'>{t(\"labels.incomeTax\")}</p>\r\n                        </div>\r\n                        <div className=\"col-md-3 \">\r\n                            <div className='form-group mb-3'>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                        {getInputPrefix('')}</span>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.amount\")}\r\n                                        value={income?.incomeTax}\r\n                                        name=\"incomeTax\"\r\n                                        onChange={(e) => handleFromChange(e, null, index, \"previousEmployment\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9 form-group mb-3\">\r\n                            <p className='loan-para'>{t(\"labels.professionalTax\")}</p>\r\n                        </div>\r\n                        <div className=\"col-md-3 \">\r\n                            <div className='form-group mb-3'>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                        {getInputPrefix('')}</span>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.amount\")}\r\n                                        value={income?.professionalTax}\r\n                                        name=\"professionalTax\"\r\n                                        onChange={(e) => handleFromChange(e, null, index, \"previousEmployment\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9 form-group mb-3\">\r\n                            <p className='loan-para'>{t(\"labels.employeeProvidentFund\")}</p>\r\n                        </div>\r\n                        <div className=\"col-md-3 \">\r\n                            <div className='form-group mb-3'>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                        {getInputPrefix('')}</span>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.amount\")}\r\n                                        value={income?.employeeProvidentFund}\r\n                                        name=\"employeeProvidentFund\"\r\n                                        onChange={(e) => handleFromChange(e, null, index, \"previousEmployment\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9 form-group mb-3\">\r\n                            <p className='loan-para'>{t(\"labels.leaveEncashmentExemptions\")}</p>\r\n                        </div>\r\n                        <div className=\"col-md-3 \">\r\n                            <div className='form-group mb-3'>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                        {getInputPrefix('')}</span>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder={t(\"placeholders.amount\")}\r\n                                        value={income?.leaveEncashmentExemptions}\r\n                                        name=\"leaveEncashmentExemptions\"\r\n                                        onChange={(e) => handleFromChange(e, null, index, \"previousEmployment\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            ))\r\n        )\r\n    }\r\n    const renderedOtherSourceOfIncome = () => {\r\n        const { otherSourceIncome } = iTDeclarationFormData\r\n        return (\r\n            otherSourceIncome?.map((item, index) =>\r\n            (\r\n                <>\r\n                    <div className=\"col-md-9 form-group mb-3\">\r\n                        <p className='loan-para'>{t(\"labels.incomeOtherSources\")}</p>\r\n                    </div>\r\n                    <div className=\"col-md-3 \">\r\n                        <div className='form-group mb-3 '>\r\n                            <div className=\"input-group mb-3\">\r\n                                <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                    {getInputPrefix('')}</span>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    placeholder={t(\"placeholders.amount\")}\r\n                                    value={item?.otherSources}\r\n                                    name=\"otherSources\"\r\n                                    onChange={(e) => handleFromChange(e, null, index, \"otherSourceIncome\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-9 form-group mb-3\">\r\n                        <p className='loan-para'>{t(\"labels.savingsDeposit\")}</p>\r\n                    </div>\r\n                    <div className=\"col-md-3 \">\r\n\r\n                        <div className='form-group mb-3 '>\r\n                            <div className=\"input-group mb-3\">\r\n                                <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                    {getInputPrefix('')}</span>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.amount\")}\r\n                                    value={item?.savingsDeposit}\r\n                                    name=\"savingsDeposit\"\r\n                                    onChange={(e) => handleFromChange(e, null, index, \"otherSourceIncome\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-md-9 form-group mb-3\">\r\n                        <p className='loan-para'>{t(\"labels.fixedDeposit\")}</p>\r\n                    </div>\r\n                    <div className=\"col-md-3 \">\r\n\r\n\r\n                        <div className='form-group mb-3'>\r\n                            <div className=\"input-group mb-3\">\r\n                                <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                    {getInputPrefix('')}</span>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.amount\")}\r\n                                    value={item?.fixedDeposit}\r\n                                    name=\"fixedDeposit\"\r\n                                    onChange={(e) => handleFromChange(e, null, index, \"otherSourceIncome\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-md-9 form-group mb-3\">\r\n                        <p className='loan-para'>{t(\"labels.savingsCertificates\")}</p>\r\n                    </div>\r\n                    <div className=\"col-md-3 \">\r\n                        <div className='form-group mb-3'>\r\n                            <div className=\"input-group mb-3\">\r\n                                <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                    {getInputPrefix('')}</span>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    placeholder={t(\"placeholders.amount\")}\r\n                                    value={item?.nationalIncome}\r\n                                    name=\"nationalIncome\"\r\n                                    onChange={(e) => handleFromChange(e, null, index, \"otherSourceIncome\")}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n            )\r\n        )\r\n\r\n    }\r\n\r\n    const submitITDeclaration = () => {\r\n        // const payload = {\r\n        //     employee_id: selectedEmployeeData?._id,\r\n        //     tax_regime: iTDeclarationFormData?.taxType,\r\n        //     allowances_declarations: iTDeclarationFormData?.previousEmployment || [],\r\n        //     house_rent_declarations: iTDeclarationFormData?.houseRent || [],\r\n        //     let_out_property_declarations: iTDeclarationFormData?.letOutPropertyDeclarations || [],\r\n        //     section_6a_declarations: [\r\n        //         {\r\n        //             \"80C\": iTDeclarationFormData?.investment80C,\r\n        //             \"80D\": itDeclarationData?.investment80D,\r\n        //         }\r\n        //     ],\r\n        //     other_Investments_Exemptions: iTDeclarationFormData?.otherInvestment || [],\r\n        //     home_loan_declarations: iTDeclarationFormData?.homeLoanDeclarations || [],\r\n        //     other_sources_of_income: iTDeclarationFormData?.otherSourceIncome || [],\r\n        // }\r\n        // console.log(section_6a_declarations, \"subCategoryName\")\r\n        let payloadData =[]\r\n         itData?.map((item,index)=>{\r\n           \r\n            payloadData?.push({[item?._id] :item?.data})\r\n          \r\n\r\n           \r\n\r\n        })\r\n        console.log(payloadData,\"--------------------------------\")\r\n        // let payload = { section_6a_declarations: [{ ...payloadData, house_rent_declarations: iTDeclarationFormData?.houseRent }] }\r\n\r\n        // addUpdateEmployeeInvestment(payload)\r\n\r\n    }\r\n\r\n    /* Add Employee Investment */\r\n    const addUpdateEmployeeInvestment = (payload) => {\r\n        if (itDeclarationData) {\r\n            payload[\"_id\"] = itDeclarationData?._id\r\n            dispatch(payrollActions.updateEmployeeInvestmentRequest(payload));\r\n        } else {\r\n            dispatch(payrollActions.addEmployeeInvestmentRequest(payload));\r\n        } \r\n    }\r\n    useEffect(() => {\r\n        if (!addEmployeeInvestmentPending) {\r\n            if (addEmployeeInvestmentError) {\r\n                dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_EMPLOYEE_INVESTMENT_STORE\"))\r\n                return;\r\n            }\r\n            if (addEmployeeInvestmentRes) {\r\n                if (addEmployeeInvestmentRes?.code === 200) {\r\n                    dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_ADD_EMPLOYEE_INVESTMENT_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addEmployeeInvestmentRes,\r\n        addEmployeeInvestmentError,\r\n        addEmployeeInvestmentPending\r\n    ]);\r\n    useEffect(() => {\r\n        if (!updateEmployeeInvestmentPending) {\r\n            if (updateEmployeeInvestmentError) {\r\n                dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_EMPLOYEE_INVESTMENT_STORE\"))\r\n                return;\r\n            }\r\n            if (updateEmployeeInvestmentRes) {\r\n                if (updateEmployeeInvestmentRes?.code === 200) {\r\n                    dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_UPDATE_EMPLOYEE_INVESTMENT_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updateEmployeeInvestmentRes,\r\n        updateEmployeeInvestmentError,\r\n        updateEmployeeInvestmentPending\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        getEmployeeItDeclaration()\r\n        getAllInvestmentCategoryDetailsData()\r\n    }, [])\r\n\r\n    const getEmployeeItDeclaration = () => {\r\n        const payload = {\r\n            _id: selectedEmployeeData?._id\r\n        }\r\n        dispatch(payrollActions.getEmployeeInvestmentRequest(payload))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getEmployeeInvestmentPending) {\r\n            if (getEmployeeInvestmentError) {\r\n                return;\r\n            }\r\n            if (getEmployeeInvestmentRes) {\r\n                if (getEmployeeInvestmentRes?.code === 200) {\r\n                    // setItDeclarationData(getEmployeeInvestmentRes?.data?.[0])\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getEmployeeInvestmentRes,\r\n        getEmployeeInvestmentError,\r\n        getEmployeeInvestmentPending\r\n    ]);\r\n\r\n    // useEffect(() => {\r\n    //     if (itDeclarationData) {\r\n\r\n    //         setITDeclarationFormData(pre => ({\r\n    //             ...pre,\r\n    //             taxType: itDeclarationData?.tax_regime,\r\n    //             houseRent: itDeclarationData?.house_rent_declarations || [],\r\n    //             letOutPropertyDeclarations: itDeclarationData?.let_out_property_declarations || [],\r\n    //             investment80D: itDeclarationData?.section_6a_declarations?.[0]?.[\"80D\"],\r\n    //             investment80C: itDeclarationData?.section_6a_declarations?.[0]?.[\"80C\"],\r\n    //             otherInvestment: itDeclarationData?.other_Investments_Exemptions || [],\r\n    //             homeLoanDeclarations: itDeclarationData?.home_loan_declarations || [],\r\n    //             otherSourceIncome: itDeclarationData?.other_sources_of_income || [],\r\n    //         }))\r\n    //     }\r\n\r\n    // }, [itDeclarationData])\r\n\r\n    const getAllInvestmentCategoryDetailsData = () => {\r\n        dispatch(payrollActions.getAllInvestmentCategoryDetailsRequest())\r\n    }\r\n    useEffect(() => {\r\n        if (!getAllInvestmentCategoryDetailsPending) {\r\n            if (getAllInvestmentCategoryDetailsError) {\r\n                return;\r\n            }\r\n            if (getAllInvestmentCategoryDetailsRes) {\r\n                if (getAllInvestmentCategoryDetailsRes?.code === 200) {\r\n\r\n                    setInvestmentCategoryData(getAllInvestmentCategoryDetailsRes?.data)\r\n                    let tempSetCategoryData = [];\r\n\r\n                    getAllInvestmentCategoryDetailsRes?.data?.forEach((item) => {\r\n                        let setCategoryTempData = [];\r\n\r\n                        if (item?.input_type === \"dropdown\") {\r\n                            setCategoryTempData.push(item);\r\n                        } else {\r\n                            let subCatData = {};\r\n\r\n                            item?.sub_category?.forEach((subCatItem, index) => {\r\n                                subCatData[index] = { ...subCatItem };\r\n                            });\r\n                            setCategoryTempData.push(subCatData);\r\n                        }\r\n\r\n                        tempSetCategoryData.push({\r\n                            ...item,\r\n                            data: setCategoryTempData,\r\n                        });\r\n                    });\r\n\r\n                    // console.log(tempSetCategoryData);\r\n\r\n                    setItData(tempSetCategoryData)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllInvestmentCategoryDetailsRes,\r\n        getAllInvestmentCategoryDetailsError,\r\n        getAllInvestmentCategoryDetailsPending\r\n    ]);\r\n\r\n/* ----------------------------New Code-------------------------- */\r\n    const addDeleteSelectFormFields = (action, childInd, parentInd) => {\r\n        if (action === \"add\") {\r\n            setItData((prevState) => {\r\n                let tempITData = [...prevState];\r\n                let newEntryData = { ...tempITData[parentInd]?.data?.[childInd], selected_value: '', select_input_type: '' };\r\n\r\n                tempITData[parentInd] = {\r\n                    ...tempITData[parentInd],\r\n                    data: [...tempITData[parentInd]?.data, newEntryData]\r\n                };\r\n                return tempITData;\r\n            });\r\n        }\r\n        else if (action === \"delete\") {\r\n            setItData((prevState) => {\r\n                let tempITData = [...prevState];\r\n                let parentData = { ...tempITData[parentInd] };\r\n                parentData.data = parentData.data.filter((_, ind) => ind !== childInd);\r\n                tempITData[parentInd] = parentData;\r\n\r\n                return tempITData;\r\n            });\r\n        }\r\n\r\n\r\n    };\r\n\r\n    const handleChangeData = (e, childInd, parentInd) => {\r\n        const { name, value } = e.target;\r\n\r\n        setItData((prevState) =>\r\n            prevState.map((item, index) =>\r\n                index === parentInd\r\n                    ? {\r\n                        ...item,\r\n                        data: item?.data?.map((data, ind) =>\r\n                            ind === childInd ? { ...data, [name]: value } : data\r\n                        ),\r\n                    }\r\n                    : item\r\n            )\r\n        );\r\n\r\n    };\r\n    const handleSelectedInputData = (e, childInd, parentInd) => {\r\n        const { name, value } = e.target;\r\n        setItData((prevState) =>\r\n            prevState.map((item, index) =>\r\n                index === parentInd\r\n                    ? {\r\n                        ...item,\r\n                        data: item?.data?.map((data, ind) =>\r\n                            ind === childInd ? { ...data, [name]: value } : data\r\n                        ),\r\n                    }\r\n                    : item\r\n            )\r\n        );\r\n    };\r\n\r\n    console.log(itData, \"itData--------------\")\r\n\r\n\r\n\r\n\r\n    const renderedAllInvestmentDataFields = () => {\r\n        return itData && itData?.map((item, index) => (\r\n            <div key={item._id} className=\"cardBox p-0 mb-3\">\r\n                <div className={`d-flex justify-content-between p-3 ${isCollapsedFields?.[item._id] ? \"acc-header\" : ''}`} id={`heading-${index}`}>\r\n                    <h5 className=\"mb-0\">{item?.category}</h5>\r\n                    <div className='d-flex'>\r\n                        <CustomStrong\r\n                            className=\"form-check-label mt-1 pe-4\"\r\n                            text={isCollapsedFields?.[item._id] ? \"Yes\" : \"No\"}\r\n                        />\r\n                        <div className=\"form-check form-switch\">\r\n                            <Input\r\n                                className=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                id={`switch-${item._id}`}\r\n                                style={{ fontSize: \"20px\" }}\r\n                                name={item._id}\r\n                                onChange={(e) => handleCheckboxChange(e, item._id)}\r\n                                checked={isCollapsedFields?.[item._id] || false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {isCollapsedFields?.[item._id] && (\r\n                    renderedAddDeleteFieldsData(item, index)\r\n                )}\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    const checkSelectedInputType = (item, index) => {\r\n        let selectedData = {}\r\n        itData?.filter((_, ind) => ind === index)?.map((item, index) => {\r\n            item?.data?.map((dropDownData) => {\r\n                dropDownData?.sub_category?.map((subCat, ind) => {\r\n                    if (dropDownData?.selected_value === subCat?.sub_category_name) {\r\n                        selectedData = subCat\r\n                    }\r\n                })\r\n\r\n            })\r\n        })\r\n        return selectedData\r\n    }\r\n\r\n    const renderedAddDeleteFieldsData = (item, index) => {\r\n        return (\r\n            <div className=\"card-body\">\r\n                {item?.input_type === \"dropdown\" ? (\r\n                    item?.data?.map((subData, ind) => (\r\n                        <>\r\n                            {item?.data?.length > 1 && <div className=\"text-danger d-flex justify-content-end  mb-1\" style={{ cursor: \"pointer\" }}\r\n                                onClick={() => addDeleteSelectFormFields(\"delete\", ind, index)}>\r\n                                <Icon className=\"bi bi-trash-fill me-1\" />\r\n                                <CustomStrong className={\"mt-1\"} text={\"Remove\"} />\r\n                            </div>}\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-7 form-group mb-3\">\r\n                                    <select\r\n                                        value={item?.data[ind]?.selected_value || \"\"}\r\n                                        className=\"form-control\"\r\n                                        name=\"selected_value\"\r\n                                        onChange={(e) => handleChangeData(e, ind, index)}\r\n                                    >\r\n                                        <option value=\"\" disabled>Select an option</option>\r\n                                        {subData?.sub_category?.map((subItem, subIndex) => (\r\n                                            <option key={subIndex} value={subItem?.sub_category_name}>\r\n                                                {subItem?.sub_category_name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className='col-md-2'></div>\r\n                                <div className=\"col-md-3 form-group mb-3 \">\r\n                                    <div className=\"input-group mb-3\">\r\n                                        {checkSelectedInputType(item, index)?.input_type === \"number\" && <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                                            {getInputPrefix('')}</span>}\r\n                                        <Input\r\n                                            type={checkSelectedInputType(item, index)?.input_type}\r\n                                            // // placeholder={t(\"placeholders.amount\")}\r\n                                            value={subData?.select_input_type}\r\n                                            name={\"select_input_type\"}\r\n                                            onChange={(e) => handleSelectedInputData(e, ind, index)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                {item?.data?.length - 1 === ind && <div className=\"text-primary mt-2\" style={{ cursor: \"pointer\" }}\r\n                                    onClick={() => addDeleteSelectFormFields(\"add\", ind, index)}>\r\n                                    <Icon className=\"bi bi-plus-circle-fill me-1\" />\r\n                                    <CustomStrong text={\"Add Rent House\"} />\r\n                                </div>}\r\n                                {item?.data?.length > 1 && <hr />}\r\n                            </div>\r\n                        </>\r\n                    )))\r\n                    :\r\n                    (\r\n                        item?.data?.map((subCategoryItem, ind) =>\r\n                        (<>\r\n                            {item?.data?.length > 1 && <div className=\"text-danger d-flex justify-content-end  mb-1\" style={{ cursor: \"pointer\" }}\r\n                                onClick={() => addDeleteInputFormFields(\"delete\", ind, index)}>\r\n                                <Icon className=\"bi bi-trash-fill me-1\" />\r\n                                <CustomStrong className={\"mt-1\"} text={\"Remove\"} />\r\n                            </div>}\r\n                            {Object.entries(subCategoryItem).map(([key, value]) => (\r\n\r\n                                <div className=\"row\" key={`${ind}-${key}`}>\r\n                                    <div className=\"col-md-9 form-group mb-3\">\r\n                                        <p className='loan-para'>{value.sub_category_name}</p>\r\n                                    </div>\r\n                                    <div className=\"col-md-3\">\r\n                                        <div className='form-group mb-3'>\r\n                                            {renderInputField(value, ind, index, key)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                            {item?.data?.length - 1 === ind && <div className=\"text-primary mt-2\" style={{ cursor: \"pointer\" }}\r\n                                onClick={() => addDeleteInputFormFields(\"add\", ind, index)}>\r\n                                <Icon className=\"bi bi-plus-circle-fill me-1\" />\r\n                                <CustomStrong text={\"Add Rent House\"} />\r\n                            </div>}\r\n                            {item?.data?.length > 1 && <hr />}\r\n                        </>)\r\n                        )\r\n                    )}\r\n\r\n\r\n            </div>\r\n        );\r\n    };\r\n    const renderInputField = (value, childInd, parentInd, key) => {\r\n        switch (value?.input_type) {\r\n            case \"checkbox\": return (\r\n                <div className=\"col-md-9\">\r\n                    <div className=\"form-group mb-3\">\r\n                        <CustCheckbox\r\n                            key={\"is_active\"}\r\n                            checked={value?.input_type_value}\r\n                            handleChange={(e) => handleChangeSubCategoryInputValue(e, childInd, parentInd, key)}\r\n                            name={\"input_type_value\"}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n            case 'number':\r\n            case 'text':\r\n                return (\r\n                    <div className=\"input-group mb-3\">\r\n                        {value?.input_type === \"number\" && <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                            {getInputPrefix('')}</span>}\r\n                        <Input\r\n                            type={value?.input_type}\r\n                            value={value?.input_type_value || ''}\r\n                            name={\"input_type_value\"}\r\n                            onChange={(e) => handleChangeSubCategoryInputValue(e, childInd, parentInd, key)}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n            default:\r\n                return null;\r\n        }\r\n\r\n\r\n    };\r\n    const handleChangeSubCategoryInputValue = (e, childInd, parentInd, key) => {\r\n        const { name, value, type, checked } = e.target;\r\n        const inputValue = type === \"checkbox\" ? checked : value;\r\n        console.log(name,inputValue,\"name,inputValue------------\")\r\n\r\n        setItData((prevState) =>\r\n            prevState.map((item, index) =>\r\n                index === parentInd\r\n                    ? {\r\n                        ...item,\r\n                        data: item?.data?.map((data, ind) =>\r\n                            ind === childInd\r\n                                ? {\r\n                                    ...data,\r\n                                    [key]: {\r\n                                        ...data[key],\r\n                                        [name]: inputValue\r\n                                    }\r\n                                }\r\n                                : data\r\n                        ),\r\n                    }\r\n                    : item\r\n            )\r\n        );\r\n    };\r\n\r\n    const addDeleteInputFormFields = (action, childInd, parentInd) => {\r\n        if (action === \"add\") {\r\n            setItData((prevState) => {\r\n                let tempITData = [...prevState];\r\n\r\n                let newEntryData = { ...tempITData[parentInd]?.data?.[childInd] };\r\n\r\n                Object.keys(newEntryData).forEach((key) => {\r\n                    newEntryData[key] = { ...newEntryData[key], \"input_type_value\": '' };\r\n                });\r\n\r\n                tempITData[parentInd] = {\r\n                    ...tempITData[parentInd],\r\n                    data: [...tempITData[parentInd]?.data, newEntryData]\r\n                };\r\n\r\n                return tempITData;\r\n            });\r\n\r\n        }\r\n        else if (action === \"delete\") {\r\n            setItData((prevState) => {\r\n                let tempITData = [...prevState];\r\n                let parentData = { ...tempITData[parentInd] };\r\n                parentData.data = parentData.data.filter((_, ind) => ind !== childInd);\r\n                tempITData[parentInd] = parentData;\r\n\r\n                return tempITData;\r\n            });\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"cardBox  myRequest p-4\">\r\n            <div className='d-flex'>\r\n                <div >\r\n                    <Link to={\"/payroll-employees/employee-detail\"}>\r\n                        <BackIcon />\r\n                    </Link>\r\n\r\n                </div>\r\n                <div>\r\n                    <h5 >\r\n                        {selectedEmployeeData?.name} IT Declaration\r\n                    </h5>\r\n                </div>\r\n\r\n            </div>\r\n            <hr style={{ margin: \"0px\" }} />\r\n            <div className='mt-3 col-12 it-declaration-body'>\r\n                <div className=\"alert \" role=\"alert\" style={{ background: \"#F7F8FF\" }}>\r\n                    <Icon className={\"bi bi-info-circle-fill\"}\r\n                        style={{ color: \"rgb(43, 118, 210)\" }}\r\n                    /> Enter your planned investment declarations here and choose the desired regime in the following page.\r\n                </div>\r\n                <div>\r\n                    <div className='d-flex gap-3'>\r\n                        <div className={`cardBox it-card ${iTDeclarationFormData?.taxType === 'old_tax_regime' ? \"active\" : ''}`}>\r\n                            <CustRadio\r\n                                htmlFor=\"old_tax_regime\"\r\n                                text=\"Old Tax Regime\"\r\n                                name=\"taxType\"\r\n                                value=\"old_tax_regime\"\r\n                                checked={iTDeclarationFormData?.taxType === 'old_tax_regime'}\r\n                                handleChange={(e) => handleFromChange(e)}\r\n                                radioClass={\"mt-2\"}\r\n                            />\r\n                        </div>\r\n                        <div className={`cardBox it-card ${iTDeclarationFormData?.taxType === 'new_tax_regime' ? \"active\" : ''}`}>\r\n                            <CustRadio\r\n                                htmlFor=\"new_tax_regime\"\r\n                                text=\"New Tax Regime\"\r\n                                name=\"taxType\"\r\n                                value=\"new_tax_regime\"\r\n                                checked={iTDeclarationFormData?.taxType === 'new_tax_regime'}\r\n                                handleChange={(e) => handleFromChange(e)}\r\n                                radioClass={\"mt-2\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='mt-4'>\r\n                    <div className='d-flex justify-content-between it-header'>\r\n                        <div>\r\n                            <Label text=\"Particulars\"\r\n                                className=\"text-dark\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Label text=\"Declared Amount\"\r\n                                className=\"text-dark\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <hr style={{ margin: \"0px\" }} />\r\n\r\n                    <div className='it-accordions mt-3'>\r\n                        <div id=\"accordion\">\r\n\r\n                            {/* <div className=\"cardBox p-0 mb-3\">\r\n                                <div className={`d-flex justify-content-between p-3 ${isCollapsedFields?.employeeRent ? \"acc-header\" : ''}`} id=\"headingOne \">\r\n                                    <h5 className=\"mb-0\">\r\n                                        Is the employee staying in a rented house?\r\n                                    </h5>\r\n                                    <div className='d-flex'>\r\n                                        <CustomStrong className={\"form-check-label mt-1 pe-4\"} text={isCollapsedFields?.employeeRent ? \"Yes\" : \"No\"} />\r\n                                        <div className=\"form-check form-switch\">\r\n                                            <Input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexSwitchCheckDefault\"\r\n                                                style={{ fontSize: \"20px\" }}\r\n                                                name=\"employeeRent\"\r\n                                                onChange={(e) => handleSwitchCheckboxChange(e)}\r\n                                                checked={isCollapsedFields?.employeeRent}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {isCollapsedFields?.employeeRent && <div >\r\n\r\n                                    {renderedEmpHouseRentFields()}\r\n                                </div>}\r\n                            </div> */}\r\n                            {renderedAllInvestmentDataFields()}\r\n                            {/* {renderedAllInvestmentCategoryFields()} */}\r\n                            { /*<div className=\"cardBox p-0 mb-3\">\r\n                                <div className={`d-flex justify-content-between p-3 ${isCollapsedFields?.employeeRepaying ? \"acc-header\" : ''}`} id=\"headingOne \">\r\n                                    <h5 className=\"mb-0\">\r\n                                        Is the employee repaying home loan for a self occupied house property?\r\n                                    </h5>\r\n                                    <div className='d-flex'>\r\n                                        <CustomStrong className={\"form-check-label mt-1 pe-4\"} text={isCollapsedFields?.employeeRepaying ? \"Yes\" : \"No\"} />\r\n                                        <div className=\"form-check form-switch\">\r\n                                            <Input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexSwitchCheckDefault\"\r\n                                                style={{ fontSize: \"20px\" }}\r\n                                                name=\"employeeRepaying\"\r\n                                                onChange={(e) => handleCheckboxChange(e)}\r\n                                                checked={isCollapsedFields?.employeeRepaying}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {isCollapsedFields?.employeeRepaying && <div >\r\n                                    <div className=\"card-body\" >\r\n                                        {renderHomeLoanDeclarations()}\r\n\r\n\r\n                                    </div>\r\n                                </div>}\r\n                            </div>\r\n                            <div className=\"cardBox p-0 mb-3\">\r\n                                <div className={`d-flex justify-content-between p-3 ${isCollapsedFields?.employeeReceivingIncome ? \"acc-header\" : ''}`} id=\"headingOne \">\r\n                                    <h5 className=\"mb-0\">\r\n                                        Is the employee receiving rental income from let out property?\r\n                                    </h5>\r\n                                    <div className='d-flex'>\r\n                                        <CustomStrong className={\"form-check-label mt-1 pe-4\"} text={isCollapsedFields?.employeeReceivingIncome ? \"Yes\" : \"No\"} />\r\n                                        <div className=\"form-check form-switch\">\r\n                                            <Input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexSwitchCheckDefault\"\r\n                                                style={{ fontSize: \"20px\" }}\r\n                                                name=\"employeeReceivingIncome\"\r\n                                                onChange={(e) => handleCheckboxChange(e)}\r\n                                                checked={isCollapsedFields?.employeeReceivingIncome}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {isCollapsedFields?.employeeReceivingIncome && <div >\r\n                                    {renderedLetOutPropertyDeclarations()}\r\n                                </div>}\r\n                            </div>\r\n                            <div className=\"cardBox p-0 mb-3\">\r\n                                <div className={`d-flex justify-content-between p-3 ${isCollapsedFields?.otherSourceIncome ? \"acc-header\" : ''}`} id=\"headingOne \">\r\n                                    <h5 className=\"mb-0\">\r\n                                        Other Source of Income\r\n                                    </h5>\r\n                                    <div className='d-flex'>\r\n                                        <CustomStrong className={\"form-check-label mt-1 pe-4\"} text={isCollapsedFields?.otherSourceIncome ? \"Yes\" : \"No\"} />\r\n                                        <div className=\"form-check form-switch\">\r\n                                            <Input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexSwitchCheckDefault\"\r\n                                                style={{ fontSize: \"20px\" }}\r\n                                                name=\"otherSourceIncome\"\r\n                                                onChange={(e) => handleCheckboxChange(e)}\r\n                                                checked={isCollapsedFields?.otherSourceIncome}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {isCollapsedFields?.otherSourceIncome && <div >\r\n                                    <div className=\"card-body\" >\r\n                                        <div className=\"row\">\r\n                                            {renderedOtherSourceOfIncome()}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>}\r\n                            </div>\r\n                            <div className=\"cardBox p-0 mb-3\">\r\n                                <div className={`d-flex justify-content-between p-3  acc-header `} id=\"headingOne \">\r\n                                    <h5 className=\"mb-0\">\r\n                                        80C Investments\r\n                                    </h5>\r\n                                </div>\r\n                                <div >\r\n                                    <div className=\"card-body\" >\r\n\r\n\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <p className=''>\r\n                                                Note: This section contains the list of investments including LIC schemes, mutual funds and PPF. The maximum limit for this section is ₹1,50,000.00\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            {render80CInvestment()}\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <div className=\"cardBox p-0 mb-3\">\r\n                                <div className={`d-flex justify-content-between p-3  acc-header `} id=\"headingOne \">\r\n                                    <h5 className=\"mb-0\">\r\n                                        80D Exemptions\r\n                                    </h5>\r\n                                </div>\r\n                                <div >\r\n                                    <div className=\"card-body\" >\r\n\r\n\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <p className=''>\r\n                                                Note: This section contains Mediclaim policies for yourself, your children, spouse and parents. The maximum limit for this section is ₹1,00,000.00\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            {render80DInvestment()}\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <div className=\"cardBox p-0 mb-3\">\r\n                                <div className={`d-flex justify-content-between p-3  acc-header `} id=\"headingOne \">\r\n                                    <h5 className=\"mb-0\">\r\n                                        Other Investments & Exemptions\r\n                                    </h5>\r\n                                </div>\r\n                                <div >\r\n                                    <div className=\"card-body\" >\r\n\r\n\r\n                                        <div className=\"form-group mb-3\">\r\n                                            <p className=''>\r\n                                                Note: Declare other investments & exemptions such as Voluntary NPS, Interest Paid on Education Loan and Medical Expenditures under this section\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            {renderOtherInvestment()}\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            <div className=\"cardBox p-0 mb-3\">\r\n                                <div className={`d-flex justify-content-between p-3 ${isCollapsedFields?.previousEmployment ? \"acc-header\" : ''}`} id=\"headingOne \">\r\n                                    <h5 className=\"mb-0\">\r\n                                        Previous Employment\r\n                                    </h5>\r\n                                    <div className='d-flex'>\r\n                                        <CustomStrong className={\"form-check-label mt-1 pe-4\"} text={isCollapsedFields?.previousEmployment ? \"Yes\" : \"No\"} />\r\n                                        <div className=\"form-check form-switch\">\r\n                                            <Input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"checkbox\"\r\n                                                id=\"flexSwitchCheckDefault\"\r\n                                                style={{ fontSize: \"20px\" }}\r\n                                                name=\"previousEmployment\"\r\n                                                onChange={(e) => handleCheckboxChange(e)}\r\n                                                checked={isCollapsedFields?.previousEmployment}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {isCollapsedFields?.previousEmployment && <div >\r\n                                    {renderedPreviousEmployment()}\r\n                                </div>}\r\n                            </div> */}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className='d-flex justify-content-end'>\r\n                <CustomButton\r\n                    text={itDeclarationData ? t(\"btns.update\") : t(\"btns.submit\")}\r\n                    classNames={\"btn btn-primary\"}\r\n                    handleClick={() => submitITDeclaration()}\r\n                    isLoading={itDeclarationData ? updateEmployeeInvestmentPending : addEmployeeInvestmentPending}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ITDeclaration\r\n"],"names":["BackIcon","_jsx","children","_jsxs","version","id","x","y","viewBox","xmlSpace","className","style","height","width","cursor","opacity","fill","cx","cy","r","d","ITDeclaration","t","useCustomTranslation","dispatch","useDispatch","selectedEmployeeData","addEmployeeInvestmentPending","addEmployeeInvestmentRes","addEmployeeInvestmentError","updateEmployeeInvestmentPending","updateEmployeeInvestmentRes","updateEmployeeInvestmentError","getEmployeeInvestmentPending","getEmployeeInvestmentRes","getEmployeeInvestmentError","getAllInvestmentCategoryDetailsPending","getAllInvestmentCategoryDetailsRes","getAllInvestmentCategoryDetailsError","useSelector","state","payroll","itData","setItData","useState","iTDeclarationDynamicFormData","setITDeclarationDynamicFormData","iTDeclarationFormData","setITDeclarationFormData","taxType","houseRent","from","to","amount","address","landlord_name","metroNonMetro","landlord_pan","letOutPropertyDeclarations","annualRentReceived","municipalTaxesPaid","netAnnualValue","netIncomeLoss","repayingHomeLoan","investment80C","investment","investment80D","otherInvestment","previousEmployment","incomeTax","professionalTax","employeeProvidentFund","leaveEncashmentExemptions","homeLoanDeclarations","principalPaid","interestPaid","lenderName","lenderPen","otherSourceIncome","otherSources","savingsDeposit","fixedDeposit","nationalIncome","isCollapsedFields","setIsCollapsedFields","employeeRent","employeeRepaying","employeeReceivingIncome","errors","setErrors","itDeclarationData","setItDeclarationData","investmentCategoryData","setInvestmentCategoryData","formValues","setFormValues","handleFromChange","e","fieldName","index","parentField","_e$target","name","target","value","type","checked","prevState","updatedState","map","item","idx","useEffect","payrollActions","handleClearPayrollStore","code","getEmployeeItDeclaration","getAllInvestmentCategoryDetailsData","payload","_id","getEmployeeInvestmentRequest","getAllInvestmentCategoryDetailsRequest","_getAllInvestmentCate","data","tempSetCategoryData","forEach","setCategoryTempData","input_type","push","_item$sub_category","subCatData","sub_category","subCatItem","addDeleteSelectFormFields","action","childInd","parentInd","_tempITData$parentInd","_tempITData$parentInd2","_tempITData$parentInd3","tempITData","newEntryData","selected_value","select_input_type","parentData","filter","_","ind","console","log","checkSelectedInputType","_itData$filter","selectedData","_item$data3","dropDownData","_dropDownData$sub_cat","subCat","sub_category_name","renderedAddDeleteFieldsData","_item$data4","_item$data8","subData","_item$data5","_item$data$ind","_subData$sub_category","_checkSelectedInputTy","_checkSelectedInputTy2","_item$data6","_item$data7","_Fragment","length","onClick","Icon","CustomStrong","text","onChange","handleChangeData","_item$data","disabled","subItem","subIndex","getInputPrefix","Input","handleSelectedInputData","_item$data2","subCategoryItem","_item$data9","_item$data10","_item$data11","addDeleteInputFormFields","Object","entries","_ref","key","renderInputField","CustCheckbox","input_type_value","handleChange","handleChangeSubCategoryInputValue","inputValue","_item$data12","_tempITData$parentInd4","_tempITData$parentInd5","_tempITData$parentInd6","keys","Link","margin","role","background","color","CustRadio","htmlFor","radioClass","Label","category","fontSize","handleCheckboxChange","categoryId","prev","CustomButton","classNames","handleClick","submitITDeclaration","payloadData","isLoading"],"sourceRoot":""}