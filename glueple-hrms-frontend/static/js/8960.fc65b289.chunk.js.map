{"version":3,"file":"static/js/8960.fc65b289.chunk.js","mappings":"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","sources":["components/commanComponent/BackIcon.js","components/performanceManagement/pmsEmployee/myTeam/GiveEmployeeRating.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst BackIcon = () => {\r\n    return (\r\n        <div >\r\n            <svg\r\n                version=\"1.1\"\r\n                id=\"Layer_1\"\r\n                x={0}\r\n                y={0}\r\n                viewBox=\"0 0 512 512\"\r\n                xmlSpace=\"preserve\"\r\n                className=\"icon icon-xlg me-2\"\r\n                style={{\r\n                    height: \"23px\",\r\n                    width: \"23px\",\r\n                    cursor: \"pointer\",\r\n                }}\r\n            >\r\n                <circle id=\"Oval-3\" opacity=\".1\" fill=\"#2B76D2\" cx={256} cy={256} r={256} />\r\n                <path\r\n                    fill=\"#2B76D2\"\r\n                    d=\"M277.3 362.7c-5.3 0-10.6-2-14.7-5.9l-85.3-81.5c-4.1-3.9-6.5-9.3-6.6-15-.1-5.7 2-11.1 5.9-15.2l85.3-89.1c8.1-8.5 21.7-8.8 30.2-.7 8.5 8.1 8.8 21.6.7 30.2l-70.6 73.7 69.9 66.8c8.5 8.1 8.8 21.6.7 30.1-4.2 4.4-9.8 6.6-15.5 6.6z\"\r\n                />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackIcon\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useCustomTranslation } from '../../../../translation'\r\nimport { CustomButton, CustomSpinner } from '../../../globalComponents'\r\nimport BackIcon from '../../../commanComponent/BackIcon'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { financialYearActions, pmsActions } from '../../../../core/resource/actions'\r\nimport { Input, Textarea } from '../../../commanComponent'\r\nimport BlankTableError from '../../../commanComponent/BlankTableError'\r\nimport CustomSelect from '../../../commanComponent/CustomSelect'\r\nimport moment from 'moment'\r\nimport { filterCurrentFYMonth } from '../../../../utils/common'\r\n\r\n\r\nconst GiveEmployeeRating = (props) => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const {\r\n        getKraDetailsByEmployeePending,\r\n        getKraDetailsByEmployeeRes,\r\n        getKraDetailsByEmployeeError,\r\n\r\n        giveRatingPending,\r\n        giveRatingRes,\r\n        giveRatingError,\r\n\r\n        getGivenRatingPending,\r\n        getGivenRatingRes,\r\n        getGivenRatingError,\r\n\r\n    } = useSelector(state => state.pms)\r\n\r\n    const {\r\n        getFinancialYearWiseMonthPending,\r\n        getFinancialYearWiseMonthRes,\r\n        getFinancialYearWiseMonthError,\r\n\r\n    } = useSelector(state => state.financialYear)\r\n\r\n    const { t } = useCustomTranslation()\r\n    const { selectedEmployeeData } = useSelector(state => state.employee)\r\n    const [kraDetailsByEmployeeData, setKraDetailsByEmployeeData] = useState('')\r\n    const [feedback, setFeedback] = useState('')\r\n    const [financialYearMonthData, setFinancialYearMonthData] = useState('')\r\n    const [selectedFinancialYearMonth, setSelectedFinancialYearMonth] = useState(null)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedEmployeeData) {\r\n            handleGetKraDetailsByEmployeeData(selectedEmployeeData)\r\n            handleGetFinancialYearWiseMonthData({ financial_id: selectedEmployeeData?.financial_id })\r\n        }\r\n    }, [selectedEmployeeData])\r\n\r\n    useEffect(() => {\r\n        if (selectedEmployeeData && selectedFinancialYearMonth) {\r\n            getGivenRatingData()\r\n            setFeedback('')\r\n        }\r\n    }, [selectedEmployeeData, selectedFinancialYearMonth])\r\n\r\n\r\n    const handleGetKraDetailsByEmployeeData = (data) => {\r\n        const payload = {\r\n            employee_id: data?._id,\r\n            financial_id: data?.financial_id,\r\n            kra_id: data?.kra_id,\r\n\r\n        }\r\n        // dispatch(pmsActions.getKraDetailsByEmployeeRequest(payload));\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     if (!getKraDetailsByEmployeePending) {\r\n    //         if (getKraDetailsByEmployeeError) {\r\n    //             return;\r\n    //         }\r\n    //         if (getKraDetailsByEmployeeRes) {\r\n    //             if (getKraDetailsByEmployeeRes?.code === 200) {\r\n    //                 if (getKraDetailsByEmployeeRes?.data) {\r\n    //                     setKraDetailsByEmployeeData(getKraDetailsByEmployeeRes?.data)\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // }, [\r\n    //     getKraDetailsByEmployeeRes,\r\n    //     getKraDetailsByEmployeeError,\r\n    //     getKraDetailsByEmployeePending\r\n    // ]);\r\n\r\n    /* -----------Get financial year wise month data----------- */\r\n    const handleGetFinancialYearWiseMonthData = (payload) => {\r\n        dispatch(financialYearActions.getFinancialYearWiseMonthRequest(payload))\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getFinancialYearWiseMonthPending) {\r\n            if (getFinancialYearWiseMonthError) {\r\n                return;\r\n            }\r\n            if (getFinancialYearWiseMonthRes) {\r\n                if (getFinancialYearWiseMonthRes?.code === 200) {\r\n                    let filterMonth = filterCurrentFYMonth(getFinancialYearWiseMonthRes?.data)\r\n                    setSelectedFinancialYearMonth(filterMonth)\r\n                    setFinancialYearMonthData(getFinancialYearWiseMonthRes?.data)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getFinancialYearWiseMonthRes,\r\n        getFinancialYearWiseMonthError,\r\n        getFinancialYearWiseMonthPending\r\n    ]);\r\n\r\n\r\n\r\n    const handleSubParamChange = (e, paramIndex, subParamIndex, customName) => {\r\n        const name = customName || e.target?.name;\r\n        const value = e.target?.value;\r\n\r\n        setKraDetailsByEmployeeData((prevData) => {\r\n            const updatedData = [...prevData];\r\n            const updatedParam = { ...updatedData[paramIndex] };\r\n            const updatedSubParams = [...updatedParam.kra_sub_parameter_details];\r\n            const updatedSubParam = {\r\n                ...updatedSubParams[subParamIndex],\r\n                [name]: value,\r\n            };\r\n\r\n            updatedSubParams[subParamIndex] = updatedSubParam;\r\n            updatedParam.kra_sub_parameter_details = updatedSubParams;\r\n            updatedData[paramIndex] = updatedParam;\r\n\r\n            return updatedData;\r\n        });\r\n    };\r\n\r\n\r\n    const renderedKraDetailsByEmployeeData = () => {\r\n        return (\r\n            kraDetailsByEmployeeData?.length > 0 ? kraDetailsByEmployeeData?.map((parameterItem, index) => (\r\n                <div key={index}>\r\n                    <div className=\"updation d-flex justify-content-between\">\r\n                        {\" \"}\r\n                        <span>{parameterItem?.parameter_name}</span>{\" \"}\r\n                        <span>{parameterItem?.parameter_weightage}%</span>\r\n                    </div>\r\n                    <ul className=\"SubcatagoryUl\">\r\n                        {parameterItem?.kra_sub_parameter_details?.map((subParameter, subParaIndex) => (\r\n                            <li key={subParaIndex}>\r\n                                <div>\r\n                                    <strong>Sub Category</strong>\r\n                                    <p>\r\n                                        {subParameter?.measurement_criteria}\r\n                                    </p>\r\n                                    <div className=\"d-flex justify-content-between mb-3\">\r\n                                        <span>\r\n                                            KPI Description <b>{subParameter?.key_performance_indicator}</b>\r\n                                        </span>\r\n                                        <span className='d-flex gap-4'>\r\n                                            <span>\r\n                                                Weightage <b>{subParameter?.kpi_weightage}</b>\r\n                                            </span>\r\n                                            {selectedEmployeeData?.kra_rating_type === \"target_achivement\" && <span>\r\n                                                KPI Target <b>{subParameter?.kpi_target}</b>\r\n                                            </span>}\r\n                                        </span>\r\n                                    </div>\r\n                                    {selectedEmployeeData?.kra_rating_type === \"target_achivement\" ?\r\n                                        <>\r\n                                            <span className=\" mb-2\">Achivement (Remark)</span>\r\n                                            <div className='col-3'>\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    placeholder={\"Enter hare...\"}\r\n                                                    value={subParameter[\"rating_remark\"]}\r\n                                                    name=\"rating_remark\"\r\n                                                    onChange={(e) => handleSubParamChange(e, index, subParaIndex)}\r\n                                                />\r\n                                            </div>\r\n                                        </> :\r\n                                        <>\r\n                                            <span className=\" mb-2\">Select Rating(Remark)</span>\r\n                                            <ul className=\"typeCheckList\">\r\n                                                {[1, 2, 3, 4, 5].map((rating) => {\r\n                                                    const inputId = `rating-${index}-${subParaIndex}-${rating}`;\r\n                                                    const inputName = `rating-${index}-${\"rating_remark\"}`;\r\n                                                    return (\r\n                                                        <li key={rating}>\r\n                                                            <div className=\"typeCheck\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    id={inputId}\r\n                                                                    // name={`rating_remark`} \r\n                                                                    name={`rating_remark_${index}_${subParaIndex}`}\r\n                                                                    className=\"d-none\"\r\n                                                                    value={rating}\r\n                                                                    checked={subParameter[\"rating_remark\"] == rating}\r\n                                                                    onChange={(e) => handleSubParamChange(e, index, subParaIndex, \"rating_remark\")}\r\n                                                                // onChange={(e) => {\r\n                                                                //     const isSameRatingSelected = subParameter?.rating_remark === rating;\r\n                                                                //     handleSubParamChange(e,index, subParaIndex, isSameRatingSelected ? null : rating);\r\n                                                                // }}\r\n                                                                />\r\n                                                                <label htmlFor={inputId}>\r\n                                                                    {rating} <i className=\"bi bi-check-lg\" />\r\n                                                                </label>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    );\r\n                                                })}\r\n\r\n                                            </ul>\r\n                                        </>}\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n\r\n                    </ul>\r\n                </div>\r\n            )) :\r\n                (\r\n                    !getGivenRatingPending && <span className='d-flex justify-content-center'>\r\n                        <BlankTableError text={\"KPI Data Not Found!\"} />\r\n                    </span>\r\n                )\r\n        )\r\n\r\n\r\n    }\r\n\r\n    const submitRatingData = () => {\r\n        // if (!isAllRatingsFilled()) {\r\n        //     alert(\"Please fill in all KPI ratings before submitting.\");\r\n        //     return;\r\n        // }\r\n        const ratingRemarkData = setRatingRemarkData()\r\n        const payload = {\r\n            employee_id: selectedEmployeeData?._id || '',\r\n            financial_id: selectedEmployeeData?.financial_id || '',\r\n            // kra_id: selectedEmployeeData?.kra_id||'',\r\n            rating_month: selectedFinancialYearMonth?.value || '',\r\n            feedback: feedback || '',\r\n            rating_remark: ratingRemarkData || [],\r\n        }\r\n        dispatch(pmsActions.giveRatingRequest(payload))\r\n        // console.log(payload, \"payload----------\")\r\n\r\n    }\r\n    const setRatingRemarkData = () => {\r\n        let tempData = []\r\n        let tempObj = { \"kra_id\": selectedEmployeeData?.kra_id, \"kra_rating_type\": selectedEmployeeData?.kra_rating_type }\r\n        kraDetailsByEmployeeData?.map((paramItem, index) => {\r\n            tempObj[\"parameter_id\"] = paramItem?._id\r\n            paramItem?.kra_sub_parameter_details?.map((subParamItem) => {\r\n                tempObj = {\r\n                    ...tempObj,\r\n                    \"parameter_id\": subParamItem?.parameter_id || '',\r\n                    \"sub_parameter_id\": subParamItem?._id || '',\r\n                    \"rating_remark\": subParamItem?.rating_remark || '',\r\n                    \"key_performance_indicator\": subParamItem?.key_performance_indicator || '',\r\n                    \"kpi_weightage\": subParamItem?.kpi_weightage || '',\r\n                    \"measurement_criteria\": subParamItem?.measurement_criteria || '',\r\n                    // \"target_achivement\": subParamItem?.target_achivement || ''\r\n                }\r\n                tempData?.push(tempObj)\r\n            })\r\n        })\r\n        return tempData\r\n    }\r\n\r\n    const isAllRatingsFilled = () => {\r\n        return kraDetailsByEmployeeData && kraDetailsByEmployeeData?.length > 0 && kraDetailsByEmployeeData?.every(param =>\r\n            param?.kra_sub_parameter_details?.every(sub =>\r\n                sub?.rating_remark !== '' && sub?.rating_remark !== null && sub?.rating_remark !== undefined\r\n            )\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!giveRatingPending) {\r\n            if (giveRatingError) {\r\n                dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_GIVE_RATING_STORE\"))\r\n                return;\r\n            }\r\n            if (giveRatingRes) {\r\n                if (giveRatingRes?.code === 200) {\r\n                    dispatch(pmsActions.handleClearPMSStore(\"HANDLE_CLEAR_GIVE_RATING_STORE\"))\r\n                    setSelectedFinancialYearMonth(null)\r\n                    navigate(\"/my-team\")\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        giveRatingRes,\r\n        giveRatingError,\r\n        giveRatingPending\r\n    ]);\r\n\r\n\r\n    const getGivenRatingData = () => {\r\n        const payload = {\r\n            financial_id: selectedEmployeeData?.financial_id,\r\n            employee_id: selectedEmployeeData?._id,\r\n            rating_month: selectedFinancialYearMonth?.value\r\n        }\r\n        dispatch(pmsActions.getGivenRatingRequest(payload))\r\n    }\r\n    useEffect(() => {\r\n        if (!getGivenRatingPending) {\r\n            if (getGivenRatingError) {\r\n\r\n                return;\r\n            }\r\n            if (getGivenRatingRes) {\r\n                if (getGivenRatingRes?.code === 200) {\r\n                    setKraDetailsByEmployeeData(getGivenRatingRes?.data)\r\n                    setFeedback(getGivenRatingRes?.data?.[0]?.kra_sub_parameter_details?.[0]?.feedback)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getGivenRatingRes,\r\n        getGivenRatingError,\r\n        getGivenRatingPending\r\n    ]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='cardBox'>\r\n            <div className='d-flex mb-3'>\r\n                <div >\r\n                    <Link to={\"/my-team\"}>\r\n                        <BackIcon />\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <h5 >\r\n                        Give Rating\r\n                    </h5>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"row typerating mb-3\">\r\n                <div className=\"col-md-3\">\r\n                    <div className=\"\">\r\n                        <span>\r\n                            Emp ID <strong>{selectedEmployeeData?.emp_id}</strong>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <div className=\"\">\r\n                        <span>\r\n                            Name <strong>{selectedEmployeeData?.name}</strong>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <div className=\"\">\r\n                        <span>\r\n                            Email <strong>{selectedEmployeeData?.email}</strong>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <div className=\"\">\r\n                        <span>\r\n                            KRA Name <strong>{selectedEmployeeData?.kra_name}</strong>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                <span className=\"fw-bold\">KPI List</span>\r\n                <div className=\" w-25\">\r\n                    <CustomSelect\r\n                        data={financialYearMonthData}\r\n                        placeholder={\"Select Month\"}\r\n                        value={selectedFinancialYearMonth || ''}\r\n                        handleChange={(selectedOption) => setSelectedFinancialYearMonth(selectedOption)}\r\n                        name=\"financialYear\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"kpiList\">\r\n\r\n                {getGivenRatingPending ? <span><CustomSpinner isShow={getGivenRatingPending} size=\"xl\" /> </span> :\r\n                    <>\r\n                    {renderedKraDetailsByEmployeeData()}\r\n\r\n                        <div className=\"form-group mb-3\">\r\n                            <label htmlFor=\"\" className=\"text-primary fw-semibold mb-2\">\r\n                                Feedback{\" \"}\r\n                            </label>\r\n\r\n                            <Textarea\r\n                                placeholder={\"Enter Feedback\"}\r\n                                onChange={(e) => setFeedback(e.target.value)}\r\n                                name={\"reason\"}\r\n                                value={feedback}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                <CustomButton\r\n                    text={t(\"btns.submit\")}\r\n                    classNames={\"btn btn-org-gradient\"}\r\n                    handleClick={() => submitRatingData()}\r\n                    // isLoading={ addPositionPending}\r\n                    isDisabled={!isAllRatingsFilled()}\r\n                />\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiveEmployeeRating\r\n"],"names":["BackIcon","_jsx","children","_jsxs","version","id","x","y","viewBox","xmlSpace","className","style","height","width","cursor","opacity","fill","cx","cy","r","d","props","dispatch","useDispatch","navigate","useNavigate","getKraDetailsByEmployeePending","getKraDetailsByEmployeeRes","getKraDetailsByEmployeeError","giveRatingPending","giveRatingRes","giveRatingError","getGivenRatingPending","getGivenRatingRes","getGivenRatingError","useSelector","state","pms","getFinancialYearWiseMonthPending","getFinancialYearWiseMonthRes","getFinancialYearWiseMonthError","financialYear","t","useCustomTranslation","selectedEmployeeData","employee","kraDetailsByEmployeeData","setKraDetailsByEmployeeData","useState","feedback","setFeedback","financialYearMonthData","setFinancialYearMonthData","selectedFinancialYearMonth","setSelectedFinancialYearMonth","useEffect","handleGetKraDetailsByEmployeeData","handleGetFinancialYearWiseMonthData","financial_id","getGivenRatingData","data","_id","kra_id","payload","financialYearActions","getFinancialYearWiseMonthRequest","code","filterMonth","filterCurrentFYMonth","handleSubParamChange","e","paramIndex","subParamIndex","customName","_e$target","_e$target2","name","target","value","prevData","updatedData","updatedParam","updatedSubParams","kra_sub_parameter_details","updatedSubParam","setRatingRemarkData","tempData","tempObj","kra_rating_type","map","paramItem","index","_paramItem$kra_sub_pa","subParamItem","parameter_id","rating_remark","key_performance_indicator","kpi_weightage","measurement_criteria","push","pmsActions","handleClearPMSStore","employee_id","rating_month","getGivenRatingRequest","_getGivenRatingRes$da","_getGivenRatingRes$da2","_getGivenRatingRes$da3","_getGivenRatingRes$da4","Link","to","emp_id","email","kra_name","CustomSelect","placeholder","handleChange","selectedOption","CustomSpinner","isShow","size","_Fragment","length","parameterItem","_parameterItem$kra_su","parameter_name","parameter_weightage","subParameter","subParaIndex","kpi_target","Input","type","onChange","rating","inputId","checked","htmlFor","BlankTableError","text","Textarea","CustomButton","classNames","handleClick","submitRatingData","ratingRemarkData","giveRatingRequest","isDisabled","every","param","_param$kra_sub_parame","sub","undefined"],"sourceRoot":""}