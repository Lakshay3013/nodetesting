{"version":3,"file":"static/js/7226.f1dcba0c.chunk.js","mappings":"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","sources":["components/leave_management/attendanceCorrectionApplication/CorrectionApplication.js","components/leave_management/attendanceCorrectionApplication/CorrectionCards.js","components/leave_management/attendanceLogsApplication/AttendanceLogs.js","components/leave_management/leaveApplication/LeaveApplication.js","components/leave_management/tourApplication/TourApplication.js","components/modal/ApproveRejectModal.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Input, Label, Textarea } from '../../commanComponent';\r\nimport { useCustomTranslation } from '../../../translation';\r\nimport { CustomButton, CustomError } from '../../globalComponents';\r\nimport { checkMaxWordLimit, dateFormate, timeFormate, timeToHourMinSec } from '../../../utils/common';\r\nimport CustomSelect from '../../commanComponent/CustomSelect';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { attendanceCorrectionActions, commonActions } from '../../../core/resource/actions';\r\nimport moment from 'moment';\r\nimport CorrectionCards from './CorrectionCards';\r\n\r\n\r\nconst CorrectionApplication = (props) => {\r\n    const dispatch = useDispatch()\r\n    const {\r\n        openModel,\r\n        handleOpenClose,\r\n        toggleShowAllBreakModal,\r\n        selectedCalenderData,\r\n        updatedLogsData\r\n    } = props\r\n    const [attendanceCorrectionsData, setAttendanceCorrectionData] = useState('')\r\n    const [appConstantData, setAppConstantData] = useState('')\r\n\r\n    const {\r\n        applyAttendanceCorrectionPending,\r\n        applyAttendanceCorrectionRes,\r\n        applyAttendanceCorrectionError,\r\n    } = useSelector(state => state.attendanceCorrection)\r\n\r\n    const {\r\n        getAppConstantDataPending,\r\n        getAppConstantDataRes,\r\n        getAppConstantDataError,\r\n    } = useSelector(state => state.common)\r\n    const { t } = useCustomTranslation()\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const [attendanceCorrectionFromData, setAttendanceCorrectionFromData] = useState({\r\n        actualCheckIn: \"\",\r\n        requestedCheckInTime: \"\",\r\n        requestedCheckOutTime: '',\r\n        requestedCheckInReason: '',\r\n        requestedCheckOutReason: '',\r\n        actualCheckOut: '',\r\n        attendanceLogs: '',\r\n        correctionStatus: null,\r\n        actualBreak: \"\",\r\n        correctedBreak: \"\",\r\n        attendanceStatus: '',\r\n        shiftEndTime: '',\r\n        shiftStartTime: '',\r\n        duration: '',\r\n        attendanceDate: '',\r\n        totalWorkingHours: '',\r\n    })\r\n\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value } = e?.target ? e.target : { value: e };\r\n        setAttendanceCorrectionFromData(prevState => {\r\n            const updatedState = {\r\n                ...prevState,\r\n                [name]: value,\r\n            };\r\n            return updatedState;\r\n        });\r\n\r\n        // Reset error for this field\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    }\r\n    useEffect(() => {\r\n        return (() => {\r\n            resetFromData()\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (selectedCalenderData) {\r\n            setAttendanceCorrectionData(selectedCalenderData)\r\n            setAttendanceCorrectionFromData({\r\n                actualCheckIn: selectedCalenderData?.first_check_in_time,\r\n                requestedCheckInTime: \"\",\r\n                requestedCheckOutTime: '',\r\n                requestedCheckInReason: '',\r\n                requestedCheckOutReason: '',\r\n                actualCheckOut: selectedCalenderData?.last_check_out_time,\r\n                attendanceLogs: '',\r\n                correctionStatus: null,\r\n                actualBreak: selectedCalenderData?.total_break_time,\r\n                correctedBreak: \"\",\r\n                attendanceStatus: selectedCalenderData?.attendance_status,\r\n                shiftEndTime: selectedCalenderData?.shift_end_time,\r\n                shiftStartTime: selectedCalenderData?.shift_start_time,\r\n                duration: selectedCalenderData?.duration,\r\n                attendanceDate: selectedCalenderData?.attendance_date,\r\n                totalWorkingHours: selectedCalenderData?.total_working_hours,\r\n            })\r\n        }\r\n    }, [selectedCalenderData])\r\n    useEffect(() => {\r\n        if (updatedLogsData) {\r\n            setAttendanceCorrectionFromData(pre => ({\r\n                ...pre,\r\n                correctedBreak: updatedLogsData?.totalBreakTime\r\n\r\n            }))\r\n        }\r\n    }, [updatedLogsData])\r\n\r\n\r\n    const resetFromData = () => {\r\n        setAttendanceCorrectionFromData({\r\n            actualCheckIn: '',\r\n            actualCheckOut: '',\r\n            requestedCheckInTime: '',\r\n            requestedCheckInReason: '',\r\n            requestedCheckOutTime: '',\r\n            requestedCheckOutReason: '',\r\n            attendanceLogs: '',\r\n            correctionStatus: null,\r\n            attendanceStatus: '',\r\n            shiftEndTime: '',\r\n            shiftStartTime: '',\r\n            duration: '',\r\n            attendanceDate: '',\r\n            totalWorkingHours: '',\r\n        })\r\n    }\r\n\r\n    const handleSubmitCorrection = async () => {\r\n        const {\r\n            actualCheckIn,\r\n            actualCheckOut,\r\n            requestedCheckInTime,\r\n            requestedCheckInReason,\r\n            requestedCheckOutTime,\r\n            requestedCheckOutReason,\r\n            attendanceLogs,\r\n            correctionStatus,\r\n        } = attendanceCorrectionFromData\r\n        let checkValid = checkValidationAttendanceCorrection()\r\n        if (!checkValid) {\r\n            const payload = {\r\n                emp_id: attendanceCorrectionsData?.emp_id,\r\n                date: attendanceCorrectionsData?.attendance_date,\r\n                type: correctionStatus?.value,\r\n                actual_check_in_time: actualCheckIn,\r\n                actual_check_out_time: actualCheckOut,\r\n                check_in_reason: requestedCheckInReason,\r\n                check_out_reason: requestedCheckOutReason,\r\n                correction_check_in_time: requestedCheckInTime || actualCheckIn,\r\n                correction_check_out_time: requestedCheckOutTime || actualCheckOut,\r\n                attendance_logs: []\r\n            }\r\n            dispatch(attendanceCorrectionActions.applyAttendanceCorrectionRequest(payload))\r\n        }\r\n\r\n    }\r\n    /* Apply Attendance Correction */\r\n\r\n    useEffect(() => {\r\n        if (!applyAttendanceCorrectionPending) {\r\n            if (applyAttendanceCorrectionError) {\r\n                dispatch(attendanceCorrectionActions?.handleClearCorrectionRequest(\"HANDLE_CLEAR_APPLY_ATTENDANCE_CORRECTION\"))\r\n                return;\r\n            }\r\n            if (applyAttendanceCorrectionRes) {\r\n                if (applyAttendanceCorrectionRes?.code === 200) {\r\n                    dispatch(attendanceCorrectionActions?.handleClearCorrectionRequest(\"HANDLE_CLEAR_APPLY_ATTENDANCE_CORRECTION\"))\r\n                    handleOpenClose()\r\n                    resetFromData()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        applyAttendanceCorrectionRes,\r\n        applyAttendanceCorrectionError,\r\n        applyAttendanceCorrectionPending\r\n    ]);\r\n    /* check time with in shift*/\r\n    const isTimeWithinShift = (time, startTime, endTime) => {\r\n        return moment(timeFormate(time,\"HH:mm:ss\"), \"HH:mm:ss\").isBetween(\r\n            moment(timeToHourMinSec(startTime), \"HH:mm:ss\"),\r\n            moment(timeToHourMinSec(endTime), \"HH:mm:ss\"),\r\n            null,\r\n            '[]'\r\n        );\r\n    };\r\n\r\n    /* check valid Reason length */\r\n    const validateReason = (reason, field) => {\r\n        if (!reason) {\r\n            setErrors(prevErrors => ({\r\n                ...prevErrors,\r\n                [field]: \"Reason is required\",\r\n            }));\r\n            return false;\r\n        }\r\n        if (checkMaxWordLimit(reason, 4)) {\r\n            setErrors(prevErrors => ({\r\n                ...prevErrors,\r\n                [field]: \"Maximum 5 words allowed in reason\",\r\n            }));\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /*check Validation Attendance Correction */\r\n    const checkValidationAttendanceCorrection = () => {\r\n        const {\r\n            requestedCheckInTime,\r\n            requestedCheckInReason,\r\n            requestedCheckOutTime,\r\n            requestedCheckOutReason,\r\n            shiftEndTime,\r\n            shiftStartTime,\r\n            correctionStatus,\r\n        } = attendanceCorrectionFromData;\r\n\r\n        let hasError = false;\r\n        if (!correctionStatus) {\r\n            setErrors(prevErrors => ({\r\n                ...prevErrors,\r\n                correctionStatus: `Correction status  required`,\r\n            }));\r\n            hasError = true;\r\n        }\r\n\r\n        // Validate Check-In Time\r\n        if (requestedCheckInTime) {\r\n            if (!isTimeWithinShift(requestedCheckInTime, shiftStartTime, shiftEndTime)) {\r\n                setErrors(prevErrors => ({\r\n                    ...prevErrors,\r\n                    requestedCheckInTime: `Select requested check-in time between ${shiftStartTime} and ${shiftEndTime}`,\r\n                }));\r\n                hasError = true;\r\n            } else if (!validateReason(requestedCheckInReason, \"requestedCheckInReason\")) {\r\n                hasError = true;\r\n            }\r\n        }\r\n\r\n        // Validate Check-Out Time\r\n        if (requestedCheckOutTime) {\r\n            if (!isTimeWithinShift(requestedCheckOutTime, shiftStartTime, shiftEndTime)) {\r\n                setErrors(prevErrors => ({\r\n                    ...prevErrors,\r\n                    requestedCheckOutTime: `Select requested check-out time between ${shiftStartTime} and ${shiftEndTime}`,\r\n                }));\r\n                hasError = true;\r\n            } else if (!validateReason(requestedCheckOutReason, \"requestedCheckOutReason\")) {\r\n                hasError = true;\r\n            }\r\n        }\r\n\r\n        return hasError;\r\n    };\r\n\r\n    /*Get App Constant Data */\r\n    useEffect(() => {\r\n        getAppConstantData()\r\n    }, [])\r\n    const getAppConstantData = () => {\r\n        if (getAppConstantDataRes && getAppConstantDataRes?.data) {\r\n            setAppConstantData(getAppConstantDataRes?.data)\r\n        } else {\r\n            dispatch(commonActions.getAppConstantDataRequest())\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (!getAppConstantDataPending) {\r\n            if (getAppConstantDataError) {\r\n                return;\r\n            }\r\n            if (getAppConstantDataRes) {\r\n                if (getAppConstantDataRes?.code === 200) {\r\n                    setAppConstantData(getAppConstantDataRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAppConstantDataRes,\r\n        getAppConstantDataError,\r\n        getAppConstantDataPending\r\n    ]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={`offcanvas offcanvas-end applyLeaveCanvas ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                id=\"attendanceCorrection\"\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-6 fw-bold text-primary\">\r\n                        Attendance Correction\r\n                    </h5>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn-close\"\r\n                        data-bs-dismiss=\"offcanvas\"\r\n                        aria-label=\"Close\"\r\n                        onClick={() => { handleOpenClose() }}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"formPanel\">\r\n                        <CorrectionCards correctionData={selectedCalenderData} />\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <Label className=\"text-primary mt-2\"\r\n                                    text={t(\"labels.correctionStatus\")}\r\n                                    required={true}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <CustomSelect\r\n                                    data={appConstantData?.dayType}\r\n                                    placeholder={t(\"placeholders.correctionStatus\")}\r\n                                    value={attendanceCorrectionFromData?.correctionStatus || ''}\r\n                                    handleChange={(selectedOption) => handleFromChange(selectedOption, \"correctionStatus\")}\r\n                                    name=\"correctionStatus\"\r\n                                />\r\n                                {errors?.correctionStatus && (\r\n                                    <CustomError text={errors.correctionStatus} />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"row\">\r\n\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label className=\"text-primary\"\r\n                                        text={t(\"labels.actualCheckIn\")}\r\n                                    // required={true} \r\n                                    />\r\n                                    <Input\r\n                                        type=\"time\"\r\n                                        value={timeFormate(attendanceCorrectionFromData?.actualCheckIn,\"YYYY-MM-DD HH:mm:ss\")}\r\n                                        name=\"actualCheckIn\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                        min=\"09:30:00\"\r\n                                        step=\"2\"\r\n                                        readOnly={true}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label className=\"text-primary\"\r\n                                        text={t(\"labels.requestedCheckIn\")}\r\n                                    // required={true} \r\n                                    />\r\n                                    <Input\r\n                                        type=\"time\"\r\n                                        value={attendanceCorrectionFromData?.requestedCheckInTime}\r\n                                        name=\"requestedCheckInTime\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                        min=\"09:30:00\"\r\n                                        step=\"2\"\r\n                                    />\r\n                                    {errors?.requestedCheckInTime && (\r\n                                        <CustomError text={errors.requestedCheckInTime} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Textarea\r\n                                        placeholder={t(\"placeholders.requestCheckInReason\")}\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                        value={attendanceCorrectionFromData?.requestedCheckInReason}\r\n                                        name=\"requestedCheckInReason\"\r\n                                    />\r\n                                    {errors?.requestedCheckInReason && (\r\n                                        <CustomError text={errors.requestedCheckInReason} />\r\n                                    )}\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label\r\n                                        className=\"text-primary\"\r\n                                        text={t(\"labels.actualCheckOut\")}\r\n                                    // required={true}\r\n                                    />\r\n                                    <Input\r\n                                        type=\"time\"\r\n                                        value={timeFormate(attendanceCorrectionFromData?.actualCheckOut,\"YYYY-MM-DD HH:mm:ss\")}\r\n                                        name=\"actualCheckOut\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                        max=\"18:30:00\"\r\n                                        step=\"2\"\r\n                                        readOnly={true}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label\r\n                                        className=\"text-primary\"\r\n                                        text={t(\"labels.requestedCheckOut\")}\r\n                                    // required={true}\r\n                                    />\r\n                                    <Input\r\n                                        type=\"time\"\r\n                                        value={attendanceCorrectionFromData?.requestedCheckOutTime}\r\n                                        name=\"requestedCheckOutTime\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                        max=\"18:30:00\"\r\n                                        step=\"2\"\r\n                                    />\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Textarea\r\n                                        placeholder={t(\"placeholders.requestCheckOutReason\")}\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                        value={attendanceCorrectionFromData?.requestedCheckOutReason}\r\n                                        name=\"requestedCheckOutReason\"\r\n                                    />\r\n                                    {errors?.requestedCheckOutReason && (\r\n                                        <CustomError text={errors.requestedCheckOutReason} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label\r\n                                        className=\"text-primary\"\r\n                                        text={t(\"labels.actualBreak\")}\r\n                                    // required={true}\r\n                                    />\r\n                                    <Input\r\n                                        type=\"time\"\r\n                                        value={attendanceCorrectionFromData?.actualBreak}\r\n                                        name=\"actualBreak\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                        step=\"2\"\r\n                                    // readOnly={true}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <div className=\"form-group mb-2\">\r\n                                    <Label\r\n                                        className=\"text-primary\"\r\n                                        text={t(\"labels.correctedBreak\")}\r\n                                    />\r\n\r\n                                    <Input\r\n                                        type=\"time\"\r\n                                        value={attendanceCorrectionFromData?.correctedBreak}\r\n                                        name=\"correctedBreak\"\r\n                                        onChange={(e) => handleFromChange(e)}\r\n                                        step=\"2\"\r\n\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <CustomButton\r\n                                classNames=\"btn btn-primary gradientBg w-100\"\r\n                                handleClick={() => {\r\n                                    toggleShowAllBreakModal();\r\n                                }}\r\n                                text={t(\"btns.showAllBreak\")}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            classNames=\"border-0 p-0 bg-transparent cancelBtn\"\r\n                            handleClick={() => handleOpenClose()}\r\n                            text={t(\"btns.cancel\")}\r\n                        />\r\n                        <CustomButton\r\n                            classNames=\"btn btn-org-gradient\"\r\n                            handleClick={() => handleSubmitCorrection()}\r\n                            text={t(\"btns.submit\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CorrectionApplication","import React from 'react'\r\nimport { dateFormate } from '../../../utils/common'\r\n\r\nconst CorrectionCards = ({correctionData}) => {\r\n  return (\r\n    <div className=\"timeCountmdl correctionTime\">\r\n    <div className=\"w-25 \">\r\n        <p>\r\n            Attendance Status <b>{correctionData?.attendance_status}</b>\r\n        </p>\r\n        <strong className=\"w-100\">\r\n            <span>{correctionData?.total_working_hours}</span>\r\n            <small> Net Working Time </small>\r\n        </strong>\r\n    </div>\r\n    <div className=\"w-25 \">\r\n        <p>\r\n            Date <b>{dateFormate(correctionData?.attendance_date)}</b>\r\n        </p>\r\n        <strong className=\"w-100 h-30\">\r\n            <span>{correctionData?.duration}</span>\r\n            <small> Total Login Hours</small>\r\n        </strong>\r\n    </div>\r\n    <div className=\"w-25 \">\r\n        <p>\r\n            Shift Start Time\r\n        </p>\r\n        <strong className=\"w-100\">\r\n            <span>{correctionData?.shift_start_time}</span>\r\n            <small>  Shift Start Time </small>\r\n        </strong>\r\n    </div>\r\n    <div className=\"w-25 \">\r\n        <p>\r\n            Shift End Time\r\n        </p>\r\n        <strong className=\"w-100\">\r\n            <span>{correctionData?.shift_end_time}</span>\r\n            <small>  Shift End Time </small>\r\n        </strong>\r\n    </div>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default CorrectionCards\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustomButton, CustomError, CustomSpinner } from '../../globalComponents'\r\nimport { Input } from '../../commanComponent'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport CustomSelect from '../../commanComponent/CustomSelect'\r\nimport moment from 'moment'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { attendanceCorrectionActions, leaveAction } from '../../../core/resource/actions'\r\nimport BlankTableError from '../../commanComponent/BlankTableError'\r\nimport CorrectionCards from '../attendanceCorrectionApplication/CorrectionCards'\r\nimport { dateFormate } from '../../../utils/common'\r\n\r\nconst AttendanceLogs = (props) => {\r\n    const { handleOpenClose, openModel, viewModalType, selectedCalenderData, setUpdatedLogsData } = props\r\n    const [allLeaveConstantData, setAllLeaveConstantData] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const {\r\n        getAttendanceLogsPending,\r\n        getAttendanceLogsRes,\r\n        getAttendanceLogsError,\r\n\r\n        updateAttendanceLogPending,\r\n        updateAttendanceLogRes,\r\n        updateAttendanceLogError,\r\n\r\n    } = useSelector(state => state.attendanceCorrection)\r\n    const {\r\n        getLeaveConstantDataPending,\r\n        getLeaveConstantDataRes,\r\n        getLeaveConstantDataError,\r\n    } = useSelector(state => state.leave);\r\n\r\n    const [attendanceLogs, setAttendanceLogs] = useState([])\r\n    const { t } = useCustomTranslation()\r\n    const [errors, setErrors] = useState([])\r\n\r\n    useEffect(() => {\r\n        getAttendanceLogs()\r\n        getLeaveConstantData()\r\n    }, [])\r\n\r\n    /* Get Attendance Logs */\r\n    const getAttendanceLogs = () => {\r\n        const payload ={\r\n            date :selectedCalenderData?.attendance_date\r\n        }\r\n        dispatch(attendanceCorrectionActions.getAttendanceLogsRequest(payload))\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (!getAttendanceLogsPending) {\r\n            if (getAttendanceLogsError) {\r\n                return;\r\n            }\r\n            if (getAttendanceLogsRes) {\r\n                if (getAttendanceLogsRes?.code === 200) {\r\n                    setAttendanceLogs(getAttendanceLogsRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAttendanceLogsRes,\r\n        getAttendanceLogsError,\r\n        getAttendanceLogsPending\r\n    ]);\r\n\r\n    /* Get Attendance Logs */\r\n    const updateLogs = () => {\r\n        const logs = [...attendanceLogs]\r\n        const updatedLogsData = logs.map(item => ({\r\n            ...item,\r\n            device_from: item?.activityName ? item?.activityName?.value : item?.device_from,\r\n            device_from_name: item?.activityName ? item?.activityName?.label : item?.device_from_name,\r\n            log_type: item?.checkInOut ? item?.checkInOut?.value : item?.log_type,\r\n            punch_time: `${item.punch_date} ${item.punch_time}`\r\n\r\n        }));\r\n        let data = {\r\n            employeeLogs: updatedLogsData,\r\n            date: moment().format('YYYY-MM-DD')\r\n        }\r\n        dispatch(attendanceCorrectionActions.updateAttendanceLogRequest(data))\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (!updateAttendanceLogPending) {\r\n            if (updateAttendanceLogError) {\r\n                dispatch(attendanceCorrectionActions?.handleClearCorrectionRequest(\"HANDLE_CLEAR_UPDATE_LOG\"))\r\n                return;\r\n            }\r\n            if (updateAttendanceLogRes) {\r\n                if (updateAttendanceLogRes?.code === 200) {\r\n                    setUpdatedLogsData(updateAttendanceLogRes?.data)\r\n                    handleOpenClose(viewModalType ? viewModalType : '')\r\n                    dispatch(attendanceCorrectionActions?.handleClearCorrectionRequest(\"HANDLE_CLEAR_UPDATE_LOG\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updateAttendanceLogRes,\r\n        updateAttendanceLogError,\r\n        updateAttendanceLogPending\r\n    ]);\r\n\r\n\r\n\r\n    const editAttendanceRow = index => {\r\n        setAttendanceLogs(prevLogs =>\r\n            prevLogs.map((log, i) =>\r\n                i === index\r\n                    ? {\r\n                        ...log,\r\n                        isEdit: !log.isEdit,\r\n                        activityName: { label: log.device_from_name, value: log.device_from },\r\n                        checkInOut: { label: log.log_type, value: log.log_type }\r\n                    }\r\n                    : log\r\n            )\r\n        );\r\n    };\r\n\r\n    const revertChanges = index => {\r\n        let newAttendanceLogArray = [...attendanceLogs];\r\n        let newObj = newAttendanceLogArray[index];\r\n        delete newObj?.isEdit\r\n        delete newObj?.reason\r\n        delete newObj?.requestedTime\r\n        newAttendanceLogArray[index] = newObj;\r\n        setAttendanceLogs(newAttendanceLogArray);\r\n        setErrors([])\r\n        // setRequestedTime('');\r\n        // setReason('');\r\n    };\r\n\r\n    const deleteAttendanceRow = index => {\r\n        setAttendanceLogs((pre) => {\r\n            return pre.filter((_, ind) => ind !== index)\r\n        })\r\n    }\r\n\r\n    const handleFromChange = (e, fieldName, index) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e.target : { value: e };\r\n        setAttendanceLogs(prevState => {\r\n            const updatedLogs = [...prevState];\r\n            updatedLogs[index] = {\r\n                ...updatedLogs[index],\r\n                [name]: value,\r\n            };\r\n            return updatedLogs;\r\n        });\r\n        setErrors(prevState => {\r\n            const updatedError = [...prevState];\r\n            if (updatedError[index]) {\r\n                delete updatedError[index][name];\r\n                if (Object.keys(updatedError[index]).length === 0) {\r\n                    updatedError[index] = undefined;\r\n                }\r\n            }\r\n            return updatedError;\r\n        });\r\n    };\r\n    const saveEditedRow = (index) => {\r\n        const checkValidAdd = handleCheckRowAdd(index)\r\n        console.log(index, \"index\", checkValidAdd)\r\n        if (!checkValidAdd) {\r\n            let newAttendanceLogArray = [...attendanceLogs];\r\n            let newObj = newAttendanceLogArray[index];\r\n            newObj = {\r\n                ...newObj,\r\n                isEdit: false\r\n            }\r\n            newAttendanceLogArray[index] = newObj;\r\n            setAttendanceLogs(newAttendanceLogArray)\r\n        } else {\r\n\r\n        }\r\n        return checkValidAdd\r\n\r\n    }\r\n    // const handleCheckRowAdd = (index) => {\r\n    //     const tempAttendanceLogs = attendanceLogs[index]\r\n    //     if (!tempAttendanceLogs?.requestedTime) {\r\n    //         setErrors(prevState => {\r\n    //             const updatedError = [...prevState];\r\n    //             updatedError[index] = {\r\n    //                 ...updatedError[index],\r\n    //                 [\"requestedTime\"]: \"Requested time can not be blank\",\r\n    //             };\r\n    //             return updatedError;\r\n    //         });\r\n    //     }\r\n    //     if(!tempAttendanceLogs?.reason){\r\n    //         setErrors(prevState => {\r\n    //             const updatedError = [...prevState];\r\n    //             updatedError[index] = {\r\n    //                 ...updatedError[index],\r\n    //                 [\"reason\"]: \"Reason can not be blank\",\r\n    //             };\r\n    //             return updatedError;\r\n    //         });\r\n    //     }\r\n\r\n    // }\r\n\r\n    const handleCheckRowAdd = (index) => {\r\n        const tempAttendanceLogs = attendanceLogs[index];\r\n        let hasError = false;\r\n\r\n        const updatedError = [...errors];\r\n\r\n        if (!tempAttendanceLogs?.requestedTime) {\r\n            updatedError[index] = {\r\n                ...updatedError[index],\r\n                requestedTime: true,\r\n            };\r\n            hasError = true;\r\n        }\r\n\r\n        if (!tempAttendanceLogs?.reason) {\r\n            updatedError[index] = {\r\n                ...updatedError[index],\r\n                reason: true,\r\n            };\r\n            hasError = true;\r\n        }\r\n        if (!tempAttendanceLogs?.activityName) {\r\n            updatedError[index] = {\r\n                ...updatedError[index],\r\n                activityName: true,\r\n            };\r\n            hasError = true;\r\n        }\r\n        if (!tempAttendanceLogs?.checkInOut) {\r\n            updatedError[index] = {\r\n                ...updatedError[index],\r\n                checkInOut: true,\r\n            };\r\n            hasError = true;\r\n        }\r\n\r\n        setErrors(updatedError);\r\n        return hasError;\r\n    };\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     return(()=>{\r\n    //         setAttendanceLogs([])\r\n    //         setErrors([])\r\n    //     })\r\n    // },[openModel])\r\n\r\n    const addEvent = () => {\r\n        let tempAttendanceLogsData = [...attendanceLogs]\r\n        const logsObj = {\r\n            date: moment().format(\"DD-MM-YYYY\"),\r\n            time: '',\r\n            activityName: '',\r\n            checkInOut: '',\r\n            isEdit: true\r\n        }\r\n        tempAttendanceLogsData.unshift(logsObj)\r\n        setAttendanceLogs(tempAttendanceLogsData)\r\n    }\r\n\r\n\r\n    const selectStyle = (index, fieldName) => {\r\n        return {\r\n            control: (provided) => ({\r\n                ...provided,\r\n                border: errors[index]?.[fieldName] ? '1px solid #E44438' : '',\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    const renderAttendanceLogs = () => {\r\n        return (\r\n            attendanceLogs ? attendanceLogs.map((item, index) => <tr key={index}>\r\n                <td>{dateFormate(item?.punch_date)}</td>\r\n                <td>{item?.punch_time}</td>\r\n                <td><CustomSelect\r\n                    data={allLeaveConstantData?.activityData}\r\n                    placeholder={t(\"placeholders.select\")}\r\n                    value={item?.activityName || { label: item?.device_from_name, value: item?.device_from }}\r\n                    handleChange={(e) => handleFromChange(e, \"activityName\", index)}\r\n                    name=\"activityName\"\r\n                    isDisabled={item?.isEdit ? false : true}\r\n                    styles={selectStyle(index, \"activityName\")}\r\n                />\r\n                </td>\r\n                <td>\r\n                    <CustomSelect\r\n                        data={allLeaveConstantData?.inOutData}\r\n                        placeholder={t(\"placeholders.select\")}\r\n                        value={item?.checkInOut || { label: item?.log_type, value: item?.log_type }}\r\n                        handleChange={(e) => handleFromChange(e, \"checkInOut\", index)}\r\n                        name=\"checkInOut\"\r\n                        isDisabled={item?.isEdit ? false : true}\r\n                        styles={selectStyle(index, \"activityName\")}\r\n                    />\r\n                </td>\r\n                <td>\r\n                    <Input\r\n                        type=\"time\"\r\n                        value={item?.requestedTime}\r\n                        name=\"requestedTime\"\r\n                        onChange={(e) => handleFromChange(e, \"\", index)}\r\n                        min=\"09:30:00\"\r\n                        step=\"2\"\r\n                        readOnly={item?.isEdit ? false : true}\r\n                        style={{\r\n                            border: errors[index]?.requestedTime ? \"1px solid #E44438\" : \"\",\r\n                        }}\r\n                    />\r\n                </td>\r\n                <td>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"reason\"\r\n                        value={item?.reason}\r\n                        placeholder=\"Enter Reason\"\r\n                        onChange={(e) => handleFromChange(e, \"\", index)}\r\n                        readOnly={item?.isEdit ? false : true}\r\n                        style={{\r\n                            border: errors[index]?.reason ? \"1px solid #E44438\" : \"\",\r\n                        }}\r\n                    />\r\n                </td>\r\n                <td>\r\n                    <div className=\"d-flex align-items-center gap-2 justify-content-end actionTd\">\r\n                        {item?.isEdit ? (\r\n                            <>\r\n                                <button type=\"button\" className=\"bg-transparent border-0 p-0\" onClick={() => saveEditedRow(index)}>\r\n                                    <img src=\"images/save-icon.svg\" alt=\"\" width={13} />\r\n                                </button>\r\n                                <button type=\"button\" className=\"bg-transparent border-0 p-0\"\r\n                                    onClick={() => revertChanges(index)}\r\n                                >\r\n                                    <img src=\"images/cancel-icon.svg\" alt=\"\" width={11} />\r\n                                </button>\r\n                            </>) : (\r\n                            <button type=\"button\" className=\"bg-transparent border-0 p-0\"\r\n                                onClick={() => editAttendanceRow(index)}\r\n                            >\r\n                                <img src=\"images/edit-icon2.svg\" alt=\"\" width={12} />\r\n                            </button>)}\r\n                        <button type=\"button\" className=\"bg-transparent border-0 p-0\" onClick={() => deleteAttendanceRow(index)}>\r\n                            <img src=\"images/delete-icon.svg\" alt=\"\" width={12} />\r\n                        </button>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n            ) : (\r\n                !getAttendanceLogsPending && <BlankTableError totalField={7} />\r\n            )\r\n        )\r\n\r\n    }\r\n\r\n    /* Get Leave Constant Data */\r\n    const getLeaveConstantData = (params) => {\r\n        dispatch(leaveAction.getLeaveConstantDataRequest(params));\r\n    }\r\n    useEffect(() => {\r\n        if (!getLeaveConstantDataPending) {\r\n            if (getLeaveConstantDataError) {\r\n                return;\r\n            }\r\n            if (getLeaveConstantDataRes) {\r\n                if (getLeaveConstantDataRes?.code === 200) {\r\n                    setAllLeaveConstantData(getLeaveConstantDataRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getLeaveConstantDataRes,\r\n        getLeaveConstantDataError,\r\n        getLeaveConstantDataPending\r\n    ]);\r\n\r\n    return (\r\n        <div\r\n            className={`offcanvas offcanvas-end applyLeaveCanvas allBreakCanvas ${openModel ? 'show' : ''}`}\r\n            tabIndex={-1}\r\n            id=\"allBreakCanvas\"\r\n            style={{\r\n                visibility: openModel ? 'visible' : 'hidden',\r\n                width: \"750px\"\r\n            }}\r\n        >\r\n            <div className=\"offcanvas-header\">\r\n                <h5 className=\"offcanvas-title  fs-6 fw-bold text-primary\">All Break</h5>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn-close\"\r\n                    data-bs-dismiss=\"offcanvas\"\r\n                    aria-label=\"Close\"\r\n                    onClick={() => { handleOpenClose(viewModalType ? viewModalType : '') }}\r\n                />\r\n            </div>\r\n            <div className=\"offcanvas-body\">\r\n                <div className=\"formPanel\">\r\n                    <CorrectionCards correctionData={selectedCalenderData} />\r\n                    <div className=\"d-flex align-items-center justify-content-between mb-3\">\r\n                        <strong className=\"fs-7 text-primary\">\r\n                            <span className=\"fw-normal\">Corrected break :</span>\r\n                            00:00:00\r\n                        </strong>\r\n                        <span className=\"fs-8 text-primary\">\r\n                            <img src=\"images/add-event.svg\" alt=\"\" width={14} className=\"me-2\" />\r\n                            <u style={{ cursor: \"pointer\" }} onClick={() => addEvent()}>Add Event</u>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"tableDiv\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Date</th>\r\n                                    <th>Time</th>\r\n                                    <th>Activity Name</th>\r\n                                    <th>IN/OUT</th>\r\n                                    <th>Requested Time</th>\r\n                                    <th>Reason</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {getAttendanceLogsPending ? <CustomSpinner isShow={getAttendanceLogsPending} size=\"xl\" /> : renderAttendanceLogs()}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"offcanvas-footer\">\r\n                <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n\r\n                    <CustomButton\r\n                        classNames=\"border-0 p-0 bg-transparent cancelBtn\"\r\n                        handleClick={() => handleOpenClose()}\r\n                        text={\"Back\"}\r\n                    />\r\n                    <CustomButton\r\n                        classNames=\"btn btn-org-gradient\"\r\n                        text={\"Update\"}\r\n                        handleClick={() => updateLogs()}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AttendanceLogs\r\n","import React, { useState, useEffect } from 'react'\r\nimport { CustomButton, CustomDateRangePicker, CustomError } from '../../globalComponents'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { leaveAction } from '../../../core/resource/actions';\r\nimport { toast } from 'react-toastify';\r\nimport { addDays } from 'date-fns';\r\nimport { DateRangePicker, DateRange } from 'react-date-range';\r\nimport 'react-date-range/dist/styles.css'; // main css file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport './LeaveCalendar.css';\r\nimport { enUS } from 'date-fns/locale';\r\nimport moment from 'moment';\r\nimport { validateSchema } from '../../../utils/ValidationHelper';\r\nimport { applyLeaveSchema } from '../../../utils/ValidationSchema';\r\nimport ApproveRejectModal from '../../modal/ApproveRejectModal';\r\n\r\nconst LeaveApplication = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { openModel, openLeaveApplicationModel } = props\r\n\r\n    const { applyLeavePending,\r\n        applyLeaveRes,\r\n        applyLeaveError,\r\n\r\n        getAllEmployeeLeavePending,\r\n        getAllEmployeeLeaveRes,\r\n        getAllEmployeeLeaveError,\r\n\r\n        sandwichLeavesDatesPending,\r\n        sandwichLeavesDatesRes,\r\n        sandwichLeavesDatesError,\r\n\r\n        getLeaveBalancePending,\r\n        getLeaveBalanceRes,\r\n        getLeaveBalanceError,\r\n\r\n    } = useSelector(state => state.leave)\r\n    const [startDate, setStartDate] = useState(moment().format('YYYY-MM-DD'));\r\n    const [endDate, setEndDate] = useState(moment().format('YYYY-MM-DD'));\r\n    const [leaveType, setLeaveType] = useState()\r\n    const [reason, setReason] = useState('')\r\n    const [errors, setErrors] = useState({});\r\n    const [applyLeaveModel, setApplyLeaveModel] = useState(false)\r\n    const [getAllEmployeeInLeave, setAllEmployeeInLeave] = useState([])\r\n    const [sandwichDates, setSandWichDates] = useState([])\r\n    const [leaveBalance, setLeaveBalance] = useState([])\r\n    const [state, setState] = useState([\r\n        {\r\n            startDate: new Date(),\r\n            endDate: new Date(),\r\n            key: 'selection'\r\n        }\r\n    ]);\r\n\r\n    const [leaveDetails, setLeaveDetails] = useState([\r\n        { leave_date: '', leave_type: '', leave_status: '' },\r\n    ]);\r\n    const [holiday, setHoliya] = useState([\r\n        { holiday_date: '2024-10-08', holiday_type: 'full_day' },\r\n        { holiday_date: '2024-10-15', holiday_type: 'full_day' },\r\n        { holiday_date: '2024-10-20', holiday_type: 'first_half' },\r\n    ])\r\n    const setLeaveTypefun = (data) => {\r\n        resetFunction()\r\n        setLeaveType(data)\r\n    }\r\n    const handleRadioChange = (index, value) => {\r\n        const updatedLeaveDetails = leaveDetails.map((item, i) =>\r\n            i === index ? { ...item, leave_status: value } : item\r\n        );\r\n        setLeaveDetails(updatedLeaveDetails);\r\n    };\r\n\r\n    const handleRangeChange = (item) => {\r\n        const { startDate, endDate } = item.selection;\r\n        setState([item.selection]);\r\n        setStartDate(moment(startDate).format('YYYY-MM-DD'));\r\n        setEndDate(moment(endDate).format('YYYY-MM-DD'));\r\n    };\r\n\r\n    useEffect(() => {\r\n        getLeaveBalance()\r\n    }, [openModel])\r\n    useEffect(() => {\r\n        createLeave()\r\n    }, [endDate])\r\n\r\n    const getEmpOnleaveinDaterange = (start, end) => {\r\n        let data = {\r\n            start_date: start,\r\n            end_date: end\r\n        }\r\n        dispatch(leaveAction.getAllEmployeeLeaveRequest(data))\r\n    }\r\n\r\n    const createLeave = () => {\r\n        const start = new Date(moment(startDate).format('MM-DD-YYYY'));\r\n        const end = new Date(moment(endDate).format('MM-DD-YYYY'));\r\n        let loop = new Date(start);\r\n        let i = 0;\r\n        let newArr = [{ leave_date: '', leave_type: '', leave_status: '' }];\r\n        while (loop <= end) {\r\n            // let a = moment(loop);\r\n            // let b = moment(new Date());\r\n            var day = moment(loop).day();\r\n            if (\r\n                day === 1 ||\r\n                day === 2 ||\r\n                day === 3 ||\r\n                day === 4 ||\r\n                day === 5 ||\r\n                day === 6 ||\r\n                day === 0\r\n            ) {\r\n                if (holiday.some(item => moment(item.holiday_date).format(\"YYYY-MM-DD\") == moment(loop).format('YYYY-MM-DD'))) {\r\n                    let getHoliday = holiday.filter(item => moment(item.holiday_date).format('DD-MM-YYYY') == moment(loop).format('DD-MM-YYYY'))\r\n                    newArr[i].leave_date = moment(loop).format('YYYY-MM-DD');\r\n                    newArr[i].leave_type = \"holiday\"\r\n                    newArr[i].leave_status = getHoliday[0].holiday_type;\r\n                    setLeaveDetails(newArr);\r\n                    let newArr1 = newArr;\r\n                    newArr = [\r\n                        ...newArr1,\r\n                        { leave_date: '', leave_type: '', leave_status: '' },\r\n                    ];\r\n                    let newDate = loop.setDate(loop.getDate() + 1);\r\n                    loop = new Date(newDate);\r\n                    i = i + 1;\r\n                } else {\r\n                    newArr[i].leave_date = moment(loop).format('YYYY-MM-DD');\r\n                    newArr[i].leave_type = leaveType;\r\n                    newArr[i].leave_status = \"Full Day\";\r\n                    setLeaveDetails(newArr);\r\n                    let newArr1 = newArr;\r\n                    newArr = [\r\n                        ...newArr1,\r\n                        { leave_date: '', leave_type: '', leave_status: '' },\r\n                    ];\r\n                    let newDate = loop.setDate(loop.getDate() + 1);\r\n                    loop = new Date(newDate);\r\n                    i = i + 1;\r\n                }\r\n            } else {\r\n                let newDate1 = loop.setDate(loop.getDate() + 1);\r\n                loop = new Date(newDate1);\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (!applyLeavePending) {\r\n            if (applyLeaveError) {\r\n                return;\r\n            }\r\n            if (applyLeaveRes) {\r\n                if (applyLeaveRes?.code === 200) {\r\n                    resetFunction()\r\n                    getLeaveBalance()\r\n                    dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_CLEAR_APPLY_LEAVE_STORE\"))\r\n                    openLeaveApplicationModel()\r\n                    setLeaveBalance([])\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        applyLeaveRes,\r\n        applyLeaveError,\r\n        applyLeavePending\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!getAllEmployeeLeavePending) {\r\n            if (getAllEmployeeLeaveError) {\r\n                return;\r\n            }\r\n            if (getAllEmployeeLeaveRes) {\r\n                if (getAllEmployeeLeaveRes?.code === 200) {\r\n                    setAllEmployeeInLeave(getAllEmployeeLeaveRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        applyLeaveRes,\r\n        getAllEmployeeLeaveError,\r\n        getAllEmployeeLeavePending\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!sandwichLeavesDatesPending) {\r\n            if (sandwichLeavesDatesError) {\r\n                return;\r\n            }\r\n            if (sandwichLeavesDatesRes) {\r\n                if (sandwichLeavesDatesRes?.code === 200) {\r\n                    dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_SANDWICH_LEAVE_STORE\"))\r\n                    if (sandwichLeavesDatesRes.data !== null) {\r\n                        setApplyLeaveModel(!applyLeaveModel)\r\n                        setSandWichDates(sandwichLeavesDatesRes.data)\r\n                    } else {\r\n                        setApplyLeaveModel(!applyLeaveModel)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        sandwichLeavesDatesRes,\r\n        sandwichLeavesDatesError,\r\n        sandwichLeavesDatesPending\r\n    ]);\r\n\r\n    const submitApplyLeave = async (type) => {\r\n        if (type) {\r\n            let leaveData = leaveDetails.filter(item => item.leave_type !== \"holiday\" && item.leave_type !== \"\")\r\n            let data = {\r\n                leaveDetails: leaveData,\r\n                reason: reason\r\n            }\r\n            const validationResponse = await validateSchema(applyLeaveSchema, data);\r\n            if (validationResponse.isValid) {\r\n                dispatch(leaveAction.applyLeaveRequest(data))\r\n                setApplyLeaveModel(!applyLeaveModel)\r\n                setErrors({})\r\n            } else {\r\n                setErrors(validationResponse.errors);\r\n            }\r\n        } else {\r\n            setApplyLeaveModel(!applyLeaveModel)\r\n        }\r\n    }\r\n\r\n    const closeButton = () => {\r\n        openLeaveApplicationModel()\r\n        setLeaveBalance([])\r\n        resetFunction()\r\n    }\r\n    const resetFunction = () => {\r\n        console.log(\"Close\")\r\n        setLeaveType()\r\n        setReason('')\r\n        setStartDate(' ')\r\n        setEndDate(' ')\r\n        setLeaveDetails([{\r\n            leave_date: '', leave_type: '', leave_status: ''\r\n        }])\r\n        setState([{\r\n            startDate: new Date(),\r\n            endDate: new Date(),\r\n            key: 'selection'\r\n        }])\r\n    }\r\n    const submitApplyLeavefun = () => {\r\n        let data = {\r\n            leaveDetails: leaveDetails\r\n        }\r\n        dispatch(leaveAction.sandwichLeavesDatesRequest(data))\r\n    }\r\n\r\n    /*Get Leave Balance Api call  */\r\n    const getLeaveBalance = () => {\r\n        dispatch(leaveAction.getLeaveBalanceRequest());\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getLeaveBalancePending) {\r\n            if (getLeaveBalanceError) {\r\n                return;\r\n            }\r\n            if (getLeaveBalanceRes) {\r\n                if (getLeaveBalanceRes?.code === 200) {\r\n                    const getLeaveTypeListResData = getLeaveBalanceRes?.data\r\n                    setLeaveBalance(getLeaveTypeListResData)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getLeaveBalanceRes,\r\n        getLeaveBalanceError,\r\n        getLeaveBalancePending\r\n    ]);\r\n    return (\r\n        <>\r\n            <div   div className={`offcanvas offcanvas-end applyLeaveCanvas ${openModel ? 'show' : ''}`}\r\n\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">Leave Application</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => closeButton()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"form-group mb-3\">\r\n                            <label for=\"\" className=\"text-primary\"><i className=\"bi bi-calendar2-range-fill pe-2\"></i> Leave\r\n                                Type</label>\r\n                            <ul className=\"typeCheckList\">\r\n                                {leaveBalance && leaveBalance?.map((item, index) => (\r\n                                    <>{\r\n                                        <li>\r\n                                            <div className=\"typeCheck\">\r\n                                                <input type=\"radio\" id={`type${index + 1}`} value={item?.leave_type} name='leave_type' onChange={(e) => setLeaveTypefun(e.target.value)} className=\"d-none\" disabled={item?.leave_balance == '0'} />\r\n                                                <label for={`type${index + 1}`}>{item?.leave_name} ({item?.leave_balance}) <i className=\"bi bi-check-lg\"></i></label>\r\n                                            </div>\r\n                                        </li>}</>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                        {leaveType != undefined &&\r\n                            <>\r\n                                <div className=\"form-group mb-3 csmCalanderGroup\">\r\n                                    <label for=\"\" className=\"text-primary\"><i className=\"bi bi-calendar2-range-fill pe-2\"></i> Select Leave Date</label>\r\n                                    <div id=\"datePicker\">\r\n                                        <div className=\"\">\r\n                                            <DateRange\r\n                                                editableDateInputs={true}\r\n                                                onChange={handleRangeChange}\r\n                                                moveRangeOnFirstSelection={false}\r\n                                                ranges={state}\r\n                                                showPreview={true}\r\n                                                rangeColors={['#F47320']}\r\n                                            />\r\n                                        </div>\r\n                                        {errors?.leaveDetails && (\r\n                                            <CustomError text={errors.leaveDetails} />\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <ul className=\"typeCheckList addDate\">\r\n                                        {leaveDetails && leaveDetails[0].leave_date !== '' &&\r\n                                            leaveDetails.map((item, index) => (\r\n                                                <>\r\n                                                    <li>\r\n                                                        <div className=\"date\">\r\n                                                            <span>{item?.leave_date}</span>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                    {item.leave_type == 'holiday' ?\r\n                                                        <>\r\n                                                            <li>\r\n                                                                <div className=\"typeCheck\">\r\n                                                                    <input\r\n                                                                        type=\"radio\"\r\n                                                                        id={`fullDay${index}`}\r\n                                                                        name={`statusleaveType${index}`}\r\n                                                                        className=\"d-none\"\r\n                                                                        checked={item.leave_type === 'Full Day'}\r\n                                                                        readOnly\r\n                                                                    //   onChange={() => handleRadioChange(index, 'Full Day')}\r\n                                                                    />\r\n                                                                    <label style={{ color: 'red' }} htmlFor={`fullDay${index}`}>Holiday <i className=\"bi bi-check-lg\"></i></label>\r\n                                                                </div>\r\n                                                            </li>\r\n                                                            <li>\r\n                                                                <div className=\"typeCheck\">\r\n                                                                    <input\r\n                                                                        type=\"radio\"\r\n                                                                        id={`firstHalfDay${index}`}\r\n                                                                        name={`statusleaveType${index}`}\r\n                                                                        className=\"d-none\"\r\n                                                                        checked={item.leave_status === 'First Half Day'}\r\n                                                                    //   onChange={() => handleRadioChange(index, 'First Half Day')}\r\n                                                                    />\r\n                                                                    <label style={{ color: 'red' }} htmlFor={`firstHalfDay${index}`}>{item.leave_status == \"full_day\" ? 'Full Day' : item.leave_status == \"first_half\" ? \"First Half day\" : item.leave_status == \"second_half\" ? \"Second Half Day\" : ''}<i className=\"bi bi-check-lg\"></i></label>\r\n                                                                </div>\r\n                                                            </li>\r\n                                                            <li>\r\n                                                                <div className=\"typeCheck\">\r\n                                                                    <input\r\n                                                                        type=\"radio\"\r\n                                                                        id={`secondHalfDay${index}`}\r\n                                                                        name={`statusleaveType${index}`}\r\n                                                                        className=\"d-none\"\r\n                                                                        checked={item.leave_status === 'Second Half Day'}\r\n                                                                    //   onChange={() => handleRadioChange(index, 'Second Half Day')}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </li> </> :\r\n                                                        <>\r\n                                                            <li>\r\n                                                                <div className=\"typeCheck\">\r\n                                                                    <input\r\n                                                                        type=\"radio\"\r\n                                                                        id={`fullDay${index}`}\r\n                                                                        name={`statusleaveType${index}`}\r\n                                                                        className=\"d-none\"\r\n                                                                        checked={item.leave_status === 'Full Day'}\r\n                                                                        onChange={() => handleRadioChange(index, 'Full Day')}\r\n                                                                    />\r\n                                                                    <label htmlFor={`fullDay${index}`}>Full Day <i className=\"bi bi-check-lg\"></i></label>\r\n                                                                </div>\r\n                                                            </li>\r\n                                                            <li>\r\n                                                                <div className=\"typeCheck\">\r\n                                                                    <input\r\n                                                                        type=\"radio\"\r\n                                                                        id={`firstHalfDay${index}`}\r\n                                                                        name={`statusleaveType${index}`}\r\n                                                                        className=\"d-none\"\r\n                                                                        checked={item.leave_status === 'First Half Day'}\r\n                                                                        onChange={() => handleRadioChange(index, 'First Half Day')}\r\n                                                                    />\r\n                                                                    <label htmlFor={`firstHalfDay${index}`}>First Half Day <i className=\"bi bi-check-lg\"></i></label>\r\n                                                                </div>\r\n                                                            </li>\r\n                                                            <li>\r\n                                                                <div className=\"typeCheck\">\r\n                                                                    <input\r\n                                                                        type=\"radio\"\r\n                                                                        id={`secondHalfDay${index}`}\r\n                                                                        name={`statusleaveType${index}`}\r\n                                                                        className=\"d-none\"\r\n                                                                        checked={item.leave_status === 'Second Half Day'}\r\n                                                                        onChange={() => handleRadioChange(index, 'Second Half Day')}\r\n                                                                    />\r\n                                                                    <label htmlFor={`secondHalfDay${index}`}>Second Half Day <i className=\"bi bi-check-lg\"></i></label>\r\n                                                                </div>\r\n                                                            </li></>}\r\n                                                </>\r\n                                            ))}\r\n                                    </ul>\r\n                                </div>\r\n                                {leaveDetails && leaveDetails[0]?.leave_date != '' &&\r\n                                    <div className=\"form-group mb-3\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"durationBox\">\r\n                                                    <figure><img src=\"images/durationIcon.svg\" width=\"16\" alt=\"\" /></figure>\r\n                                                    <p><strong>Duration</strong> {leaveDetails && leaveDetails[0]?.leave_date != '' && leaveDetails?.length} Days</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <div className=\"durationBox\">\r\n                                                    <figure><img src=\"images/leaveDaysIcon.svg\" width=\"16\" alt=\"\" /></figure>\r\n                                                    <p><strong>Leave Days</strong>{moment(startDate).format('MMM Do')} - {moment(endDate).format('MMM Do YYYY')}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>}\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label for=\"\" className=\"text-primary\"><i className=\"bi bi-calendar2-range-fill pe-2\"></i> Reason</label>\r\n                                    <textarea className=\"form-control\" placeholder=\"Enter Reason\" value={reason} onChange={(e) => setReason(e.target.value)}></textarea>\r\n                                    {errors?.reason && (\r\n                                        <CustomError text={errors.reason} />\r\n                                    )}\r\n                                </div></>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <CustomButton\r\n                            text={\"Cancel\"}\r\n                            handleClick={() => closeButton()}\r\n                            classNames=\"border-0 p-0 bg-transparent cancelBtn\"\r\n                        />\r\n                        <CustomButton\r\n                            text={\"Save\"}\r\n                            handleClick={() => submitApplyLeavefun()}\r\n                            classNames=\"btn btn-org-gradient\"\r\n                            isLoading={sandwichLeavesDatesPending}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {applyLeaveModel && (\r\n                <ApproveRejectModal\r\n                    onApproveReject={submitApplyLeave}\r\n                    isShow={applyLeaveModel}\r\n                    desc={`${sandwichDates.length > 0 ? `Sandwich policy automatic apply for this Date ${sandwichDates.join(\", \")}` : \"want to this Apply leave\"}`}\r\n                    btnRightLoading={applyLeavePending}\r\n                    btnTextLeft=\"Cancel\"\r\n                />)\r\n            }\r\n            {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LeaveApplication","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { CustomButton, CustomDateRangePicker, CustomError } from '../../globalComponents'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { leaveAction } from '../../../core/resource/actions';\r\nimport { toast } from 'react-toastify';\r\nimport { DateRangePicker, DateRange } from 'react-date-range';\r\nimport 'react-date-range/dist/styles.css';\r\nimport 'react-date-range/dist/theme/default.css';\r\nimport { addDays } from 'date-fns';\r\nimport '../leaveApplication/LeaveCalendar.css';\r\nimport moment from 'moment';\r\nimport { Icon, Input, Label, Textarea } from '../../commanComponent';\r\n\r\nconst TourApplication = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { isOpenModal, openTourApplicationModel } = props\r\n    const {\r\n        applyTourPending,\r\n        applyTourRes,\r\n        applyTourError\r\n    } = useSelector(state => state.shift)\r\n\r\n    const [startDate, setStartDate] = useState('')\r\n    const [endDate, setEndDate] = useState(\"\")\r\n    const [tourFormData, setTourFormData] = useState({\r\n        visitingDes: '',\r\n        reason: '',\r\n    })\r\n    const [errors, setErrors] = useState('')\r\n\r\n    const [range, setRange] = useState([\r\n        {\r\n            startDate: new Date(),\r\n            endDate: new Date(),\r\n            key: 'selection'\r\n        }\r\n    ]);\r\n    const [holiday, setHoliya] = useState([\r\n        { holiday_date: '2024-10-08', holiday_type: 'full_day' },\r\n        { holiday_date: '2024-10-15', holiday_type: 'full_day' },\r\n        { holiday_date: '2024-10-20', holiday_type: 'first_half' },\r\n    ])\r\n    const [tourDetails, setTourDetails] = useState([\r\n        { tour_date: '', tour_status: '' },\r\n    ]);\r\n\r\n    const handleRadioChange = (index, value) => {\r\n        const updatedLeaveDetails = tourDetails.map((item, i) =>\r\n            i === index ? { ...item, tour_status: value } : item\r\n        );\r\n        setTourDetails(updatedLeaveDetails);\r\n    };\r\n    const handleRangeChange = (item) => {\r\n        const { startDate, endDate } = item.selection;\r\n        setRange([item.selection]);\r\n        setStartDate(moment(startDate).format('YYYY-MM-DD'));\r\n        setEndDate(moment(endDate).format('YYYY-MM-DD'));\r\n    };\r\n    useEffect(() => {\r\n        createLeave()\r\n    }, [endDate, startDate])\r\n    const createLeave = () => {\r\n        const start = new Date(moment(startDate).format('MM-DD-YYYY'));\r\n        const end = new Date(moment(endDate).format('MM-DD-YYYY'));\r\n        let loop = new Date(start);\r\n        let i = 0;\r\n        let newArr = [{ tour_date: '', tour_status: '' }];\r\n        while (loop <= end) {\r\n            var day = moment(loop).day();\r\n            if (\r\n                day === 1 ||\r\n                day === 2 ||\r\n                day === 3 ||\r\n                day === 4 ||\r\n                day === 5 ||\r\n                day === 6 ||\r\n                day === 0\r\n            ) {\r\n                if (holiday.some(item => moment(item.holiday_date).format(\"YYYY-MM-DD\") === moment(loop).format('YYYY-MM-DD'))) {\r\n                    let getHoliday = holiday.filter(item => moment(item.holiday_date).format('DD-MM-YYYY') === moment(loop).format('DD-MM-YYYY'))\r\n                    newArr[i].tour_date = moment(loop).format('YYYY-MM-DD');\r\n                    newArr[i].tour_type = \"holiday\"\r\n                    newArr[i].tour_status = getHoliday[0].holiday_type;\r\n                    setTourDetails(newArr);\r\n                    let newArr1 = newArr;\r\n                    newArr = [\r\n                        ...newArr1,\r\n                        { tour_date: '', tour_status: '' },\r\n                    ];\r\n                    let newDate = loop.setDate(loop.getDate() + 1);\r\n                    loop = new Date(newDate);\r\n                    i = i + 1;\r\n                } else {\r\n                    newArr[i].tour_date = moment(loop).format('YYYY-MM-DD');\r\n                    newArr[i].tour_status = \"Full Day\";\r\n                    setTourDetails(newArr);\r\n                    let newArr1 = newArr;\r\n                    newArr = [\r\n                        ...newArr1,\r\n                        { tour_date: '', tour_status: '' },\r\n                    ];\r\n                    let newDate = loop.setDate(loop.getDate() + 1);\r\n                    loop = new Date(newDate);\r\n                    i = i + 1;\r\n                }\r\n            } else {\r\n                let newDate1 = loop.setDate(loop.getDate() + 1);\r\n                loop = new Date(newDate1);\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (!applyTourPending) {\r\n            if (applyTourError) {\r\n                return;\r\n            }\r\n            if (applyTourRes) {\r\n                if (applyTourRes?.data?.code === 200) {\r\n                    dispatch(leaveAction.handleClearLeaveStore(\"HANDLE_CLEAR_APPLY_Tour_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        applyTourRes,\r\n        applyTourError,\r\n        applyTourPending\r\n    ]);\r\n\r\n    const submitApplyTour = () => {\r\n        let data = {\r\n            tourDetails: tourDetails,\r\n            reason: tourFormData?.reason,\r\n            destination: tourFormData?.visitingDes\r\n        }\r\n        dispatch(leaveAction.applyTourRequest(data))\r\n    }\r\n\r\n    const closeButton = () => {\r\n        openTourApplicationModel()\r\n        resetFunction()\r\n    }\r\n\r\n    const resetFunction = () => {\r\n        setTourFormData({\r\n            visitingDes: '',\r\n            reason: '',\r\n        })\r\n        setStartDate(' ')\r\n        setEndDate(' ')\r\n        setTourDetails([{\r\n            tour_date: '', tour_status: ''\r\n        }])\r\n        setRange([{\r\n            startDate: new Date(),\r\n            endDate: new Date(),\r\n            key: 'selection'\r\n        }])\r\n    }\r\n\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, type, checked } = e?.target ? e?.target : { value: e };\r\n        setTourFormData(prevState => {\r\n            let updatedState = {\r\n                ...prevState,\r\n                [name]: type === 'checkbox' ? checked : value,\r\n            };\r\n            return updatedState;\r\n        });\r\n        setErrors(prevErrors => ({\r\n            ...prevErrors,\r\n            [name]: undefined,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className={`offcanvas offcanvas-end applyLeaveCanvas ${isOpenModal ? 'show' : ''}`}\r\n\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: isOpenModal ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">Tour Application</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => closeButton()}\r\n                    />\r\n                </div>\r\n                <div class=\"offcanvas-body\">\r\n                    <div class=\"formPanel\">\r\n                        <div class=\"form-group mb-3\">\r\n                            <label for=\"\" class=\"text-primary\"><i class=\"bi bi-calendar2-range-fill pe-2\"></i> Visiting\r\n                                Destination</label>\r\n                            <Input\r\n                                type={\"text\"}\r\n                                name={'visitingDes'}\r\n                                placeholder={'Enter Visiting Destination'}\r\n                                onChange={handleFromChange}\r\n                                value={tourFormData?.visitingDes}\r\n                            />\r\n\r\n\r\n                        </div>\r\n                        <div class=\"form-group mb-3 csmCalanderGroup\">\r\n                            <label for=\"\" class=\"text-primary\"><i class=\"bi bi-calendar2-range-fill pe-2\"></i> Select Tour Date</label>\r\n                            <div className=\"\">\r\n                                <DateRange\r\n                                    editableDateInputs={true}\r\n                                    onChange={handleRangeChange}\r\n                                    moveRangeOnFirstSelection={false}\r\n                                    ranges={range}\r\n                                    showPreview={true}\r\n                                    rangeColors={['#F47320']}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3\">\r\n                            <ul className=\"typeCheckList addDate\">\r\n                                {tourDetails && tourDetails[0].tour_date !== '' &&\r\n                                    tourDetails.map((item, index) => (\r\n                                        <>\r\n                                            <li>\r\n                                                <div className=\"date\">\r\n                                                    <span>{item?.tour_date}</span>\r\n                                                </div>\r\n                                            </li>\r\n                                            {item.tour_type === 'holiday' ?\r\n                                                <>\r\n                                                    <li>\r\n                                                        <div className=\"typeCheck\">\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                id={`fullDay${index}`}\r\n                                                                name={`statustourType${index}`}\r\n                                                                className=\"d-none\"\r\n                                                                checked={item.tour_type === 'Full Day'}\r\n                                                                readOnly\r\n                                                            //   onChange={() => handleRadioChange(index, 'Full Day')}\r\n                                                            />\r\n                                                            <label style={{ color: 'red' }} htmlFor={`fullDay${index}`}>Holiday <i className=\"bi bi-check-lg\"></i></label>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <div className=\"typeCheck\">\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                id={`firstHalfDay${index}`}\r\n                                                                name={`statustourType${index}`}\r\n                                                                className=\"d-none\"\r\n                                                                checked={item.tour_status === 'First Half Day'}\r\n                                                            //   onChange={() => handleRadioChange(index, 'First Half Day')}\r\n                                                            />\r\n                                                            <label style={{ color: 'red' }} htmlFor={`firstHalfDay${index}`}>{item.tour_status === \"full_day\" ? 'Full Day' : item.tour_status === \"first_half\" ? \"First Half day\" : item.tour_status === \"second_half\" ? \"Second Half Day\" : ''}<i className=\"bi bi-check-lg\"></i></label>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <div className=\"typeCheck\">\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                id={`secondHalfDay${index}`}\r\n                                                                name={`statustourType${index}`}\r\n                                                                className=\"d-none\"\r\n                                                                checked={item.tour_status === 'Second Half Day'}\r\n                                                            //   onChange={() => handleRadioChange(index, 'Second Half Day')}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </li> </> :\r\n                                                <>\r\n                                                    <li>\r\n                                                        <div className=\"typeCheck\">\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                id={`fullDay${index}`}\r\n                                                                name={`statustourType${index}`}\r\n                                                                className=\"d-none\"\r\n                                                                checked={item.tour_status === 'Full Day'}\r\n                                                                onChange={() => handleRadioChange(index, 'Full Day')}\r\n                                                            />\r\n                                                            <label htmlFor={`fullDay${index}`}>Full Day <i className=\"bi bi-check-lg\"></i></label>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <div className=\"typeCheck\">\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                id={`firstHalfDay${index}`}\r\n                                                                name={`statustourType${index}`}\r\n                                                                className=\"d-none\"\r\n                                                                checked={item.tour_status === 'First Half Day'}\r\n                                                                onChange={() => handleRadioChange(index, 'First Half Day')}\r\n                                                            />\r\n                                                            <label htmlFor={`firstHalfDay${index}`}>First Half Day <i className=\"bi bi-check-lg\"></i></label>\r\n                                                        </div>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <div className=\"typeCheck\">\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                id={`secondHalfDay${index}`}\r\n                                                                name={`statustourType${index}`}\r\n                                                                className=\"d-none\"\r\n                                                                checked={item.tour_status === 'Second Half Day'}\r\n                                                                onChange={() => handleRadioChange(index, 'Second Half Day')}\r\n                                                            />\r\n                                                            <label htmlFor={`secondHalfDay${index}`}>Second Half Day <i className=\"bi bi-check-lg\"></i></label>\r\n                                                        </div>\r\n                                                    </li></>}\r\n                                        </>\r\n                                    ))}\r\n                            </ul>\r\n                        </div>\r\n                        {tourDetails && tourDetails[0]?.tour_date !== '' &&\r\n                            <div className=\"form-group mb-3\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                        <div className=\"durationBox\">\r\n                                            <figure><img src=\"images/durationIcon.svg\" width=\"16\" alt=\"\" /></figure>\r\n                                            <p><strong>Duration</strong> {tourDetails && tourDetails[0]?.tour_date !== '' && tourDetails?.length} Days</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        <div className=\"durationBox\">\r\n                                            <figure><img src=\"images/leaveDaysIcon.svg\" width=\"16\" alt=\"\" /></figure>\r\n                                            <p><strong>Tour Days</strong>{moment(startDate).format('MMM Do')} - {moment(endDate).format('MMM Do YYYY')}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n\r\n\r\n                        <div class=\"form-group mb-3\">\r\n                            <Icon className={\"bi bi-calendar2-range-fill pe-1 text-primary\"} />\r\n                            <Label text={\"Reason\"} />\r\n                            <Textarea\r\n                                name='reason'\r\n                                placeholder=\"Enter Reason\"\r\n                                onChange={handleFromChange}\r\n                            />\r\n                            {errors?.reason && (\r\n                                <CustomError text={errors.reason} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <button type=\"button\" className=\"border-0 p-0 bg-transparent cancelBtn\" onClick={() => closeButton()}>Cancel</button>\r\n                        <CustomButton\r\n                            text={\"save\"}\r\n                            classNames={\"btn btn-org-gradient\"}\r\n                            handleClick={() => submitApplyTour()}\r\n                            // isLoading={}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isOpenModal && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TourApplication","import React from 'react'\r\nimport Lottieplayer from '../commanComponent/Lottieplayer'\r\nimport backup from '../../../src/images/Backup.json'\r\nimport { CustomButton } from '../globalComponents'\r\nimport PropTypes from 'prop-types'\r\nimport { useCustomTranslation } from '../../translation'\r\n\r\n/**\r\n * ApproveRejectModal component.\r\n * @param {string} [title=\"Are You Sure?\"] - Title of the modal (optional, defaults to \"Are You Sure?\")\r\n * @param {string} [desc] - Description text (optional).\r\n * @param {function} onApproveReject - Callback function for handling approve/reject actions (required).\r\n * @param {boolean} isShow - Boolean flag to show or hide the modal (required).\r\n * @param {boolean} [btnRightLoading=false] - Boolean flag to show loading state for the right button (optional).\r\n * @param {string} [btnTextLeft=\"Cancel\"] - Custom text for the left button (optional).\r\n * @param {string} [btnTextRight=\"Confirm\"] - Custom text for the right button (optional).\r\n * @returns {void}\r\n */\r\nconst ApproveRejectModal = (\r\n  {  \r\n    title ,               \r\n    desc = \"\",                           \r\n    onApproveReject,                      \r\n    isShow,                               \r\n    btnLeftLoading = false,               \r\n    btnRightLoading = false,              \r\n    btnTextLeft ,               \r\n    btnTextRight     \r\n}\r\n) => {\r\n    const {t} =useCustomTranslation()\r\n    return (\r\n        <>\r\n            <div className=\"modal fade attendanceViewodal\" id=\"sureMdl\" style={{ display: isShow ? \"unset !important\" : \"none !important\", opacity: isShow ? \"unset\" : \"0\" }}>\r\n                <div className=\"modal-dialog modal-dialog-centered\">\r\n                    <div className=\"modal-content rounded-1 border-0\">\r\n                        <div className=\"modal-body \">\r\n                            <div className=\"text-center suremodalCon\">\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <Lottieplayer lottieUrl={backup} Lottiestyle={{ width: \"90px\", height: \"90px\" }} />\r\n                                </div>\r\n                                <h6 className=\"fw-semibold mb-2\">{title?title:t(\"alerts.deletePopup.title\")}</h6>\r\n                                <p className=\"mb-5 px-4 text-center\">{desc ? desc : \"\"}\r\n                                </p>\r\n                                <div className=\"d-flex justify-content-center gap-3\">\r\n                                    <CustomButton\r\n                                        classNames={\"btn btn-danger\"}\r\n                                        isLoading={btnLeftLoading}\r\n                                        text={btnTextLeft?btnTextLeft:t(\"btns.reject\") }\r\n                                        handleClick={() => onApproveReject(false)}\r\n                                    />\r\n                                    <CustomButton\r\n                                        classNames={\"btn btn-success\"}\r\n                                        isLoading={btnRightLoading}\r\n                                        text={btnTextRight?btnTextRight:t(\"btns.confirm\")}\r\n                                        handleClick={() => onApproveReject(true)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {isShow && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    )\r\n}\r\n// Add PropTypes validation\r\nApproveRejectModal.propTypes = {\r\n    title: PropTypes.string,                     \r\n    desc: PropTypes.string,                       \r\n    onApproveReject: PropTypes.func.isRequired,   \r\n    isShow: PropTypes.bool.isRequired,            \r\n    btnRightLoading: PropTypes.bool,                         \r\n    btnTextLeft: PropTypes.string,                \r\n    btnTextRight: PropTypes.string,   \r\n};\r\n\r\nexport default ApproveRejectModal\r\n"],"names":["props","dispatch","useDispatch","openModel","handleOpenClose","toggleShowAllBreakModal","selectedCalenderData","updatedLogsData","attendanceCorrectionsData","setAttendanceCorrectionData","useState","appConstantData","setAppConstantData","applyAttendanceCorrectionPending","applyAttendanceCorrectionRes","applyAttendanceCorrectionError","useSelector","state","attendanceCorrection","getAppConstantDataPending","getAppConstantDataRes","getAppConstantDataError","common","t","useCustomTranslation","errors","setErrors","attendanceCorrectionFromData","setAttendanceCorrectionFromData","actualCheckIn","requestedCheckInTime","requestedCheckOutTime","requestedCheckInReason","requestedCheckOutReason","actualCheckOut","attendanceLogs","correctionStatus","actualBreak","correctedBreak","attendanceStatus","shiftEndTime","shiftStartTime","duration","attendanceDate","totalWorkingHours","handleFromChange","e","fieldName","_e$target","name","target","value","prevState","prevErrors","undefined","useEffect","resetFromData","first_check_in_time","last_check_out_time","total_break_time","attendance_status","shift_end_time","shift_start_time","attendance_date","total_working_hours","pre","totalBreakTime","attendanceCorrectionActions","handleClearCorrectionRequest","code","isTimeWithinShift","time","startTime","endTime","moment","timeFormate","isBetween","timeToHourMinSec","validateReason","reason","field","checkMaxWordLimit","checkValidationAttendanceCorrection","hasError","getAppConstantData","data","commonActions","getAppConstantDataRequest","_jsxs","_Fragment","children","className","tabIndex","id","style","visibility","width","_jsx","type","onClick","CorrectionCards","correctionData","Label","text","required","CustomSelect","dayType","placeholder","handleChange","selectedOption","CustomError","Input","onChange","min","step","readOnly","Textarea","max","CustomButton","classNames","handleClick","async","payload","emp_id","date","actual_check_in_time","actual_check_out_time","check_in_reason","check_out_reason","correction_check_in_time","correction_check_out_time","attendance_logs","applyAttendanceCorrectionRequest","handleSubmitCorrection","_ref","dateFormate","viewModalType","setUpdatedLogsData","allLeaveConstantData","setAllLeaveConstantData","getAttendanceLogsPending","getAttendanceLogsRes","getAttendanceLogsError","updateAttendanceLogPending","updateAttendanceLogRes","updateAttendanceLogError","getLeaveConstantDataPending","getLeaveConstantDataRes","getLeaveConstantDataError","leave","setAttendanceLogs","getAttendanceLogs","getLeaveConstantData","getAttendanceLogsRequest","index","checked","updatedLogs","updatedError","Object","keys","length","handleCheckRowAdd","tempAttendanceLogs","requestedTime","activityName","checkInOut","selectStyle","control","provided","_errors$index","border","params","leaveAction","getLeaveConstantDataRequest","src","alt","cursor","addEvent","tempAttendanceLogsData","logsObj","format","isEdit","unshift","CustomSpinner","isShow","size","map","item","_errors$index2","_errors$index3","punch_date","punch_time","activityData","label","device_from_name","device_from","isDisabled","styles","inOutData","log_type","checkValidAdd","console","log","newAttendanceLogArray","newObj","saveEditedRow","revertChanges","prevLogs","i","editAttendanceRow","filter","_","ind","deleteAttendanceRow","BlankTableError","totalField","updateLogs","employeeLogs","_item$activityName","_item$activityName2","_item$checkInOut","updateAttendanceLogRequest","_leaveDetails$","_leaveDetails$2","openLeaveApplicationModel","applyLeavePending","applyLeaveRes","applyLeaveError","getAllEmployeeLeavePending","getAllEmployeeLeaveRes","getAllEmployeeLeaveError","sandwichLeavesDatesPending","sandwichLeavesDatesRes","sandwichLeavesDatesError","getLeaveBalancePending","getLeaveBalanceRes","getLeaveBalanceError","startDate","setStartDate","endDate","setEndDate","leaveType","setLeaveType","setReason","applyLeaveModel","setApplyLeaveModel","getAllEmployeeInLeave","setAllEmployeeInLeave","sandwichDates","setSandWichDates","leaveBalance","setLeaveBalance","setState","Date","key","leaveDetails","setLeaveDetails","leave_date","leave_type","leave_status","holiday","setHoliya","holiday_date","holiday_type","handleRadioChange","updatedLeaveDetails","getLeaveBalance","createLeave","start","end","loop","newArr","day","some","getHoliday","newDate","setDate","getDate","newDate1","resetFunction","handleClearLeaveStore","closeButton","getLeaveBalanceRequest","getLeaveTypeListResData","div","for","setLeaveTypefun","disabled","leave_balance","leave_name","DateRange","editableDateInputs","selection","moveRangeOnFirstSelection","ranges","showPreview","rangeColors","color","htmlFor","submitApplyLeavefun","sandwichLeavesDatesRequest","isLoading","ApproveRejectModal","onApproveReject","validationResponse","validateSchema","applyLeaveSchema","isValid","applyLeaveRequest","desc","join","btnRightLoading","btnTextLeft","_tourDetails$","_tourDetails$2","isOpenModal","openTourApplicationModel","applyTourPending","applyTourRes","applyTourError","shift","tourFormData","setTourFormData","visitingDes","range","setRange","tourDetails","setTourDetails","tour_date","tour_status","tour_type","_applyTourRes$data","class","Icon","submitApplyTour","destination","applyTourRequest","title","btnLeftLoading","btnTextRight","display","opacity","Lottieplayer","lottieUrl","backup","Lottiestyle","height"],"sourceRoot":""}