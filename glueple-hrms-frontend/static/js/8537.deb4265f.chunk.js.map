{"version":3,"file":"static/js/8537.deb4265f.chunk.js","mappings":"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","sources":["components/admin/bulkUpload/BulkUploadHeader.js","components/admin/bulkUpload/BulkUploadFile.js","components/admin/bulkUpload/PreviewFile.js","components/admin/bulkUpload/BulkUpload.js"],"sourcesContent":["import React from 'react'\r\nimport { isPermission } from '../../../utils/common'\r\nimport { CustomButton } from '../../globalComponents'\r\nconst mappingData = [\r\n    {\r\n        label: \"Department\",\r\n        value: \"department\",\r\n        totalCount: 2,\r\n        imgUrl: 'networking.png',\r\n        permissionId:\"department\"\r\n        \r\n    },\r\n    {\r\n        label: \"Functions\",\r\n        value: \"functions\",\r\n        totalCount: 2,\r\n        imgUrl: 'settings.png',\r\n         permissionId:\"functions\"\r\n    },\r\n    {\r\n        label: \"Projects\",\r\n        value: \"projects\",\r\n        totalCount: 1,\r\n        imgUrl: 'projectIcon.png',\r\n        permissionId:\"project\"  \r\n    },\r\n    {\r\n        label: \"Designation\",\r\n        value: \"designation\",\r\n        totalCount: 1,\r\n        imgUrl: 'designation.png',\r\n        permissionId:\"designation\"  \r\n    },\r\n\r\n    {\r\n        label: \"Skills\",\r\n        value: \"skills\",\r\n        totalCount: 1,\r\n        imgUrl: 'skills.png',\r\n        permissionId:\"skills\"\r\n    }\r\n\r\n\r\n]\r\nconst BulkUploadHeader = ({setIsActiveTab,isActiveTab}) => {\r\n    const renderMappingHeaders = () => {\r\n        return (mappingData?.map((item, ind) => (\r\n        \r\n        isPermission(item?.permissionId) &&<div className=\"col-2 px-md-2 mb-3\">\r\n            <div className={`cardBox h-100 daysBox `} style={{\r\n                minHeight: '80px',\r\n                background: \"#D8E8F7\",\r\n                ...(item?.value ==isActiveTab && { border: \"1px solid #60848d\" })\r\n            }}\r\n            onClick={()=>setIsActiveTab(item?.value)}\r\n            >\r\n                <figure>\r\n                    <img width={30} src={`images/${item?.imgUrl}`} alt=\"\" />\r\n                </figure>\r\n                <div>\r\n                    <span className=\"d-block \" style={{ fontSize: \"16px\" }}>{item?.label}</span>\r\n                   \r\n                    {/* <strong className=\"d-block \" style={{ float: \"inline-end\" }}>{item?.totalCount}</strong> */}\r\n                </div>\r\n\r\n            </div>\r\n        </div>)\r\n        ))\r\n    }\r\n    return (\r\n        <div className=\"row px-md-1 mb-3\">\r\n            {renderMappingHeaders()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BulkUploadHeader","import React, { useCallback, useState } from 'react';\r\nimport { CustomButton } from '../../globalComponents';\r\n\r\nconst BulkUploadFile = ({ onFileDataParsed, onActiveNext, setFileName ,fileName}) => {\r\n \r\n    const [error, setError] = useState('')\r\n\r\n\r\n    const handleBrowse = (e) => {\r\n        const file = e.target.files[0];\r\n        setError('')\r\n        if (file && (file.name.endsWith('.xlsx') || file.name.endsWith('.xls'))) {\r\n            setFileName(file.name);\r\n            console.log(file, 'File from browse');\r\n        } else {\r\n            setError('Please upload a valid Excel file.');\r\n        }\r\n    };\r\n\r\n    const handleDrop = useCallback((e) => {\r\n        e.preventDefault();\r\n        setError('')\r\n        const file = e.dataTransfer.files[0];\r\n        if (file && (file.name.endsWith('.xlsx') || file.name.endsWith('.xls'))) {\r\n            setFileName(file.name);\r\n            console.log(file, 'File from drop');\r\n        } else {\r\n            setError('Please upload a valid Excel file.');\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container my-5\">\r\n                {/* Step Navigation */}\r\n                <div className=\"container my-5\">\r\n                    {/* <div className=\"stepper\">\r\n                        <div className=\"step active\">Upload</div>\r\n                        <div className=\"step\">Preview & Edit</div>\r\n                    </div> */} \r\n                </div>\r\n\r\n                {/* Instruction */}\r\n                <div className=\"text-center mb-2\">\r\n                    <span>Don't have the template? Click Here*</span>\r\n                    <button className=\"download-template ms-2\">Download Template</button>\r\n                    <div className=\"small text-muted mt-1\">\r\n                        *Make sure you are using Candidates template file\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Upload Area */}\r\n                <div\r\n                    className=\"upload-box text-center\"\r\n                    onDrop={handleDrop}\r\n                    onDragOver={(e) => e.preventDefault()}\r\n                >\r\n                    <input\r\n                        type=\"file\"\r\n                        accept=\".xlsx,.xls\"\r\n                        onChange={handleBrowse}\r\n                        style={{ display: 'none' }}\r\n                        id=\"excel-upload\"\r\n                    />\r\n                    <label htmlFor=\"excel-upload\" style={{ cursor: 'pointer' }}>\r\n                        <i className=\"bi bi-cloud-upload\" style={{ fontSize: '5rem' }} />\r\n                        <br />\r\n                        <p className=\"mt-3 mb-0\">Drag file here or browse for file upload</p>\r\n                    </label>\r\n\r\n                    {/* Display file name if selected */}\r\n                    {fileName && (\r\n                        <div className=\"mt-2 text-success fw-bold\">\r\n                            Uploaded File: {fileName}\r\n                        </div>\r\n                    )}\r\n                    {error && (\r\n                        <div className=\"mt-2 text-danger fw-bold\">\r\n                            Error: {error}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Buttons */}\r\n                <div className=\"d-flex justify-content-end mt-4\">\r\n\r\n                    <CustomButton\r\n                        text={\"Submit\"}\r\n                        classNames=\"btn btn-primary\"\r\n                        handleClick={() => onActiveNext()}\r\n                    />\r\n                    {/* <button className=\"btn btn-primary\"></button> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BulkUploadFile;\r\n","import React, { useState } from 'react';\r\nimport { Icon } from '../../commanComponent';\r\nimport { CustomButton } from '../../globalComponents';\r\n\r\nconst PreviewFile = ({ data,onActiveNext }) => {\r\n    const [rows, setRows] = useState(data);\r\n\r\n    const handleChange = (index, key, value) => {\r\n        const updatedRows = [...rows];\r\n        updatedRows[index][key] = value;\r\n        setRows(updatedRows);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        console.log('Updated Data:', rows);\r\n\r\n    };\r\n    const handleDelete = (index) => {\r\n        const updatedRows = rows.filter((_, i) => i !== index);\r\n        setRows(updatedRows);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <h5 className=\"mb-3\">Preview & Edit Uploaded Data</h5>\r\n            <div style={{ overflowX: 'auto' }}>\r\n                <table className=\"table table-bordered table-sm\">\r\n                    <thead className=\"table-light\">\r\n                        <tr>\r\n                            {Object.keys(rows[0]).map((key) => (\r\n                                <th key={key}>{key}</th>\r\n                            ))}\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {rows.map((row, rowIndex) => (\r\n                            <tr key={rowIndex}>\r\n                                {Object.entries(row).map(([key, value]) => (\r\n                                    <td key={key}>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control form-control-sm\"\r\n                                            value={value}\r\n                                            onChange={(e) =>\r\n                                                handleChange(rowIndex, key, e.target.value)\r\n                                            }\r\n                                        />\r\n                                    </td>\r\n                                ))}\r\n                                <td>\r\n                                    <i\r\n                                        className=\"bi bi-trash text-danger\"\r\n                                        style={{ cursor: 'pointer' }}\r\n                                        onClick={() => handleDelete(rowIndex)}\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                </table>\r\n            </div>\r\n            <CustomButton\r\n                text={\"Back\"}\r\n                classNames=\"btn btn-primary\"\r\n                handleClick={() => onActiveNext(\"back\")}\r\n            />\r\n\r\n            <button className=\"btn btn-success mt-2 ms-2\" onClick={handleSave}>\r\n                Save Changes\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PreviewFile;\r\n","import React, { useState } from 'react'\r\nimport BulkUploadHeader from './BulkUploadHeader'\r\nimport BulkUploadFile from './BulkUploadFile'\r\nimport PreviewFile from './PreviewFile'\r\n\r\nconst BulkUpload = () => {\r\n    const [isActiveTab, setIsActiveTab] = useState('department')\r\n    const [fileName, setFileName] = useState('');\r\n    const [excelData, setExcelData] = useState('')\r\n    const [isPreview, setIsPreview] = useState(false)\r\n    const handleParsedData = (data) => {\r\n        console.log('Bulk Excel Data:', data);\r\n        // handle upload to backend or process data\r\n        setExcelData(data)\r\n    };\r\n\r\n    const onActiveNext = (type) => {\r\n        if (type === \"back\") {\r\n            setIsPreview(false)\r\n        } else {\r\n            setIsPreview(true)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <BulkUploadHeader\r\n                isActiveTab={isActiveTab}\r\n                setIsActiveTab={setIsActiveTab}\r\n            />\r\n            <div className='cardBox'>\r\n                <div className=\"d-flex align-items-center justify-content-between gap-3\">\r\n                    <div className=\"cardHead d-flex\">\r\n                        <img src=\"images/myrequest-icon.svg\" alt=\"\" width={35} />\r\n                        <h4 className=\"ms-2  text-capitalize\">{isActiveTab}</h4>\r\n                    </div>\r\n                   \r\n                </div>\r\n                <BulkUploadFile isActiveTab={isActiveTab} onFileDataParsed={handleParsedData} onActiveNext={onActiveNext}\r\n                    setFileName={setFileName}\r\n                    fileName={fileName}\r\n                />\r\n            </div>\r\n            {/* {isPreview && (\r\n                <PreviewFile data={excelData} onActiveNext={onActiveNext} />\r\n            )} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BulkUpload\r\n"],"names":["mappingData","label","value","totalCount","imgUrl","permissionId","_ref","setIsActiveTab","isActiveTab","_jsx","className","children","map","item","ind","isPermission","_jsxs","style","minHeight","background","border","onClick","width","src","alt","fontSize","onFileDataParsed","onActiveNext","setFileName","fileName","error","setError","useState","handleDrop","useCallback","e","preventDefault","file","dataTransfer","files","name","endsWith","console","log","onDrop","onDragOver","type","accept","onChange","target","display","id","htmlFor","cursor","CustomButton","text","classNames","handleClick","BulkUpload","excelData","setExcelData","isPreview","setIsPreview","BulkUploadHeader","BulkUploadFile","data"],"sourceRoot":""}