{"version":3,"file":"static/js/513.f15af9bd.chunk.js","mappings":"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","sources":["components/commanComponent/Lottieplayer.js","components/globalComponents/CustomError.js","components/globalComponents/CustomTimePicker.js","components/modal/ApproveRejectModal.js","components/modal/shiftManagement/AddCalendar.js","utils/ValidattionTranslation.js","utils/ValidationHelper.js","utils/ValidationSchema.js","components/modal/shiftManagement/CreateUpdateShift.js","components/shiftManagement/ShiftMenuDropdown.js","components/shiftManagement/ShiftInfoCard.js","components/shiftManagement/ShiftSchedualCards.js","components/shiftManagement/ShiftSchedual.js","components/modal/shiftManagement/ShiftConfiguration.js","components/modal/shiftManagement/AssignShift.js","components/shiftManagement/ShiftCalanderHeader.js","components/shiftManagement/ShiftTableHeader.js","components/shiftManagement/EmployeeInfoCard.js","components/shiftManagement/ShiftTableBody.js","components/shiftManagement/ShiftCalander.js","view/ShiftManagement.js"],"sourcesContent":["import React from 'react'\r\nimport Lottie from 'react-lottie-player'\r\n\r\nconst Lottieplayer = ({lottieUrl,Lottiestyle,speed,backgroundColor}) => {\r\n  return (\r\n    <Lottie\r\n                 loop\r\n               // src=\"../images/star-icon.json\"\r\n                animationData={lottieUrl||''}\r\n                background={backgroundColor ||\"transparent\"}\r\n                speed={speed ||\"1\"}\r\n                play\r\n                style={Lottiestyle}\r\n                autoplay>\r\n       </Lottie>\r\n  )\r\n}\r\n\r\nexport default Lottieplayer\r\n","import React from 'react'\r\n\r\nconst CustomError = ({text,style}) => {\r\n  return (\r\n    <>\r\n      <small \r\n      className=\"p-error text-danger\" \r\n      style={style ||{}}\r\n      >\r\n        {text}\r\n    </small>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomError\r\n","import React from 'react';\r\n\r\nconst CustomTimePicker = (props) => {\r\n  const {name,value,handleChange,totalHours,intervalMinutes} = props;\r\n\r\n  const generateTimeOptions = (totalHours, intervalMinutes) => {\r\n    const timeArray = [];\r\n    let hours = '00';\r\n    let minutes = '00';\r\n    for (let i = 0; i < totalHours; i++) {\r\n      for (let j = 0; j < 60; j++) {\r\n        hours = i < 10 ? `0${i}` : i;\r\n        if (j % intervalMinutes === 0) {\r\n          minutes = j < 10 ? `0${j}` : j;\r\n          timeArray.push({ item: `${hours}:${minutes}` });\r\n        }\r\n      }\r\n    }\r\n    return timeArray;\r\n  };\r\n  const timeOptions = generateTimeOptions(totalHours, intervalMinutes);\r\n\r\n  return (\r\n    <select \r\n      className=\"form-select\" \r\n      name={name} \r\n      value={value} \r\n      onChange={(e) => handleChange(e)}\r\n    >\r\n      <option value='' hidden>HH:MM</option>\r\n      {timeOptions.map((timeObj, index) => (\r\n        <option key={index} value={timeObj.item}>\r\n          {timeObj.item}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default CustomTimePicker;\r\n","import React from 'react'\r\nimport Lottieplayer from '../commanComponent/Lottieplayer'\r\nimport backup from '../../../src/images/Backup.json'\r\nimport { CustomButton } from '../globalComponents'\r\n\r\nconst ApproveRejectModal = ({ titile, desc, onApproveReject, isShow, isLoading, btnTextLeft,btnTextRight}) => {\r\n    return (\r\n        <>\r\n            <div class=\"modal fade attendanceViewodal\" id=\"sureMdl\" style={{ display: isShow ? \"unset !important\" : \"none !important\", opacity: isShow ? \"unset\" : \"0\" }}>\r\n                <div class=\"modal-dialog modal-dialog-centered\">\r\n                    <div class=\"modal-content rounded-1 border-0\">\r\n                        <div class=\"modal-body \">\r\n                            <div class=\"text-center suremodalCon\">\r\n                                <div class=\"d-flex justify-content-center\">\r\n                                    <Lottieplayer lottieUrl={backup} Lottiestyle={{ width: \"90px\", height: \"90px\" }} />\r\n                                </div>\r\n                                <h6 class=\"fw-semibold mb-2\">{titile ? titile : \"Are You Sure?\"}</h6>\r\n                                <p class=\"mb-5 px-4\">{desc ? desc : \"\"}\r\n                                </p>\r\n                                <div class=\"d-flex justify-content-center gap-3\">\r\n                                    <CustomButton\r\n                                        classNames={\"btn btn-danger\"}\r\n                                        isLoading={isLoading}\r\n                                        text={btnTextLeft || \"Reject\"}\r\n                                        handleClick={() => onApproveReject(false)}\r\n                                    />\r\n                                    <CustomButton\r\n                                        classNames={\"btn btn-success\"}\r\n                                        isLoading={isLoading}\r\n                                        text={btnTextRight || \"Confirm\"}\r\n                                        handleClick={() => onApproveReject(true)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ApproveRejectModal\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CustomButton } from '../../globalComponents';\r\nimport { shiftManagementAction } from '../../../core/resource/actions';\r\nimport { toast } from 'react-toastify';\r\nimport { addCalendarchema } from '../../../utils/ValidationSchema';\r\nimport { validateSchema } from '../../../utils/ValidationHelper';\r\nimport CustomError from '../../globalComponents/CustomError';\r\nimport moment from 'moment'\r\nimport CustomHoursMinPicker from '../../globalComponents/CustomTimePicker';\r\n\r\nconst AddCalendar = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { openAddCalendar, openAddCalendarModel, selectedCalendarData, setSelectedCalendarDatas, getAllShiftCalendar } = props\r\n    const { addShiftCalendarPending, addShiftCalendarRes, addShiftCalendarError } = useSelector(state => state.shift)\r\n    const [errors, setErrors] = useState({});\r\n    const [calendarId, setCalendarId] = useState('')\r\n    const [workingDay, setWorkingDay] = useState('')\r\n    const [weekOff, setweekOff] = useState()\r\n    const [alternativeSaturday, setalternativeSaturday] = useState([])\r\n    const [addCalendar, setAddCalendar] = useState({\r\n        title: '',\r\n        working_days: '',\r\n        alternative_saturday_off: '',\r\n        week_off: ''\r\n    })\r\n\r\n    const setWorkingDayfun = (data) => {\r\n        setWorkingDay(data)\r\n        if (data == '5') {\r\n            setweekOff(['6', '7'])\r\n        } else if (data == '6') {\r\n            setweekOff([])\r\n            setweekOff(['7'])\r\n        } else if (data == '7') {\r\n            setweekOff([])\r\n        }\r\n    }\r\n    const alternativeSaturdayFun = (e) => {\r\n        if (e.target.checked == true) {\r\n            setalternativeSaturday([...alternativeSaturday, e.target.value])\r\n        } else {\r\n            let newResult = alternativeSaturday.filter(val => val != e.target.value)\r\n            setalternativeSaturday([...newResult])\r\n        }\r\n    }\r\n    const weekOffFun = (e) => {\r\n        if (e.target.checked == true) {\r\n            setweekOff([...weekOff, e.target.value])\r\n        } else {\r\n            let newResult = weekOff.filter(val => val != e.target.value)\r\n            setweekOff([...newResult])\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setAddCalendar({ ...addCalendar, [name]: value });\r\n        setErrors(prev => ({ ...prev, [name]: undefined }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!addShiftCalendarPending) {\r\n            if (addShiftCalendarError) {\r\n                toast.error(addShiftCalendarError?.errorMessage)\r\n                return;\r\n            }\r\n            if (addShiftCalendarRes) {\r\n                if (addShiftCalendarRes?.data?.code === 200) {\r\n                    toast.success(addShiftCalendarRes?.data?.msg)\r\n                    console.log(\"Helllo Open Model new\")\r\n                    openAddCalendarModel()\r\n                    dispatch(shiftManagementAction.handleClearShiftStore(\"HANDLE_CLEAR_ADD_SHIFT_CALENDAR_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addShiftCalendarRes,\r\n        addShiftCalendarError,\r\n        addShiftCalendarPending\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setAddCalendar({\r\n            title: selectedCalendarData?.title || '',\r\n            working_days: selectedCalendarData?.working_days || '',\r\n            alternative_saturday_off: selectedCalendarData?.alternative_saturday_off || '',\r\n            week_off: selectedCalendarData?.week_off\r\n\r\n        })\r\n        setWorkingDay(selectedCalendarData?.working_days)\r\n        setweekOff(selectedCalendarData?.week_off)\r\n        setalternativeSaturday(selectedCalendarData?.alternative_saturday_off)\r\n        setCalendarId(selectedCalendarData?.id)\r\n    }, [selectedCalendarData])\r\n\r\n    // const handleSubmitCreateShift = async () => {\r\n    //     createShift.is_active = isActive\r\n    //     const validationResponse = await validateSchema(addShiftSchema, createShift);\r\n    //     if (validationResponse.isValid) {\r\n    //         setErrors({});\r\n    //         if (editShift) {\r\n    //             createShift['_id'] = shiftId\r\n    //             dispatch(shiftManagementAction.updateShiftRequest(createShift));\r\n    //             openAddCalendarModel()\r\n    //             getAllShiftFunction()\r\n    //         } else {\r\n    //             dispatch(shiftManagementAction.addShiftRequest(createShift));\r\n    //             getAllShiftFunction()\r\n    //         }\r\n\r\n    //     } else {\r\n    //         setErrors(validationResponse.errors);\r\n    //         console.log(validationResponse.errors, \"formattedErrors\");\r\n    //     }\r\n    // }\r\n\r\n\r\n    const handleSubmitCreateShiftConfiguration = async () => {\r\n        addCalendar.working_days = workingDay\r\n        addCalendar.alternative_saturday_off = alternativeSaturday\r\n        addCalendar.week_off = weekOff\r\n        const validationResponse = await validateSchema(addCalendarchema, addCalendar);\r\n        if (validationResponse.isValid) {\r\n            setErrors({});\r\n            if (selectedCalendarData) {\r\n                addCalendar['_id'] = calendarId\r\n                dispatch(shiftManagementAction.updateShiftCalendarRequest(addCalendar))\r\n                openAddCalendarModel()\r\n                getAllShiftCalendar()\r\n            } else {\r\n                dispatch(shiftManagementAction.addShiftCalendarRequest(addCalendar))\r\n                getAllShiftCalendar()\r\n            }\r\n            ;\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n            console.log(validationResponse.errors, \"formattedErrors\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (openAddCalendar === false) {\r\n            resetData()\r\n        }\r\n    }, [openAddCalendar])\r\n\r\n    const resetData = () => {\r\n        setAddCalendar({\r\n            title: '',\r\n            working_days: '',\r\n            alternative_saturday_off: '',\r\n            week_off: '',\r\n        })\r\n        setErrors({});\r\n        // setSelectedCalendarDatas(' ')\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end creatNewTicketOff ${openAddCalendar ? 'show' : ''}`}\r\n\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openAddCalendar ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{selectedCalendarData ? \"Update\" : \"Create New\"} Calendar</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => openAddCalendarModel()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"table-responsive tableDiv shiftmanagementtbl\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td width=\"30%\">\r\n                                        <div className=\"d-flex align-items-center\"><span className=\"srNum\">1</span><b\r\n                                            className=\"ps-3 text-primary\"> Title </b></div>\r\n                                    </td>\r\n                                    <td><input type=\"text\" name=\"title\" value={addCalendar.title} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter Title\" />\r\n                                        {errors?.title && (\r\n                                            <CustomError text={errors.title} />\r\n                                        )}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"d-flex align-items-center\"><span className=\"srNum\">5</span><b\r\n                                            className=\"ps-3 text-primary\"> Working Days</b></div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className=\"d-flex workingradio\">\r\n                                            <div className=\"shiftInpt\">\r\n                                                <select className=\"form-select\" required\r\n                                                    name='shift_type'\r\n                                                    value={workingDay}\r\n                                                    onChange={(e) => setWorkingDayfun(e.target.value)}\r\n                                                >\r\n                                                    <option value='' hidden selected>Select Required Working Days</option>\r\n                                                    <option value='5'>5 Days</option>\r\n                                                    <option value='6'>6 Days</option>\r\n                                                    <option value='7'>7 Days</option>\r\n                                                    <option value='alternative_saturday'>Alternative Saturday Off</option>\r\n                                                </select>\r\n                                                {errors?.working_days && (\r\n                                                    <CustomError text={errors.working_days} />\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                                {workingDay == 'alternative_saturday' &&\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div className=\"d-flex align-items-center\"><span className=\"srNum\">6</span><b\r\n                                                className=\"ps-3 text-primary\">Saturdays</b></div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div className=\"d-flex workingradio\">\r\n                                                <div className=\"d-flex gap-2 checkShift\">\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"1\" name='1' onClick={alternativeSaturdayFun} id=\"first\" />\r\n                                                        <label className=\"form-check-label\" for=\"first\">\r\n                                                            1st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"2\" name='2' onClick={alternativeSaturdayFun} id=\"second\" />\r\n                                                        <label className=\"form-check-label\" for=\"second\">\r\n                                                            2st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"3\" name='3' onClick={alternativeSaturdayFun} id=\"third\" />\r\n                                                        <label className=\"form-check-label\" for=\"third\">\r\n                                                            3st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"4\" name='4' onClick={alternativeSaturdayFun} id=\"fourth \" />\r\n                                                        <label className=\"form-check-label\" for=\"fourth \">\r\n                                                            4st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"5\" name='5' onClick={alternativeSaturdayFun} id=\"five \" />\r\n                                                        <label className=\"form-check-label\" for=\"five \">\r\n                                                            5st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                    </tr>}\r\n                                {workingDay != '7' && workingDay != 'alternative_saturday' &&\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div className=\"d-flex align-items-center\"><span className=\"srNum\">7</span><b\r\n                                                className=\"ps-3 text-primary\"> Week Off</b></div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div className=\"d-flex gap-2 checkShift\">\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"1\" name='1' id=\"first\" onClick={weekOffFun} checked={weekOff?.includes(\"1\")} />\r\n                                                    <label className=\"form-check-label\" for=\"first\">\r\n                                                        Monday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"2\" name='2' id=\"second\" onClick={weekOffFun} checked={weekOff?.includes(\"2\")} />\r\n                                                    <label className=\"form-check-label\" for=\"second\">\r\n                                                        Tuesday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"3\" name='3' id=\"third\" onClick={weekOffFun} checked={weekOff?.includes(\"3\")} />\r\n                                                    <label className=\"form-check-label\" for=\"third\">\r\n                                                        Wednesday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"4\" name='4' id=\"fourth \" onClick={weekOffFun} checked={weekOff?.includes(\"4\")} />\r\n                                                    <label className=\"form-check-label\" for=\"fourth \">\r\n                                                        Thursday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"5\" name='5' id=\"five \" onClick={weekOffFun} checked={weekOff?.includes(\"5\")} />\r\n                                                    <label className=\"form-check-label\" for=\"five \">\r\n                                                        Friday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"6\" name='6' id=\"five \" onClick={weekOffFun} checked={weekOff?.includes(\"6\")} />\r\n                                                    <label className=\"form-check-label\" for=\"five \">\r\n                                                        Saturday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"7\" name='7' id=\"five \" onClick={weekOffFun} checked={weekOff?.includes(\"7\")} />\r\n                                                    <label className=\"form-check-label\" for=\"five \">\r\n                                                        Sunday\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                    </tr>}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        {/* <button type=\"button\" className=\"border-0 p-0 bg-transparent cancelBtn\">Back</button> */}\r\n                        <button type=\"button\" className=\"btn btn-primary gradientBg\" onClick={() => handleSubmitCreateShiftConfiguration()}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddCalendar\r\n","\r\nconst ValidattionTranslation = {\r\n    \"validations.fieldReq\": \"$FIELD is required.\",\r\n    \"minLength\": \"Minimum length is $1 characters.\",\r\n    \"maxLength\": \"Maximum length is $1 characters.\",\r\n    \"emailInvalid\": \"The email address is invalid.\",\r\n    \"mobileNum\": \"Mobile Number\",\r\n    \"emailAddress\": \"Email Address\",\r\n    \"allFieldReq\": \"All $FIELD are required.\",\r\n    \"onlyDigit\":\"Mobile Number is only Digit\",\r\n    \"reqField\":\"$REQUIREDFIELD is required.\",\r\n    \"shiftName\":\"Only alphabets are allowed\",\r\n\r\n    //mrf validation \r\n    \"department\": \"Department is required.\",\r\n    \"designation\": \"Designation is required.\",\r\n    \"position\": \"Position is required.\",\r\n    \"priority\": \"Priority is required.\",\r\n    \"minQualififcation\": \"Minimum qualification is required.\",\r\n    \"preferredQualification\": \"Preferred qualification is required.\",\r\n    \"businessImpact\": \"Business impact is required.\",\r\n    \"hiringFor\": \"Hiring for is required.\",\r\n    \"vacantPosition\": \"Vacant position is required.\",\r\n    \"yearOfExperience\": \"Years of experience is required.\",\r\n    \"mrfJustification\": \"Mrf justification is required.\",\r\n\r\n    // job description \r\n    \"responsiblities\": \"Responsiblities is required.\",\r\n    \"domainKnowledge\": \"Domain Knowledge is required.\",\r\n    \"roleSummary\": \"Role Summary is required.\",\r\n\r\n    //intervewer \r\n    \"interviewStage\": \"InterviewStage is required.\",\r\n    \"interviewer\": \"Interviewer is required.\",\r\n    \"nterviewer\": \"Interview Type is required.\",\r\n\r\n    // //candidate \r\n    // \"employeeName\": \"Employee Name is required.\",\r\n    // \"employeeEmail\": \"Employee Email is required.\",\r\n    // \"employeeMobile\":\"Employee Mobile is required.\",\r\n    // \"location\":\"Employee Location is required.\",\r\n    // \"source\": \"Source is required.\",\r\n    // \"experience\":\"Experience is required.\",\r\n    // \"address\": \"Address is optional.\",\r\n    // \"pincode\": \"Pincode is optional.\",\r\n    // \"skills\": \"Skills is optional.\",\r\n\r\n};\r\nexport default ValidattionTranslation\r\n","// import {\r\n//   addOrganizationSchema,\r\n//   addOrgBranchSchema,\r\n//   organizationSettingSchema,\r\n//   addInvoiceSchema,\r\n// } from \"./ValidationSchema\";\r\n\r\nimport ValidattionTranslation from './ValidattionTranslation';\r\n\r\nconst trans = (key,replacements = {}) => {\r\nlet translation = ValidattionTranslation[key] || key;\r\nfor (const [placeholder, value] of Object.entries(replacements)) {\r\n  translation = translation.replace(new RegExp(`\\\\$${placeholder}`, 'g'), value);\r\n}\r\nreturn translation;\r\n}\r\nconst emailRegix =\r\n  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nconst panNumRegex = new RegExp(/^[A-Z]{5}[0-9]{4}[A-Z]{1}$/);\r\nconst onlyDigitRegix = /^\\d+$/;\r\n\r\nconst isFieldValid = (formik, name) =>\r\n  !!(formik.touched[name] && formik.errors[name]);\r\n\r\nconst getFieldErrorMsg = (formik, name) => {\r\n  return (\r\n    isFieldValid(formik, name) && (\r\n      <small className=\"p-error\">{formik.errors[name]}</small>\r\n    )\r\n  );\r\n};\r\n\r\nconst digitsOnly = (value) => {\r\n  return onlyDigitRegix.test(value);\r\n};\r\n\r\nconst validateResponse = () => {\r\n  return { status: 401, msg_code: 401, msg: \"\", isValid: false, errors: null };\r\n};\r\n\r\nconst isBlank = (value) => {\r\n  return value === \"\" || false;\r\n};\r\n\r\nconst isNull = (value) => {\r\n  return value === null || false;\r\n};\r\n\r\nconst isNun = (value) => {\r\n  return Number.isNaN(value) || false;\r\n};\r\n\r\nconst isBlankOrNull = (value) => {\r\n  return value === undefined || isBlank(value) || isNull(value) || false;\r\n};\r\n\r\nconst validateMobile = (mobile) => {\r\n  if (mobile.length === 0) {\r\n    return {\r\n      isValid: false,\r\n      msg: trans(\"validations.fieldReq\").replace(\r\n        \"$FIELD\",\r\n        trans(\"label.mobileNum\")\r\n      ),\r\n    };\r\n  }\r\n  if (mobile.length < 10) {\r\n    return {\r\n      isValid: false,\r\n      msg: trans(\"validations.minLength\").replace(\"$1\", 10),\r\n    };\r\n  }\r\n  if (mobile.length > 10) {\r\n    return {\r\n      isValid: false,\r\n      msg: trans(\"validations.maxLength\").replace(\"$1\", 10),\r\n    };\r\n  }\r\n  return { isValid: true, msg: \"\" };\r\n};\r\n\r\nconst validateEmail = (email) => {\r\n  if (email.length === 0) {\r\n    return {\r\n      isValid: false,\r\n      msg: trans(\"validations.fieldReq\").replace(\r\n        \"$FIELD\",\r\n        trans(\"label.emailAddress\")\r\n      ),\r\n    };\r\n  }\r\n  if (!emailRegix.test(email)) {\r\n    return { isValid: false, msg: trans(\"validations.emailInvalid\") };\r\n  }\r\n  return { isValid: true, msg: \"\" };\r\n};\r\n\r\nconst validateSchema = async (schema, data) => {\r\n  const validateDataRes = validateResponse();\r\n  if (!schema) {\r\n    validateDataRes.msg_code = 401;\r\n    validateDataRes.msg = trans(\"validations.allFieldReq\");\r\n    return validateDataRes;\r\n  }\r\n\r\n  const result = await schema.isValid(data);\r\n  const errorsList = {};\r\n  if (!result) {\r\n    await schema.validate(data, { abortEarly: false }).catch((err) => {\r\n      const errors = err.inner.reduce((acc, error) => {\r\n        return (errorsList[error.path] = error.message);\r\n      }, {});\r\n    });\r\n    validateDataRes.errors = errorsList;\r\n    return validateDataRes;\r\n  }\r\n  validateDataRes.msg_code = 200;\r\n  validateDataRes.status = 200;\r\n  validateDataRes.isValid = true;\r\n  return validateDataRes;\r\n};\r\n\r\nconst validateAddBranch = async (body) => {\r\n  const validateDataRes = await validateSchema(\"addOrgBranchSchema\", body);\r\n  return validateDataRes;\r\n};\r\nconst validateAddOrganization = async (body) => {\r\n  const validateDataRes = await validateSchema(\"addOrganizationSchema\", body);\r\n  return validateDataRes;\r\n};\r\n\r\nconst validateOrgSettings = async (body) => {\r\n  const validateDataRes = await validateSchema(\"organizationSettingSchema\", body);\r\n  return validateDataRes;\r\n};\r\n\r\nconst validateAddInvoice = async (body) => {\r\n  const validateDataRes = await validateSchema(\"addInvoiceSchema\", body);\r\n  return validateDataRes;\r\n};\r\nconst regex = /^[A-Za-z0-9 ' ']+$/;\r\nconst validateField = (value, type, minLength = 3) => {\r\n  if (type === \"mobile\") {\r\n    if (value.length < 10) {\r\n      return trans(\"minLength\").replace(\"$1\", 10);\r\n    }\r\n    if (value.length > 10) {\r\n      return trans(\"maxLength\").replace(\"$1\", 10);\r\n    }\r\n    if(!onlyDigitRegix.test(value)){\r\n      return trans(\"onlyDigit\")\r\n    }\r\n    \r\n  } else if (type === \"email\") {\r\n    if (!emailRegix.test(value)) {\r\n      return trans(\"emailInvalid\");\r\n    }\r\n  } else if (type === \"string\") {\r\n    if (value.length < minLength) {\r\n      return trans(\"minLength\").replace(\"$1\", minLength);\r\n    }else if(!regex.test(value)){\r\n      return trans(\"shiftName\");\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport {\r\n  trans,\r\n  digitsOnly,\r\n  isFieldValid,\r\n  getFieldErrorMsg,\r\n  validateAddBranch,\r\n  validateMobile,\r\n  validateAddOrganization,\r\n  validateOrgSettings,\r\n  validateAddInvoice,\r\n  validateSchema,\r\n  validateField,\r\n};\r\n","import * as yup from \"yup\";\r\nimport { digitsOnly, trans, validateField } from './ValidationHelper';\r\n\r\n// // Extend Yup with the combined custom validation method\r\nyup.addMethod(yup.string, \"validateField\", function (type, minLength = 3) {\r\n  return this.test(\"validate-field\", trans(\"invalid input\"), function (value) {\r\n    const { path, createError } = this;\r\n    const validationResponse = validateField(value, type, minLength);\r\n    return validationResponse === true || createError({ path, message: validationResponse });\r\n  });\r\n});\r\n\r\nconst employeeLoginSchema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .required(trans(\"validations.emailReq\"))\r\n    .email(trans(\"validations.invalidEmail\"))\r\n    .min(3, trans(\"validations.minLength\").replace(\"$1\", 3))\r\n    .max(50, trans(\"validations.maxLength\").replace(\"$1\", 50)),\r\n  password: yup\r\n    .string()\r\n    .required(trans(\"validations.passwordReq\"))\r\n    .min(8, trans(\"validations.minLength\").replace(\"$1\", 8))\r\n    .max(20, trans(\"validations.maxLength\").replace(\"$1\", 20)),\r\n\r\n});\r\nconst addEmployeeSchema = yup.object().shape({\r\n  first_name: yup\r\n    .string()\r\n    .required(trans(\"validations.firstnameReq\"))\r\n    .min(2, trans(\"validations.minLength\").replace(\"$1\", 2))\r\n    .max(20, trans(\"validations.maxLength\").replace(\"$1\", 20)),\r\n  last_name: yup\r\n    .string()\r\n    .required(trans(\"validations.lastnameReq\"))\r\n    .min(2, trans(\"validations.minLength\").replace(\"$1\", 2))\r\n    .max(20, trans(\"validations.maxLength\").replace(\"$1\", 20)),\r\n  email_id: yup\r\n    .string()\r\n    .required(trans(\"validations.emailReq\"))\r\n    .email(trans(\"validations.invalidEmail\"))\r\n    .min(2, trans(\"validations.minLength\").replace(\"$1\", 2))\r\n    .max(50, trans(\"validations.maxLength\").replace(\"$1\", 50)),\r\n  contact_number: yup\r\n    .string()\r\n    .required(trans(\"validations.contactNumberReq\"))\r\n    .min(10, trans(\"validations.minLength\").replace(\"$1\", 10))\r\n    .max(10, trans(\"validations.maxLength\").replace(\"$1\", 10)),\r\n  pan: yup\r\n    .string()\r\n    .required(trans(\"validations.panReq\"))\r\n    .min(5, trans(\"validations.minLength\").replace(\"$1\", 5))\r\n    .max(10, trans(\"validations.maxLength\").replace(\"$1\", 10)),\r\n  currency: yup\r\n    .string()\r\n    .required(trans(\"validations.currencyReq\")),\r\n  address_line_1: yup\r\n    .string()\r\n    .required(trans(\"validations.addressLine1Req\"))\r\n    .min(2, trans(\"validations.minLength\").replace(\"$1\", 2))\r\n    .max(50, trans(\"validations.maxLength\").replace(\"$1\", 50)),\r\n  address_line_2: yup\r\n    .string()\r\n    .required(trans(\"validations.addressLine2Req\"))\r\n    .min(2, trans(\"validations.minLength\").replace(\"$1\", 2))\r\n    .max(50, trans(\"validations.maxLength\").replace(\"$1\", 50)),\r\n  city: yup\r\n    .string()\r\n    .required(trans(\"validations.cityReq\"))\r\n    .min(4, trans(\"validations.minLength\").replace(\"$1\", 4))\r\n    .max(20, trans(\"validations.maxLength\").replace(\"$1\", 20)),\r\n  state: yup\r\n    .string().required(trans(\"validations.stateReq\"))\r\n    .max(50, trans(\"validations.maxLength\").replace(\"$1\", 50)),\r\n  country: yup\r\n    .string().required(trans(\"validations.countryReq\")),\r\n  postal_code: yup\r\n    .number()\r\n    .typeError(trans(\"validations.numberReq\"))\r\n    .required(trans(\"validations.postalCodeReq\"))\r\n    .min(100000, trans(\"validations.minPostalCodeLength\"))\r\n    .max(999999, trans(\"validations.maxPostalCodeLength\")),\r\n});\r\nconst addCountry = yup.object().shape({\r\n  country_name: yup.string().required(trans(\"validations.country_name\")),\r\n  country_code: yup\r\n    .string()\r\n    .required(trans(\"validations.country_code\"))\r\n    .max(3, trans(\"validations.maxLength\").replace(\"$1\", 3)),\r\n});\r\n\r\nconst addDepartmentSchema = yup.object().shape({\r\n  depName: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Department Name\" })),\r\n\r\n  shortName: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Short Name\" }))\r\n});\r\n\r\n// Designation Schema\r\nconst addDesignationSchema = yup.object().shape({\r\n\r\n  departmentId: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Department Name\" })),\r\n\r\n  designationName: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Designation Name\" })),\r\n\r\n  shortName: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Short Name\" }))\r\n});\r\n// mrf form schema\r\n\r\nconst MrfCreateSchema = yup.object().shape({\r\n  department_id: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Department \" })),\r\n  designation_id: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Designation \" })),\r\n\r\n  position_id: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Position \" })),\r\n  priority: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Priority\" })),\r\n  min_qualififcation: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Min Qualififcation \" })),\r\n\r\n  preferred_qualification: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Preferred Qualification \" })),\r\n\r\n  business_impact: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Business Impact \" })),\r\n  hiring_for: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Location \" })),\r\n  vacant_position: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Vacant Position \" })),\r\n  year_of_experience: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Year Of Experience \" })),\r\n  mrf_justification: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Mrf Justification \" })),\r\n});\r\n\r\nconst MrfReplacementSchema = yup.object().shape({\r\n  department_id: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Department \" })),\r\n  designation_id: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Designation \" })),\r\n\r\n  position_id: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Position \" })),\r\n  priority: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Priority\" })),\r\n  emp_id: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Priority\" })),\r\n});\r\n\r\nconst MrfJobDescSchema = yup.object().shape({\r\n  responsiblities: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Responsiblities\" })),\r\n    domain_knowledge: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Domain Knowledge\" })),\r\n\r\n    role_summary: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Role Summary\" })),\r\n\r\n  otherSkills: yup\r\n    .string()\r\n    .optional(),\r\n  trainingCertificates: yup\r\n    .string()\r\n    .optional(),\r\n});\r\nconst MrfInterviewSchema = yup.object().shape({\r\n  department: yup\r\n    .object().nullable()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Department\" })),\r\n  designation: yup\r\n    .object().nullable()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Designation\" })),\r\n\r\n  interviewStage: yup\r\n    .object().nullable()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Interview Stage\" })),\r\n\r\n  interviewer: yup\r\n    .object().nullable()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Interviewer\" })),\r\n  interviewType: yup\r\n    .object().nullable()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Interview Type\" })),\r\n\r\n});\r\n\r\n\r\n// candidate form \r\nconst candidateSchema = yup.object().shape({\r\n  employeeName: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Employee Name\" })),\r\n\r\n  employeeEmail: yup.\r\n    string()\r\n    .validateField(\"email\")\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Employee Email\" })),\r\n\r\n  employeeMobile: yup\r\n    .string()\r\n    .validateField(\"mobile\")\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Employee Mobile\" })),\r\n\r\n  location: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Location\" })),\r\n\r\n  source: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Source\" })),\r\n\r\n  experience: yup\r\n    .string()\r\n    .required(trans(\"reqField\", { REQUIREDFIELD: \"Experience\" })),\r\n\r\n  address: yup\r\n    .string()\r\n    .optional(),\r\n\r\n  pincode: yup\r\n    .string()\r\n    .optional(),\r\n\r\n  skills: yup\r\n    .string()\r\n    .optional(),\r\n\r\n});\r\n\r\nconst addEmailTypeSchema = yup.object().shape({\r\n  name: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Name Email Type\"})),\r\n  \r\n  is_active: yup\r\n  .boolean()\r\n  .optional()\r\n});\r\n\r\nconst addEmailTemplatechema = yup.object().shape({\r\n  template_name: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Template Name\"})),\r\n  \r\n  email_type: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Template Type\"})),\r\n\r\n  email_title: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Template Title\"})),\r\n\r\n  body: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Body\"})),\r\n\r\n  is_active: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Status\"}))\r\n  \r\n}); \r\n\r\n\r\nconst addActionSchema = yup.object().shape({\r\n  action_name: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Action Name\"})),\r\n  \r\n  action_type: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Action Type\"})),\r\n\r\n  template_id: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Template ID\"})),\r\n  \r\n}); \r\n\r\nconst addShiftSchema = yup.object().shape({\r\n  shift_name: yup\r\n  .string()\r\n  .validateField(\"string\")\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Shift Name\"})),\r\n  \r\n  shift_code: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Short Name\"})),\r\n\r\n  color: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"color\"})),\r\n\r\n  is_active: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Is Active\"})),\r\n\r\n  shift_start_time: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Shift Start Time\"})),\r\n\r\n  shift_end_time: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"SHift End Time\"})),\r\n\r\n  break_start_time: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Break Start Time\"})),\r\n\r\n  break_end_time: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Break End_Time\"})),\r\n\r\n  early_arrival_tolerance: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Early Coming Time\"})),\r\n\r\n  late_departure_tolerance: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"let Going Time\"})),\r\n\r\n  grace_start_time:yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Grace Start Time\"})),\r\n\r\n  grace_end_time:yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Grace End Time\"})),\r\n\r\n  half_day_policy_time: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Half Day Policy Time\"})),\r\n\r\n  full_day_policy_time: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Full Day Policy Time\"})),\r\n\r\n  shift_type: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Shift Type\"})),\r\n\r\n  \r\n});\r\n\r\nconst addCalendarchema =yup.object().shape({\r\n  title: yup\r\n  .string()\r\n  .validateField(\"string\")\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Title\"})),\r\n  \r\n  working_days: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Working Day\"})),\r\n  \r\n})\r\nexport {\r\n  employeeLoginSchema,\r\n  addEmployeeSchema,\r\n  addCountry,\r\n  addDepartmentSchema,\r\n  MrfCreateSchema,\r\n  MrfJobDescSchema,\r\n  MrfInterviewSchema,\r\n  candidateSchema,\r\n  addDesignationSchema,\r\n  addEmailTypeSchema,\r\n  addEmailTemplatechema,\r\n  addActionSchema,\r\n  addShiftSchema,\r\n  addCalendarchema,\r\n  MrfReplacementSchema\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CustomButton } from '../../globalComponents';\r\nimport { shiftManagementAction } from '../../../core/resource/actions';\r\nimport { toast } from 'react-toastify';\r\nimport { addShiftSchema } from '../../../utils/ValidationSchema';\r\nimport { validateSchema } from '../../../utils/ValidationHelper';\r\nimport CustomError from '../../globalComponents/CustomError';\r\nimport moment from 'moment'\r\nimport CustomTimePicker from '../../globalComponents/CustomTimePicker';\r\n\r\nconst CreateAndUpdateEmailTemplate = (props) => {\r\n\r\n    const { openModel, openCreateShiftModel, editShift, setEditShift, getAllShiftFunction } = props\r\n    const { addShiftPending, addShiftRes, addShiftError } = useSelector(state => state.shift)\r\n    const [errors, setErrors] = useState({});\r\n    const dispatch = useDispatch();\r\n    const [editorData, setEditorData] = useState('')\r\n    const [shiftId, setShiftId] = useState('')\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [totalworkingHours, setTotalWorkingHours] = useState()\r\n    const [totalBreakHours, setTotalBreakHours] = useState()\r\n    const [createShift, serCreateShift] = useState({\r\n        shift_name: '',\r\n        shift_code: '',\r\n        color: '',\r\n        is_active: false,\r\n        shift_start_time: '',\r\n        shift_end_time: '',\r\n        break_start_time: '',\r\n        break_end_time: '',\r\n        early_arrival_tolerance: '',\r\n        late_departure_tolerance: '',\r\n        grace_start_time:'',\r\n        grace_end_time:'',\r\n        half_day_policy_time: '',\r\n        full_day_policy_time: '',\r\n        shift_type: '',\r\n        shift_configuration: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        serCreateShift({\r\n            shift_name: editShift?.shift_name || '',\r\n            shift_code: editShift?.shift_code || '',\r\n            color: editShift?.color || '',\r\n            is_active: editShift?.is_active || '',\r\n            shift_start_time: editShift?.shift_start_time || '',\r\n            shift_end_time: editShift?.shift_end_time || '',\r\n            break_start_time: editShift?.break_start_time || '',\r\n            break_end_time: editShift?.break_end_time || '',\r\n            early_arrival_tolerance: editShift?.early_arrival_tolerance || '',\r\n            late_departure_tolerance: editShift?.late_departure_tolerance || '',\r\n            grace_start_time:editShift?.grace_start_time || '',\r\n            grace_end_time:editShift?.grace_end_time || '',\r\n            half_day_policy_time: editShift?.half_day_policy_time || '',\r\n            full_day_policy_time: editShift?.full_day_policy_time || '',\r\n            shift_type: editShift?.shift_type || '',\r\n        })\r\n        setIsActive(editShift.is_active)\r\n        setShiftId(editShift?.id)\r\n    }, [editShift])\r\n\r\n    useEffect(() => {\r\n        if (!addShiftPending) {\r\n            if (addShiftError) {\r\n                toast.error(addShiftError?.errorMessage)\r\n                return;\r\n            }\r\n            if (addShiftRes) {\r\n                if (addShiftRes?.data?.code === 200) {\r\n                    toast.success(addShiftRes?.data?.msg)\r\n                    openCreateShiftModel()\r\n                    dispatch(shiftManagementAction.handleClearShiftStore(\"HANDLE_CLEAR_ADD_SHIFT_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addShiftRes,\r\n        addShiftError,\r\n        addShiftPending\r\n    ]);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        if (name === 'shift_name') {\r\n            let short_code = value?.split(' ').map(word => word.charAt(0).toUpperCase()).join('');\r\n            createShift.shift_code = short_code\r\n        } else if (name === \"shift_end_time\") {\r\n            const startTime = moment(createShift.shift_start_time, 'HH:mm:ss');\r\n            const endTime = moment(value, 'HH:mm:ss');\r\n            const isNightShift = startTime.isAfter(endTime);\r\n\r\n            const endAdjusted = isNightShift ? endTime.add(1, 'day') : endTime;\r\n            const duration = moment.duration(endAdjusted.diff(startTime));\r\n            const formattedTime = `${String(duration.hours()).padStart(2, '0')}:${String(duration.minutes()).padStart(2, '0')}`;\r\n\r\n            const shiftType = isNightShift ? \"night\" : \"morning\";\r\n            setTotalWorkingHours(formattedTime);\r\n            createShift.shift_type = shiftType\r\n            createShift.full_day_policy_time = formattedTime\r\n        } else if (name === 'break_end_time') {\r\n            const startTime = moment(createShift.break_start_time, 'HH:mm:ss');\r\n            const endTime = moment(value, 'HH:mm:ss');\r\n            const isNightShift = startTime.isAfter(endTime);\r\n\r\n            const endAdjusted = isNightShift ? endTime.add(1, 'day') : endTime;\r\n            const duration = moment.duration(endAdjusted.diff(startTime));\r\n            const formattedTime = `${String(duration.hours()).padStart(2, '0')}:${String(duration.minutes()).padStart(2, '0')}`;\r\n            setTotalBreakHours(formattedTime)\r\n        }\r\n\r\n        serCreateShift({ ...createShift, [name]: value });\r\n        setErrors(prev => ({ ...prev, [name]: undefined }));\r\n    };\r\n\r\n    const handleSubmitCreateShift = async () => {\r\n        createShift.is_active = isActive\r\n        const validationResponse = await validateSchema(addShiftSchema, createShift);\r\n        if (validationResponse.isValid) {\r\n            setErrors({});\r\n            if (editShift) {\r\n                createShift['_id'] = shiftId\r\n                dispatch(shiftManagementAction.updateShiftRequest(createShift));\r\n                openCreateShiftModel()\r\n                getAllShiftFunction()\r\n            } else {\r\n                dispatch(shiftManagementAction.addShiftRequest(createShift));\r\n                getAllShiftFunction()\r\n            }\r\n\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n            console.log(validationResponse.errors, \"formattedErrors\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (openModel == false) {\r\n            resetTempateData()\r\n        }\r\n    }, [openModel])\r\n\r\n\r\n    const resetTempateData = () => {\r\n        serCreateShift({\r\n            shift_name: '',\r\n            shift_code: '',\r\n            color: '',\r\n            is_active: '',\r\n            shift_start_time: '',\r\n            shift_end_time: '',\r\n            break_start_time: '',\r\n            break_end_time: '',\r\n            early_arrival_tolerance: '',\r\n            late_departure_tolerance: '',\r\n            grace_start_time:'',\r\n            grace_end_time:'',\r\n            half_day_policy_time: '',\r\n            full_day_policy_time: '',\r\n            shift_type: '',\r\n            shift_configuration: ''\r\n        })\r\n        setEditShift('')\r\n        setErrors({});\r\n        setEditorData('')\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end creatNewTicketOff ${openModel ? 'show' : ''}`}\r\n\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{editShift ? \"Update\" : \"Create New\"} Shift</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => openCreateShiftModel()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Shift Name<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            {/* <div className=\"col-md-12\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <div className='row'>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Shift Name</label><span className='text-danger'>*</span>\r\n                                            <input type=\"text\" name=\"shift_name\" value={createShift.shift_name} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter start time\" />\r\n                                            {errors?.shift_name && (\r\n                                                <CustomError text={errors.shift_name} />\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Shift Code</label><span className='text-danger'>*</span>\r\n                                            <input type=\"text\" name=\"shift_code\" value={(createShift.shift_code)?.toUpperCase()} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter end time\" />\r\n                                            {errors?.shift_code && (\r\n                                        <CustomError text={errors.shift_code} />\r\n                                    )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n\r\n                                    <input type=\"text\" className=\"form-control fs-7\"\r\n                                        placeholder=\"Enter Shift Name\"\r\n                                        name='shift_name'\r\n                                        value={createShift?.shift_name || ''}\r\n                                        onChange={(e) => handleChange(e)}\r\n                                    />\r\n\r\n                                    {errors?.shift_name && (\r\n                                        <CustomError text={errors.shift_name} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Shift Code<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n\r\n                                    <input type=\"text\" className=\"form-control fs-7\"\r\n                                        placeholder=\"Enter Shift Code\"\r\n                                        name='shift_code'\r\n                                        value={(createShift.shift_code)?.toUpperCase() || ''}\r\n                                        onChange={(e) => handleChange(e)}\r\n                                    />\r\n\r\n                                    {errors?.shift_code && (\r\n                                        <CustomError text={errors.shift_code} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor style={{ position: \"relative\", top: \"40px\" }}>Working Time<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <div className='row'>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Start time</label><span className='text-danger'>*</span>\r\n                                            <input type=\"time\" name=\"shift_start_time\" value={createShift.shift_start_time} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter start time\" />\r\n                                            {errors?.shift_start_time && (\r\n                                                <CustomError text={errors.shift_start_time} />\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">End time</label><span className='text-danger'>*</span>\r\n                                            <input type=\"time\" name=\"shift_end_time\" value={createShift.shift_end_time} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter end time\" />\r\n                                            {errors?.shift_end_time && (\r\n                                                <CustomError text={errors.shift_end_time} />)}\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Shift Hours</label>\r\n                                            <input type=\"text\" name=\"\" value={createShift.full_day_policy_time} readOnly className=\"form-control\" placeholder=\"Shift Hours\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor style={{ position: \"relative\", top: \"40px\" }}>Break Time<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <div className='row'>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Start time</label><span className='text-danger'>*</span>\r\n                                            <input type=\"time\" name=\"break_start_time\" value={createShift.break_start_time} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter start time\" />\r\n                                            {errors?.break_start_time && (\r\n                                                <CustomError text={errors.break_start_time} />\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">End time</label><span className='text-danger'>*</span>\r\n                                            <input type=\"time\" name=\"break_end_time\" value={createShift.break_end_time} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter end time\" />\r\n                                            {errors?.break_end_time && (\r\n                                                <CustomError text={errors.break_end_time} />)}\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Break Hours</label>\r\n                                            <input type=\"text\" name=\"\" value={totalBreakHours} readOnly className=\"form-control\" placeholder=\"Break Hours\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor style={{ position: \"relative\", top: \"40px\" }}>Punching Tolerance<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <div className='row'>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Early Coming Time</label><span className='text-danger'>*</span>\r\n                                            <CustomTimePicker name=\"early_arrival_tolerance\" value={createShift.early_arrival_tolerance} handleChange={handleChange} totalHours = {5} intervalMinutes={15} />\r\n                                            {/* <input type=\"time\" name=\"early_arrival_tolerance\" value={createShift.early_arrival_tolerance} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter start time\" /> */}\r\n                                            {errors?.early_arrival_tolerance && (\r\n                                                <CustomError text={errors.early_arrival_tolerance} />\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Let Going Time</label><span className='text-danger'>*</span>\r\n                                            <CustomTimePicker name=\"late_departure_tolerance\" value={createShift.late_departure_tolerance} handleChange={handleChange} totalHours = {5} intervalMinutes={15} />\r\n                                            {/* <input type=\"time\" name=\"late_departure_tolerance\" value={createShift.late_departure_tolerance} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter end time\" /> */}\r\n                                            {errors?.late_departure_tolerance && (\r\n                                                <CustomError text={errors.late_departure_tolerance} />)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor style={{ position: \"relative\", top: \"40px\" }}>Grace Period<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <div className='row'>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Grace Start Time </label><span className='text-danger'>*</span>\r\n                                            <CustomTimePicker name=\"grace_start_time\" value={createShift.grace_start_time} handleChange={handleChange} totalHours = {5} intervalMinutes={15} />\r\n                                            {errors?.grace_start_time && (\r\n                                                <CustomError text={errors.grace_start_time} />\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Grace End Time</label><span className='text-danger'>*</span>\r\n                                            <CustomTimePicker name=\"grace_end_time\" value={createShift.grace_end_time} handleChange={handleChange} totalHours = {5} intervalMinutes={15} />\r\n                                            {errors?.grace_end_time && (\r\n                                                <CustomError text={errors.grace_end_time} />)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor style={{ position: \"relative\", top: \"40px\" }}>Half/Full day policy<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <div className='row'>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Half day</label><span className='text-danger'>*</span>\r\n                                            <input type=\"time\" name=\"half_day_policy_time\" value={createShift.half_day_policy_time} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter end time\" />\r\n                                            {errors?.half_day_policy_time && (\r\n                                                <CustomError text={errors.half_day_policy_time} />)}\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Full day</label><span className='text-danger'>*</span>\r\n                                            <input type=\"text\" name=\"full_day_policy_time\" value={createShift.full_day_policy_time} onChange={(e) => handleChange(e)} className=\"form-control\" readOnly placeholder=\"Full day\" />\r\n                                            {errors?.full_day_policy_time && (\r\n                                                <CustomError text={errors.full_day_policy_time} />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Shift Type<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n\r\n                                    <select className=\"form-select\" required\r\n                                        name='shift_type'\r\n                                        value={createShift?.shift_type}\r\n                                        onChange={(e) => handleChange(e)}\r\n                                    >\r\n                                        <option value='' hidden selected>Select Required shift Type</option>\r\n                                        <option value='morning'>Morning</option>\r\n                                        <option value='night'>Night</option>\r\n                                    </select>\r\n                                    {errors?.shift_type && (\r\n                                        <CustomError text={errors.shift_type} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Shift Color<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n\r\n                                    <input type=\"color\" className='ColorData'\r\n                                        placeholder=\"Enter Short Name\"\r\n                                        name='color'\r\n                                        value={createShift?.color || ''}\r\n                                        onChange={(e) => handleChange(e)}\r\n                                    />\r\n                                    {errors?.color && (\r\n                                        <CustomError text={errors.color} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>is Active<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n\r\n                                    <input type=\"checkbox\" placeholder=\"Is Active\"\r\n                                        checked={isActive}\r\n                                        onChange={(e) => setIsActive(!isActive)}\r\n                                    />\r\n\r\n                                    {errors?.is_active && (\r\n                                        <CustomError text={errors.is_active} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center justify-content-end gap-2\">\r\n                            <CustomButton\r\n                                type=\"button\"\r\n                                classNames={\"btn btn-primary gradientBg\"}\r\n                                handleClick={e => handleSubmitCreateShift()}\r\n                                // isLoading={departmentData?updateDepartmentPending:addDepartmentPending}\r\n                                text={`${editShift ? \"Update\" : \"Create\"} Shift`}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAndUpdateEmailTemplate\r\n","import React from 'react'\r\nimport CreateUpdateShift from '../modal/shiftManagement/CreateUpdateShift'\r\n\r\nconst ShiftMenuDropdown = (props) => {\r\n  const {card,setEditShift,openCreateShiftModel,setDeletShift} = props\r\n\r\n  const editFunction =()=>{\r\n    openCreateShiftModel()\r\n    setEditShift(card)\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"dropdown\">\r\n        <button\r\n          className=\"btn dropdownDots\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"dropdown\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          <img src=\"images/dotvertical.svg\" alt=\"\" width={25} />\r\n        </button>\r\n        <ul className=\"dropdown-menu\">\r\n          <li>\r\n            <button\r\n              className=\"dropdown-item border-bottom\"\r\n              onClick={()=>editFunction()}\r\n            >\r\n              Edit Shift\r\n            </button>\r\n          </li>\r\n          <li>\r\n            <button className=\"dropdown-item border-bottom\" >\r\n              Set as Inactive\r\n            </button>\r\n          </li>\r\n          <li>\r\n            <button className=\"dropdown-item\" onClick={()=>setDeletShift(card)}>\r\n              Delete Shift\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      </>\r\n  )\r\n}\r\n\r\nexport default ShiftMenuDropdown","import React,{useState} from 'react'\r\nimport ShiftMenuDropdown from './ShiftMenuDropdown'\r\nimport {useDispatch} from 'react-redux'\r\n\r\n\r\nconst ShiftInfoCard = ({card ,index,setEditShift,openCreateShiftModel,setDeletShift,setShiftData}) => {\r\n  const dispatch=useDispatch()\r\n  const [activebtn, setActiveBtn] = useState([0])\r\n\r\n  const clickShiftData = (data, index)=>{\r\n    setShiftData(data)\r\n    setActiveBtn([index])\r\n    \r\n  }\r\n  return (\r\n      <li key={card?.id} className=\"nav-item\" style={{backgroundColor:\"#FFFFFF30\",marginRight:\"10px\"}}>\r\n      <a href=\"#shiftTab1\" data-bs-toggle=\"tab\" className={`nav-link w-100 ${activebtn.includes(index) ? 'active' : ''}`} onClick={e => clickShiftData(card, index)}>\r\n        <span>{card?.shift_name} {card?.shift_code === null || card?.shift_code === undefined ? \"\":`(${card?.shift_code})`}</span>\r\n        <strong>{`${card?.shift_start_time } - ${card?.shift_end_time}`} </strong>\r\n      </a>\r\n      {card?.shift_code !== undefined && \r\n      <ShiftMenuDropdown \r\n      card={card}\r\n      setEditShift={setEditShift}\r\n      openCreateShiftModel={openCreateShiftModel}\r\n      setDeletShift={setDeletShift}\r\n      />}\r\n\r\n   \r\n    </li>\r\n  )\r\n}\r\n\r\nexport default ShiftInfoCard","import React, { useEffect, useState } from \"react\";\r\nimport ShiftInfoCard from \"./ShiftInfoCard\";\r\n\r\nconst ShiftSchedualCards = (props) => {\r\n  const {getAllShift,setEditShift,openCreateShiftModel,setDeletShift,setShiftData} = props\r\n\r\n  const data = null;\r\n  const isLoading = true;\r\n  const isSuccess = false;\r\n  const [box, setBox] = useState(null);\r\n\r\n  const scrollRight = () => {\r\n    let width = box.clientWidth;\r\n    box.scrollLeft = box.scrollLeft + width;\r\n  };\r\n  const scrollLeft = () => {\r\n    let width = box.clientWidth;\r\n    box.scrollLeft = box.scrollLeft - width;\r\n  };\r\n  useEffect(() => {\r\n    let box = document.querySelector(\".qualityServicetab\");\r\n    setBox(box);\r\n  }, [box]);\r\n  return (\r\n    <div className=\"carousel slide \" style={{ overflow: \"hidden\" }}>\r\n      <ul\r\n        className=\"nav nav-tabs shiftListing qualityServicetab border-0\"\r\n        style={{ overflowX: \"hidden\", scrollBehavior: \"smooth\", marginRight:\"70px\",marginLeft:'70px' }}\r\n      >\r\n        \r\n        {getAllShift&&getAllShift?.map((card,index)=>(\r\n         <ShiftInfoCard card={card} key={card?.id} index={index} setEditShift={setEditShift} openCreateShiftModel={openCreateShiftModel} setDeletShift={setDeletShift} setShiftData={setShiftData}/>\r\n\r\n        ))}\r\n        \r\n      \r\n      </ul>\r\n      <button\r\n        className=\"carousel-control-prev scrollbtn\"\r\n        type=\"button\"\r\n        data-bs-target=\"#carouselExampleCaptions\"\r\n        data-bs-slide=\"prev\"\r\n        onClick={scrollLeft}\r\n      >\r\n        <span\r\n          className=\"carousel-control-prev-icon \"\r\n          style={{ position: \"absolute\", left: \"0px\" }}\r\n          aria-hidden=\"true\"\r\n\r\n        ></span>\r\n        <span className=\"visually-hidden\">Previous</span>\r\n      </button>\r\n      <button\r\n        className=\"carousel-control-next scrollbtn\"\r\n        type=\"button\"\r\n        data-bs-target=\"#carouselExampleCaptions\"\r\n        data-bs-slide=\"next\"\r\n        onClick={scrollRight}\r\n      >\r\n        <span\r\n          style={{ position: \"absolute\", right: \"0px\" }}\r\n          className=\"carousel-control-next-icon\"\r\n          aria-hidden=\"true\"\r\n        ></span>\r\n        <span className=\"visually-hidden\">Next</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShiftSchedualCards;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ShiftSchedualCards from \"./ShiftSchedualCards\";\r\nimport CreateUpdateShift from '../modal/shiftManagement/CreateUpdateShift'\r\nimport AddCalendar from \"../modal/shiftManagement/AddCalendar\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ShiftSchedual = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  const {getAllShift,getAllShiftFunction,setDeletShift,setShiftData} = props\r\n\r\n  const [openModel,setOpenModel] = useState(false)\r\n  const [openAddCalendar, setAddCalendar] = useState(false)\r\n  const [editShift, setEditShift] = useState('')\r\n\r\n  const openCreateShiftModel = ()=>{\r\n    setOpenModel(!openModel)\r\n\r\n  }\r\n  const openAddCalendarModel = ()=>{\r\n    navigate('/shift-setting');\r\n    // setAddCalendar(!openAddCalendar)\r\n\r\n  }\r\n  return (\r\n    <div className=\"shiftSchedule mb-3\">\r\n      <div className=\"cardHead d-flex justify-content-between gap-3\">\r\n        <h3 className=\"mb-0\">Shift Schedule (Weekly)</h3>\r\n        <div>\r\n          <button className=\"btn btn-primary me-2\" >\r\n            Shift Bulk Upload\r\n          </button>\r\n          <button className=\"btn btn-primary me-2\"\r\n            // disabled={(User[0].panel_role == \"manager_shift\") ? true : false}\r\n            onClick={()=>openCreateShiftModel()}\r\n            >\r\n            Create Shift\r\n          </button>\r\n          <button className=\"btn btn-primary me-2\"\r\n            // disabled={((userByshift.length > 0 && userByshift[0]?.shift_configuration === 0) && User[0].panel_role == \"manager_shift\") ? true : false}\r\n            // onClick={() => setshiftEdit(\"2\")}\r\n            >\r\n            Edit\r\n          </button>\r\n          <button className=\"btn btn-primary\"\r\n          onClick={()=>openAddCalendarModel()}\r\n            // disabled={((userByshift.length > 0 && userByshift[0]?.shift_configuration === 0) && User[0].panel_role == \"manager_shift\") ? true : false}\r\n            // onClick={() => setshiftEdit(\"2\")}\r\n            >\r\n            Setting\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <CreateUpdateShift \r\n      openCreateShiftModel={openCreateShiftModel}\r\n      openModel={openModel}\r\n      editShift={editShift}\r\n      setEditShift={setEditShift}\r\n      getAllShiftFunction={getAllShiftFunction}\r\n      />\r\n      <ShiftSchedualCards \r\n      getAllShift={getAllShift}\r\n      setEditShift={setEditShift}\r\n      openCreateShiftModel={openCreateShiftModel}\r\n      setDeletShift={setDeletShift}\r\n      setShiftData={setShiftData}/>\r\n      <AddCalendar \r\n      openAddCalendar={openAddCalendar}\r\n      openAddCalendarModel={openAddCalendarModel}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShiftSchedual;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CustomButton } from '../../globalComponents';\r\nimport { shiftManagementAction } from '../../../core/resource/actions';\r\nimport { toast } from 'react-toastify';\r\nimport { addShiftSchema } from '../../../utils/ValidationSchema';\r\nimport { validateSchema } from '../../../utils/ValidationHelper';\r\nimport CustomError from '../../globalComponents/CustomError';\r\nimport { ShiftcolorOption } from '../../../utils/Constants.config';\r\n\r\nconst CreateAndUpdateEmailTemplate = (props) => {\r\n\r\n    const { openShiftModel, openShiftModelfunction, editShift, shiftData } = props\r\n    const { addShiftConfigurationPending, addShiftConfigurationRes, addShiftConfigurationError, getShiftConfigurationPending, getShiftConfigurationRes, getShiftConfigurationError,\r\n        getAllShiftCalendarError,getAllShiftCalendarRes,getAllShiftCalendarPending} = useSelector(state => state.shift)\r\n    const [errors, setErrors] = useState({});\r\n    const [overTime, setOverTime] = useState(false)\r\n    const [isActive, setIsActive] = useState(false)\r\n    const dispatch = useDispatch();\r\n    const [editorData, setEditorData] = useState('')\r\n    const [workingDay, setWorkingDay] = useState('')\r\n    const [weekOff, setweekOff] = useState()\r\n    const [AllCalendar, setAllCalendar] = useState([])\r\n    const [alternativeSaturday, setalternativeSaturday] = useState([])\r\n    const setWorkingDayfun = (data) => {\r\n        setWorkingDay(data)\r\n        if (data == '5') {\r\n            setweekOff(['6', '7'])\r\n        } else if (data == '6') {\r\n            setweekOff([])\r\n            setweekOff(['7'])\r\n        } else if (data == '7') {\r\n            setweekOff([])\r\n        }\r\n    }\r\n    const alternativeSaturdayFun = (e) => {\r\n        if (e.target.checked == true) {\r\n            setalternativeSaturday([...alternativeSaturday, e.target.value])\r\n        } else {\r\n            let newResult = alternativeSaturday.filter(val => val != e.target.value)\r\n            setalternativeSaturday([...newResult])\r\n        }\r\n    }\r\n    const weekOffFun = (e) => {\r\n        if (e.target.checked == true) {\r\n            setweekOff([...weekOff, e.target.value])\r\n        } else {\r\n            let newResult = weekOff.filter(val => val != e.target.value)\r\n            setweekOff([...newResult])\r\n        }\r\n    }\r\n\r\n    const [shiftConfigurationdata, setShiftConfigurationdata] = useState({\r\n        shift_id: shiftData?.id,\r\n        over_time: '',\r\n        minimum_ot_hours: '',\r\n        maximum_ot_hours: '',\r\n        working_days: '',\r\n        alternative_saturday_off: '',\r\n        week_off: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (!addShiftConfigurationPending) {\r\n            if (addShiftConfigurationError) {\r\n                toast.error(addShiftConfigurationError?.errorMessage)\r\n                return;\r\n            }\r\n            if (addShiftConfigurationRes) {\r\n                if (addShiftConfigurationRes?.data?.code === 200) {\r\n                    toast.success(addShiftConfigurationRes?.data?.msg)\r\n                    openShiftModelfunction()\r\n                    dispatch(shiftManagementAction.handleClearShiftStore(\"HANDLE_CLEAR_ADD_SHIFT_CONFIGURATION_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addShiftConfigurationRes,\r\n        addShiftConfigurationError,\r\n        addShiftConfigurationPending\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!getShiftConfigurationPending) {\r\n            if (getShiftConfigurationError) {\r\n                toast.error(getShiftConfigurationError?.errorMessage)\r\n                return;\r\n            }\r\n            if (getShiftConfigurationRes) {\r\n                if (getShiftConfigurationRes?.data?.code === 200) {\r\n                    let Temp = getShiftConfigurationRes?.data?.data?.data\r\n                    setWorkingDay(Temp[0]?.shift_data?.working_days)\r\n                    setOverTime(Temp[0]?.shift_data?.over_time)\r\n                    setShiftConfigurationdata({\r\n                        minimum_ot_hours: Temp[0]?.shift_data?.minimum_ot_hours,\r\n                        maximum_ot_hours: Temp[0]?.shift_data?.maximum_ot_hours,\r\n                    })\r\n                    setIsActive(Temp[0]?.is_default)\r\n                    setweekOff(Temp[0]?.shift_data?.week_off)\r\n                    setalternativeSaturday(Temp[0]?.shift_data?.alternative_saturday_off)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getShiftConfigurationRes,\r\n        getShiftConfigurationError,\r\n        getShiftConfigurationPending\r\n    ]);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setShiftConfigurationdata({ ...shiftConfigurationdata, [name]: value });\r\n        setErrors((pre) => ({\r\n            ...pre,\r\n            [name]: undefined\r\n        }))\r\n    }\r\n\r\n    const handleSubmitCreateShiftConfiguration = async () => {\r\n        shiftConfigurationdata.shift_id = shiftData?.id\r\n        shiftConfigurationdata.over_time = overTime\r\n        shiftConfigurationdata.working_days = workingDay\r\n        shiftConfigurationdata.alternative_saturday_off = alternativeSaturday\r\n        shiftConfigurationdata.week_off = weekOff\r\n        // const validationResponse = await validateSchema(addShiftSchema, shiftConfigurationdata);\r\n        // if (validationResponse.isValid) {\r\n        setErrors({});\r\n        dispatch(shiftManagementAction.addShiftConfigurationRequest(shiftConfigurationdata));\r\n        // } else {\r\n        // setErrors(validationResponse.errors);\r\n        // console.log(validationResponse.errors, \"formattedErrors\");\r\n        // }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (openShiftModel == false) {\r\n            resetTempateData()\r\n        }\r\n    }, [openShiftModel])\r\n\r\n    useEffect(() => {\r\n        getAllShiftCalendar()\r\n      }, [])\r\n    \r\n      const getAllShiftCalendar = () => {\r\n        dispatch(shiftManagementAction.getAllShiftCalendarRequest())\r\n      }\r\n\r\n      useEffect(() => {\r\n        if (!getAllShiftCalendarPending) {\r\n            if (getAllShiftCalendarError) {\r\n                setAllCalendar([])\r\n                return;\r\n            }\r\n            if (getAllShiftCalendarRes) {\r\n                if (getAllShiftCalendarRes?.data?.code == 200) { \r\n                    setAllCalendar(getAllShiftCalendarRes?.data?.data?.data?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllShiftCalendarPending,\r\n        getAllShiftCalendarRes,\r\n        getAllShiftCalendarError\r\n    ]);\r\n\r\n    const resetTempateData = () => {\r\n        setShiftConfigurationdata({\r\n            shift_id: '',\r\n            over_time: '',\r\n            minimum_ot_hours: '',\r\n            maximum_ot_hours: '',\r\n            working_days: '',\r\n            alternative_saturday_off: '',\r\n            week_off: ''\r\n        })\r\n        setErrors({});\r\n        setOverTime(false)\r\n        setIsActive(false)\r\n        setEditorData('')\r\n        setalternativeSaturday([])\r\n        setweekOff([])\r\n        setWorkingDay([])\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end applyLeaveCanvas ${openShiftModel ? 'show' : ''}`}\r\n\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openShiftModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}>\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">Shift Management</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => openShiftModelfunction()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"table-responsive tableDiv shiftmanagementtbl\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td width=\"30%\">\r\n                                        <div className=\"d-flex align-items-center\"><span className=\"srNum\">1</span><b\r\n                                            className=\"ps-3 text-primary\"> Shift start time</b></div>\r\n                                    </td>\r\n                                    <td>{shiftData?.shift_start_time}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"d-flex align-items-center\"><span className=\"srNum\">2</span><b\r\n                                            className=\"ps-3 text-primary\"> Shift start time</b></div>\r\n                                    </td>\r\n                                    <td>{shiftData?.shift_end_time}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"d-flex align-items-center\"><span className=\"srNum\">3</span><b\r\n                                            className=\"ps-3 text-primary\"> Over Time (OT)</b></div>\r\n                                    </td>\r\n                                    <td>\r\n\r\n                                        <input type=\"checkbox\" placeholder=\"Is Active\"\r\n                                            checked={overTime}\r\n                                            onChange={(e) => setOverTime(!overTime)}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                {overTime == true &&\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div className=\"d-flex align-items-center\"><b\r\n                                                className=\"ps-3 text-primary\"> </b></div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div className='row' >\r\n                                                <div className=\"form-group col-md\">\r\n                                                    <label htmlFor=\"exampleInputEmail1\">Minimum OT hours par days</label>\r\n                                                    <input type=\"time\" name=\"minimum_ot_hours\" value={shiftConfigurationdata.minimum_ot_hours} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter start time\" />\r\n                                                    {errors?.minimum_ot_hours && (\r\n                                                        <CustomError text={errors.minimum_ot_hours} />\r\n                                                    )}\r\n                                                </div>\r\n                                                <div className=\"form-group col-md\">\r\n                                                    <label htmlFor=\"exampleInputEmail1\">Maximum OT hours par days</label>\r\n                                                    <input type=\"time\" name=\"maximum_ot_hours\" value={shiftConfigurationdata.maximum_ot_hours} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter end time\" />\r\n                                                    {errors?.maximum_ot_hours && (\r\n                                                        <CustomError text={errors.maximum_ot_hours} />)}\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>}\r\n\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"d-flex align-items-center\"><span className=\"srNum\">4</span><b\r\n                                            className=\"ps-3 text-primary\"> Is Default</b></div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type=\"checkbox\" placeholder=\"Is Active\"\r\n                                            checked={isActive}\r\n                                            onChange={(e) => setIsActive(!isActive)}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"d-flex align-items-center\"><span className=\"srNum\">5</span><b\r\n                                            className=\"ps-3 text-primary\"> Working Days</b></div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className=\"d-flex workingradio\">\r\n                                            <div className=\"shiftInpt\">\r\n                                                <select className=\"form-select\" required\r\n                                                    name='shift_type'\r\n                                                    value={workingDay}\r\n                                                    onChange={(e) => setWorkingDayfun(e.target.value)}\r\n                                                >\r\n                                                    <option value='' hidden selected>Select Required Working Days</option>\r\n                                                    {AllCalendar && AllCalendar?.map(item => (\r\n                                                        <option value={item?._id}>{item?.title}</option>\r\n                                                    ))}\r\n                                                   \r\n                                                    {/* <option value='6'>6 Days</option>\r\n                                                    <option value='7'>7 Days</option>\r\n                                                    <option value='alternative_saturday'>Alternative Saturday Off</option> */}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                                {/* {workingDay == 'alternative_saturday' &&\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div className=\"d-flex align-items-center\"><span className=\"srNum\">6</span><b\r\n                                                className=\"ps-3 text-primary\">Saturdays</b></div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div className=\"d-flex workingradio\">\r\n                                                <div className=\"d-flex gap-2 checkShift\">\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"1\" name='1' onClick={alternativeSaturdayFun} id=\"first\" />\r\n                                                        <label className=\"form-check-label\" for=\"first\">\r\n                                                            1st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"2\" name='2' onClick={alternativeSaturdayFun} id=\"second\" />\r\n                                                        <label className=\"form-check-label\" for=\"second\">\r\n                                                            2st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"3\" name='3' onClick={alternativeSaturdayFun} id=\"third\" />\r\n                                                        <label className=\"form-check-label\" for=\"third\">\r\n                                                            3st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"4\" name='4' onClick={alternativeSaturdayFun} id=\"fourth \" />\r\n                                                        <label className=\"form-check-label\" for=\"fourth \">\r\n                                                            4st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"5\" name='5' onClick={alternativeSaturdayFun} id=\"five \" />\r\n                                                        <label className=\"form-check-label\" for=\"five \">\r\n                                                            5st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                    </tr>}\r\n                                {workingDay != '7' && workingDay != 'alternative_saturday' &&\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div className=\"d-flex align-items-center\"><span className=\"srNum\">7</span><b\r\n                                                className=\"ps-3 text-primary\"> Week Off</b></div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div className=\"d-flex gap-2 checkShift\">\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"1\" name='1' id=\"first\" onClick={weekOffFun} checked={weekOff?.includes(\"1\")} />\r\n                                                    <label className=\"form-check-label\" for=\"first\">\r\n                                                        Monday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"2\" name='2' id=\"second\" onClick={weekOffFun} checked={weekOff?.includes(\"2\")} />\r\n                                                    <label className=\"form-check-label\" for=\"second\">\r\n                                                        Tuesday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"3\" name='3' id=\"third\" onClick={weekOffFun} checked={weekOff?.includes(\"3\")} />\r\n                                                    <label className=\"form-check-label\" for=\"third\">\r\n                                                        Wednesday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"4\" name='4' id=\"fourth \" onClick={weekOffFun} checked={weekOff?.includes(\"4\")} />\r\n                                                    <label className=\"form-check-label\" for=\"fourth \">\r\n                                                        Thursday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"5\" name='5' id=\"five \" onClick={weekOffFun} checked={weekOff?.includes(\"5\")} />\r\n                                                    <label className=\"form-check-label\" for=\"five \">\r\n                                                        Friday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"6\" name='6' id=\"five \" onClick={weekOffFun} checked={weekOff?.includes(\"6\")} />\r\n                                                    <label className=\"form-check-label\" for=\"five \">\r\n                                                        Saturday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"7\" name='7' id=\"five \" onClick={weekOffFun} checked={weekOff?.includes(\"7\")} />\r\n                                                    <label className=\"form-check-label\" for=\"five \">\r\n                                                        Sunday\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                    </tr>} */}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        {/* <button type=\"button\" className=\"border-0 p-0 bg-transparent cancelBtn\">Back</button> */}\r\n                        <button type=\"button\" className=\"btn btn-primary gradientBg\" onClick={() => handleSubmitCreateShiftConfiguration()}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAndUpdateEmailTemplate\r\n","import React ,{useState}from 'react'\r\n\r\n\r\nconst AssignShift = ({ openAssignShiftModel,setOpenAssignShiftModel }) => {\r\n    \r\n    return (\r\n        <>\r\n            <div class=\"modal fade teamMemberModal\" id=\"teamMemberModaladd\" style={{ display: openAssignShiftModel ? \"unset !important\" : \"none !important\", opacity: openAssignShiftModel ? \"unset\" : \"0\" }}>\r\n                <div class=\"modal-dialog modal-dialog-centered \">\r\n                    <div class=\"modal-content rounded-0 border-0\">\r\n                        <div class=\"d-flex align-items-center justify-content-between px-3 pt-3 pb-2\">\r\n                            <h3 class=\"fs-5 fw-semibold mb-0\">Add</h3>\r\n                            <button type=\"button\" class=\"btnClose p-0 border-0 bg-transparent\" onClick={()=>setOpenAssignShiftModel(!openAssignShiftModel)}>\r\n                                <img src=\"images/close-icon.svg\" alt=\"\" width=\"20\" />\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"modal-header justify-content-between align-items-center border-0\">\r\n                            <div>\r\n                                <p><b>Shift</b>: 10:00 AM - 06:00 PM </p>\r\n                                <div class=\"d-flex align-items-center gap-2\">\r\n                                    <p><b>Select Date</b>:</p>  \r\n                                    <div class=\"d-flex gap-2\">\r\n                                        <input type=\"text\" class=\"form-control dateInput\" id=\"checkInDate\"\r\n                                            placeholder=\"07/03/2024\" />\r\n                                        <input type=\"text\" class=\"form-control dateInput\" id=\"checkOutDate\"\r\n                                            placeholder=\"08/03/2024\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"modal-body py-0 shiftChecks shiftChecksadd\">\r\n                            <div class=\"teamModal\">\r\n                                <div class=\"searchTeamBox\">\r\n                                    <p\r\n                                        class=\"border-bottom d-flex justify-content-between align-items-center gap-2 mb-2 pb-2 fs-7 fw-semibold\">\r\n                                        Available Team Members <strong>10</strong></p>\r\n                                    <p class=\"d-flex justify-content-between align-items-center gap-2 fs-7 fw-semibold\">Slots\r\n                                        Available <strong>4</strong></p>\r\n                                    <div class=\"searchByName\">\r\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Search\" />\r\n                                        <button type=\"button\" class=\"nameSearchBtn\"><img src=\"images/search2.svg\" alt=\"\"\r\n                                            width=\"17\" /></button>\r\n                                    </div>\r\n                                </div>\r\n                                <ul class=\"modalList\">\r\n                                    <li>\r\n                                        <div class=\"cstmCheckbox\">\r\n                                            <input type=\"checkbox\" id=\"checkone\" />\r\n                                            <label for=\"checkone\">\r\n                                                <div class=\"d-flex align-items-center\">\r\n                                                    <figure class=\"m-0\">\r\n                                                        <img src=\"images/amber.png\" alt=\"\" />\r\n                                                    </figure>\r\n                                                    <h6>Amber</h6>\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li>\r\n                                        <div class=\"cstmCheckbox\">\r\n                                            <input type=\"checkbox\" id=\"checktwo\" />\r\n                                            <label for=\"checktwo\">\r\n                                                <div class=\"d-flex align-items-center\">\r\n                                                    <figure class=\"m-0\">\r\n                                                        <img src=\"images/benhughes.png\" alt=\"\" />\r\n                                                    </figure>\r\n                                                    <h6>Ben Hughes</h6>\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li>\r\n                                        <div class=\"cstmCheckbox\">\r\n                                            <input type=\"checkbox\" id=\"checkthree\" />\r\n                                            <label for=\"checkthree\">\r\n                                                <div class=\"d-flex align-items-center\">\r\n                                                    <figure class=\"m-0\">\r\n                                                        <img src=\"images/bobby-murray.png\" alt=\"\" />\r\n                                                    </figure>\r\n                                                    <h6>Bobby Murray</h6>\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </li>\r\n                                    <li>\r\n                                        <div class=\"cstmCheckbox\">\r\n                                            <input type=\"checkbox\" id=\"checkfour\" />\r\n                                            <label for=\"checkfour\">\r\n                                                <div class=\"d-flex align-items-center\">\r\n                                                    <figure class=\"m-0\">\r\n                                                        <img src=\"images/ellis-curz.png\" alt=\"\" />\r\n                                                    </figure>\r\n                                                    <h6>Ellis Curz</h6>\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </li>\r\n                                    <li>\r\n                                        <div class=\"cstmCheckbox\">\r\n                                            <input type=\"checkbox\" id=\"checkfive\" />\r\n                                            <label for=\"checkfive\">\r\n                                                <div class=\"d-flex align-items-center\">\r\n                                                    <figure class=\"m-0\">\r\n                                                        <img src=\"images/jordyn-jennings.png\" alt=\"\" />\r\n                                                    </figure>\r\n                                                    <h6>Jordyn Jennings</h6>\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </li>\r\n                                    <li>\r\n                                        <div class=\"cstmCheckbox\">\r\n                                            <input type=\"checkbox\" id=\"checksix\" />\r\n                                            <label for=\"checksix\">\r\n                                                <div class=\"d-flex align-items-center\">\r\n                                                    <figure class=\"m-0\">\r\n                                                        <img src=\"images/londan-buckner.png\" alt=\"\" />\r\n                                                    </figure>\r\n                                                    <h6>London Buckner</h6>\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </li>\r\n\r\n                                    <li>\r\n                                        <div class=\"cstmCheckbox\">\r\n                                            <input type=\"checkbox\" id=\"checkseven\" />\r\n                                            <label for=\"checkseven\">\r\n                                                <div class=\"d-flex align-items-center\">\r\n                                                    <figure class=\"m-0\">\r\n                                                        <img src=\"images/amber.png\" alt=\"\" />\r\n                                                    </figure>\r\n                                                    <h6>Amber</h6>\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </li>\r\n                                    <li>\r\n                                        <div class=\"cstmCheckbox\">\r\n                                            <input type=\"checkbox\" id=\"checkeight\" />\r\n                                            <label for=\"checkeight\">\r\n                                                <div class=\"d-flex align-items-center\">\r\n                                                    <figure class=\"m-0\">\r\n                                                        <img src=\"images/benhughes.png\" alt=\"\" />\r\n                                                    </figure>\r\n                                                    <h6>Ben Hughes</h6>\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </li>\r\n                                    <li>\r\n                                        <div class=\"cstmCheckbox\">\r\n                                            <input type=\"checkbox\" id=\"checknine\" />\r\n                                            <label for=\"checknine\">\r\n                                                <div class=\"d-flex align-items-center\">\r\n                                                    <figure class=\"m-0\">\r\n                                                        <img src=\"images/bobby-murray.png\" alt=\"\" />\r\n                                                    </figure>\r\n                                                    <h6>Bobby Murray</h6>\r\n                                                </div>\r\n                                            </label>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer justify-content-center border-0\">\r\n                            <button class=\"btn btn-org-gradient text-white px-5\">Assign</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AssignShift\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { months } from \"../../utils/Constants.config\";\r\nimport ShiftConfiguration from '../modal/shiftManagement/ShiftConfiguration'\r\nimport AssignShift from '../modal/shiftManagement/AssignShift'\r\nimport {shiftManagementAction} from '../../core/resource/actions'\r\n\r\nconst ShiftCalanderHeader = (props) => {\r\n  const {shiftData} = props \r\n  // const{date,shiftCalanderMonth,shiftCalanderYear,weekFirstDate,weekEndDate}=useSelector((state)=>state?.shiftCalanderHeader)\r\n\r\n  const dispatch = useDispatch()\r\n  const [openShiftModel, setOpenShiftModel] = useState(false)\r\n  const [openAssignShiftModel, setOpenAssignShiftModel] = useState(false)\r\n\r\n\r\n  const assignShiftModelOpen = ()=>{\r\n    setOpenAssignShiftModel(!openAssignShiftModel)\r\n  }\r\n\r\n  const getNextWeek = (state) => {\r\n    const nextweekDate = new Date(state.date.setDate(state.date.getDate() + 7));\r\n    state.date = nextweekDate;\r\n    state.shiftCalanderMonth = months[nextweekDate.getMonth()];\r\n    state.shiftCalanderYear = nextweekDate.getFullYear();\r\n    state.weekFirstDate = new Date(state.weekFirstDate.setDate(\r\n      state.weekFirstDate.getDate() + 7\r\n    ));\r\n    state.weekEndDate = new Date(state.weekEndDate.setDate(\r\n      state.weekEndDate.getDate() + 7\r\n    ));\r\n  };\r\n\r\n  const openShiftModelfunction = (data) => {\r\n    if(data == 'Data'){\r\n      let params= {\r\n        _id:shiftData?.id\r\n      }\r\n      dispatch(shiftManagementAction.getShiftConfigurationRequest(params))\r\n    }\r\n    setOpenShiftModel(!openShiftModel)\r\n    \r\n    \r\n  }\r\n\r\n  const getPreviousWeek = (state) => {\r\n    const preweekDate = new Date(state.date.setDate(state.date.getDate() - 7));\r\n    state.date = preweekDate;\r\n    state.shiftCalanderMonth = months[preweekDate.getMonth()];\r\n    state.shiftCalanderYear = preweekDate.getFullYear();\r\n    state.weekFirstDate = new Date(state.weekFirstDate.setDate(\r\n      state.weekFirstDate.getDate() - 7\r\n    ));\r\n    state.weekEndDate = new Date(state.weekEndDate.setDate(\r\n      state.weekEndDate.getDate() - 7\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center p-3\">\r\n        <h3 className=\"me-auto mb-0 fs-5 fw-semibold\">April 2024\r\n          {/* {`${shiftCalanderMonth} ${shiftCalanderYear}`} */}\r\n        </h3>\r\n        <div className=\"customCalanderNav me-auto d-flex align-items-center\">\r\n\r\n          <img src=\"images/prev-icon.svg\" style={{ cursor: \"pointer\" }} alt=\"\"\r\n          // onClick={()=>dispatch(getPreviousWeek())}\r\n          />\r\n\r\n          <span className=\"mx-3 d-block fs-7 fw-semibold mt-1\">\r\n            05 APR 2023 - 11 APR 2023\r\n            {/* {`${weekFirstDate.getDate()} ${months[weekFirstDate.getMonth()]} ${weekFirstDate.getFullYear()} - ${weekEndDate.getDate()} ${months[weekEndDate.getMonth()]} ${weekEndDate.getFullYear()}`} */}\r\n          </span>\r\n\r\n          <img src=\"images/next-icon.svg\" style={{ cursor: \"pointer\" }} alt=\"\"\r\n          //  onClick={()=>dispatch(getNextWeek())}\r\n          />\r\n\r\n        </div>\r\n        {shiftData !== '' && shiftData?.shift_name !== 'All Shift' &&\r\n        <div className=\"dropdown moredwn\">\r\n          <button\r\n            className=\"btn btn-primary addShiftBtn me-2 \"\r\n            type=\"button\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <i className=\"bi bi-three-dots-vertical\" /> More\r\n          </button>\r\n          <ul className=\"dropdown-menu \">\r\n          <li>\r\n              <button\r\n                className=\"dropdown-item\"\r\n                onClick={() => openShiftModelfunction('Data')}\r\n              >\r\n                Shift Configuration\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <button\r\n                className=\"dropdown-item border-bottom\"\r\n                onClick={() =>assignShiftModelOpen()}\r\n              >\r\n                Assign Shift\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <button\r\n                className=\"dropdown-item border-bottom\"\r\n              >\r\n                Add Week Off\r\n              </button>\r\n            </li>\r\n            \r\n           \r\n          </ul>\r\n        </div>}\r\n      </div>\r\n      <ShiftConfiguration\r\n        openShiftModelfunction={openShiftModelfunction}\r\n        openShiftModel={openShiftModel}\r\n        shiftData={shiftData}\r\n      />\r\n\r\n      <AssignShift\r\n      openAssignShiftModel={openAssignShiftModel}\r\n      setOpenAssignShiftModel={setOpenAssignShiftModel}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShiftCalanderHeader;\r\n","import React from \"react\";\r\n\r\nconst ShiftTableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th className=\"searchTh\">\r\n          <div className=\"searchByName\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search Employee by Name\"\r\n            />\r\n            <button type=\"button\" className=\"nameSearchBtn\">\r\n              <img src=\"images/search-box.svg\" alt=\"\" width={14} />\r\n            </button>\r\n          </div>\r\n        </th>\r\n        <th>\r\n          SUN <b>05</b>\r\n        </th>\r\n        <th>\r\n          MON <b>06</b>\r\n        </th>\r\n        <th>\r\n          TUE <b>07</b>\r\n        </th>\r\n        <th>\r\n          WED <b>08</b>\r\n        </th>\r\n        <th>\r\n          THU <b>09</b>\r\n        </th>\r\n        <th>\r\n          FRI <b>10</b>\r\n        </th>\r\n        <th>\r\n          SAT <b>11</b>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default ShiftTableHeader;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment-timezone'\r\n\r\nconst EmployeeInfoCard = ({userShiftData}) => {\r\n  const firstDateOfMonth=new Date(new Date().getFullYear(),new Date().getMonth(),1)\r\n  const lastDateOfMonth=new Date(new Date().getFullYear(),new Date().getMonth()+1,0)\r\n\r\n  return (\r\n    \r\n      <td>\r\n        <Link to={`/shift-management/${userShiftData?.id}/${moment(firstDateOfMonth).format(\"YYYY-MM-DD\")}/${moment(lastDateOfMonth).format(\"YYYY-MM-DD\")}`}>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <a href=\"shift-view.html\" className=\"userName\">\r\n          <figure>\r\n            <img src=\"images/profile-img.png\" alt=\"\" /> \r\n          </figure>\r\n          <p>\r\n            <strong>{userShiftData?.first_name}</strong>\r\n            {userShiftData?.Designation}\r\n          </p>\r\n        </a>\r\n        <div className=\"deleteBG\">\r\n          <img src=\"images/delete-icon.svg\" alt=\"\" width={16} height={20} />\r\n        </div>\r\n      </div>\r\n      </Link>\r\n    </td>\r\n \r\n    \r\n  )\r\n}\r\n\r\nexport default EmployeeInfoCard","import React from \"react\";\r\nimport ShiftTableRow from \"./ShiftTableRow\";\r\nimport { useSelector } from \"react-redux\";\r\nimport EmployeeInfoCard from \"./EmployeeInfoCard\";\r\nimport EmployeeShiftNameandTime from \"./EmployeeShiftNameandTime\";\r\n\r\nconst ShiftTableBody = () => {\r\n  // const { weekFirstDate, weekEndDate,shiftId } = useSelector(\r\n  //   (state) => state.shiftCalanderHeader\r\n  // );\r\n \r\n  const data = null;\r\n  const isLoading = false;\r\n  const isSuccess = false;\r\n  const isError = false;\r\n  \r\n\r\n  return (\r\n    <tbody>\r\n      {/* <ShiftTableRow /> */}\r\n      {isLoading ? (\r\n        <tr>\r\n          <td>Loading....</td>\r\n        </tr>\r\n      ) : isError ? (\r\n        <tr>\r\n          <td>Something went wrong....</td>\r\n        </tr>\r\n      ) : (\r\n        data?.data?.getShiftdata.slice(0,10).map((userShiftData) => (\r\n          <tr key={userShiftData?.id}>\r\n            <EmployeeInfoCard userShiftData={userShiftData} />\r\n            {userShiftData?.shiftdata.map((shiftTime) => (\r\n              <EmployeeShiftNameandTime\r\n                key={shiftTime?.date}\r\n                shiftTime={shiftTime}\r\n              />\r\n            ))}\r\n          </tr>\r\n        ))\r\n      )}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default ShiftTableBody;\r\n","import React, { useState } from \"react\";\r\nimport ShiftCalanderHeader from \"./ShiftCalanderHeader\";\r\nimport ShiftTableHeader from \"./ShiftTableHeader\";\r\nimport ShiftTableBody from \"./ShiftTableBody\";\r\n\r\nconst ShiftCalander = (props) => {\r\n  const {shiftData} = props\r\n  \r\n  return (\r\n    <div className=\"cardBox p-0 mb-3 customCalander overflow-hidden\">\r\n      <div className=\"tab-content\">\r\n        <div className=\"tab-pane fade show active\" id=\"shiftTab1\">\r\n          <ShiftCalanderHeader\r\n          shiftData={shiftData}/>\r\n          <div className=\"table-responsive shiftTablemain shiftHeigth\">\r\n            <table className=\"table m-0\">\r\n              <ShiftTableHeader />\r\n              <ShiftTableBody />\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShiftCalander;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ShiftSchedual from \"../components/shiftManagement/ShiftSchedual\";\r\nimport ShiftCalander from \"../components/shiftManagement/ShiftCalander\";\r\nimport {useDispatch, useSelector } from \"react-redux\";\r\nimport {shiftManagementAction} from '../core/resource/actions'\r\nimport ApproveRejectModal from '../components/modal/ApproveRejectModal'\r\n\r\n\r\nconst ShiftManagement = () => {\r\n  const dispatch = useDispatch()\r\n  const {getAllShiftPending,getAllShiftRes,getAllShiftError,deleteShiftPending,deleteShiftRes,deleteShiftError} = useSelector(state =>state.shift)\r\n  const [getAllShift, SetAllShift] = useState([])\r\n  const [deleteshift,setDeletShift] = useState('')\r\n  const [isActiveDeletModel, setIsActiveDeletMode] = useState(false)\r\n  const [isActiveShift, setIsActive]= useState('')\r\n  const [shiftData,setShiftData] = useState('')\r\n\r\n  const setDeletShifts = (data)=>{\r\n    setIsActiveDeletMode(!isActiveDeletModel)\r\n    setDeletShift(data)\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    getAllShiftFunction()\r\n  },[])\r\n\r\n  const getAllShiftFunction = ()=>{\r\n    dispatch(shiftManagementAction.getAllShiftRequest())\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getAllShiftPending) {\r\n        if (getAllShiftError) {\r\n          SetAllShift([])\r\n            return;\r\n        }\r\n        if (getAllShiftRes) {\r\n            if (getAllShiftRes?.data?.code == 200) {\r\n              let Temp = getAllShiftRes?.data?.data?.data?.data\r\n              Temp?.unshift({ shift_name: \"All Shift\", id: 'ejknrjk34324', shift_start_time: \"00:00\", shift_end_time: \"00:00\" ,short_name: undefined})\r\n              SetAllShift(Temp)\r\n            }\r\n        }\r\n    }\r\n}, [\r\n  getAllShiftPending,\r\n  getAllShiftRes,\r\n  getAllShiftError\r\n]);\r\n\r\nuseEffect(() => {\r\n  if (!deleteShiftPending) {\r\n    if (deleteShiftError) {\r\n      dispatch(shiftManagementAction.handleClearShiftStore('HANDLE_CLEAR_DELETE_SHIFT_STORE'))\r\n      return;\r\n    }\r\n    if (deleteShiftRes) {\r\n      if (deleteShiftRes?.data?.code == 200) {\r\n        dispatch(shiftManagementAction.handleClearShiftStore('HANDLE_CLEAR_DELETE_SHIFT_STORE'))\r\n        getAllShiftFunction()\r\n      }\r\n    }\r\n  }\r\n}, [\r\n  deleteShiftRes,\r\n  deleteShiftError,\r\n  deleteShiftPending\r\n]);\r\n\r\nconst onDeleteCancelShift = (type)=>{\r\n  if (type) {\r\n    const params = {\r\n      _id: deleteshift?.id\r\n    }\r\n    dispatch(shiftManagementAction?.deleteShiftRequest(params))\r\n    setIsActiveDeletMode(!isActiveDeletModel)\r\n  } else {\r\n    setIsActiveDeletMode(!isActiveDeletModel)\r\n  }\r\n\r\n}\r\n\r\nconsole.log(\"Get All Shift\", getAllShift)\r\n\r\n  return (\r\n    <>\r\n      <ShiftSchedual \r\n      getAllShift={getAllShift}\r\n      getAllShiftFunction={getAllShiftFunction}\r\n      setDeletShift={setDeletShifts}\r\n      setShiftData={setShiftData}/>\r\n      \r\n      <ShiftCalander \r\n      shiftData={shiftData}/>\r\n\r\n      {isActiveDeletModel && (\r\n        <ApproveRejectModal\r\n          onApproveReject={onDeleteCancelShift}\r\n          isShow={isActiveDeletModel}\r\n          desc={\"You want to delete this Shift\"}\r\n          // isLoading={deleteEmailTemplatePending}\r\n        />)\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShiftManagement;\r\n"],"names":["_ref","lottieUrl","Lottiestyle","speed","backgroundColor","_jsx","Lottie","loop","animationData","background","play","style","autoplay","text","_Fragment","children","className","props","name","value","handleChange","totalHours","intervalMinutes","timeOptions","generateTimeOptions","timeArray","hours","minutes","i","j","push","item","_jsxs","onChange","e","hidden","map","timeObj","index","titile","desc","onApproveReject","isShow","isLoading","btnTextLeft","btnTextRight","class","id","display","opacity","Lottieplayer","backup","width","height","CustomButton","classNames","handleClick","dispatch","useDispatch","openAddCalendar","openAddCalendarModel","selectedCalendarData","setSelectedCalendarDatas","getAllShiftCalendar","addShiftCalendarPending","addShiftCalendarRes","addShiftCalendarError","useSelector","state","shift","errors","setErrors","useState","calendarId","setCalendarId","workingDay","setWorkingDay","weekOff","setweekOff","alternativeSaturday","setalternativeSaturday","addCalendar","setAddCalendar","title","working_days","alternative_saturday_off","week_off","alternativeSaturdayFun","target","checked","newResult","filter","val","weekOffFun","useEffect","toast","error","errorMessage","_addShiftCalendarRes$","_addShiftCalendarRes$2","data","code","success","msg","console","log","shiftManagementAction","handleClearShiftStore","resetData","tabIndex","visibility","type","onClick","event","prev","undefined","placeholder","CustomError","required","setWorkingDayfun","selected","for","includes","async","validationResponse","validateSchema","addCalendarchema","isValid","updateShiftCalendarRequest","addShiftCalendarRequest","handleSubmitCreateShiftConfiguration","trans","key","replacements","arguments","length","translation","ValidattionTranslation","Object","entries","replace","RegExp","emailRegix","onlyDigitRegix","schema","validateDataRes","status","msg_code","result","errorsList","validate","abortEarly","catch","err","inner","reduce","acc","path","message","regex","validateField","minLength","test","yup","this","createError","shape","username","email","min","max","password","first_name","last_name","email_id","contact_number","pan","currency","address_line_1","address_line_2","city","country","postal_code","typeError","country_name","country_code","addDepartmentSchema","depName","REQUIREDFIELD","shortName","addDesignationSchema","departmentId","designationName","MrfCreateSchema","department_id","designation_id","position_id","priority","min_qualififcation","preferred_qualification","business_impact","hiring_for","vacant_position","year_of_experience","mrf_justification","MrfReplacementSchema","emp_id","MrfJobDescSchema","responsiblities","domain_knowledge","role_summary","otherSkills","optional","trainingCertificates","MrfInterviewSchema","department","nullable","designation","interviewStage","interviewer","interviewType","candidateSchema","employeeName","employeeEmail","employeeMobile","location","source","experience","address","pincode","skills","addEmailTemplatechema","is_active","template_name","email_type","email_title","body","addActionSchema","action_name","action_type","template_id","addShiftSchema","shift_name","shift_code","color","shift_start_time","shift_end_time","break_start_time","break_end_time","early_arrival_tolerance","late_departure_tolerance","grace_start_time","grace_end_time","half_day_policy_time","full_day_policy_time","shift_type","_createShift$shift_co","openModel","openCreateShiftModel","editShift","setEditShift","getAllShiftFunction","addShiftPending","addShiftRes","addShiftError","editorData","setEditorData","shiftId","setShiftId","isActive","setIsActive","totalworkingHours","setTotalWorkingHours","totalBreakHours","setTotalBreakHours","createShift","serCreateShift","shift_configuration","_addShiftRes$data","_addShiftRes$data2","short_code","split","word","charAt","toUpperCase","join","startTime","moment","endTime","isNightShift","isAfter","endAdjusted","add","duration","diff","formattedTime","String","padStart","shiftType","resetTempateData","htmlFor","position","top","readOnly","CustomTimePicker","updateShiftRequest","addShiftRequest","handleSubmitCreateShift","card","setDeletShift","src","alt","setShiftData","activebtn","setActiveBtn","marginRight","href","clickShiftData","ShiftMenuDropdown","getAllShift","box","setBox","document","querySelector","overflow","overflowX","scrollBehavior","marginLeft","ShiftInfoCard","scrollLeft","clientWidth","left","scrollRight","right","navigate","useNavigate","setOpenModel","CreateUpdateShift","ShiftSchedualCards","AddCalendar","openShiftModel","openShiftModelfunction","shiftData","addShiftConfigurationPending","addShiftConfigurationRes","addShiftConfigurationError","getShiftConfigurationPending","getShiftConfigurationRes","getShiftConfigurationError","getAllShiftCalendarError","getAllShiftCalendarRes","getAllShiftCalendarPending","overTime","setOverTime","AllCalendar","setAllCalendar","shiftConfigurationdata","setShiftConfigurationdata","shift_id","over_time","minimum_ot_hours","maximum_ot_hours","_addShiftConfiguratio","_addShiftConfiguratio2","_getShiftConfiguratio","_getShiftConfiguratio2","_getShiftConfiguratio3","_Temp$","_Temp$$shift_data","_Temp$2","_Temp$2$shift_data","_Temp$3","_Temp$3$shift_data","_Temp$4","_Temp$4$shift_data","_Temp$5","_Temp$6","_Temp$6$shift_data","_Temp$7","_Temp$7$shift_data","Temp","shift_data","is_default","pre","getAllShiftCalendarRequest","_getAllShiftCalendarR","_getAllShiftCalendarR2","_getAllShiftCalendarR3","_getAllShiftCalendarR4","_id","addShiftConfigurationRequest","openAssignShiftModel","setOpenAssignShiftModel","setOpenShiftModel","params","getShiftConfigurationRequest","cursor","ShiftConfiguration","AssignShift","ShiftTableHeader","ShiftTableBody","ShiftCalanderHeader","ShiftManagement","getAllShiftPending","getAllShiftRes","getAllShiftError","deleteShiftPending","deleteShiftRes","deleteShiftError","SetAllShift","deleteshift","isActiveDeletModel","setIsActiveDeletMode","isActiveShift","getAllShiftRequest","_getAllShiftRes$data","_getAllShiftRes$data2","_getAllShiftRes$data3","_getAllShiftRes$data4","unshift","short_name","_deleteShiftRes$data","ShiftSchedual","ShiftCalander","ApproveRejectModal","deleteShiftRequest"],"sourceRoot":""}