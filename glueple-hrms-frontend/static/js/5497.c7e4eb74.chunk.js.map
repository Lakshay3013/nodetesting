{"version":3,"file":"static/js/5497.c7e4eb74.chunk.js","mappings":"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","sources":["components/globalComponents/CustomTimePicker.js","components/modal/shiftManagement/AddCalendar.js","components/modal/shiftManagement/CreateUpdateShift.js","components/admin/shiftManagement/ShiftMenuDropdown.js","components/admin/shiftManagement/ShiftInfoCard.js","components/admin/shiftManagement/ShiftSchedualCards.js","components/admin/shiftManagement/ShiftSchedual.js","components/modal/shiftManagement/ShiftConfiguration.js","components/modal/shiftManagement/AssignShift.js","components/modal/shiftManagement/AddWeekOff.js","components/admin/shiftManagement/ShiftCalanderHeader.js","components/admin/shiftManagement/ShiftTableHeader.js","components/admin/shiftManagement/EmployeeInfoCard.js","components/admin/shiftManagement/EmployeeShiftNameTime.js","components/admin/shiftManagement/ShiftTableBody.js","components/admin/shiftManagement/ShiftCalender.js","components/admin/shiftManagement/ShiftEditModel.js","components/admin/shiftManagement/ShiftBulkUpload.js","view/ShiftManagement.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst CustomTimePicker = (props) => {\r\n  const {name,value,handleChange,totalHours,intervalMinutes} = props;\r\n\r\n  const generateTimeOptions = (totalHours, intervalMinutes) => {\r\n    const timeArray = [];\r\n    let hours = '00';\r\n    let minutes = '00';\r\n    for (let i = 0; i < totalHours; i++) {\r\n      for (let j = 0; j < 60; j++) {\r\n        hours = i < 10 ? `0${i}` : i;\r\n        if (j % intervalMinutes === 0) {\r\n          minutes = j < 10 ? `0${j}` : j;\r\n          timeArray.push({ item: `${hours}:${minutes}` });\r\n        }\r\n      }\r\n    }\r\n    return timeArray;\r\n  };\r\n  const timeOptions = generateTimeOptions(totalHours, intervalMinutes);\r\n\r\n  return (\r\n    <select \r\n      className=\"form-select\" \r\n      name={name} \r\n      value={value} \r\n      onChange={(e) => handleChange(e)}\r\n    >\r\n      <option value='' hidden>HH:MM</option>\r\n      {timeOptions.map((timeObj, index) => (\r\n        <option key={index} value={timeObj.item}>\r\n          {timeObj.item}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default CustomTimePicker;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CustomButton } from '../../globalComponents';\r\nimport { shiftManagementAction } from '../../../core/resource/actions';\r\nimport { toast } from 'react-toastify';\r\nimport { addCalendarchema } from '../../../utils/ValidationSchema';\r\nimport { validateSchema } from '../../../utils/ValidationHelper';\r\nimport CustomError from '../../globalComponents/CustomError';\r\nimport moment from 'moment'\r\nimport CustomHoursMinPicker from '../../globalComponents/CustomTimePicker';\r\n\r\nconst AddCalendar = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { openAddCalendar, openAddCalendarModel, selectedCalendarData, setSelectedCalendarDatas, getAllShiftCalendar } = props\r\n    const { addShiftCalendarPending, addShiftCalendarRes, addShiftCalendarError } = useSelector(state => state.shift)\r\n    const [errors, setErrors] = useState({});\r\n    const [calendarId, setCalendarId] = useState('')\r\n    const [workingDay, setWorkingDay] = useState('')\r\n    const [weekOff, setweekOff] = useState()\r\n    const [alternativeSaturday, setalternativeSaturday] = useState([])\r\n    const [addCalendar, setAddCalendar] = useState({\r\n        title: '',\r\n        working_days: '',\r\n        alternative_saturday_off: '',\r\n        week_off: ''\r\n    })\r\n\r\n    const setWorkingDayfun = (data) => {\r\n        setWorkingDay(data)\r\n        if (data == '5') {\r\n            setweekOff(['6', '7'])\r\n        } else if (data == '6') {\r\n            setweekOff([])\r\n            setweekOff(['7'])\r\n        } else if (data == '7') {\r\n            setweekOff([])\r\n        }\r\n    }\r\n    const alternativeSaturdayFun = (e) => {\r\n        if (e.target.checked == true) {\r\n            setalternativeSaturday([...alternativeSaturday,e.target.value])\r\n        } else {\r\n            let newResult = alternativeSaturday.filter(val => val != e.target.value)\r\n            setalternativeSaturday([...newResult])\r\n        }\r\n    }\r\n    const weekOffFun = (e) => {\r\n        if (e.target.checked == true) {\r\n            setweekOff([...weekOff, e.target.value])\r\n        } else {\r\n            let newResult = weekOff.filter(val => val != e.target.value)\r\n            setweekOff([...newResult])\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setAddCalendar({ ...addCalendar, [name]: value });\r\n        setErrors(prev => ({ ...prev, [name]: undefined }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!addShiftCalendarPending) {\r\n            if (addShiftCalendarError) {\r\n                toast.error(addShiftCalendarError?.errorMessage)\r\n                return;\r\n            }\r\n            if (addShiftCalendarRes) {\r\n                if (addShiftCalendarRes?.data?.code === 200) {\r\n                    toast.success(addShiftCalendarRes?.data?.msg)\r\n                    openAddCalendarModel()\r\n                    dispatch(shiftManagementAction.handleClearShiftStore(\"HANDLE_CLEAR_ADD_SHIFT_CALENDAR_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addShiftCalendarRes,\r\n        addShiftCalendarError,\r\n        addShiftCalendarPending\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setAddCalendar({\r\n            title: selectedCalendarData?.title || '',\r\n            working_days: selectedCalendarData?.working_days || '',\r\n            alternative_saturday_off: selectedCalendarData?.alternative_saturday_off || '',\r\n            week_off: selectedCalendarData?.week_off\r\n\r\n        })\r\n        setWorkingDay(selectedCalendarData?.working_days)\r\n        setweekOff(selectedCalendarData?.week_off)\r\n        setalternativeSaturday(selectedCalendarData?.alternative_saturday_off == undefined ? [] : selectedCalendarData?.alternative_saturday_off)\r\n        setCalendarId(selectedCalendarData?.id)\r\n        \r\n    }, [selectedCalendarData])\r\n\r\n    // const handleSubmitCreateShift = async () => {\r\n    //     createShift.is_active = isActive\r\n    //     const validationResponse = await validateSchema(addShiftSchema, createShift);\r\n    //     if (validationResponse.isValid) {\r\n    //         setErrors({});\r\n    //         if (editShift) {\r\n    //             createShift['_id'] = shiftId\r\n    //             dispatch(shiftManagementAction.updateShiftRequest(createShift));\r\n    //             openAddCalendarModel()\r\n    //             getAllShiftFunction()\r\n    //         } else {\r\n    //             dispatch(shiftManagementAction.addShiftRequest(createShift));\r\n    //             getAllShiftFunction()\r\n    //         }\r\n\r\n    //     } else {\r\n    //         setErrors(validationResponse.errors);\r\n    //         console.log(validationResponse.errors, \"formattedErrors\");\r\n    //     }\r\n    // }\r\n\r\n\r\n    const handleSubmitCreateShiftConfiguration = async () => {\r\n        addCalendar.working_days = workingDay\r\n        addCalendar.alternative_saturday_off = alternativeSaturday\r\n        addCalendar.week_off = weekOff\r\n        const validationResponse = await validateSchema(addCalendarchema, addCalendar);\r\n        if (validationResponse.isValid) {\r\n            setErrors({});\r\n            if (selectedCalendarData) {\r\n                addCalendar['_id'] = calendarId\r\n                dispatch(shiftManagementAction.updateShiftCalendarRequest(addCalendar))\r\n                openAddCalendarModel()\r\n                getAllShiftCalendar()\r\n            } else {\r\n                dispatch(shiftManagementAction.addShiftCalendarRequest(addCalendar))\r\n                getAllShiftCalendar()\r\n            }\r\n            ;\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n            // console.log(validationResponse.errors, \"formattedErrors\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (openAddCalendar === false) {\r\n            resetData()\r\n        }\r\n    }, [openAddCalendar])\r\n\r\n    const resetData = () => {\r\n        setAddCalendar({\r\n            title: '',\r\n            working_days: '',\r\n            alternative_saturday_off: '',\r\n            week_off: '',\r\n        })\r\n        setErrors({});\r\n        // setSelectedCalendarDatas(' ')\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end creatNewTicketOff ${openAddCalendar ? 'show' : ''}`}\r\n\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openAddCalendar ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{selectedCalendarData ? \"Update\" : \"Create New\"} Calendar</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => openAddCalendarModel()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"table-responsive tableDiv shiftmanagementtbl\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td width=\"30%\">\r\n                                        <div className=\"d-flex align-items-center\"><span className=\"srNum\">1</span><b\r\n                                            className=\"ps-3 text-primary\"> Title </b></div>\r\n                                    </td>\r\n                                    <td><input type=\"text\" name=\"title\" value={addCalendar.title} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter Title\" />\r\n                                        {errors?.title && (\r\n                                            <CustomError text={errors.title} />\r\n                                        )}\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"d-flex align-items-center\"><span className=\"srNum\">5</span><b\r\n                                            className=\"ps-3 text-primary\"> Working Days</b></div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className=\"d-flex workingradio\">\r\n                                            <div className=\"shiftInpt\">\r\n                                                <select className=\"form-select\" required\r\n                                                    name='shift_type'\r\n                                                    value={workingDay}\r\n                                                    onChange={(e) => setWorkingDayfun(e.target.value)}\r\n                                                >\r\n                                                    <option value='' hidden selected>Select Required Working Days</option>\r\n                                                    <option value='5'>5 Days</option>\r\n                                                    <option value='6'>6 Days</option>\r\n                                                    <option value='7'>7 Days</option>\r\n                                                    <option value='alternative_saturday'>Alternative Saturday Off</option>\r\n                                                </select>\r\n                                                {errors?.working_days && (\r\n                                                    <CustomError text={errors.working_days} />\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                                {workingDay == 'alternative_saturday' &&\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div className=\"d-flex align-items-center\"><span className=\"srNum\">6</span><b\r\n                                                className=\"ps-3 text-primary\">Saturdays</b></div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div className=\"d-flex workingradio\">\r\n                                                <div className=\"d-flex gap-2 checkShift\">\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"1\" name=\"1\" onClick={alternativeSaturdayFun} checked={alternativeSaturday?.includes(\"1\")} />\r\n                                                        <label className=\"form-check-label\" for=\"first\">\r\n                                                            1st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"2\" name=\"2\" onClick={alternativeSaturdayFun} checked={alternativeSaturday?.includes(\"2\")}/>\r\n                                                        <label className=\"form-check-label\" for=\"second\">\r\n                                                            2st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"3\" name=\"3\" onClick={alternativeSaturdayFun} checked={alternativeSaturday?.includes(\"3\")}/>\r\n                                                        <label className=\"form-check-label\" for=\"third\">\r\n                                                            3st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"4\" name=\"4\" onClick={alternativeSaturdayFun}  checked={alternativeSaturday?.includes(\"4\")}/>\r\n                                                        <label className=\"form-check-label\" for=\"fourth \">\r\n                                                            4st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"5\" name=\"5\" onClick={alternativeSaturdayFun} checked={alternativeSaturday?.includes(\"5\")}/>\r\n                                                        <label className=\"form-check-label\" for=\"five \">\r\n                                                            5st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                    </tr>}\r\n                                {workingDay != '7' && workingDay != 'alternative_saturday' &&\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div className=\"d-flex align-items-center\"><span className=\"srNum\">7</span><b\r\n                                                className=\"ps-3 text-primary\"> Week Off</b></div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div className=\"d-flex gap-2 checkShift\">\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"1\" name='1' id=\"first\" onClick={weekOffFun} checked={weekOff?.includes(\"1\")} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"first\">\r\n                                                        Monday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"2\" name='2' id=\"second\" onClick={weekOffFun} checked={weekOff?.includes(\"2\")} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"second\">\r\n                                                        Tuesday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"3\" name='3' id=\"third\" onClick={weekOffFun} checked={weekOff?.includes(\"3\")} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"third\">\r\n                                                        Wednesday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"4\" name='4' id=\"fourth \" onClick={weekOffFun} checked={weekOff?.includes(\"4\")} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"fourth \">\r\n                                                        Thursday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"5\" name='5' id=\"five \" onClick={weekOffFun} checked={weekOff?.includes(\"5\")} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"five \">\r\n                                                        Friday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"6\" name='6' id=\"five \" onClick={weekOffFun} checked={weekOff?.includes(\"6\")} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"five \">\r\n                                                        Saturday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"7\" name='7' id=\"five \" onClick={weekOffFun} checked={weekOff?.includes(\"7\")} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"five \">\r\n                                                        Sunday\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                    </tr>}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        {/* <button type=\"button\" className=\"border-0 p-0 bg-transparent cancelBtn\">Back</button> */}\r\n                        <button type=\"button\" className=\"btn btn-primary gradientBg\" onClick={() => handleSubmitCreateShiftConfiguration()}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddCalendar\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CustomButton } from '../../globalComponents';\r\nimport { shiftManagementAction } from '../../../core/resource/actions';\r\nimport { toast } from 'react-toastify';\r\nimport { addShiftSchema } from '../../../utils/ValidationSchema';\r\nimport { validateSchema } from '../../../utils/ValidationHelper';\r\nimport CustomError from '../../globalComponents/CustomError';\r\nimport moment from 'moment'\r\nimport CustomTimePicker from '../../globalComponents/CustomTimePicker';\r\n\r\nconst CreateAndUpdateEmailTemplate = (props) => {\r\n\r\n    const { openModel, openCreateShiftModel, editShift, setEditShift, getAllShiftFunction } = props\r\n    const { addShiftPending, addShiftRes, addShiftError } = useSelector(state => state.shift)\r\n    const [errors, setErrors] = useState({});\r\n    const dispatch = useDispatch();\r\n    const [editorData, setEditorData] = useState('')\r\n    const [shiftId, setShiftId] = useState('')\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [totalworkingHours, setTotalWorkingHours] = useState()\r\n    const [totalBreakHours, setTotalBreakHours] = useState()\r\n    const [createShift, serCreateShift] = useState({\r\n        shift_name: '',\r\n        shift_code: '',\r\n        color: '',\r\n        is_active: false,\r\n        shift_start_time: '',\r\n        shift_end_time: '',\r\n        break_start_time: '',\r\n        break_end_time: '',\r\n        early_arrival_tolerance: '',\r\n        late_departure_tolerance: '',\r\n        grace_start_time:'',\r\n        grace_end_time:'',\r\n        half_day_policy_time: '',\r\n        full_day_policy_time: '',\r\n        shift_type: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        serCreateShift({\r\n            shift_name: editShift?.shift_name || '',\r\n            shift_code: editShift?.shift_code || '',\r\n            color: editShift?.color || '',\r\n            is_active: editShift?.is_active || '',\r\n            shift_start_time: editShift?.shift_start_time || '',\r\n            shift_end_time: editShift?.shift_end_time || '',\r\n            break_start_time: editShift?.break_start_time || '',\r\n            break_end_time: editShift?.break_end_time || '',\r\n            early_arrival_tolerance: editShift?.early_arrival_tolerance || '',\r\n            late_departure_tolerance: editShift?.late_departure_tolerance || '',\r\n            grace_start_time:editShift?.grace_start_time || '',\r\n            grace_end_time:editShift?.grace_end_time || '',\r\n            half_day_policy_time: editShift?.half_day_policy_time || '',\r\n            full_day_policy_time: editShift?.full_day_policy_time || '',\r\n            shift_type: editShift?.shift_type || '',\r\n        })\r\n        setIsActive(editShift.is_active)\r\n        setShiftId(editShift?.id)\r\n    }, [editShift])\r\n\r\n    useEffect(() => {\r\n        if (!addShiftPending) {\r\n            if (addShiftError) {\r\n                toast.error(addShiftError?.errorMessage)\r\n                return;\r\n            }\r\n            if (addShiftRes) {\r\n                if (addShiftRes?.data?.code === 200) {\r\n                    toast.success(addShiftRes?.data?.msg)\r\n                    openCreateShiftModel()\r\n                    dispatch(shiftManagementAction.handleClearShiftStore(\"HANDLE_CLEAR_ADD_SHIFT_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addShiftRes,\r\n        addShiftError,\r\n        addShiftPending\r\n    ]);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        if (name === 'shift_name') {\r\n            let short_code = value?.split(' ').map(word => word.charAt(0).toUpperCase()).join('');\r\n            createShift.shift_code = short_code\r\n        } else if (name === \"shift_end_time\") {\r\n            const startTime = moment(createShift.shift_start_time, 'HH:mm:ss');\r\n            const endTime = moment(value, 'HH:mm:ss');\r\n            const isNightShift = startTime.isAfter(endTime);\r\n\r\n            const endAdjusted = isNightShift ? endTime.add(1, 'day') : endTime;\r\n            const duration = moment.duration(endAdjusted.diff(startTime));\r\n            const formattedTime = `${String(duration.hours()).padStart(2, '0')}:${String(duration.minutes()).padStart(2, '0')}`;\r\n\r\n            const shiftType = isNightShift ? \"night\" : \"morning\";\r\n            setTotalWorkingHours(formattedTime);\r\n            createShift.shift_type = shiftType\r\n            createShift.full_day_policy_time = formattedTime\r\n        } else if (name === 'break_end_time') {\r\n            const startTime = moment(createShift.break_start_time, 'HH:mm:ss');\r\n            const endTime = moment(value, 'HH:mm:ss');\r\n            const isNightShift = startTime.isAfter(endTime);\r\n\r\n            const endAdjusted = isNightShift ? endTime.add(1, 'day') : endTime;\r\n            const duration = moment.duration(endAdjusted.diff(startTime));\r\n            const formattedTime = `${String(duration.hours()).padStart(2, '0')}:${String(duration.minutes()).padStart(2, '0')}`;\r\n            setTotalBreakHours(formattedTime)\r\n        }\r\n\r\n        serCreateShift({ ...createShift, [name]: value });\r\n        setErrors(prev => ({ ...prev, [name]: undefined }));\r\n    };\r\n\r\n    const handleSubmitCreateShift = async () => {\r\n        createShift.is_active = isActive\r\n        const validationResponse = await validateSchema(addShiftSchema, createShift);\r\n        if (validationResponse.isValid) {\r\n            setErrors({});\r\n            if (editShift) {\r\n                createShift['_id'] = shiftId\r\n                dispatch(shiftManagementAction.updateShiftRequest(createShift));\r\n                openCreateShiftModel()\r\n                getAllShiftFunction()\r\n            } else {\r\n                dispatch(shiftManagementAction.addShiftRequest(createShift));\r\n                getAllShiftFunction()\r\n            }\r\n\r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n            console.log(validationResponse.errors, \"formattedErrors\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (openModel == false) {\r\n            resetTempateData()\r\n        }\r\n    }, [openModel])\r\n\r\n\r\n    const resetTempateData = () => {\r\n        serCreateShift({\r\n            shift_name: '',\r\n            shift_code: '',\r\n            color: '',\r\n            is_active: '',\r\n            shift_start_time: '',\r\n            shift_end_time: '',\r\n            break_start_time: '',\r\n            break_end_time: '',\r\n            early_arrival_tolerance: '',\r\n            late_departure_tolerance: '',\r\n            grace_start_time:'',\r\n            grace_end_time:'',\r\n            half_day_policy_time: '',\r\n            full_day_policy_time: '',\r\n            shift_type: '',\r\n        })\r\n        setEditShift('')\r\n        setErrors({});\r\n        setEditorData('')\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end creatNewTicketOff ${openModel ? 'show' : ''}`}\r\n\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">{editShift ? \"Update\" : \"Create New\"} Shift</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => openCreateShiftModel()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"formPanel\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Shift Name<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            {/* <div className=\"col-md-12\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <div className='row'>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Shift Name</label><span className='text-danger'>*</span>\r\n                                            <input type=\"text\" name=\"shift_name\" value={createShift.shift_name} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter start time\" />\r\n                                            {errors?.shift_name && (\r\n                                                <CustomError text={errors.shift_name} />\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Shift Code</label><span className='text-danger'>*</span>\r\n                                            <input type=\"text\" name=\"shift_code\" value={(createShift.shift_code)?.toUpperCase()} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter end time\" />\r\n                                            {errors?.shift_code && (\r\n                                        <CustomError text={errors.shift_code} />\r\n                                    )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n\r\n                                    <input type=\"text\" className=\"form-control fs-7\"\r\n                                        placeholder=\"Enter Shift Name\"\r\n                                        name='shift_name'\r\n                                        value={createShift?.shift_name || ''}\r\n                                        onChange={(e) => handleChange(e)}\r\n                                    />\r\n\r\n                                    {errors?.shift_name && (\r\n                                        <CustomError text={errors.shift_name} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Shift Code<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n\r\n                                    <input type=\"text\" className=\"form-control fs-7\"\r\n                                        placeholder=\"Enter Shift Code\"\r\n                                        name='shift_code'\r\n                                        value={(createShift.shift_code)?.toUpperCase() || ''}\r\n                                        onChange={(e) => handleChange(e)}\r\n                                    />\r\n\r\n                                    {errors?.shift_code && (\r\n                                        <CustomError text={errors.shift_code} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor style={{ position: \"relative\", top: \"40px\" }}>Working Time<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <div className='row'>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Start time</label><span className='text-danger'>*</span>\r\n                                            <input type=\"time\" name=\"shift_start_time\" value={createShift.shift_start_time} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter start time\" />\r\n                                            {errors?.shift_start_time && (\r\n                                                <CustomError text={errors.shift_start_time} />\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">End time</label><span className='text-danger'>*</span>\r\n                                            <input type=\"time\" name=\"shift_end_time\" value={createShift.shift_end_time} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter end time\" />\r\n                                            {errors?.shift_end_time && (\r\n                                                <CustomError text={errors.shift_end_time} />)}\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Shift Hours</label>\r\n                                            <input type=\"text\" name=\"\" value={createShift.full_day_policy_time} readOnly className=\"form-control\" placeholder=\"Shift Hours\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor style={{ position: \"relative\", top: \"40px\" }}>Break Time<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <div className='row'>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Start time</label><span className='text-danger'>*</span>\r\n                                            <input type=\"time\" name=\"break_start_time\" value={createShift.break_start_time} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter start time\" />\r\n                                            {errors?.break_start_time && (\r\n                                                <CustomError text={errors.break_start_time} />\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">End time</label><span className='text-danger'>*</span>\r\n                                            <input type=\"time\" name=\"break_end_time\" value={createShift.break_end_time} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter end time\" />\r\n                                            {errors?.break_end_time && (\r\n                                                <CustomError text={errors.break_end_time} />)}\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Break Hours</label>\r\n                                            <input type=\"text\" name=\"\" value={totalBreakHours} readOnly className=\"form-control\" placeholder=\"Break Hours\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor style={{ position: \"relative\", top: \"40px\" }}>Punching Tolerance<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <div className='row'>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Early Coming Time</label><span className='text-danger'>*</span>\r\n                                            <CustomTimePicker name=\"early_arrival_tolerance\" value={createShift.early_arrival_tolerance} handleChange={handleChange} totalHours = {5} intervalMinutes={15} />\r\n                                            {/* <input type=\"time\" name=\"early_arrival_tolerance\" value={createShift.early_arrival_tolerance} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter start time\" /> */}\r\n                                            {errors?.early_arrival_tolerance && (\r\n                                                <CustomError text={errors.early_arrival_tolerance} />\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Let Going Time</label><span className='text-danger'>*</span>\r\n                                            <CustomTimePicker name=\"late_departure_tolerance\" value={createShift.late_departure_tolerance} handleChange={handleChange} totalHours = {5} intervalMinutes={15} />\r\n                                            {/* <input type=\"time\" name=\"late_departure_tolerance\" value={createShift.late_departure_tolerance} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter end time\" /> */}\r\n                                            {errors?.late_departure_tolerance && (\r\n                                                <CustomError text={errors.late_departure_tolerance} />)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor style={{ position: \"relative\", top: \"40px\" }}>Grace Period<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <div className='row'>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Grace Start Time </label><span className='text-danger'>*</span>\r\n                                            <CustomTimePicker name=\"grace_start_time\" value={createShift.grace_start_time} handleChange={handleChange} totalHours = {5} intervalMinutes={15} />\r\n                                            {errors?.grace_start_time && (\r\n                                                <CustomError text={errors.grace_start_time} />\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Grace End Time</label><span className='text-danger'>*</span>\r\n                                            <CustomTimePicker name=\"grace_end_time\" value={createShift.grace_end_time} handleChange={handleChange} totalHours = {5} intervalMinutes={15} />\r\n                                            {errors?.grace_end_time && (\r\n                                                <CustomError text={errors.grace_end_time} />)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor style={{ position: \"relative\", top: \"40px\" }}>Half/Full day policy<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <div className='row'>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Half day</label><span className='text-danger'>*</span>\r\n                                            <input type=\"time\" name=\"half_day_policy_time\" value={createShift.half_day_policy_time} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter end time\" />\r\n                                            {errors?.half_day_policy_time && (\r\n                                                <CustomError text={errors.half_day_policy_time} />)}\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Full day</label><span className='text-danger'>*</span>\r\n                                            <input type=\"text\" name=\"full_day_policy_time\" value={createShift.full_day_policy_time} onChange={(e) => handleChange(e)} className=\"form-control\" readOnly placeholder=\"Full day\" />\r\n                                            {errors?.full_day_policy_time && (\r\n                                                <CustomError text={errors.full_day_policy_time} />\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Shift Type<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n\r\n                                    <select className=\"form-select\" required\r\n                                        name='shift_type'\r\n                                        value={createShift?.shift_type}\r\n                                        onChange={(e) => handleChange(e)}\r\n                                    >\r\n                                        <option value='' hidden selected>Select Required shift Type</option>\r\n                                        <option value='morning'>Morning</option>\r\n                                        <option value='night'>Night</option>\r\n                                    </select>\r\n                                    {errors?.shift_type && (\r\n                                        <CustomError text={errors.shift_type} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Shift Color<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n\r\n                                    <input type=\"color\" className='ColorData'\r\n                                        placeholder=\"Enter Short Name\"\r\n                                        name='color'\r\n                                        value={createShift?.color || ''}\r\n                                        onChange={(e) => handleChange(e)}\r\n                                    />\r\n                                    {errors?.color && (\r\n                                        <CustomError text={errors.color} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>is Active<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n\r\n                                    <input type=\"checkbox\" placeholder=\"Is Active\"\r\n                                        checked={isActive}\r\n                                        onChange={(e) => setIsActive(!isActive)}\r\n                                    />\r\n\r\n                                    {errors?.is_active && (\r\n                                        <CustomError text={errors.is_active} />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center justify-content-end gap-2\">\r\n                            <CustomButton\r\n                                type=\"button\"\r\n                                classNames={\"btn btn-primary gradientBg\"}\r\n                                handleClick={e => handleSubmitCreateShift()}\r\n                                // isLoading={departmentData?updateDepartmentPending:addDepartmentPending}\r\n                                text={`${editShift ? \"Update\" : \"Create\"} Shift`}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAndUpdateEmailTemplate\r\n","import React from 'react'\r\nimport CreateUpdateShift from '../../modal/shiftManagement/CreateUpdateShift'\r\n\r\nconst ShiftMenuDropdown = (props) => {\r\n  const { card, setEditShift, openCreateShiftModel, setDeletShift, setActivebtn } = props\r\n  const editFunction = () => {\r\n    openCreateShiftModel()\r\n    setEditShift(card)\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"dropdown\">\r\n        <button\r\n          className=\"btn dropdownDots\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"dropdown\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          <img src=\"images/dotvertical.svg\" alt=\"\" width={25} />\r\n        </button>\r\n        <ul className=\"dropdown-menu\">\r\n          <li>\r\n            <button\r\n              className=\"dropdown-item border-bottom\"\r\n              onClick={() => editFunction()}\r\n            >\r\n              Edit Shift\r\n            </button>\r\n          </li>\r\n          {card.is_default != true &&\r\n            <li>\r\n              {card.is_active == true ?\r\n                <button className=\"dropdown-item border-bottom\" onClick={() => setActivebtn(card)}>\r\n                  Set as Inactive\r\n                </button> :\r\n                <button className=\"dropdown-item border-bottom\" onClick={() => setActivebtn(card)}>\r\n                  Set as active\r\n                </button>}\r\n\r\n            </li>}\r\n          <li>\r\n            <button className=\"dropdown-item\" onClick={() => setDeletShift(card)}>\r\n              Delete Shift\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ShiftMenuDropdown","import React,{useState} from 'react'\r\nimport ShiftMenuDropdown from './ShiftMenuDropdown'\r\nimport {useDispatch} from 'react-redux'\r\n\r\n\r\nconst ShiftInfoCard = ({card ,index,setEditShift,openCreateShiftModel,setDeletShift,setShiftData,setActivebtn,editMode}) => {\r\n  const dispatch=useDispatch()\r\n  const [activebtn, setActiveBtn] = useState([0])\r\n\r\n  const clickShiftData = (data, index)=>{\r\n    setShiftData(data)\r\n    setActiveBtn([index])\r\n  }\r\n  return (\r\n      <li key={card?.id} className=\"nav-item\" style={{backgroundColor:\"#FFFFFF30\",marginRight:\"10px\"}}>\r\n      <a href=\"#shiftTab1\" data-bs-toggle=\"tab\" className={`nav-link w-100 ${activebtn.includes(index) ? 'active' : ''}`} onClick={e => clickShiftData(card, index)}>\r\n        <span>{card?.shift_name} {card?.shift_code === null || card?.shift_code === undefined ? \"\":`(${card?.shift_code})`}</span>\r\n        <strong>{`${card?.shift_start_time } - ${card?.shift_end_time}`} </strong>\r\n      </a>\r\n      {card?.shift_code !== undefined && editMode &&\r\n      <ShiftMenuDropdown \r\n      card={card}\r\n      setEditShift={setEditShift}\r\n      openCreateShiftModel={openCreateShiftModel}\r\n      setDeletShift={setDeletShift}\r\n      setActivebtn={setActivebtn}\r\n      />}\r\n\r\n   \r\n    </li>\r\n  )\r\n}\r\n\r\nexport default ShiftInfoCard","import React, { useEffect, useState } from \"react\";\r\nimport ShiftInfoCard from \"./ShiftInfoCard\";\r\n\r\nconst ShiftSchedualCards = (props) => {\r\n  const {getAllShift,setEditShift,openCreateShiftModel,setDeletShift,setShiftData,setActivebtn,editMode} = props\r\n\r\n  // console.log(\"Hello selected data\", setShiftData)\r\n\r\n  const data = null;\r\n  const isLoading = true;\r\n  const isSuccess = false;\r\n  const [box, setBox] = useState(null);\r\n\r\n  const scrollRight = () => {\r\n    let width = box.clientWidth;\r\n    box.scrollLeft = box.scrollLeft + width;\r\n  };\r\n  const scrollLeft = () => {\r\n    let width = box.clientWidth;\r\n    box.scrollLeft = box.scrollLeft - width;\r\n  };\r\n  useEffect(() => {\r\n    let box = document.querySelector(\".qualityServicetab\");\r\n    setBox(box);\r\n  }, [box]);\r\n  return (\r\n    <div className=\"carousel slide \" style={{ overflow: \"hidden\" }}>\r\n      <ul\r\n        className=\"nav nav-tabs shiftListing qualityServicetab border-0\"\r\n        style={{ overflowX: \"hidden\", scrollBehavior: \"smooth\", marginRight:\"70px\",marginLeft:'70px' }}\r\n      >\r\n        \r\n        {getAllShift&&getAllShift?.map((card,index)=>(\r\n         <ShiftInfoCard card={card} \r\n         key={card?.id} \r\n         index={index} \r\n         setEditShift={setEditShift} \r\n         openCreateShiftModel={openCreateShiftModel} \r\n         setDeletShift={setDeletShift} \r\n         setShiftData={setShiftData} \r\n         setActivebtn={setActivebtn}\r\n         editMode={editMode}/>\r\n\r\n        ))}\r\n        \r\n      \r\n      </ul>\r\n      <button\r\n        className=\"carousel-control-prev scrollbtn\"\r\n        type=\"button\"\r\n        data-bs-target=\"#carouselExampleCaptions\"\r\n        data-bs-slide=\"prev\"\r\n        onClick={scrollLeft}\r\n      >\r\n        <span\r\n          className=\"carousel-control-prev-icon \"\r\n          style={{ position: \"absolute\", left: \"0px\" }}\r\n          aria-hidden=\"true\"\r\n\r\n        ></span>\r\n        <span className=\"visually-hidden\">Previous</span>\r\n      </button>\r\n      <button\r\n        className=\"carousel-control-next scrollbtn\"\r\n        type=\"button\"\r\n        data-bs-target=\"#carouselExampleCaptions\"\r\n        data-bs-slide=\"next\"\r\n        onClick={scrollRight}\r\n      >\r\n        <span\r\n          style={{ position: \"absolute\", right: \"0px\" }}\r\n          className=\"carousel-control-next-icon\"\r\n          aria-hidden=\"true\"\r\n        ></span>\r\n        <span className=\"visually-hidden\">Next</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShiftSchedualCards;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ShiftSchedualCards from \"./ShiftSchedualCards\";\r\nimport CreateUpdateShift from '../../modal/shiftManagement/CreateUpdateShift'\r\nimport AddCalendar from \"../../modal/shiftManagement/AddCalendar\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ShiftSchedual = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  const {getAllShift,getAllShiftFunction,setDeletShift,setShiftData,setActivebtn,editMode,setEditMode,openUploadShiftModel,setOpenUploadShiftModel} = props\r\n\r\n  const [openModel,setOpenModel] = useState(false)\r\n  const [openAddCalendar, setAddCalendar] = useState(false)\r\n  const [editShift, setEditShift] = useState('')\r\n  \r\n\r\n  const openCreateShiftModel = ()=>{\r\n    setOpenModel(!openModel)\r\n\r\n  }\r\n  const openAddCalendarModel = ()=>{\r\n    navigate('/shift-setting');\r\n    // setAddCalendar(!openAddCalendar)\r\n\r\n  }\r\n  return (\r\n    <div className=\"shiftSchedule mb-3\">\r\n      <div className=\"cardHead d-flex justify-content-between gap-3\">\r\n        <h3 className=\"mb-0\">Shift Schedule (Weekly)</h3>\r\n        <div>\r\n          {editMode &&\r\n          <>\r\n          <button className=\"btn btn-primary me-2\" \r\n          onClick={()=>setOpenUploadShiftModel(!openUploadShiftModel)}>\r\n            Shift Bulk Upload\r\n          </button>\r\n          <button className=\"btn btn-primary me-2\"\r\n            // disabled={(User[0].panel_role == \"manager_shift\") ? true : false}\r\n            onClick={()=>openCreateShiftModel()}\r\n            >\r\n            Create Shift\r\n          </button>\r\n          \r\n          <button className=\"btn btn-primary me-2\"\r\n          onClick={()=>openAddCalendarModel()}\r\n            // disabled={((userByshift.length > 0 && userByshift[0]?.shift_configuration === 0) && User[0].panel_role == \"manager_shift\") ? true : false}\r\n            // onClick={() => setshiftEdit(\"2\")}\r\n            >\r\n            Setting\r\n          </button>\r\n          </>}\r\n          <button className=\"btn btn-primary \"\r\n            // disabled={((userByshift.length > 0 && userByshift[0]?.shift_configuration === 0) && User[0].panel_role == \"manager_shift\") ? true : false}\r\n            onClick={() => setEditMode(!editMode)}\r\n            >\r\n            Edit\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <CreateUpdateShift \r\n      openCreateShiftModel={openCreateShiftModel}\r\n      openModel={openModel}\r\n      editShift={editShift}\r\n      setEditShift={setEditShift}\r\n      getAllShiftFunction={getAllShiftFunction}\r\n      />\r\n      <ShiftSchedualCards \r\n      getAllShift={getAllShift}\r\n      setEditShift={setEditShift}\r\n      openCreateShiftModel={openCreateShiftModel}\r\n      setDeletShift={setDeletShift}\r\n      setActivebtn={setActivebtn}\r\n      setShiftData={setShiftData}\r\n      editMode={editMode}/>\r\n      <AddCalendar \r\n      openAddCalendar={openAddCalendar}\r\n      openAddCalendarModel={openAddCalendarModel}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShiftSchedual;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CustomButton } from '../../globalComponents';\r\nimport { shiftManagementAction } from '../../../core/resource/actions';\r\nimport { toast } from 'react-toastify';\r\nimport { addShiftSchema } from '../../../utils/ValidationSchema';\r\nimport { validateSchema } from '../../../utils/ValidationHelper';\r\nimport CustomError from '../../globalComponents/CustomError';\r\nimport { ShiftcolorOption } from '../../../utils/Constants.config';\r\nimport CustomTimePicker from '../../globalComponents/CustomTimePicker';\r\n\r\nconst CreateAndUpdateEmailTemplate = (props) => {\r\n\r\n    const { openShiftModel, openShiftModelfunction, editShift, shiftData } = props\r\n    const { addShiftConfigurationPending, addShiftConfigurationRes, addShiftConfigurationError, getShiftByIdPending,getShiftByIdRes,\r\n        getShiftByIdError,\r\n        getAllShiftCalendarError,getAllShiftCalendarRes,getAllShiftCalendarPending} = useSelector(state => state.shift)\r\n    const [errors, setErrors] = useState({});\r\n    const [overTime, setOverTime] = useState(false)\r\n    const [isActive, setIsActive] = useState(false)\r\n    const dispatch = useDispatch();\r\n    const [editorData, setEditorData] = useState('')\r\n    const [workingDay, setWorkingDay] = useState('')\r\n    const [weekOff, setweekOff] = useState()\r\n    const [AllCalendar, setAllCalendar] = useState([])\r\n    const setWorkingDayfun = (data) => {\r\n        setWorkingDay(data)\r\n    }\r\n    const [shiftConfigurationdata, setShiftConfigurationdata] = useState({\r\n        shift_id: shiftData?.id,\r\n        over_time: '',\r\n        minimum_ot_hours: '',\r\n        maximum_ot_hours: '',\r\n        calendar_id:workingDay,\r\n        is_default:isActive\r\n    })\r\n    useEffect(() => {\r\n        if (!addShiftConfigurationPending) {\r\n            if (addShiftConfigurationError) {\r\n                toast.error(addShiftConfigurationError?.errorMessage)\r\n                return;\r\n            }\r\n            if (addShiftConfigurationRes) {\r\n                if (addShiftConfigurationRes?.data?.code === 200) {\r\n                    toast.success(addShiftConfigurationRes?.data?.msg)\r\n                    openShiftModelfunction()\r\n                    dispatch(shiftManagementAction.handleClearShiftStore(\"HANDLE_CLEAR_ADD_SHIFT_CONFIGURATION_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addShiftConfigurationRes,\r\n        addShiftConfigurationError,\r\n        addShiftConfigurationPending\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!getShiftByIdPending) {\r\n            if (getShiftByIdError) {\r\n                toast.error(getShiftByIdError?.errorMessage)\r\n                return;\r\n            }\r\n            if (getShiftByIdRes) {\r\n                if (getShiftByIdRes?.data?.code === 200) {\r\n                    let apidata = getShiftByIdRes?.data?.data?.data\r\n                    setOverTime(apidata?.is_ot_time)\r\n                    setShiftConfigurationdata({\r\n                        minimum_ot_hours: apidata?.minimum_ot_hours,\r\n                        maximum_ot_hours: apidata?.maximum_ot_hours,\r\n                    })\r\n                    setWorkingDay(apidata.calendar_id)\r\n                    setIsActive(apidata?.is_default)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getShiftByIdRes,\r\n        getShiftByIdError,\r\n        getShiftByIdPending\r\n    ]);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setShiftConfigurationdata({ ...shiftConfigurationdata, [name]: value });\r\n        setErrors((pre) => ({\r\n            ...pre,\r\n            [name]: undefined\r\n        }))\r\n    }\r\n\r\n    const handleSubmitCreateShiftConfiguration = async () => {\r\n        shiftConfigurationdata.shift_id = shiftData?.id\r\n        shiftConfigurationdata.is_OT_time = overTime\r\n        shiftConfigurationdata.calendar_id = workingDay\r\n        // const validationResponse = await validateSchema(addShiftSchema, shiftConfigurationdata);\r\n        // if (validationResponse.isValid) {\r\n        setErrors({});\r\n        dispatch(shiftManagementAction.addShiftConfigurationRequest(shiftConfigurationdata));\r\n        // } else {\r\n        // setErrors(validationResponse.errors);\r\n        // console.log(validationResponse.errors, \"formattedErrors\");\r\n        // }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (openShiftModel == false) {\r\n            resetTempateData()\r\n        }\r\n    }, [openShiftModel])\r\n\r\n    useEffect(() => {\r\n        getAllShiftCalendar()\r\n      }, [])\r\n    \r\n      const getAllShiftCalendar = () => {\r\n        dispatch(shiftManagementAction.getAllShiftCalendarRequest())\r\n      }\r\n\r\n      useEffect(() => {\r\n        if (!getAllShiftCalendarPending) {\r\n            if (getAllShiftCalendarError) {\r\n                setAllCalendar([])\r\n                return;\r\n            }\r\n            if (getAllShiftCalendarRes) {\r\n                if (getAllShiftCalendarRes?.data?.code == 200) { \r\n                    setAllCalendar(getAllShiftCalendarRes?.data?.data?.data?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllShiftCalendarPending,\r\n        getAllShiftCalendarRes,\r\n        getAllShiftCalendarError\r\n    ]);\r\n\r\n    const resetTempateData = () => {\r\n        setShiftConfigurationdata({\r\n            shift_id: '',\r\n            over_time: '',\r\n            minimum_ot_hours: '',\r\n            maximum_ot_hours: '',\r\n            working_days: '',\r\n            alternative_saturday_off: '',\r\n            week_off: ''\r\n        })\r\n        setErrors({});\r\n        setOverTime(false)\r\n        setIsActive(false)\r\n        setEditorData('')\r\n        setweekOff([])\r\n        setWorkingDay([])\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end applyLeaveCanvas ${openShiftModel ? 'show' : ''}`}\r\n\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openShiftModel ? 'visible' : 'hidden',\r\n                    width: \"800px\"\r\n                }}>\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">Shift Management</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => openShiftModelfunction()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"table-responsive tableDiv shiftmanagementtbl\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n\r\n                                <tr>\r\n                                    <td width=\"30%\">\r\n                                        <div className=\"d-flex align-items-center\"><span className=\"srNum\">1</span><b\r\n                                            className=\"ps-3 text-primary\"> Shift start time</b></div>\r\n                                    </td>\r\n                                    <td>{shiftData?.shift_start_time}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"d-flex align-items-center\"><span className=\"srNum\">2</span><b\r\n                                            className=\"ps-3 text-primary\"> Shift start time</b></div>\r\n                                    </td>\r\n                                    <td>{shiftData?.shift_end_time}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"d-flex align-items-center\"><span className=\"srNum\">3</span><b\r\n                                            className=\"ps-3 text-primary\"> Over Time (OT)</b></div>\r\n                                    </td>\r\n                                    <td>\r\n\r\n                                        <input type=\"checkbox\" placeholder=\"Is Active\"\r\n                                            checked={overTime}\r\n                                            onChange={(e) => setOverTime(!overTime)}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                {overTime == true &&\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div className=\"d-flex align-items-center\"><b\r\n                                                className=\"ps-3 text-primary\"> </b></div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div className='row' >\r\n                                                <div className=\"form-group col-md\">\r\n                                                    <label htmlFor=\"exampleInputEmail1\">Minimum OT hours par days</label>\r\n                                                    {/* <input type=\"time\" name=\"minimum_ot_hours\" value={shiftConfigurationdata.minimum_ot_hours} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter start time\" /> */}\r\n                                                    <CustomTimePicker name=\"minimum_ot_hours\" value={shiftConfigurationdata.minimum_ot_hours} handleChange={handleChange} totalHours = {5} intervalMinutes={15} />\r\n                                                    {errors?.minimum_ot_hours && (\r\n                                                        <CustomError text={errors.minimum_ot_hours} />\r\n                                                    )}\r\n                                                </div>\r\n                                                <div className=\"form-group col-md\">\r\n                                                    <label htmlFor=\"exampleInputEmail1\">Maximum OT hours par days</label>\r\n                                                    {/* <input type=\"time\" name=\"maximum_ot_hours\" value={shiftConfigurationdata.maximum_ot_hours} onChange={(e) => handleChange(e)} className=\"form-control\" placeholder=\"Enter end time\" /> */}\r\n                                                    <CustomTimePicker name=\"maximum_ot_hours\" value={shiftConfigurationdata.maximum_ot_hours} handleChange={handleChange} totalHours = {5} intervalMinutes={15} />\r\n                                                    {errors?.maximum_ot_hours && (\r\n                                                        <CustomError text={errors.maximum_ot_hours} />)}\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>}\r\n\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"d-flex align-items-center\"><span className=\"srNum\">4</span><b\r\n                                            className=\"ps-3 text-primary\"> Is Default</b></div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type=\"checkbox\" placeholder=\"Is Active\"\r\n                                            checked={isActive}\r\n                                            onChange={(e) => setIsActive(!isActive)}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div className=\"d-flex align-items-center\"><span className=\"srNum\">5</span><b\r\n                                            className=\"ps-3 text-primary\">add calendar</b></div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className=\"d-flex workingradio\">\r\n                                            <div className=\"shiftInpt\">\r\n                                                <select className=\"form-select\" required\r\n                                                    name='shift_type'\r\n                                                    value={workingDay}\r\n                                                    onChange={(e) => setWorkingDayfun(e.target.value)}\r\n                                                >\r\n                                                    <option value='' hidden selected>Select Required Working Days</option>\r\n                                                    {AllCalendar && AllCalendar?.map(item => (\r\n                                                        <option value={item?.id}>{item?.title}</option>\r\n                                                    ))}\r\n                                                   \r\n                                                    {/* <option value='6'>6 Days</option>\r\n                                                    <option value='7'>7 Days</option>\r\n                                                    <option value='alternative_saturday'>Alternative Saturday Off</option> */}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                                {/* {workingDay == 'alternative_saturday' &&\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div className=\"d-flex align-items-center\"><span className=\"srNum\">6</span><b\r\n                                                className=\"ps-3 text-primary\">Saturdays</b></div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div className=\"d-flex workingradio\">\r\n                                                <div className=\"d-flex gap-2 checkShift\">\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"1\" name='1' onClick={alternativeSaturdayFun} id=\"first\" />\r\n                                                        <label className=\"form-check-label\" htmlFor=\"first\">\r\n                                                            1st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"2\" name='2' onClick={alternativeSaturdayFun} id=\"second\" />\r\n                                                        <label className=\"form-check-label\" htmlFor=\"second\">\r\n                                                            2st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"3\" name='3' onClick={alternativeSaturdayFun} id=\"third\" />\r\n                                                        <label className=\"form-check-label\" htmlFor=\"third\">\r\n                                                            3st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"4\" name='4' onClick={alternativeSaturdayFun} id=\"fourth \" />\r\n                                                        <label className=\"form-check-label\" htmlFor=\"fourth \">\r\n                                                            4st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"form-check\">\r\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"5\" name='5' onClick={alternativeSaturdayFun} id=\"five \" />\r\n                                                        <label className=\"form-check-label\" htmlFor=\"five \">\r\n                                                            5st\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                    </tr>}\r\n                                {workingDay != '7' && workingDay != 'alternative_saturday' &&\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div className=\"d-flex align-items-center\"><span className=\"srNum\">7</span><b\r\n                                                className=\"ps-3 text-primary\"> Week Off</b></div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div className=\"d-flex gap-2 checkShift\">\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"1\" name='1' id=\"first\" onClick={weekOffFun} checked={weekOff?.includes(\"1\")} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"first\">\r\n                                                        Monday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"2\" name='2' id=\"second\" onClick={weekOffFun} checked={weekOff?.includes(\"2\")} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"second\">\r\n                                                        Tuesday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"3\" name='3' id=\"third\" onClick={weekOffFun} checked={weekOff?.includes(\"3\")} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"third\">\r\n                                                        Wednesday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"4\" name='4' id=\"fourth \" onClick={weekOffFun} checked={weekOff?.includes(\"4\")} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"fourth \">\r\n                                                        Thursday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"5\" name='5' id=\"five \" onClick={weekOffFun} checked={weekOff?.includes(\"5\")} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"five \">\r\n                                                        Friday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"6\" name='6' id=\"five \" onClick={weekOffFun} checked={weekOff?.includes(\"6\")} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"five \">\r\n                                                        Saturday\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div className=\"form-check\">\r\n                                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"7\" name='7' id=\"five \" onClick={weekOffFun} checked={weekOff?.includes(\"7\")} />\r\n                                                    <label className=\"form-check-label\" htmlFor=\"five \">\r\n                                                        Sunday\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                    </tr>} */}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        {/* <button type=\"button\" className=\"border-0 p-0 bg-transparent cancelBtn\">Back</button> */}\r\n                        <button type=\"button\" className=\"btn btn-primary gradientBg\" onClick={() => handleSubmitCreateShiftConfiguration()}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAndUpdateEmailTemplate\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CustomButton, CustomDateRangePicker } from '../../globalComponents';\r\nimport { employeeActions } from '../../../core/resource/actions';\r\nimport { toast } from 'react-toastify';\r\nimport { pagination } from '../../../utils/Constants.config'\r\nimport { MultiSelect } from \"react-multi-select-component\";\r\nimport moment from 'moment'\r\nimport { shiftManagementAction } from '../../../core/resource/actions';\r\nimport { convertToTS } from '../../../utils/AppHelper';\r\n\r\n\r\n\r\nconst AssignShift = (props) => {\r\n    const dispatch = useDispatch()\r\n    const { openAssignShiftModel, assignShiftModelOpen, shiftData,getAllShiftDetails,setOpenEditModel } = props\r\n    const {\r\n        getAllEmployeePending,\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n    } = useSelector(state => state.employee)\r\n\r\n    const {\r\n        assignShiftPending,\r\n        assignShiftRes,\r\n        assignShiftError,\r\n    } = useSelector(state => state.shift)\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [errors, setErrors] = useState({});\r\n    const [getAllEmployee, setGetAllEmployee] = useState([])\r\n    const [selectEmployee, setSelectEmployee] = useState([])\r\n    const [startDate, setStartDate] = useState('')\r\n    const [endDate, setEndDate] = useState('')\r\n\r\n    const [assignShift, setAssignShift] = useState({\r\n        assignment_type:'',\r\n        shift_id:'',\r\n        employee_id:'',\r\n        start_date:'',\r\n        end_date:''\r\n    })\r\n\r\n    // get All Employees\r\n    useEffect(() => {\r\n        getAllEmployees()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!assignShiftPending) {\r\n            if (assignShiftError) {\r\n                toast.error(assignShiftError?.errorMessage)\r\n                return;\r\n            }\r\n            if (assignShiftRes) {\r\n                if (assignShiftRes?.code === 200) {\r\n                    toast.success(assignShiftRes?.data?.msg)\r\n                    assignShiftModelOpen()\r\n                    clearFunction()\r\n                    getAllShiftDetails(shiftData)\r\n                    setOpenEditModel(false)\r\n                    dispatch(shiftManagementAction.handleClearShiftStore(\"HANDLE_CLEAR_ASSIGN_SHIFT_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        assignShiftRes,\r\n        assignShiftError,\r\n        assignShiftPending\r\n    ]);\r\n\r\n    const getAllEmployees = () => {\r\n        const params = {\r\n            page: currentPage,\r\n            limit: pagination.limit,\r\n        }\r\n        dispatch(employeeActions.getAllEmployeeRequest(params))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getAllEmployeePending) {\r\n            if (getAllEmployeeError) {\r\n                return;\r\n            }\r\n            if (getAllEmployeeRes) {\r\n                if (getAllEmployeeRes == null) {\r\n                    getAllEmployees()\r\n                }\r\n                if (getAllEmployeeRes?.code === 200) {\r\n                    const getAllEmployeeResData = getAllEmployeeRes?.data\r\n                    setGetAllEmployee(getAllEmployeeResData)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllEmployeeRes,\r\n        getAllEmployeeError,\r\n        getAllEmployeePending\r\n    ]);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setAssignShift({ ...assignShift, [name]: value });\r\n        setErrors(prev => ({ ...prev, [name]: undefined }));\r\n    };\r\n    \r\n    const handleSubmitAssignShift = () => {\r\n        assignShift.shift_id = shiftData?.id\r\n        assignShift.employee_id = selectEmployee?.map(data=>data?.value)\r\n        // const validationResponse = await validateSchema(addShiftSchema, shiftConfigurationdata);\r\n        // if (validationResponse.isValid) {\r\n        setErrors({});\r\n        dispatch(shiftManagementAction.assignShiftRequest(assignShift));\r\n        \r\n    }\r\n    const clearFunction = ()=>{\r\n        setAssignShift({\r\n            assignment_type:'',\r\n            shift_id:'',\r\n            employee_id:'',\r\n            start_date:'',\r\n            end_date:''\r\n        })\r\n        setSelectEmployee([])\r\n    }\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end applyLeaveCanvas ${openAssignShiftModel ? 'show' : ''}`}\r\n\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openAssignShiftModel ? 'visible' : 'hidden',\r\n                    width: \"700px\"\r\n                }}>\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">Assign Shift</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => assignShiftModelOpen()}\r\n                    />\r\n                </div>\r\n                <div className=\"offcanvas-body\">\r\n                    <div className=\"employeeAdd rounded-0 border-0\">\r\n                        <div className=\"employeeAddheader justify-content-between align-items-center border-0 m-0 mb-3\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-3\">\r\n                                    <div className=\"form-group mb-3\">\r\n                                        <label htmlFor><b>Shift Name</b></label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-9\">\r\n                                    <div className=\"form-group mb-3\">\r\n\r\n                                        {shiftData.shift_name} ({shiftData.shift_start_time} - {shiftData.shift_end_time})\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Shift Assignment Type<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <select className=\"form-select\" required\r\n                                        name='assignment_type' onChange={(e)=>handleChange(e)}\r\n                                    >\r\n                                        <option value='' hidden selected>Select Shift Assignment Type</option>\r\n                                        <option value='default'>Default</option>\r\n                                        <option value='monthly'>Monthly</option>\r\n                                        <option value='temporary'>Temporary</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {assignShift?.assignment_type === 'monthly' &&\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor style={{ position: \"relative\", top: \"30px\" }}>Shift Range<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <div className='row'>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Select Month</label><span className='text-danger'>*</span>\r\n                                            <input type=\"month\" name=\"start_date\" onChange={(e)=>handleChange(e)} className=\"form-control\" placeholder=\"Enter start time\" />\r\n                                        </div>\r\n                                        {/* <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">End Date</label><span className='text-danger'>*</span>\r\n                                            <input type=\"date\" name=\"end_date\" onChange={(e)=>handleChange(e)} min={moment(assignShift?.start_date).format('YYYY-MM-DD')} className=\"form-control\" placeholder=\"Enter end time\" />\r\n                                        </div> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        {assignShift?.assignment_type !== 'default' && assignShift?.assignment_type !== 'monthly' &&\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor style={{ position: \"relative\", top: \"30px\" }}>Shift Range<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <div className='row'>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">Start Date</label><span className='text-danger'>*</span>\r\n                                            <input type=\"date\" name=\"start_date\" onChange={(e)=>handleChange(e)} className=\"form-control\" placeholder=\"Enter start time\" />\r\n                                        </div>\r\n                                        <div className=\"form-group col-md\">\r\n                                            <label htmlFor=\"exampleInputEmail1\">End Date</label><span className='text-danger'>*</span>\r\n                                            <input type=\"date\" name=\"end_date\" onChange={(e)=>handleChange(e)} min={moment(assignShift?.start_date).format('YYYY-MM-DD')} className=\"form-control\" placeholder=\"Enter end time\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor>Select Employee<span className='text-danger'>*</span></label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <div className=\"form-group mb-3\">\r\n\r\n                                <MultiSelect\r\n                                        options={getAllEmployee.map(usr => {\r\n                                            usr.label = usr.label\r\n                                            usr.value = usr.value\r\n                                            usr.emp_user_id = usr.id\r\n                                            return usr\r\n                                        })}\r\n                                        value={selectEmployee}\r\n                                        onChange={setSelectEmployee}\r\n                                        labelledBy=\"Select Employee\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <button type=\"button\" className=\"btn btn-primary gradientBg\" onClick={handleSubmitAssignShift}>Assign</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AssignShift;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CustomButton } from '../../globalComponents';\r\nimport { shiftManagementAction } from '../../../core/resource/actions';\r\nimport { toast } from 'react-toastify';\r\nimport { addShiftSchema } from '../../../utils/ValidationSchema';\r\nimport { validateSchema } from '../../../utils/ValidationHelper';\r\nimport CustomError from '../../globalComponents/CustomError';\r\n\r\nconst AddWeekOff = (props) => {\r\n\r\n    const { openAddWeekOffModel, addWeekOffModelOpen, editShift, shiftData, getWeek,getAllShiftDetails } = props\r\n    const dispatch = useDispatch()\r\n    const {\r\n        getEmployeebyShiftidPending,\r\n        getEmployeebyShiftidRes,\r\n        getEmployeebyShiftidError,\r\n\r\n        addWeekOffPending,\r\n        addWeekOffRes,\r\n        addWeekOffError,\r\n    } = useSelector(state => state.shift)\r\n\r\n    const [weekdays, setweekday] = useState([1, 2, 3, 4, 5, 6, 7])\r\n    const [weekoffs, setweekoffs] = useState([])\r\n    const [newRoster, setNewRoster] = useState({})\r\n    const [employeeData, setEmployeedata] = useState([])\r\n    const [searchWeekoff, setSearchWeekoff] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (!addWeekOffPending) {\r\n            if (addWeekOffError) {\r\n                toast.error(addWeekOffError?.errorMessage)\r\n                return;\r\n            }\r\n            if (addWeekOffRes) {\r\n                if (addWeekOffRes?.data?.code === 200) {\r\n                    toast.success(addWeekOffRes?.data?.msg)\r\n                    addWeekOffModelOpen()\r\n                    getAllShiftDetails(shiftData)\r\n                    dispatch(shiftManagementAction.handleClearShiftStore(\"HANDLE_ADD_WEEK_OFF_STORE\"))\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addWeekOffRes,\r\n        addWeekOffError,\r\n        addWeekOffPending\r\n    ]);\r\n\r\n    const searchWeekOff = (e) => {\r\n        const filteredData = searchWeekoff.filter(item =>\r\n          item.name.toLowerCase().includes(e?.toLowerCase()) ||\r\n          item.emp_id?.toLowerCase().includes(e?.toLowerCase())\r\n        );\r\n        setEmployeedata(filteredData)\r\n      };\r\n\r\n    useEffect(() => {\r\n        if (getWeek == true) {\r\n            getEmployeeByShiftId()\r\n        }\r\n    }, [getWeek])\r\n\r\n    const getEmployeeByShiftId = async () => {\r\n        let data = {\r\n            shift_id: shiftData.id\r\n        }\r\n        dispatch(shiftManagementAction.getEmployeeByShiftIdRequest(data))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!getEmployeebyShiftidPending) {\r\n            if (getEmployeebyShiftidError) {\r\n                return;\r\n            }\r\n            if (getEmployeebyShiftidRes) {\r\n                if (getEmployeebyShiftidRes?.data?.code === 200) {\r\n                    const EmployeeResData = getEmployeebyShiftidRes?.data?.data?.data\r\n                    setEmployeedata(EmployeeResData)\r\n                    const initialCheckedCheckboxes = {};\r\n                    const initialWeekOffs = [];\r\n                    EmployeeResData?.forEach(employee => {\r\n                        initialCheckedCheckboxes[employee.employee_id] = {};\r\n                        employee?.weekoff?.forEach(day => {\r\n                            if (day === null) {\r\n                                initialCheckedCheckboxes[employee.employee_id][0] = false;\r\n                            } else {\r\n                                initialCheckedCheckboxes[employee.employee_id][day] = true;\r\n                            }\r\n                        });\r\n                        initialWeekOffs.push({ employee_id: employee.employee_id, week_off: employee.weekoff });\r\n                    });\r\n                    setNewRoster(initialCheckedCheckboxes);\r\n                    setweekoffs(initialWeekOffs);\r\n                    setSearchWeekoff(EmployeeResData)\r\n\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getEmployeebyShiftidRes,\r\n        getEmployeebyShiftidError,\r\n        getEmployeebyShiftidPending\r\n    ]);\r\n\r\n    const AddWeekoff = (employeeId, day) => {\r\n        setweekoffs(prevState => {\r\n            const index = prevState?.findIndex(item => item.employee_id === employeeId);\r\n            if (index !== -1 && prevState[index].week_off.includes(day)) {\r\n                const updatedWeekOff = prevState[index].week_off.filter(d => d !== day);\r\n                if (updatedWeekOff.length === 0) {\r\n                    return prevState.filter(item => item.employee_id !== employeeId);\r\n                }\r\n                return [\r\n                    ...prevState.slice(0, index),\r\n                    { ...prevState[index], week_off: updatedWeekOff },\r\n                    ...prevState.slice(index + 1)\r\n                ];\r\n            }\r\n            if (index === -1) {\r\n                return [\r\n                    ...prevState,\r\n                    { employee_id: employeeId, week_off: [day] }\r\n                ];\r\n            }\r\n            return [\r\n                ...prevState.slice(0, index),\r\n                { ...prevState[index], week_off: [...prevState[index].week_off, day] },\r\n                ...prevState.slice(index + 1)\r\n            ];\r\n        });\r\n\r\n        setNewRoster(prevState => ({\r\n            ...prevState,\r\n            [employeeId]: {\r\n                ...prevState[employeeId],\r\n                [day]: !prevState[employeeId]?.[day]\r\n            }\r\n        }));\r\n    };\r\n\r\n    const handleSubmitAddWeekoff = () => {\r\n        let data = {\r\n            weekoff_details: weekoffs\r\n        }\r\n        // const validationResponse = await validateSchema(addShiftSchema, shiftConfigurationdata);\r\n        // if (validationResponse.isValid) {\r\n        // setErrors({});\r\n        dispatch(shiftManagementAction.addWeekOffRequest(data));\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className={`offcanvas offcanvas-end applyLeaveCanvas ${openAddWeekOffModel ? 'show' : ''}`}\r\n\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openAddWeekOffModel ? 'visible' : 'hidden',\r\n                    width: \"900px\"\r\n                }}>\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title fs-5 fw-bold text-primary\">Add Week Off</h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => addWeekOffModelOpen()}\r\n                    />\r\n                </div>\r\n                <div class=\"offcanvas-body\">\r\n                    <div class=\"rounded-0 border-0\">\r\n                        <div class=\"justify-content-between align-items-center border-0\">\r\n                            <div className='headerWeek'>\r\n                                <p class=\"mb-0\"><b>Shift</b>: {shiftData.shift_name} ({shiftData.shift_start_time} - {shiftData.shift_end_time}) </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"py-0 shiftChecks shiftChecksweek\">\r\n                            <div class=\"\">\r\n                                <div class=\"searchTeamBox mb-2 p-2\">\r\n                                    <div class=\"searchByName \">\r\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Search\" onChange={(e) => searchWeekOff(e.target.value)}/>\r\n                                        <button type=\"button\" class=\"nameSearchBtn\"><img src=\"images/search2.svg\" alt=\"\"\r\n                                            width=\"17\" /></button>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"table-responsive weekoffTable addWeek p-3 pt-0\">\r\n                                    <table class=\"table\">\r\n                                        <tr>\r\n                                            <th>\r\n                                                All Users\r\n                                            </th>\r\n                                            <th class=\"text-center\">Mon</th>\r\n                                            <th class=\"text-center\">Tue</th>\r\n                                            <th class=\"text-center\">Wed</th>\r\n                                            <th class=\"text-center\">Thu</th>\r\n                                            <th class=\"text-center\">Fri</th>\r\n                                            <th class=\"text-center\">Sat</th>\r\n                                            <th class=\"text-center\">Sun</th>\r\n                                        </tr>\r\n                                        {employeeData && employeeData.map(item => (\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <div class=\"d-flex align-items-center userInfoTd\">\r\n                                                        <figure class=\"m-0\">\r\n                                                            <img src=\"images/amber.png\" alt=\"\" />\r\n                                                        </figure>\r\n                                                        <h6>{item.name} {item.last_name}</h6>\r\n                                                    </div>\r\n                                                </td>\r\n                                                {weekdays.map(day => (\r\n                                                    <td key={day}>\r\n                                                        <div className=\"cstmCheckbox\">\r\n                                                            <input\r\n                                                                type=\"checkbox\"\r\n                                                                id={`check-${item.employee_id}-${day}`}\r\n                                                                name={`${item.employee_id}-${day}`}\r\n                                                                onClick={() => AddWeekoff(item.employee_id, day)}\r\n                                                                value={day}\r\n                                                                checked={newRoster[item.employee_id]?.[day]}\r\n                                                            // checked={(item?.week_off).includes(weekoffs[item.emp_user_id]?.[day])}\r\n                                                            />\r\n                                                            <label htmlFor={`check-${item.employee_id}-${day}`} />\r\n                                                        </div>\r\n                                                    </td>\r\n                                                ))}\r\n                                                {/* <td>\r\n                                                <div class=\"cstmCheckbox\">\r\n                                                    <input type=\"checkbox\" id=\"check1\" />\r\n                                                    <label for=\"check1\"></label>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div class=\"cstmCheckbox\">\r\n                                                    <input type=\"checkbox\" id=\"check2\" />\r\n                                                    <label for=\"check2\"></label>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div class=\"cstmCheckbox\">\r\n                                                    <input type=\"checkbox\" id=\"check3\" />\r\n                                                    <label for=\"check3\"></label>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div class=\"cstmCheckbox\">\r\n                                                    <input type=\"checkbox\" id=\"check4\" />\r\n                                                    <label for=\"check4\"></label>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div class=\"cstmCheckbox\">\r\n                                                    <input type=\"checkbox\" id=\"check5\" />\r\n                                                    <label for=\"check5\"></label>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div class=\"cstmCheckbox\">\r\n                                                    <input type=\"checkbox\" id=\"check6\" />\r\n                                                    <label for=\"check6\"></label>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div class=\"cstmCheckbox\">\r\n                                                    <input type=\"checkbox\" id=\"check7\" />\r\n                                                    <label for=\"check7\"></label>\r\n                                                </div>\r\n                                            </td> */}\r\n                                            </tr>\r\n                                        ))}\r\n\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        <button type=\"button\" className=\"btn btn-primary gradientBg\" onClick={handleSubmitAddWeekoff}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddWeekOff;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { months } from \"../../../utils/Constants.config\";\r\nimport ShiftConfiguration from '../../modal/shiftManagement/ShiftConfiguration'\r\nimport AssignShift from '../../modal/shiftManagement/AssignShift'\r\nimport { shiftManagementAction } from '../../../core/resource/actions'\r\nimport AddWeekOff from \"../../modal/shiftManagement/AddWeekOff\";\r\nimport moment from 'moment'\r\n\r\nconst ShiftCalanderHeader = (props) => {\r\n  const { shiftData, headerDate, allEmployeeShift,isActiveShift,setOpenEditModel, setLoadIng } = props\r\n  // const{date,shiftCalanderMonth,shiftCalanderYear,weekFirstDate,weekEndDate}=useSelector((state)=>state?.shiftCalanderHeader)\r\n\r\n  const {\r\n    deleteEmployeeShiftPending,\r\n    deleteEmployeeShiftRes,\r\n    deleteEmployeeShiftError,\r\n  } = useSelector(state => state.shift)\r\n\r\n  const dispatch = useDispatch()\r\n  const [openShiftModel, setOpenShiftModel] = useState(false)\r\n  const [openAssignShiftModel, setOpenAssignShiftModel] = useState(false)\r\n  const [openAddWeekOffModel, setOpenAddWeekOffModel] = useState(false)\r\n  const [getWeek, setGetWeek] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!deleteEmployeeShiftPending) {\r\n      if (deleteEmployeeShiftError) {\r\n        // toast.error(deleteEmployeeShiftError?.errorMessage)\r\n        return;\r\n      }\r\n      if (deleteEmployeeShiftRes) {\r\n        if (deleteEmployeeShiftRes?.code === 200) {\r\n          getAllShiftDetails(shiftData)\r\n          dispatch(shiftManagementAction.handleClearShiftStore(\"DELECT_EMPLOYEE_SHIFT_STORE\"))\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    deleteEmployeeShiftRes,\r\n    deleteEmployeeShiftError,\r\n    deleteEmployeeShiftPending\r\n  ]);\r\n\r\n\r\n  const assignShiftModelOpen = () => {\r\n    setOpenAssignShiftModel(!openAssignShiftModel)\r\n  }\r\n\r\n  const addWeekOffModelOpen = (data) => {\r\n    setOpenAddWeekOffModel(!openAddWeekOffModel)\r\n    if (data == 'data') {\r\n      setGetWeek(!getWeek)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getAllShiftDetails()\r\n  }, [])\r\n  useEffect(() => {\r\n    if(shiftData){\r\n    getAllShiftDetails(shiftData)\r\n    }\r\n  }, [shiftData])\r\n\r\n  useEffect(()=>{\r\n    if(isActiveShift){\r\n    activeInactiveFunction(isActiveShift)\r\n    }\r\n  },[isActiveShift])\r\n\r\n  const activeInactiveFunction = (isActiveShift)=>{\r\n    getAllShiftDetails(isActiveShift)\r\n  }\r\n\r\n  const nextprev = async (dateRange, direction) => {\r\n    const [start, end] = dateRange.split(' - ');\r\n    const startDate = moment(start, 'DD MMM YYYY');\r\n    const endDate = moment(end, 'DD MMM YYYY');\r\n\r\n    if (direction === 'prev') {\r\n      await getAllShiftDetails(shiftData, startDate.subtract(1, 'week'), endDate.subtract(1, 'week'))\r\n    } else if (direction === 'next') {\r\n      await getAllShiftDetails(shiftData, startDate.add(1, 'week'), endDate.add(1, 'week'))\r\n    }\r\n  }\r\n\r\n  const getAllShiftDetails = async (shiftDatas, startDate, endDate) => {\r\n    let data = {\r\n      shift_id: shiftDatas?.id == \"ejknrjk34324\" ? '' : shiftDatas?.id,\r\n      start_date: startDate ? startDate : moment().startOf('week').add(1, 'day').format('YYYY-MM-DD'),\r\n      end_date: endDate ? endDate : moment().endOf('week').add(1, 'day').format('YYYY-MM-DD')\r\n    }\r\n    dispatch(shiftManagementAction.getAllShiftDetailsRequest(data))\r\n    setLoadIng(true)\r\n  }\r\n\r\n  const openShiftModelfunction = (data) => {\r\n    if (data == 'Data') {\r\n      let params = {\r\n        id: shiftData?.id\r\n      }\r\n      dispatch(shiftManagementAction.getShiftByIdRequest(params))\r\n    }\r\n    setOpenShiftModel(!openShiftModel)\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center p-3\">\r\n        <h3 className=\"me-auto mb-0 fs-5 fw-semibold\">{moment(headerDate[0]?.date).format('MMMM YYYY')}\r\n          {/* {`${shiftCalanderMonth} ${shiftCalanderYear}`} */}\r\n        </h3>\r\n        <div className=\"customCalanderNav me-auto d-flex align-items-center\">\r\n\r\n          <img src=\"images/prev-icon.svg\" style={{ cursor: \"pointer\" }} alt=\"\"\r\n            // onClick={()=>dispatch(getPreviousWeek())}\r\n            onClick={e => nextprev(`${moment(headerDate[0].date).format('DD MMM YYYY')} - ${moment((headerDate[headerDate.length - 1].date)).format('DD MMM YYYY')}`, \"prev\")}\r\n          />\r\n\r\n          <span className=\"mx-3 d-block fs-7 fw-semibold mt-1\">\r\n            {moment(headerDate[0]?.date).format('DD MMM YYYY')} - {moment((headerDate[headerDate.length - 1]?.date)).format('DD MMM YYYY')}\r\n            {/* {`${weekFirstDate.getDate()} ${months[weekFirstDate.getMonth()]} ${weekFirstDate.getFullYear()} - ${weekEndDate.getDate()} ${months[weekEndDate.getMonth()]} ${weekEndDate.getFullYear()}`} */}\r\n          </span>\r\n\r\n          <img src=\"images/next-icon.svg\" style={{ cursor: \"pointer\" }} alt=\"\"\r\n            onClick={e => nextprev(`${moment(headerDate[0].date).format('DD MMM YYYY')} - ${moment((headerDate[headerDate.length - 1].date)).format('DD MMM YYYY')}`, \"next\")}\r\n          />\r\n\r\n        </div>\r\n        {shiftData !== '' && shiftData?.shift_name !== 'All Shift' && shiftData?.is_active == true &&\r\n          <div className=\"dropdown moredwn\">\r\n            <button\r\n              className=\"btn btn-primary addShiftBtn me-2 \"\r\n              type=\"button\"\r\n              data-bs-toggle=\"dropdown\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <i className=\"bi bi-three-dots-vertical\" /> More\r\n            </button>\r\n            <ul className=\"dropdown-menu \">\r\n              <li>\r\n                <button\r\n                  className=\"dropdown-item\"\r\n                  onClick={() => openShiftModelfunction('Data')}\r\n                >\r\n                  Shift Configuration\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className=\"dropdown-item border-bottom\"\r\n                  onClick={() => assignShiftModelOpen()}\r\n                >\r\n                  Assign Shift\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  className=\"dropdown-item border-bottom\"\r\n                  onClick={() => addWeekOffModelOpen('data')}\r\n                >\r\n                  Add Week Off\r\n                </button>\r\n              </li>\r\n\r\n\r\n            </ul>\r\n          </div>}\r\n      </div>\r\n      <ShiftConfiguration\r\n        openShiftModelfunction={openShiftModelfunction}\r\n        openShiftModel={openShiftModel}\r\n        shiftData={shiftData}\r\n      />\r\n\r\n      <AssignShift\r\n        openAssignShiftModel={openAssignShiftModel}\r\n        assignShiftModelOpen={assignShiftModelOpen}\r\n        shiftData={shiftData}\r\n        getAllShiftDetails={getAllShiftDetails}\r\n        setOpenEditModel={setOpenEditModel}\r\n      />\r\n\r\n      <AddWeekOff\r\n        openAddWeekOffModel={openAddWeekOffModel}\r\n        addWeekOffModelOpen={addWeekOffModelOpen}\r\n        shiftData={shiftData}\r\n        getWeek={getWeek}\r\n        getAllShiftDetails={getAllShiftDetails}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShiftCalanderHeader;\r\n","import React from \"react\";\r\nimport moment from 'moment'\r\n\r\nconst ShiftTableHeader = (props) => {\r\n  const {headerDate} = props\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th className=\"searchTh\">\r\n          <div className=\"searchByName\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search Employee by Name\"\r\n            />\r\n            <button type=\"button\" className=\"nameSearchBtn\">\r\n              <img src=\"images/search-box.svg\" alt=\"\" width={14} />\r\n            </button>\r\n          </div>\r\n        </th>\r\n        {headerDate && headerDate?.map(item=>(\r\n           <th>\r\n            {moment(item.date).format('ddd DD')}\r\n         </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default ShiftTableHeader;\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment-timezone'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { shiftManagementAction } from '../../../core/resource/actions';\r\nimport ApproveRejectModal from '../../modal/ApproveRejectModal'\r\n\r\nconst EmployeeInfoCard = ({userShiftData,shiftData,editMode}) => {\r\n  const dispatch = useDispatch()\r\n  const firstDateOfMonth=new Date(new Date().getFullYear(),new Date().getMonth(),1)\r\n  const lastDateOfMonth=new Date(new Date().getFullYear(),new Date().getMonth()+1,0)\r\n  const [isShowDeleteModal,setIsShowDelelteModal] = useState(false)\r\n  const [employeeId, setEmployeeId] = useState('')\r\n\r\n  const {\r\n    deleteEmployeeShiftPending,\r\n    deleteEmployeeShiftRes,\r\n    deleteEmployeeShiftError,\r\n} = useSelector(state => state.shift)\r\n\r\n  const onHandleDeleteModal = (id) => {\r\n    setIsShowDelelteModal(!isShowDeleteModal)\r\n    setEmployeeId(id)\r\n  }\r\n\r\n  const onDeleteEmployee = (type) => {\r\n    if (type) {\r\n      const params = {\r\n        employee_id: employeeId\r\n      }\r\n      dispatch(shiftManagementAction?.deleteEmployeeShiftRequest(params))\r\n      setIsShowDelelteModal(!isShowDeleteModal)\r\n    } else {\r\n      setIsShowDelelteModal(!isShowDeleteModal)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <td>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n      <Link to={`/shift-management/${userShiftData?._id}/${moment(firstDateOfMonth).format(\"YYYY-MM-DD\")}/${moment(lastDateOfMonth).format(\"YYYY-MM-DD\")}`}>\r\n        <a href=\"shift-view.html\" className=\"userName\">\r\n          <figure>\r\n            <img src=\"images/profile-img.png\" alt=\"\" /> \r\n          </figure>\r\n          <p>\r\n            <strong>{userShiftData?.first_name}</strong>\r\n            {userShiftData.emp_id} | {userShiftData.Designation}\r\n          </p>\r\n        </a>\r\n        </Link>\r\n        <div className=\"deleteBG\">\r\n          {shiftData && shiftData.shift_name !== 'All Shift' && editMode &&\r\n          <img src=\"images/delete-icon.svg\" alt=\"\" width={16} height={20} onClick={()=>onHandleDeleteModal(userShiftData?.employee_id)}/>}\r\n        </div>\r\n      </div>\r\n      \r\n    </td>\r\n    {isShowDeleteModal && (\r\n      <ApproveRejectModal\r\n        onApproveReject={onDeleteEmployee}\r\n        isShow={isShowDeleteModal}\r\n        desc={\"You want to delete this Employee\"}\r\n        isLoading={deleteEmployeeShiftPending}\r\n      />)}\r\n      </>\r\n  )\r\n}\r\n\r\nexport default EmployeeInfoCard","import React from \"react\";\r\nimport { convertToTS } from \"../../../utils/AppHelper\";\r\n\r\nconst EmployeeShiftNameTime = ({ shiftTime,editMode ,setOpenEditModel,openEditModel}) => {\r\n  const shiftName = shiftTime &&\r\n    shiftTime?.shift_name[0] == \"WO\" || shiftTime?.shift_name[0] == \"PH\"\r\n      ? shiftTime?.shift_name[0]\r\n      : shiftTime?.shift_name[0].split(\" \")[0];\r\n      const theam=shiftName===\"PH\"?\"purpleColor\":shiftName==\"WO\"?\"skyColor\":null\r\n  return (\r\n    <td>\r\n      <div className=\"shiftBox purpleColor\" style={{ background: `${shiftTime.color}` }}>\r\n        <div className=\"d-flex align-items-center gap-1\">\r\n          {!editMode &&\r\n          <a   className=\"editShiftTg\" onClick={()=>setOpenEditModel(!openEditModel)}>\r\n            <img src=\"images/editIcon1.svg\" alt=\"\" /></a>}\r\n          <p style={{cursor: \"pointer\"}}>\r\n            {/* <b>{shiftTime?.shift_name[0].split(\" \")[0]}</b>\r\n            {shiftTime?.shift_name[0].split(\" \")[1]} */}\r\n\r\n            <b>{shiftTime?.shift_name[0].replace(/\\(|\\)/g, ',').split(',')[0]}</b>\r\n            {shiftTime?.shift_name[0].replace(/\\(|\\)/g, ',').split(',')[1]}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </td>\r\n  );\r\n};\r\n\r\nexport default EmployeeShiftNameTime;\r\n","import React, { useState } from \"react\";\r\nimport ShiftTableRow from \"./ShiftTableRow\";\r\nimport { useSelector } from \"react-redux\";\r\nimport EmployeeInfoCard from \"./EmployeeInfoCard\";\r\nimport EmployeeShiftNameTime from \"./EmployeeShiftNameTime\";\r\n\r\nconst ShiftTableBody = (props) => {\r\n  const {allEmployeeShift,shiftData,editMode,setOpenEditModel,openEditModel,setAssignTemporaryShift} = props\r\n\r\n  // const { weekFirstDate, weekEndDate,shiftId } = useSelector(\r\n  //   (state) => state.shiftCalanderHeader\r\n  // );\r\n \r\n  const data = null;\r\n  const isLoading = false;\r\n  const isSuccess = false;\r\n  const isError = false;\r\n  \r\n\r\n  return (\r\n    <tbody>\r\n      {/* <ShiftTableRow /> */}\r\n      {isLoading ? (\r\n        <tr>\r\n          <td>Loading....</td>\r\n        </tr>\r\n      ) : isError ? (\r\n        <tr>\r\n          <td>Something went wrong....</td>\r\n        </tr>\r\n      ) : (\r\n        allEmployeeShift && allEmployeeShift?.slice(0,10)?.map((userShiftData) => (\r\n          <tr key={userShiftData?.id} onClick={()=>setAssignTemporaryShift(userShiftData)}>\r\n            <EmployeeInfoCard userShiftData={userShiftData} \r\n            shiftData={shiftData}\r\n            editMode={editMode}/>\r\n            {userShiftData?.shiftDetails.map((shiftTime) => (\r\n              <EmployeeShiftNameTime\r\n                key={shiftTime?.date}\r\n                shiftTime={shiftTime}\r\n                editMode={editMode}\r\n                openEditModel={openEditModel}\r\n                setOpenEditModel={setOpenEditModel}\r\n              />\r\n            ))}\r\n          </tr>\r\n        ))\r\n      )}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default ShiftTableBody;\r\n","import React, { useState,useEffect } from \"react\";\r\nimport ShiftCalanderHeader from \"./ShiftCalanderHeader\";\r\nimport ShiftTableHeader from \"./ShiftTableHeader\";\r\nimport ShiftTableBody from \"./ShiftTableBody\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst ShiftCalender = (props) => {\r\n  const {shiftData,isActiveShift,editMode,setOpenEditModel,openEditModel,setAssignTemporaryShift,setLoadIng} = props\r\n  const {\r\n    getAllShiftDetailsPending,\r\n    getAllShiftDetailsRes,\r\n    getAllShiftDetailsError,\r\n} = useSelector(state => state.shift)\r\n  const [headerDate, setHeaderDate] = useState([])\r\n  const [allEmployeeShift, setAllEmployeeShift] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (!getAllShiftDetailsPending) {\r\n        if (getAllShiftDetailsError) {\r\n            return;\r\n        }\r\n        if (getAllShiftDetailsRes) {\r\n            if (getAllShiftDetailsRes?.code === 200) {\r\n                setLoadIng(false)\r\n                const EmployeeResData = getAllShiftDetailsRes?.data\r\n                setHeaderDate(EmployeeResData?.shiftDateRange)\r\n                setAllEmployeeShift(EmployeeResData?.getEmployeeDetails)\r\n                \r\n            }\r\n        }\r\n    }\r\n}, [\r\n  getAllShiftDetailsRes,\r\n  getAllShiftDetailsError,\r\n  getAllShiftDetailsPending\r\n]);\r\n  \r\n  return (\r\n    <div className=\"cardBox p-0 mb-3 customCalander overflow-hidden\">\r\n      <div className=\"tab-content\">\r\n        <div className=\"tab-pane fade show active\" id=\"shiftTab1\">\r\n          <ShiftCalanderHeader\r\n          setLoadIng={setLoadIng}\r\n          shiftData={shiftData}\r\n          headerDate={headerDate}\r\n          allEmployeeShift={allEmployeeShift}\r\n          isActiveShift={isActiveShift}\r\n          setOpenEditModel={setOpenEditModel}/>\r\n          <div className=\"table-responsive shiftTablemain shiftHeigth\">\r\n            <table className=\"table m-0\">\r\n              <ShiftTableHeader \r\n              headerDate={headerDate}/>\r\n              <ShiftTableBody \r\n              allEmployeeShift={allEmployeeShift}\r\n              shiftData={shiftData}\r\n              editMode={editMode}\r\n              openEditModel={openEditModel}\r\n              setOpenEditModel={setOpenEditModel}\r\n              setAssignTemporaryShift={setAssignTemporaryShift}/>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShiftCalender;\r\n","import React, { useState } from 'react';\r\nimport { convertShiftTime, convertToTS } from '../../../utils/AppHelper'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { shiftManagementAction } from '../../../core/resource/actions';\r\n\r\nconst ShiftEditModel = (props) => {\r\n    const { openEditModel, setOpenEditModel, assignTemporaryShift, getAllShift } = props;\r\n    const dispatch = useDispatch()\r\n    const [shiftStatus, setShiftStatus] = useState('')\r\n    const [startDate, setStartDate] = useState();\r\n    const [endDate, setEndDate] = useState();\r\n    const [shiftId,setShiftId] = useState('')\r\n    const [status, setStatus] = useState(false)\r\n    const handleClose = () => {\r\n        setOpenEditModel(false);\r\n    };\r\n    const handleShift = (status, data) => {\r\n        setStatus(status)\r\n        setShiftStatus(data)\r\n\r\n    }\r\n    const handleSubmitAssignShift = () => {\r\n        let data = {\r\n            assignment_type:'temporary',\r\n            shift_id:shiftId,\r\n            employee_id:[assignTemporaryShift?._id],\r\n            start_date:startDate,\r\n            end_date:endDate\r\n        }\r\n        dispatch(shiftManagementAction.assignShiftRequest(data));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={`modal editShift fade ${openEditModel ? 'show' : ''}`}\r\n                tabIndex=\"-1\"\r\n                style={{ display: openEditModel ? 'block' : 'none', opacity: openEditModel ? 1 : 0 }}>\r\n                <div className=\"modal-dialog modal-dialog-centered\">\r\n                    <div className=\"modal-content rounded-0 border-0\">\r\n                        <div className=\"modal-header justify-content-between align-items-center\">\r\n                            <h3 className=\"fs-6 fw-semibold mb-0\">Edit Shift</h3>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btnClose border-0 bg-transparent\"\r\n                                onClick={handleClose}\r\n                            >\r\n                                <img src=\"images/close-icon.svg\" alt=\"\" width=\"20\" />\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"currentShift\">\r\n                                <p className=\"py-2\"><b>Current Shift:</b> {convertShiftTime(assignTemporaryShift?.shift_start_time)} - {convertShiftTime(assignTemporaryShift?.shift_end_time)}</p>\r\n                                <div className=\"editShiftGroup\" id=\"editShiftDiv\">\r\n                                    <div className=\"mb-2\">\r\n                                        <select className=\"form-select\" onChange={(e)=>setShiftId(e.target.value)}>\r\n                                            {getAllShift.map(item=>(\r\n                                                <option value={item._id}>{item?.shift_name} ({convertShiftTime(item?.shift_start_time)} - {convertShiftTime(item?.shift_end_time)})</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                    {status &&\r\n                                        <div className=\"d-flex gap-2\">\r\n                                            <div className=\"form-group col-md\">\r\n                                                <label htmlFor=\"exampleInputEmail1\">Start Date</label><span style={{ color: \"red\" }}>*</span>\r\n                                                <input type=\"date\" name=\"shiftStartDate\" onChange={(e) => setStartDate(e.target.value)} className=\"form-control\" placeholder=\"Enter start time\" />\r\n                                            </div>\r\n                                            <div className=\"form-group col-md\">\r\n                                                <label htmlFor=\"exampleInputEmail1\">End Date</label><span style={{ color: \"red\" }}>*</span>\r\n                                                <input type=\"date\" name=\"shiftEndDate\" onChange={(e) => setEndDate(e.target.value)} min={convertToTS(startDate, 'YYYY-MM-DD')} className=\"form-control\" placeholder=\"Enter end time\" />\r\n\r\n                                            </div>\r\n\r\n                                        </div>}\r\n                                </div>\r\n                            </div>\r\n                            {!status &&\r\n                                <div className=\"d-flex shiftBtnGroup gap-3\">\r\n                                    <button type=\"button\" className=\"btn btn-outline-primary editShiftButton\" onClick={() => handleShift(true, 'temp')}>\r\n                                        <img src=\"images/editShift.svg\" alt=\"\" width=\"16\" /> Edit Shift\r\n                                    </button>\r\n                                    <button type=\"button\" className=\"btn btn-outline-primary addShiftButton\" onClick={() => handleShift(true, 'both')}>\r\n                                        <img src=\"images/add-icon.svg\" alt=\"\" width=\"16\" /> Add another Shift\r\n                                    </button>\r\n                                </div>}\r\n                        </div>\r\n\r\n                        <div className=\"modal-footer justify-content-center\">\r\n                            <button className=\"btn btn-org-gradient text-white px-5\" onClick={()=>handleSubmitAssignShift()}>Save</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Backdrop */}\r\n            {openEditModel && <div className=\"modal-backdrop fade show\"></div>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ShiftEditModel;\r\n","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\n\r\n\r\nconst ShiftBulkUpload = (props) => {\r\n    const { openUploadShiftModel, setOpenUploadShiftModel } = props\r\n    const [startDate, setStartDate] =useState('')\r\n    const [endDate, setEndDate] = useState('')\r\n    const [bulkUploadFile,setBulkUploadFile]=useState('')\r\n    const [bulkUploadFileName,setBulkUploadFileName]=useState('')\r\n    const [showDownloadButton, setShowDownloadButton] = useState(true)\r\n    const [fileUrl, setFileUrl] = useState('')\r\n\r\n    const handleFileChange=(event)=>{\r\n        setBulkUploadFile(event.target.files[0])\r\n      }\r\n\r\n    const handleStartDate = data => {\r\n        setStartDate(data);\r\n        setEndDate('');\r\n      };\r\n      const HandleSetEndDate=(data) =>{\r\n            setEndDate(data)\r\n            // simpleExlShiftReport(e)\r\n\r\n      }\r\n      const generateXLSXFile = () => {\r\n        window.open(fileUrl, '_blank') \r\n    };\r\n    return (\r\n        <>\r\n            <div className={`modal editShift fade ${openUploadShiftModel ? 'show' : ''}`}\r\n                tabIndex=\"-1\"\r\n                style={{ display: openUploadShiftModel ? 'block' : 'none', opacity: openUploadShiftModel ? 1 : 0 }}>\r\n                <div className=\"modal-dialog modal-dialog-centered\">\r\n                    <div className=\"modal-content rounded-0 border-0\">\r\n                        <div className=\"modal-header justify-content-between align-items-center\">\r\n                            <h3 className=\"fs-6 fw-semibold mb-0\">Shift Bulk Upload</h3>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btnClose border-0 bg-transparent\"\r\n                                onClick={() => setOpenUploadShiftModel(!openUploadShiftModel)}\r\n                            >\r\n                                <img src=\"images/close-icon.svg\" alt=\"\" width=\"20\" />\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"modal-body\">\r\n                            <form>\r\n                                <div className='row'>\r\n                                    <div className=\"form-group col-md-3\">\r\n                                        <label htmlFor=\"exampleInputEmail1\" style={{ fontSize: \"20px\" }}>Start Date <span style={{ color: 'red' }}>*</span></label>\r\n                                    </div>\r\n                                    <div className=\"form-group col-md\">\r\n                                        <input type=\"date\" name=\"shift_name\"\r\n                                            value={startDate}\r\n                                            onChange={e => handleStartDate(e.target.value)}\r\n                                            min={moment().startOf('month').format('YYYY-MM-DD')}\r\n                                            className=\"form-control\" placeholder=\"Enter Start Date\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className='row'>\r\n                                    <div className=\"form-group col-md-3\">\r\n                                        <label htmlFor=\"exampleInputEmail1\" style={{ fontSize: \"20px\" }}>End Date <span style={{ color: 'red' }}>*</span></label>\r\n                                    </div>\r\n                                    <div className=\"form-group col-md\">\r\n                                        <input type=\"date\" name=\"shift_name\"\r\n                                            className=\"form-control\" placeholder=\"Enter End Date\"\r\n                                            value={endDate}\r\n                                            onChange={e => HandleSetEndDate(e.target.value)}\r\n                                            min={moment(startDate).format('YYYY-MM-DD')}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                {showDownloadButton &&\r\n                                    <div className='row'>\r\n                                        <div className=\"form-group col-md-12\">\r\n                                            <button\r\n                                                className=\"btn btn-info float-right ms-5\"\r\n                                                title=\"\"\r\n                                                onClick={generateXLSXFile}\r\n                                                style={{ backgroundColor: \"cornflowerblue\", color: \"black\" }}\r\n                                            >\r\n                                                Download Sample\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>}\r\n                                <div className='row'>\r\n                                    <div className=\"form-group col-md-3\">\r\n                                        <label htmlFor=\"exampleInputEmail1\" style={{ fontSize: \"20px\" }}>Bulk Upload <span style={{ color: 'red' }}>*</span></label>\r\n                                    </div>\r\n                                    <div className=\"form-group col-md\">\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            placeholder=\"\"\r\n                                            className=\"is-untouched is-pristine av-invalid form-control\"\r\n                                            name=\"file\"\r\n                                            id=\"Name\"\r\n                                            onChange={(e) => handleFileChange(e)}\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n\r\n                        <div className=\"modal-footer justify-content-center\">\r\n                            <button className=\"btn btn-org-gradient text-white px-5\" >Save</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShiftBulkUpload","import React, { useEffect, useState } from \"react\";\r\nimport ShiftSchedual from \"../components/admin/shiftManagement/ShiftSchedual\";\r\nimport ShiftCalender from \"../components/admin/shiftManagement/ShiftCalender\";\r\nimport {useDispatch, useSelector } from \"react-redux\";\r\nimport {shiftManagementAction} from '../core/resource/actions'\r\nimport ApproveRejectModal from '../components/modal/ApproveRejectModal'\r\nimport ShiftEditModel from \"../components/admin/shiftManagement/ShiftEditModel\";\r\nimport ShiftBulkUpload from \"../components/admin/shiftManagement/ShiftBulkUpload\";\r\nimport { CustomSpinner } from \"../components/globalComponents\";\r\n\r\n\r\nconst ShiftManagement = () => {\r\n  const dispatch = useDispatch()\r\n  const {getAllShiftPending,getAllShiftRes,getAllShiftError,deleteShiftPending,deleteShiftRes,deleteShiftError,\r\n    activeOrInactivePending,\r\n  activeOrInactiveRes,\r\n  activeOrInactiveError,\r\n  } = useSelector(state =>state.shift)\r\n  const [getAllShift, setAllShift] = useState([])\r\n  const [deleteshift,setDeletShift] = useState('')\r\n  const [isActiveDeletModel, setIsActiveDeletMode] = useState(false)\r\n  const [isActiveOrIncatveModel, setIsActiveOrInActiveMode] = useState(false)\r\n  const [isActivedata, setisActiveData] = useState()\r\n  const [isActiveShift, setIsActive]= useState('')\r\n  const [shiftData,setShiftData] = useState('')\r\n  const [editMode, setEditMode] = useState(true)\r\n  const [openEditModel, setOpenEditModel] = useState(false)\r\n  const [assignTemporaryShift, setAssignTemporaryShift] = useState('')\r\n  const [openUploadShiftModel, setOpenUploadShiftModel] = useState(false)\r\n  const [loading,setLoadIng] = useState(false)\r\n\r\n\r\n  const setDeletShifts = (data)=>{\r\n    setIsActiveDeletMode(!isActiveDeletModel)\r\n    setDeletShift(data)\r\n  }\r\n\r\n  const setActivebtn = (data)=>{\r\n    setIsActiveOrInActiveMode(!isActiveOrIncatveModel)\r\n    setisActiveData(data)\r\n  }\r\n  \r\n  useEffect(()=>{\r\n    getAllShiftFunction()\r\n  },[])\r\n\r\n  const getAllShiftFunction = ()=>{\r\n    dispatch(shiftManagementAction.getAllShiftRequest())\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!getAllShiftPending) {\r\n        if (getAllShiftError) {\r\n          setAllShift([])\r\n            return;\r\n        }\r\n        if (getAllShiftRes) {\r\n            if (getAllShiftRes?.code == 200) {\r\n              let Temp = getAllShiftRes?.data?.data\r\n              Temp?.unshift({ shift_name: \"All Shift\", id: 'ejknrjk34324', shift_start_time: \"00:00\", shift_end_time: \"00:00\" ,short_name: undefined})\r\n              setAllShift(Temp)\r\n            }\r\n        }\r\n    }\r\n}, [\r\n  getAllShiftPending,\r\n  getAllShiftRes,\r\n  getAllShiftError\r\n]);\r\n\r\nuseEffect(() => {\r\n  if (!deleteShiftPending) {\r\n    if (deleteShiftError) {\r\n      dispatch(shiftManagementAction.handleClearShiftStore('HANDLE_CLEAR_DELETE_SHIFT_STORE'))\r\n      return;\r\n    }\r\n    if (deleteShiftRes) {\r\n      if (deleteShiftRes?.code == 200) {\r\n        dispatch(shiftManagementAction.handleClearShiftStore('HANDLE_CLEAR_DELETE_SHIFT_STORE'))\r\n        getAllShiftFunction()\r\n      }\r\n    }\r\n  }\r\n}, [\r\n  deleteShiftRes,\r\n  deleteShiftError,\r\n  deleteShiftPending\r\n]);\r\n\r\nuseEffect(() => {\r\n  if (!activeOrInactivePending) {\r\n    if (activeOrInactiveError) {\r\n      dispatch(shiftManagementAction.handleClearShiftStore('ACTIVE_INACTIVE_SHIFT_STORE'))\r\n      return;\r\n    }\r\n    if (activeOrInactiveRes) {\r\n      if (activeOrInactiveRes?.code == 200) {\r\n        dispatch(shiftManagementAction.handleClearShiftStore('ACTIVE_INACTIVE_SHIFT_STORE'))\r\n        setIsActive(shiftData)\r\n        getAllShiftFunction()\r\n      }\r\n    }\r\n  }\r\n}, [\r\n  activeOrInactiveRes,\r\n  activeOrInactiveError,\r\n  activeOrInactivePending\r\n]);\r\n\r\nconst onDeleteCancelShift = (type)=>{\r\n  if (type) {\r\n    const params = {\r\n      _id: deleteshift?.id\r\n    }\r\n    dispatch(shiftManagementAction?.deleteShiftRequest(params))\r\n    setIsActiveDeletMode(!isActiveDeletModel)\r\n  } else {\r\n    setIsActiveDeletMode(!isActiveDeletModel)\r\n  }\r\n}\r\n\r\nconst onShiftactive = (type)=>{\r\n  if(type){\r\n    const params = {\r\n      id:isActivedata?.id,\r\n      is_active:isActivedata?.is_active == true ? false : true\r\n    }\r\n    dispatch(shiftManagementAction?.activeOrInactiveRequest(params))\r\n    setIsActiveOrInActiveMode(!isActiveOrIncatveModel)\r\n  } else {\r\n    setIsActiveOrInActiveMode(!isActiveOrIncatveModel)\r\n  }\r\n}\r\n\r\n  return (\r\n    <>\r\n      <ShiftSchedual \r\n      getAllShift={getAllShift}\r\n      getAllShiftFunction={getAllShiftFunction}\r\n      setDeletShift={setDeletShifts}\r\n      setActivebtn={setActivebtn}\r\n      setShiftData={setShiftData}\r\n      editMode={editMode}\r\n      setEditMode={setEditMode}\r\n      openUploadShiftModel={openUploadShiftModel}\r\n      setOpenUploadShiftModel={setOpenUploadShiftModel}/>\r\n      \r\n      <ShiftCalender \r\n      setLoadIng={setLoadIng}\r\n      shiftData={shiftData}\r\n      isActiveShift={isActiveShift}\r\n      editMode={editMode}\r\n      openEditModel={openEditModel}\r\n      setOpenEditModel={setOpenEditModel}\r\n      setAssignTemporaryShift={setAssignTemporaryShift}\r\n      />\r\n\r\n      {isActiveDeletModel && (\r\n        <ApproveRejectModal\r\n          onApproveReject={onDeleteCancelShift}\r\n          isShow={isActiveDeletModel}\r\n          desc={\"You want to delete this Shift\"}\r\n          // btnRightLoading={deleteEmailTemplatePending}\r\n        />)\r\n      }\r\n      {isActiveOrIncatveModel && (\r\n        <ApproveRejectModal\r\n          onApproveReject={onShiftactive}\r\n          isShow={isActiveOrIncatveModel}\r\n          desc={`You want to this shift ${isActivedata.is_active == true ? 'Inactve' : 'active'} `}\r\n          isLoading={activeOrInactivePending}\r\n        />)\r\n      }\r\n      {openEditModel && \r\n      <ShiftEditModel \r\n      openEditModel={openEditModel}\r\n      setOpenEditModel={setOpenEditModel}\r\n      assignTemporaryShift={assignTemporaryShift}\r\n      getAllShift={getAllShift}\r\n      />\r\n      }\r\n      {openUploadShiftModel && \r\n      <ShiftBulkUpload \r\n      openUploadShiftModel={openUploadShiftModel}\r\n      setOpenUploadShiftModel={setOpenUploadShiftModel}\r\n      />}\r\n\r\n    {loading && <CustomSpinner isShow={loading} size=\"lg\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShiftManagement;\r\n"],"names":["props","name","value","handleChange","totalHours","intervalMinutes","timeOptions","generateTimeOptions","timeArray","hours","minutes","i","j","push","item","_jsxs","className","onChange","e","children","_jsx","hidden","map","timeObj","index","dispatch","useDispatch","openAddCalendar","openAddCalendarModel","selectedCalendarData","setSelectedCalendarDatas","getAllShiftCalendar","addShiftCalendarPending","addShiftCalendarRes","addShiftCalendarError","useSelector","state","shift","errors","setErrors","useState","calendarId","setCalendarId","workingDay","setWorkingDay","weekOff","setweekOff","alternativeSaturday","setalternativeSaturday","addCalendar","setAddCalendar","title","working_days","alternative_saturday_off","week_off","alternativeSaturdayFun","target","checked","newResult","filter","val","weekOffFun","useEffect","toast","error","errorMessage","_addShiftCalendarRes$","_addShiftCalendarRes$2","data","code","success","msg","shiftManagementAction","handleClearShiftStore","undefined","id","resetData","_Fragment","tabIndex","style","visibility","width","type","onClick","event","prev","placeholder","CustomError","text","required","setWorkingDayfun","selected","includes","for","htmlFor","async","validationResponse","validateSchema","addCalendarchema","isValid","updateShiftCalendarRequest","addShiftCalendarRequest","handleSubmitCreateShiftConfiguration","_createShift$shift_co","openModel","openCreateShiftModel","editShift","setEditShift","getAllShiftFunction","addShiftPending","addShiftRes","addShiftError","editorData","setEditorData","shiftId","setShiftId","isActive","setIsActive","totalworkingHours","setTotalWorkingHours","totalBreakHours","setTotalBreakHours","createShift","serCreateShift","shift_name","shift_code","color","is_active","shift_start_time","shift_end_time","break_start_time","break_end_time","early_arrival_tolerance","late_departure_tolerance","grace_start_time","grace_end_time","half_day_policy_time","full_day_policy_time","shift_type","_addShiftRes$data","_addShiftRes$data2","short_code","split","word","charAt","toUpperCase","join","startTime","moment","endTime","isNightShift","isAfter","endAdjusted","add","duration","diff","formattedTime","String","padStart","shiftType","resetTempateData","position","top","readOnly","CustomTimePicker","CustomButton","classNames","handleClick","addShiftSchema","updateShiftRequest","addShiftRequest","console","log","handleSubmitCreateShift","card","setDeletShift","setActivebtn","src","alt","is_default","_ref","setShiftData","editMode","activebtn","setActiveBtn","backgroundColor","marginRight","href","clickShiftData","ShiftMenuDropdown","getAllShift","box","setBox","document","querySelector","overflow","overflowX","scrollBehavior","marginLeft","ShiftInfoCard","scrollLeft","clientWidth","left","scrollRight","right","navigate","useNavigate","setEditMode","openUploadShiftModel","setOpenUploadShiftModel","setOpenModel","CreateUpdateShift","ShiftSchedualCards","AddCalendar","openShiftModel","openShiftModelfunction","shiftData","addShiftConfigurationPending","addShiftConfigurationRes","addShiftConfigurationError","getShiftByIdPending","getShiftByIdRes","getShiftByIdError","getAllShiftCalendarError","getAllShiftCalendarRes","getAllShiftCalendarPending","overTime","setOverTime","AllCalendar","setAllCalendar","shiftConfigurationdata","setShiftConfigurationdata","shift_id","over_time","minimum_ot_hours","maximum_ot_hours","calendar_id","_addShiftConfiguratio","_addShiftConfiguratio2","_getShiftByIdRes$data","_getShiftByIdRes$data2","_getShiftByIdRes$data3","apidata","is_ot_time","pre","getAllShiftCalendarRequest","_getAllShiftCalendarR","_getAllShiftCalendarR2","_getAllShiftCalendarR3","_getAllShiftCalendarR4","is_OT_time","addShiftConfigurationRequest","openAssignShiftModel","assignShiftModelOpen","getAllShiftDetails","setOpenEditModel","getAllEmployeePending","getAllEmployeeRes","getAllEmployeeError","employee","assignShiftPending","assignShiftRes","assignShiftError","currentPage","setCurrentPage","getAllEmployee","setGetAllEmployee","selectEmployee","setSelectEmployee","startDate","setStartDate","endDate","setEndDate","assignShift","setAssignShift","assignment_type","employee_id","start_date","end_date","getAllEmployees","_assignShiftRes$data","clearFunction","params","page","limit","pagination","employeeActions","getAllEmployeeRequest","getAllEmployeeResData","min","format","MultiSelect","options","usr","label","emp_user_id","labelledBy","handleSubmitAssignShift","assignShiftRequest","openAddWeekOffModel","addWeekOffModelOpen","getWeek","getEmployeebyShiftidPending","getEmployeebyShiftidRes","getEmployeebyShiftidError","addWeekOffPending","addWeekOffRes","addWeekOffError","weekdays","setweekday","weekoffs","setweekoffs","newRoster","setNewRoster","employeeData","setEmployeedata","searchWeekoff","setSearchWeekoff","_addWeekOffRes$data","_addWeekOffRes$data2","getEmployeeByShiftId","getEmployeeByShiftIdRequest","_getEmployeebyShiftid","_getEmployeebyShiftid2","_getEmployeebyShiftid3","EmployeeResData","initialCheckedCheckboxes","initialWeekOffs","forEach","_employee$weekoff","weekoff","day","class","filteredData","_item$emp_id","toLowerCase","emp_id","searchWeekOff","last_name","_newRoster$item$emplo","AddWeekoff","employeeId","prevState","findIndex","updatedWeekOff","d","length","slice","_prevState$employeeId","handleSubmitAddWeekoff","weekoff_details","addWeekOffRequest","_headerDate$","_headerDate$2","_headerDate","headerDate","allEmployeeShift","isActiveShift","setLoadIng","deleteEmployeeShiftPending","deleteEmployeeShiftRes","deleteEmployeeShiftError","setOpenShiftModel","setOpenAssignShiftModel","setOpenAddWeekOffModel","setGetWeek","activeInactiveFunction","nextprev","dateRange","direction","start","end","subtract","shiftDatas","startOf","endOf","getAllShiftDetailsRequest","getShiftByIdRequest","date","cursor","ShiftConfiguration","AssignShift","AddWeekOff","userShiftData","firstDateOfMonth","Date","getFullYear","getMonth","lastDateOfMonth","isShowDeleteModal","setIsShowDelelteModal","setEmployeeId","Link","to","_id","first_name","Designation","height","onHandleDeleteModal","ApproveRejectModal","onApproveReject","deleteEmployeeShiftRequest","isShow","desc","isLoading","shiftTime","openEditModel","background","replace","_allEmployeeShift$sli","setAssignTemporaryShift","EmployeeInfoCard","shiftDetails","EmployeeShiftNameTime","getAllShiftDetailsPending","getAllShiftDetailsRes","getAllShiftDetailsError","setHeaderDate","setAllEmployeeShift","shiftDateRange","getEmployeeDetails","ShiftCalanderHeader","ShiftTableHeader","ShiftTableBody","assignTemporaryShift","shiftStatus","setShiftStatus","status","setStatus","handleShift","display","opacity","handleClose","convertShiftTime","convertToTS","bulkUploadFile","setBulkUploadFile","bulkUploadFileName","setBulkUploadFileName","showDownloadButton","setShowDownloadButton","fileUrl","setFileUrl","fontSize","handleStartDate","HandleSetEndDate","generateXLSXFile","window","open","files","ShiftManagement","getAllShiftPending","getAllShiftRes","getAllShiftError","deleteShiftPending","deleteShiftRes","deleteShiftError","activeOrInactivePending","activeOrInactiveRes","activeOrInactiveError","setAllShift","deleteshift","isActiveDeletModel","setIsActiveDeletMode","isActiveOrIncatveModel","setIsActiveOrInActiveMode","isActivedata","setisActiveData","loading","getAllShiftRequest","_getAllShiftRes$data","Temp","unshift","short_name","ShiftSchedual","ShiftCalender","deleteShiftRequest","activeOrInactiveRequest","ShiftEditModel","ShiftBulkUpload","CustomSpinner","size"],"sourceRoot":""}