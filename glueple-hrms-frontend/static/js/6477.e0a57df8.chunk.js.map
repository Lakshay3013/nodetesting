{"version":3,"file":"static/js/6477.e0a57df8.chunk.js","mappings":"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","sources":["components/teamAttendance/TeamAttendanceTable.js","components/teamAttendance/PunchDetails.js","components/teamAttendance/TeamAttendances.js"],"sourcesContent":["import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../reuseableComponents';\r\nimport { Input, Label } from '../commanComponent';\r\nimport { dateFormate, todayDate } from '../../utils/common';\r\n\r\nconst data = [\r\n    {\r\n        'emp_id': \"QD2654\",\r\n        'name': \"mohd sarfaraz\",\r\n        'department_name': \"Product department\",\r\n        'designation_name': \"React JS Developer\",\r\n        'date': \"07-11-2024\",\r\n        'check_in': \"09:30:55\",\r\n        'total_login_hours': \"00:56:03\",\r\n        'total_break_time': \"00:12:20\",\r\n    }\r\n]\r\n\r\nconst TeamAttendanceTable = (props) => {\r\n    const { isLoading, currentPage, setCurrentPage, allEmployeeData, filterDate, setFilterDate, toggleShowPunchDetail } = props\r\n\r\n    const allEmployeeField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'emp_id', label: 'Emp Id' },\r\n        { key: 'name', label: 'Employee Name' },\r\n        { key: 'department_name', label: 'Department' },\r\n        { key: 'designation_name', label: 'Designation' },\r\n        { key: 'date', label: 'Date' },\r\n        { key: 'check_in', label: 'Check IN' },\r\n        { key: 'total_login_hours', label: 'Total Login Hours' },\r\n        { key: 'total_break_time', label: 'Total Break Time' },\r\n        { key: 'action', label: 'Action' }\r\n    ];\r\n    const scopedSlotsAllEmployee = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        date: (item) => (\r\n            <span>{dateFormate(item?.date)}</span>\r\n        ),\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => toggleShowPunchDetail()}\r\n                        >\r\n                            Show Detail</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }), [allEmployeeData]);\r\n    return (\r\n        <div className=\"cardBox myRequest mb-3\">\r\n            <div className=\"cardHead\">\r\n                <img src=\"images/myrequest-icon.svg\" alt=\"\" width=\"35\" />\r\n                <h3 className=\"ms-2\">Team Attendance</h3>\r\n            </div>\r\n            <div className='row d-flex justify-content-end'>\r\n                <div className=\"col-md-2 form-group \">\r\n                    <Input\r\n                        type=\"date\"\r\n                        value={filterDate || todayDate()?.todayDate}\r\n                        name=\"filterDate\"\r\n                        max={todayDate()?.todayDate}\r\n                        onChange={(e) => setFilterDate(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"table-responsive tableDiv text-nowrap overflowTable\">\r\n                <CustomTable\r\n                    data={data || []}\r\n                    fields={allEmployeeField}\r\n                    isLoading={isLoading}\r\n                    pagination={true}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    totalPages={allEmployeeData?.totalPages}\r\n                    isHeader={false}\r\n                    tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                    scopedSlots={scopedSlotsAllEmployee}\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamAttendanceTable\r\n","import React, { useMemo } from 'react'\r\nimport { CustomTable } from '../reuseableComponents';\r\nimport { dateFormate } from '../../utils/common';\r\nconst data =[]\r\nconst PunchDetails = (props) => {\r\n    const {openModel,handleOpenClose,currentPage,setCurrentPage,punchData,isLoading}=props\r\n    \r\n    const punchDataField = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'emp_id', label: 'Emp Id' },\r\n        { key: 'date', label: 'Date' },\r\n        { key: 'time', label: 'time' },\r\n        { key: 'device_name', label: 'Device Name' },\r\n        { key: 'I/O', label: 'I/O' },\r\n        { key: 'platform', label: 'Platform' },\r\n        { key: 'location', label: 'Location' },\r\n    ];\r\n    const scopedSlotsPunchData = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        date: (item) => (\r\n            <span>{dateFormate(item?.date)}</span>\r\n        ),\r\n       \r\n    }), [punchData]);\r\n  return (\r\n    <>\r\n     <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n                tabIndex={-1}\r\n                style={{\r\n                    visibility: openModel ? 'visible' : 'hidden',\r\n                    width: \"700px\"\r\n                }}\r\n                id=\"interviewDetail\"\r\n            >\r\n                <div className=\"offcanvas-header\">\r\n                    <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">\r\n                    Punch Details \r\n                    </h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n                        onClick={() => handleOpenClose()}\r\n                    />\r\n                </div>\r\n           \r\n\r\n                <div className=\"offcanvas-body myRequest \">\r\n                    <div className=\"formPanel\">\r\n\r\n                    <div className=\"table-responsive tableDiv text-nowrap overflowTable\">\r\n                <CustomTable\r\n                    data={data || []}\r\n                    fields={punchDataField}\r\n                    isLoading={isLoading}\r\n                    pagination={true}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    totalPages={punchData?.totalPages}\r\n                    isHeader={false}\r\n                    tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                    scopedSlots={scopedSlotsPunchData}\r\n                />\r\n\r\n            </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"offcanvas-footer\">\r\n                    <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n  )\r\n}\r\n\r\nexport default PunchDetails\r\n","import React, { useState } from 'react'\r\nimport TeamAttendanceTable from './TeamAttendanceTable'\r\nimport { CustomButton } from '../globalComponents'\r\nimport { Icon } from '../commanComponent'\r\nimport PunchDetails from './PunchDetails'\r\n\r\nconst TeamAttendances = () => {\r\n    const [filterDate, setFilterDate] = useState('')\r\n    const [isShowPunchDetail,setIsShowPunchDetail]=useState(false)\r\n\r\n    const toggleShowPunchDetail =()=>{\r\n        setIsShowPunchDetail(!isShowPunchDetail)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cardBox mb-3 createNewMrf newMrfProcess \">\r\n                <div className=\"row align-items-center d-flex justify-content-end\">\r\n                    <div className=\"col-md-3 col-xl-2\">\r\n                        <CustomButton\r\n                            classNames=\"btn btn-info w-100 mb-2\"\r\n                            text=\"Download Report\"\r\n                            icon={<Icon className=\"fa fa-download \" />}\r\n                        // handleClick={() => createMrfProcess(\"vacancy\")}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 col-xl-2\">\r\n                        <CustomButton\r\n                            classNames=\"btn btn-primary w-100 mb-2\"\r\n                            text=\"Refresh\"\r\n                            icon={<Icon className=\"fa fa-refresh\" />}\r\n                        // handleClick={() => createMrfProcess(\"vacancy\")}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <TeamAttendanceTable\r\n                filterDate={filterDate}\r\n                setFilterDate={setFilterDate}\r\n                toggleShowPunchDetail={toggleShowPunchDetail}\r\n            />\r\n\r\n            <PunchDetails\r\n            openModel={isShowPunchDetail}\r\n            handleOpenClose ={toggleShowPunchDetail}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TeamAttendances\r\n"],"names":["data","props","_todayDate","_todayDate2","isLoading","currentPage","setCurrentPage","allEmployeeData","filterDate","setFilterDate","toggleShowPunchDetail","scopedSlotsAllEmployee","useMemo","sn","_","index","_jsx","children","date","item","dateFormate","action","_jsxs","className","type","onClick","src","alt","width","Input","value","todayDate","name","max","onChange","e","target","CustomTable","fields","key","label","pagination","totalPages","isHeader","tableStyle","padding","boxShadow","scopedSlots","openModel","handleOpenClose","punchData","scopedSlotsPunchData","_Fragment","tabIndex","style","visibility","id","TeamAttendances","useState","isShowPunchDetail","setIsShowPunchDetail","CustomButton","classNames","text","icon","Icon","TeamAttendanceTable","PunchDetails"],"sourceRoot":""}