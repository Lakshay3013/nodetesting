{"version":3,"file":"static/js/7045.5f6d2ed0.chunk.js","mappings":"2PAUA,MA+FA,EA/F2BA,KACvB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,OACVC,EAAoBC,IAAyBC,EAAAA,EAAAA,UAAS,KACtDC,EAAoBC,IAAyBF,EAAAA,EAAAA,UAAS,CACzDG,WAAY,QAEV,4BACFC,EAA2B,wBAC3BC,EAAuB,0BACvBC,EAAyB,qBAEzBC,IACAC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,WAE/BC,EAAAA,EAAAA,YAAU,KACN,IAAKP,EAA6B,CAC9B,GAAIE,EACA,OAEAD,GACsC,OAAX,OAAvBA,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBO,OACzBb,EAA6C,OAAvBM,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBQ,KAG3D,IACD,CACCR,EACAC,EACAF,KAKJO,EAAAA,EAAAA,YAAU,KAFNf,EAASkB,EAAAA,GAAeC,8BAGE,GAC3B,IAgBH,OAAQC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAEJF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yBAAwBD,SAAA,EACnCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,cAAaD,SAAA,EACxBE,EAAAA,EAAAA,KAAA,OAAAF,UACIE,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,wBAAwBJ,UAClCE,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,SAGbH,EAAAA,EAAAA,KAAA,OAAAF,UACIE,EAAAA,EAAAA,KAAA,MAAAF,SACyB,OAApBX,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBiB,UAG/BJ,EAAAA,EAAAA,KAAA,OAAKD,UAAU,YAAWD,UACtBF,EAAAA,EAAAA,MAAA,QAAMG,UAAU,aAAYD,SAAA,CAAC,UAA4B,OAApBX,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBkB,gBAGnEL,EAAAA,EAAAA,KAAA,OAAKD,UAAU,MAAKD,UAChBE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,WAAUD,UACrBF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,kBAAiBD,SAAA,EAC5BE,EAAAA,EAAAA,KAACM,EAAAA,GAAK,CAACC,KAAMjC,EAAE,4BACf0B,EAAAA,EAAAA,KAACQ,EAAAA,EAAY,CACTf,KAAMf,EACN+B,YAAanC,EAAE,qCACfoC,OAAyB,OAAlB7B,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBE,aAAc,GACzC4B,aAAeC,GAzCdC,EAACC,EAAGC,KAAe,IAADC,EACvC,MAAMZ,EAAOW,IAAqB,QAAZC,EAAIF,EAAEG,cAAM,IAAAD,OAAA,EAARA,EAAUZ,OAC9B,MAAEM,GAAY,OAADI,QAAC,IAADA,GAAAA,EAAGG,OAAU,OAADH,QAAC,IAADA,OAAC,EAADA,EAAGG,OAAS,CAAEP,MAAOI,GACpDhC,GAAsBoC,IAClB,IAAIC,EAAe,IACZD,EACH,CAACd,GAAOM,GAKZ,MAHI,eAAiBN,GACjB5B,EAASkB,EAAAA,GAAe0B,wBAAwB,iDAE7CD,CAAY,GACrB,EA6BoDN,CAAiBD,EAAgB,cACnER,KAAK,0BAMN,OAAlBvB,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBE,cACjBiB,EAAAA,EAAAA,KAACqB,EAAAA,QAA0B,CACvBC,uBAA0C,OAAlBzC,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBE,WAC5CwC,WAAgC,OAApBpC,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBqC,OAG3C,C","sources":["components/payrollAdmin/employee/AddUpdateEmpSalary.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Label } from '../../commanComponent'\r\nimport CustomSelect from '../../commanComponent/CustomSelect'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { payrollActions } from '../../../core/resource/actions'\r\nimport CreateUpdateSalaryTemplate from '../salaryTemplate/CreateUpdateSalaryTemplate'\r\nimport BackIcon from '../../commanComponent/BackIcon'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AddUpdateEmpSalary = () => {\r\n    const { t } = useCustomTranslation()\r\n    const dispatch = useDispatch()\r\n    const [allSalaryTemplates, setAllSalaryTemplates] = useState('')\r\n    const [salaryTempFormData, setSalaryTempFormData] = useState({\r\n        salaryTemp: null\r\n    })\r\n    const {\r\n        getAllSalaryTemplatePending,\r\n        getAllSalaryTemplateRes,\r\n        getAllSalaryTemplateError,\r\n\r\n        selectedEmployeeData\r\n    } = useSelector(state => state.payroll)\r\n\r\n    useEffect(() => {\r\n        if (!getAllSalaryTemplatePending) {\r\n            if (getAllSalaryTemplateError) {\r\n                return;\r\n            }\r\n            if (getAllSalaryTemplateRes) {\r\n                if (getAllSalaryTemplateRes?.code === 200) {\r\n                    setAllSalaryTemplates(getAllSalaryTemplateRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllSalaryTemplateRes,\r\n        getAllSalaryTemplateError,\r\n        getAllSalaryTemplatePending\r\n    ])\r\n    const getAllSalaryTemplateData = () => {\r\n        dispatch(payrollActions.getAllSalaryTemplateRequest())\r\n    }\r\n    useEffect(() => {\r\n        getAllSalaryTemplateData()\r\n    }, [])\r\n    const handleFromChange = (e, fieldName) => {\r\n        const name = fieldName || e.target?.name;\r\n        const { value, } = e?.target ? e?.target : { value: e };\r\n        setSalaryTempFormData(prevState => {\r\n            let updatedState = {\r\n                ...prevState,\r\n                [name]: value,\r\n            };\r\n            if (\"salaryTemp\" === name) {\r\n                dispatch(payrollActions.handleClearPayrollStore(\"HANDLE_CLEAR_GET_SALARY_TEMPLATE_BY_ID_STORE\"))\r\n            }\r\n            return updatedState;\r\n        });\r\n    };\r\n\r\n    return (<>\r\n\r\n        <div className=\"formPanel cardBox mb-3\">\r\n            <div className='d-flex mb-3'>\r\n                <div>\r\n                    <Link to={\"/employee-investments\"}>\r\n                    <BackIcon />\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <h5 >\r\n                        {selectedEmployeeData?.name}\r\n                    </h5>\r\n                </div>\r\n                <div className='ms-2 mt-1'>\r\n                    <span className='span-label'>Emp.ID:{selectedEmployeeData?.emp_id}</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"form-group mb-2\">\r\n                        <Label text={t(\"labels.salaryTemplate\")} />\r\n                        <CustomSelect\r\n                            data={allSalaryTemplates}\r\n                            placeholder={t(\"placeholders.selectSalaryTemplate\")}\r\n                            value={salaryTempFormData?.salaryTemp || ''}\r\n                            handleChange={(selectedOption) => handleFromChange(selectedOption, \"salaryTemp\")}\r\n                            name=\"salaryTemp\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {salaryTempFormData?.salaryTemp &&\r\n            <CreateUpdateSalaryTemplate\r\n                selectedSalaryTemplate={salaryTempFormData?.salaryTemp}\r\n                employeeID={selectedEmployeeData?.id}\r\n            />\r\n        }\r\n    </>\r\n    )\r\n}\r\n\r\nexport default AddUpdateEmpSalary\r\n"],"names":["AddUpdateEmpSalary","t","useCustomTranslation","dispatch","useDispatch","allSalaryTemplates","setAllSalaryTemplates","useState","salaryTempFormData","setSalaryTempFormData","salaryTemp","getAllSalaryTemplatePending","getAllSalaryTemplateRes","getAllSalaryTemplateError","selectedEmployeeData","useSelector","state","payroll","useEffect","code","data","payrollActions","getAllSalaryTemplateRequest","_jsxs","_Fragment","children","className","_jsx","Link","to","BackIcon","name","emp_id","Label","text","CustomSelect","placeholder","value","handleChange","selectedOption","handleFromChange","e","fieldName","_e$target","target","prevState","updatedState","handleClearPayrollStore","CreateUpdateSalaryTemplate","selectedSalaryTemplate","employeeID","id"],"sourceRoot":""}