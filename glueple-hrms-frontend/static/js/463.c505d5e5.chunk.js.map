{"version":3,"file":"static/js/463.c505d5e5.chunk.js","mappings":"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","sources":["components/globalComponents/CustomError.js","components/hiring/mrf/MrfForms/CreateMrf.js","components/hiring/mrf/MrfForms/JobDescription.js","components/hiring/mrf/MrfForms/AddInterviewer.js","components/hiring/mrf/MrfForms/ReviewAndSubmit.js","components/hiring/mrf/NewMrfProcess.js","utils/ValidattionTranslation.js","utils/ValidationHelper.js","utils/ValidationSchema.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst CustomError = ({text,style}) => {\r\n  return (\r\n    <>\r\n      <small \r\n      className=\"p-error text-danger\" \r\n      style={style ||{}}\r\n      >\r\n        {text}\r\n    </small>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomError\r\n","import React, { useEffect, useState } from 'react'\r\nimport * as yup from \"yup\";\r\nimport Button from '../../../commanComponent/Button'\r\nimport { MrfCreateSchema } from '../../../../utils/ValidationSchema'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper';\r\nimport CustomError from '../../../globalComponents/CustomError';\r\n\r\nconst CreateMrf = (props) => {\r\n    const {onClickActive,setActiveValues,createMrfData,setCreateMrfData} =props\r\n    const [errors, setErrors] = useState({});\r\n    const [mrfFromData, setMrfFromData] = useState(\r\n        {\r\n            \"department\": \"\",\r\n            \"designation\": \"\",\r\n            \"position\": \"\",\r\n            \"priority\": \"\",\r\n            \"minQualififcation\": \"\",\r\n            \"preferredQualification\": \"\",\r\n            \"businessImpact\": \"\",\r\n            \"hiringFor\": \"\",\r\n            \"vacantPosition\": '',\r\n            \"learningDevelopmentCost\":'',\r\n            \"typeOfAppointment\":\"\",\r\n            \"yearOfExperience\": \"\",\r\n            \"mrfJustification\": \"\"\r\n        }\r\n    )\r\n    // useEffect(()=>{   \r\n    //     setMrfFromData({\r\n    //         \"department\": createMrfData?.department ||'',\r\n    //         \"designation\": createMrfData?.designation||'',\r\n    //         \"position\": createMrfData?.position||'',\r\n    //         \"priority\": createMrfData?.priority||'',\r\n    //         \"minQualififcation\": createMrfData?.minQualififcation ||'',\r\n    //         \"preferredQualification\": createMrfData?.preferredQualification ||'',\r\n    //         \"businessImpact\": createMrfData?.businessImpact||'',\r\n    //         \"hiringFor\": createMrfData?.hiringFor||'',\r\n    //         \"vacantPosition\": createMrfData?.vacantPosition||'',\r\n    //         \"learningDevelopmentCost\": createMrfData?.learningDevelopmentCost||'',\r\n    //         \"typeOfAppointment\":createMrfData?.typeOfAppointment||'',\r\n    //         \"yearOfExperience\": createMrfData?.yearOfExperience||'',\r\n    //         \"mrfJustification\": createMrfData?.mrfJustification||''\r\n    //     });\r\n    //     console.log(createMrfData,\"data\")\r\n    // },[createMrfData])\r\n\r\n    const handleFormData = async(e) => {\r\n        errors && setErrors({});\r\n        const { name, value } = e.target\r\n        setMrfFromData({ ...mrfFromData, [name]: value })\r\n       \r\n    }\r\n    const onSubmitMrfForm = async () => {\r\n        const validationResponse = await validateSchema(MrfCreateSchema, mrfFromData);\r\n        if (validationResponse.isValid) {\r\n            setErrors({});\r\n            onClickActive(2)\r\n            setActiveValues((pre)=>[...pre ,1])\r\n            console.log(\"testing\",mrfFromData)\r\n            setCreateMrfData(mrfFromData)\r\n            \r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <h3><img src=\"images/kpi-guidline.svg\" alt=\"\" width=\"40\" className=\"me-2\" /> Create MRF</h3>\r\n            <div className=\"row mt-3\">\r\n                {/* <div className=\"col-md-6 form-group mb-3\">\r\n                            <label>MRF Raising For</label>\r\n                            <select className=\"form-select\" required>\r\n                                <option value=\"\" hidden selected>MRF Raising For...</option>\r\n                                <option value=\"new hiring\">Product Department</option>\r\n                                <option value=\"Hr_department\">Hr Department</option>\r\n                                <option value=\"Other\">Other</option>\r\n                            </select>\r\n\r\n                        </div> */}\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Select Department <span className='text-danger'>*</span></label>\r\n                    <select className=\"form-select\" required\r\n                        name='department'\r\n                        value={mrfFromData?.department}\r\n                        onChange={(e) => handleFormData(e)}>\r\n                        <option value=\"\" hidden selected>Select Department...</option>\r\n                        <option value=\"Product_department\">Product Department</option>\r\n                        <option value=\"Hr_department\">Hr Department</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    {errors.department &&\r\n                        <CustomError\r\n                            text={errors.department}\r\n                        />\r\n                    }\r\n\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Select Designation <span className='text-danger'>*</span></label>\r\n                    <select className=\"form-select\" required\r\n                        name='designation'\r\n                        value={mrfFromData?.designation}\r\n                        onChange={(e) => handleFormData(e)}>\r\n                        <option value=\"\" hidden selected>Select Required Designation</option>\r\n                        <option value=\"Node\">Node</option>\r\n                        <option value=\"React\">React</option>\r\n                    </select>\r\n                    {errors.designation &&\r\n                        <CustomError\r\n                            text={errors.designation}\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Position <span className='text-danger'>*</span></label>\r\n                    <select className=\"form-select\" required\r\n                        name='position'\r\n                        value={mrfFromData?.position}\r\n                        onChange={(e) => handleFormData(e)}>\r\n                        <option value=\"\" hidden selected>Position</option>\r\n                        <option value=\"1\"  >1</option>\r\n                        <option value=\"2\"  >2</option>\r\n                    </select>\r\n                    {errors.position &&\r\n                        <CustomError\r\n                            text={errors.position}\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Priority <span className='text-danger'>*</span></label>\r\n                    <select className=\"form-select\" required\r\n                        name='priority'\r\n                        value={mrfFromData?.priority}\r\n                        onChange={(e) => handleFormData(e)}\r\n                    >\r\n                        <option value=\"\" hidden selected>Priority</option>\r\n                        <option value=\"Critical\"  >Critical</option>\r\n                        <option value=\"High\"  >High</option>\r\n                        <option value=\"Low\"  >Low</option>\r\n                        <option value=\"Normal\"  >Normal</option>\r\n                    </select>\r\n                    {errors.priority &&\r\n                        <CustomError\r\n                            text={errors.priority}\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Min Qualification <span className='text-danger'>*</span></label>\r\n                    <input type=\"text\" className=\"form-control\"\r\n                        name='minQualififcation'\r\n                        value={mrfFromData?.minQualififcation}\r\n                        onChange={(e) => handleFormData(e)}\r\n                        id=\"minQualififcation\"\r\n                        placeholder='Select Min Qualification level...' />\r\n                    {errors.minQualififcation && <CustomError\r\n                        text={errors.minQualififcation}\r\n                    />}\r\n\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Business Impact <span className='text-danger'>*</span></label>\r\n                    <select className=\"form-select\" required\r\n                        name='businessImpact'\r\n                        value={mrfFromData?.businessImpact}\r\n                        onChange={(e) => handleFormData(e)}>\r\n                        <option value=\"\" hidden selected>Business Impact</option>\r\n                        <option value=\"16869e947bf31a4fa4a98583\"  >High</option>\r\n                        <option value=\"26869e947bf31a4fa4a98583\"  >LOW</option>\r\n                        <option value=\"36869e947bf31a4fa4a98583\"  >MEDIUM</option>\r\n                    </select>\r\n                    {errors.businessImpact && <CustomError\r\n                        text={errors.businessImpact}\r\n                    />}\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Total Vacant Position <span className='text-danger'>*</span>       </label>\r\n                    <input type=\"text\" className=\"form-control\"\r\n                        value={mrfFromData?.vacantPosition}\r\n                        name=\"vacantPosition\"\r\n                        onChange={(e) => handleFormData(e)}\r\n                        id=\"\"\r\n                        placeholder='' />\r\n                        {errors.vacantPosition && <CustomError\r\n                        text={errors.vacantPosition}\r\n                    />}\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label> Year Of Experience <span className='text-danger'>*</span></label>\r\n                    <select className=\"form-select\" required\r\n                        name='yearOfExperience'\r\n                        value={mrfFromData?.yearOfExperience}\r\n                        onChange={(e) => handleFormData(e)}>\r\n                        <option value=\"\" hidden selected>Year Of Experience</option>\r\n                        <option value=\"66869e947bf31a4fa4a98581\"  >0.6 - 1 Years</option>\r\n                        <option value=\"66869e947bf31a4fa4a98582\"  >1 - 2 Years</option>\r\n                        <option value=\"66869e947bf31a4fa4a98583\"  >2 - 3 Years</option>\r\n                    </select>\r\n                    {errors.yearOfExperience && <CustomError\r\n                        text={errors.yearOfExperience}\r\n                    />}\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Learning & Development Cost</label>\r\n                    <select className=\"form-select\" required\r\n                        name='learningDevelopmentCost'\r\n                        value={mrfFromData?.learningDevelopmentCost}\r\n                        onChange={(e) => handleFormData(e)}>\r\n                        <option value=\"\" hidden selected>Learning & Development Cost</option>\r\n                        <option value=\"66869e947bf31a4fa4a98534\"  >Yes</option>\r\n                        <option value=\"66869e947bf31a4fa4a98534\"  >No</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Type Of Appointment</label>\r\n                    <select className=\"form-select\" required\r\n                        name='typeOfAppointment'\r\n                        value={mrfFromData?.typeOfAppointment}\r\n                        onChange={(e) => handleFormData(e)}>\r\n                        <option value=\"\" hidden selected>Type Of Appointment</option>\r\n                        <option value=\"66869e947bf31a4fa4a98545\" >Online</option>\r\n                        <option value=\"66869e947bf31a4fa4a98532\" >Offline</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Office Location <span className='text-danger'>*</span></label>\r\n                    <select className=\"form-select\" required\r\n                        name='hiringFor'\r\n                        value={mrfFromData?.hiringFor}\r\n                        onChange={(e) => handleFormData(e)}>\r\n                        <option value=\"\" hidden selected>Select Location...</option>\r\n                        <option value=\"66869e947bf31a4fa4a98545\" >Jaipur</option>\r\n                        <option value=\"66869e947bf31a4fa4a98532\" >Bangalore</option>\r\n                    </select>\r\n                    {errors.hiringFor && <CustomError\r\n                        text={errors.hiringFor}\r\n                    />}\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label> Preferred Qualification</label>\r\n                    <input type=\"text\" className=\"form-control\"\r\n                        name=\"preferredQualification\"\r\n                        value={mrfFromData?.preferredQualification}\r\n                        onChange={(e) => handleFormData(e)}\r\n                        id=\"\"\r\n                        placeholder='Enter the Preferred Qualification...' />\r\n                </div>\r\n                <div className=\"col-md-12 form-group mb-3\">\r\n                    <label>Mrf justification <span className='text-danger'>*</span></label>\r\n                    <textarea id=\"\" className=\"w-100 form-control\" placeholder=\"Enter the Mrf justification...\"\r\n                        name=\"mrfJustification\"\r\n                        value={mrfFromData?.mrfJustification}\r\n                        onChange={(e) => handleFormData(e)}\r\n                    ></textarea>\r\n                    {errors.mrfJustification && <CustomError\r\n                        text={errors.mrfJustification}\r\n                    />}\r\n                </div>\r\n                <div style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                    <Button\r\n                        btnClassName=\"btn btn-primary gradientBg me-2\"\r\n                        onClickFun={() => onSubmitMrfForm()}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                    <Button\r\n                         onClickFun={()=>{onClickActive(2);\r\n                                        setCreateMrfData(mrfFromData)}\r\n                                    }\r\n                        btnClassName=\"btn btn-success \">\r\n                        Next\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateMrf\r\n","import React, { useEffect, useState } from 'react'\r\nimport Button from '../../../commanComponent/Button'\r\nimport { MrfJobDescSchema } from '../../../../utils/ValidationSchema'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nimport CustomError from '../../../globalComponents/CustomError'\r\n\r\nconst JobDescription = (props) => {\r\n    const { setActiveValues, onClickActive ,jobDescriptionFormData,setJobDescriptionFromData} = props\r\n    const [errors, setErrors] = useState({});\r\n    const [jobDescriptionData, setJobDescriptionData] = useState(\r\n        {\r\n            responsiblities: '',\r\n            domainKnowledge: '',\r\n            trainingCertificates: '',\r\n            otherSkills: '',\r\n            roleSummary: '',\r\n        }\r\n    )\r\n    // useEffect(()=>{\r\n    //     setJobDescriptionData({\r\n    //         responsiblities: jobDescriptionFormData?.responsiblities||'',\r\n    //         domainKnowledge: jobDescriptionFormData?.domainKnowledge||'',\r\n    //         trainingCertificates: jobDescriptionFormData?.trainingCertificates||'',\r\n    //         otherSkills: jobDescriptionFormData?.otherSkills||'',\r\n    //         roleSummary: jobDescriptionFormData?.roleSummary||'',\r\n    //     })\r\n    // },[jobDescriptionFormData])\r\n\r\n    const handleFormData = async (e) => {\r\n        errors && setErrors({});\r\n        const { name, value } = e.target\r\n        setJobDescriptionData({ ...jobDescriptionData, [name]: value })\r\n        \r\n\r\n    }\r\n    const onSubmitJobDescription =async () => {\r\n        const validationResponse = await validateSchema(MrfJobDescSchema,jobDescriptionData );\r\n        if (validationResponse.isValid) {\r\n            console.log(jobDescriptionData, \"mrfFromData\");\r\n            setErrors({});\r\n            onClickActive(3)\r\n            setJobDescriptionFromData(jobDescriptionData)\r\n            setActiveValues((pre) => [...pre, 2])\r\n            \r\n        } else {\r\n            setErrors(validationResponse.errors);\r\n            console.log(validationResponse.errors, \"formattedErrors\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <h3><img src=\"images/kpi-guidline.svg\" alt=\"\" width=\"40\" className=\"me-2\" /> Job Description</h3>\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Responsiblities <span className='text-danger'>*</span></label>\r\n                    <input type=\"text\" className=\"form-control\"\r\n                        name='responsiblities'\r\n                        value={jobDescriptionData?.responsiblities}\r\n                        onChange={(e) => handleFormData(e)}\r\n                    />\r\n                    {errors.responsiblities &&\r\n                        <CustomError\r\n                            text={errors.responsiblities}\r\n                        />\r\n                    }\r\n\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Domain Knowledge <span className='text-danger'>*</span></label>\r\n                    <input type=\"text\" className=\"form-control\"\r\n                    name='domainKnowledge'\r\n                    value={jobDescriptionData?.domainKnowledge}\r\n                    onChange={(e) => handleFormData(e)}\r\n                    />\r\n                    {errors.domainKnowledge &&\r\n                        <CustomError\r\n                            text={errors.domainKnowledge}\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Training Certificates</label>\r\n                    <select className=\"form-select\"\r\n                        required\r\n                        name='trainingCertificates'\r\n                        value={jobDescriptionData?.trainingCertificates}\r\n                        onChange={(e) => handleFormData(e)}\r\n                    >\r\n                        <option value=\"\" hidden selected>Select Training Certificates...</option>\r\n                        <option value=\"668d308d97cc55591ca0900d\">Web </option>\r\n                        <option value=\"668d308d97cc55591ca0900r\">Android</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-md-6 form-group mb-3\">\r\n                    <label>Other Skills</label>\r\n                    <input type=\"text\" className=\"form-control\"\r\n                        name='otherSkills'\r\n                        value={jobDescriptionData?.otherSkills}\r\n                        onChange={(e) => handleFormData(e)}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-12 form-group mb-3\">\r\n                    <label>Role Summary <span className='text-danger'>*</span></label>\r\n                    <textarea type=\"text\" className=\"form-control\"\r\n                        name='roleSummary'\r\n                        value={jobDescriptionData?.roleSummary}\r\n                        onChange={(e) => handleFormData(e)}\r\n                    />\r\n                    {errors.roleSummary &&\r\n                        <CustomError\r\n                            text={errors.roleSummary}\r\n                        />\r\n                    }\r\n                </div>\r\n\r\n                <div style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n                    <Button\r\n                        btnClassName=\"btn btn-primary gradientBg me-2\"\r\n                        onClickFun={() => onSubmitJobDescription()}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                    <Button\r\n                    btnClassName=\"btn btn-primary me-2\"\r\n                    onClickFun={() => onClickActive(1)}\r\n                    >\r\n                    Back <i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n                    </Button>\r\n                    <Button\r\n                        btnClassName=\"btn btn-success \"\r\n                        onClickFun={() => {onClickActive(3);\r\n                            setJobDescriptionFromData(jobDescriptionData)\r\n                        }}\r\n                    >\r\n                        Next\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default JobDescription\r\n","import React, { useEffect, useState } from 'react'\r\nimport Button from '../../../commanComponent/Button'\r\nimport CustomError from '../../../globalComponents/CustomError'\r\nimport { MrfInterviewSchema } from '../../../../utils/ValidationSchema'\r\nimport { validateSchema } from '../../../../utils/ValidationHelper'\r\nconst AddInterviewer = (props) => {\r\n  const { onClickActive, setActiveValues, interviewData, setInterviewData } = props\r\n  const [errors, setErrors] = useState([]);\r\n  const [addInterviewerData, setAddInterviewerData] = useState(\r\n    [{\r\n      department: '',\r\n      designation: '',\r\n      interviewStage: '',\r\n      interviewType: '',\r\n      interviewer: '',\r\n    }]\r\n  )\r\n  // useEffect(() => {\r\n  //   if (interviewData.length) {\r\n  //     setAddInterviewerData(interviewData)\r\n  //   }\r\n  // }, [interviewData])\r\n\r\n\r\n  const handleFormData = async (e, index) => {\r\n    errors && setErrors({});\r\n    const { name, value } = e.target\r\n    let updatedInterviewerData = [...addInterviewerData];\r\n\r\n    // Update the specific item at the given index\r\n    updatedInterviewerData[index] = {\r\n      ...updatedInterviewerData[index],\r\n      [name]: value,\r\n    };\r\n    setAddInterviewerData(updatedInterviewerData);\r\n  }\r\n\r\n\r\n\r\n\r\n  const onAddInterviewrsform = async (item, index, type) => {\r\n    const validationResponse = await validateSchema(MrfInterviewSchema, item);\r\n    let errorOccurred = false\r\n    setErrors((prevErrors) => {\r\n      const updatedErrors = Array.isArray(prevErrors) ? [...prevErrors] : [];\r\n      if (validationResponse.isValid) {\r\n        updatedErrors[index] = {};\r\n      } else {\r\n        updatedErrors[index] = validationResponse.errors;\r\n        errorOccurred = true;\r\n      }\r\n      return updatedErrors;\r\n    });\r\n\r\n    if (!validationResponse.isValid) {\r\n      errorOccurred = true;\r\n    }\r\n    if (!errorOccurred && type == \"add\") {\r\n      setAddInterviewerData((prevData) => [\r\n        ...prevData,\r\n        {\r\n          department: '',\r\n          designation: '',\r\n          interviewStage: '',\r\n          interviewType: '',\r\n          interviewer: '',\r\n          isEditMode: true,\r\n        },\r\n      ]);\r\n    }\r\n    if (!errorOccurred && type == \"submit\") {\r\n      console.log(addInterviewerData, \"addInterviewerData\")\r\n      onClickActive(4)\r\n      setInterviewData(addInterviewerData)\r\n    }\r\n\r\n  };\r\n\r\n\r\n\r\n  // const toggleEditMode = (index) => {\r\n  //   const updatedInterviewerData = addInterviewerData.map((form, i) => \r\n  //     i === index ? { ...form, isEditMode: !form.isEditMode } : form\r\n  //   );\r\n  //   setAddInterviewerData(updatedInterviewerData);\r\n  // };\r\n\r\n  const onDeleteInterview = (index) => {\r\n    const updatedInterviewers = addInterviewerData.filter((_, i) => i !== index);\r\n    setAddInterviewerData(updatedInterviewers);\r\n  };\r\n  const renderInterviewr = () => {\r\n    return addInterviewerData.map((interviewForm, index) =>\r\n    (<div className=\"row mt-3\">\r\n      <div className=\"col-md-6 form-group mb-3\">\r\n        <label>Select Department <span className='text-danger'>*</span> </label>\r\n        <select className=\"form-select\" required\r\n          name={`department`}\r\n          value={interviewForm?.department}\r\n          onChange={(e) => handleFormData(e, index)}\r\n          disabled={!interviewForm.isEditMode && addInterviewerData.length - 1 !== index}\r\n        >\r\n          <option value=\"\" hidden selected>Select Department...</option>\r\n          <option value=\"Product_department\">Product Department</option>\r\n          <option value=\"Hr_department\">Hr Department</option>\r\n          <option value=\"Other\">Other</option>\r\n        </select>\r\n        {errors[index]?.department && (\r\n          <CustomError text={errors[index].department} />\r\n        )}\r\n\r\n      </div>\r\n      <div className=\"col-md-6 form-group mb-3\">\r\n        <label>Select Designation <span className='text-danger'>*</span> </label>\r\n        <select className=\"form-select\" required\r\n          name='designation'\r\n          value={interviewForm?.designation}\r\n          onChange={(e) => handleFormData(e, index)}\r\n          disabled={!interviewForm.isEditMode && addInterviewerData.length - 1 !== index}\r\n        >\r\n          <option value=\"\" hidden selected>Select Required Designation</option>\r\n          <option value=\"Node\">Node</option>\r\n          <option value=\"React\">React</option>\r\n        </select>\r\n\r\n        {errors[index]?.designation && (\r\n          <CustomError text={errors[index].designation} />\r\n        )}\r\n\r\n      </div>\r\n\r\n      <div className=\"col-md-6 form-group mb-3\">\r\n        <label>Interview stage <span className='text-danger'>*</span> </label>\r\n        <select className=\"form-select\"\r\n          name='interviewStage'\r\n          value={interviewForm?.interviewStage}\r\n          onChange={(e) => handleFormData(e, index)}\r\n          disabled={!interviewForm.isEditMode && addInterviewerData.length - 1 !== index}\r\n        >\r\n          <option value=\"\" hidden selected>Select Interview Stage...</option>\r\n          <option value=\"668cd8c6d65ef5480c0fa0d2\">2</option>\r\n          <option value=\"668cd8c6d65ef5480c0fa0d0\">3</option>\r\n        </select>\r\n        {errors[index]?.interviewStage && (\r\n          <CustomError text={errors[index].interviewStage} />\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"col-md-6 form-group mb-3\">\r\n        <label>Interview Type <span className='text-danger'>*</span> </label>\r\n        <select className=\"form-select\"\r\n          name='interviewType'\r\n          value={interviewForm?.interviewType}\r\n          onChange={(e) => handleFormData(e, index)}\r\n          disabled={!interviewForm.isEditMode && addInterviewerData.length - 1 !== index}\r\n        >\r\n          <option value=\"\" hidden selected>Select interview type...</option>\r\n          <option value=\"668cd8c6d65ef5480c0fa0d0\">online</option>\r\n          <option value=\"668cd8c6d65ef5480c0fa0d2\">Offline</option>\r\n        </select>\r\n        {errors[index]?.interviewType && (\r\n          <CustomError text={errors[index].interviewType} />\r\n        )}\r\n      </div>\r\n      <div className=\"col-md-6 form-group mb-3\">\r\n        <label>Interviewer <span className='text-danger'>*</span> </label>\r\n        <select className=\"form-select\"\r\n          name='interviewer'\r\n          value={interviewForm?.interviewer}\r\n          onChange={(e) => handleFormData(e, index)}\r\n          disabled={!interviewForm.isEditMode && addInterviewerData.length - 1 !== index}\r\n        >\r\n          <option value=\"\" hidden selected>Select Interviewer...</option>\r\n          <option value=\"668cd8c6d65ef5480c0fa0d2\">Chandan</option>\r\n          <option value=\"668cd8c6d65ef5480c0fa0d2\">Mahesh</option>\r\n        </select>\r\n        {errors[index]?.interviewer && (\r\n          <CustomError text={errors[index].interviewer} />\r\n        )}\r\n      </div>\r\n      <div className=\"\">\r\n        {addInterviewerData.length - 1 == index && <Button\r\n          btnClassName=\"btn btn-primary me-2 \"\r\n          onClickFun={() => onAddInterviewrsform(interviewForm, index, \"add\")}\r\n        >\r\n          Add Interviewer\r\n        </Button>}\r\n        {/* {addInterviewerData.length-1 !== index &&<Button\r\n          btnClassName=\"btn btn-info me-2\"\r\n          onClickFun={() => toggleEditMode(index)}\r\n        >\r\n          {interviewForm.isEditMode ? \"Save\" : \"Edit\"}\r\n        </Button>} */}\r\n        {addInterviewerData.length > 1 && <Button\r\n          btnClassName=\"btn btn-danger me-2\"\r\n          onClickFun={() => onDeleteInterview(index)}\r\n        >\r\n          Delete\r\n        </Button>}\r\n      </div>\r\n\r\n      {addInterviewerData.length - 1 == index && <div style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n        <Button\r\n          btnClassName=\"btn btn-primary gradientBg me-2\"\r\n          onClickFun={() => onAddInterviewrsform(interviewForm, index, \"submit\")}\r\n        >\r\n          Draft\r\n        </Button>\r\n        <Button\r\n          btnClassName=\"btn btn-primary me-2\"\r\n          onClickFun={() => onClickActive(2)}\r\n        >\r\n          Back <i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n        </Button>\r\n        <Button\r\n          btnClassName=\"btn btn-success me-2\"\r\n          onClickFun={() => {\r\n            onClickActive(4);\r\n            setInterviewData(addInterviewerData)\r\n          }}\r\n        >\r\n          Next <i className=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\r\n        </Button>\r\n      </div>}\r\n      {addInterviewerData.length - 1 !== index && <div>\r\n        <hr />\r\n      </div>}\r\n\r\n\r\n    </div>)\r\n\r\n\r\n    )\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3><img src=\"images/kpi-guidline.svg\" alt=\"\" width=\"40\" className=\"me-2\" /> Add Interviewers</h3>\r\n\r\n      {addInterviewerData && <>{renderInterviewr()}</>}\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddInterviewer\r\n","import React from 'react'\r\n\r\nconst ReviewAndSubmit = (props) => {\r\n  const {setActiveValues}=props\r\n  \r\n    return (\r\n    <>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ReviewAndSubmit\r\n","import React, { useState } from 'react'\r\nimport Button from '../../commanComponent/Button'\r\nimport CreateMrf from './MrfForms/CreateMrf'\r\nimport JobDescription from './MrfForms/JobDescription'\r\nimport AddInterviewer from './MrfForms/AddInterviewer'\r\nimport ReviewAndSubmit from './MrfForms/ReviewAndSubmit'\r\n\r\nconst NewMrfProcess = () => {\r\n    const [isActive,setIsActive]=useState(1)\r\n    const [activeValues,setActiveValues]=useState([])\r\n    const [createMrfData,setCreateMrfData]=useState('')\r\n    const [jobDescriptionFormData,setJobDescriptionFromData]=useState('')\r\n    const [interviewData,setInterviewData]=useState([])\r\n\r\n    const onClickActive = (val) => {\r\n        setIsActive(val)\r\n        }\r\n    return (\r\n        <>\r\n            <div class=\"col-md-12 ps-md-0\">\r\n                <div class=\"cardBox h-100 newMrfProcess\">\r\n                    <div class=\"cardHead\">\r\n                        {/* <h3>New <span>MRF Process</span></h3> */}\r\n                        <ul class=\"tackList  mt-5 pt-2 pe-4\">\r\n                            <li onClick={()=>onClickActive(1)} className={activeValues.includes(1)?'active':''}>Create MRF</li>\r\n                            <li onClick={()=>onClickActive(2)}  className={activeValues.includes(2)?'active':''}>Add Job Description</li>\r\n                            <li onClick={()=>onClickActive(3)}  className={activeValues.includes(3)?'active':''}>Add Interviewer</li>\r\n                            <li onClick={()=>onClickActive(4)}  className={activeValues.includes(4)?'active':''}>Review & Submit</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"cardBox mb-3 mt-3\">\r\n                <div class=\"cardHead\">\r\n\r\n                        {/* create mrf */}\r\n                        {isActive==1 &&\r\n                         <CreateMrf\r\n                         onClickActive={onClickActive}\r\n                         setActiveValues={setActiveValues}\r\n                         createMrfData={createMrfData}\r\n                         setCreateMrfData={setCreateMrfData}\r\n                        />}\r\n                        {/*  Job Description */}\r\n                        {isActive ==2 &&<JobDescription\r\n                        onClickActive={onClickActive}\r\n                        setActiveValues={setActiveValues}\r\n                        jobDescriptionFormData={jobDescriptionFormData}\r\n                        setJobDescriptionFromData={setJobDescriptionFromData}\r\n                        />}\r\n                        {/* Add Interviwers */}\r\n                        {isActive ==3 &&<AddInterviewer\r\n                        onClickActive={onClickActive}\r\n                        setActiveValues={setActiveValues}\r\n                        interviewData={interviewData}\r\n                        setInterviewData={setInterviewData}\r\n                        />}\r\n\r\n                        {isActive ==4 &&<ReviewAndSubmit\r\n                        onClickActive={onClickActive}\r\n                        setActiveValues={setActiveValues}\r\n                        interviewData={interviewData}\r\n                        jobDescriptionFormData={jobDescriptionFormData}\r\n                        createMrfData={createMrfData}\r\n                        \r\n                        />}\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewMrfProcess\r\n","\r\nconst ValidattionTranslation = {\r\n    \"validations.fieldReq\": \"$FIELD is required.\",\r\n    \"minLength\": \"Minimum length is $1 characters.\",\r\n    \"maxLength\": \"Maximum length is $1 characters.\",\r\n    \"emailInvalid\": \"The email address is invalid.\",\r\n    \"mobileNum\": \"Mobile Number\",\r\n    \"emailAddress\": \"Email Address\",\r\n    \"allFieldReq\": \"All $FIELD are required.\",\r\n    \"onlyDigit\":\"Mobile Number is only Digit\",\r\n    \"reqField\":\"$REQUIREDFIELD is required.\",\r\n\r\n    //mrf validation \r\n    \"department\": \"Department is required.\",\r\n    \"designation\": \"Designation is required.\",\r\n    \"position\": \"Position is required.\",\r\n    \"priority\": \"Priority is required.\",\r\n    \"minQualififcation\": \"Minimum qualification is required.\",\r\n    \"preferredQualification\": \"Preferred qualification is required.\",\r\n    \"businessImpact\": \"Business impact is required.\",\r\n    \"hiringFor\": \"Hiring for is required.\",\r\n    \"vacantPosition\": \"Vacant position is required.\",\r\n    \"yearOfExperience\": \"Years of experience is required.\",\r\n    \"mrfJustification\": \"Mrf justification is required.\",\r\n\r\n    // job description \r\n    \"responsiblities\": \"Responsiblities is required.\",\r\n    \"domainKnowledge\": \"Domain Knowledge is required.\",\r\n    \"roleSummary\": \"Role Summary is required.\",\r\n\r\n    //intervewer \r\n    \"interviewStage\": \"InterviewStage is required.\",\r\n    \"interviewer\": \"Interviewer is required.\",\r\n    \"nterviewer\": \"Interview Type is required.\",\r\n\r\n    // //candidate \r\n    // \"employeeName\": \"Employee Name is required.\",\r\n    // \"employeeEmail\": \"Employee Email is required.\",\r\n    // \"employeeMobile\":\"Employee Mobile is required.\",\r\n    // \"location\":\"Employee Location is required.\",\r\n    // \"source\": \"Source is required.\",\r\n    // \"experience\":\"Experience is required.\",\r\n    // \"address\": \"Address is optional.\",\r\n    // \"pincode\": \"Pincode is optional.\",\r\n    // \"skills\": \"Skills is optional.\",\r\n\r\n};\r\nexport default ValidattionTranslation\r\n","// import {\r\n//   addOrganizationSchema,\r\n//   addOrgBranchSchema,\r\n//   organizationSettingSchema,\r\n//   addInvoiceSchema,\r\n// } from \"./ValidationSchema\";\r\n\r\nimport ValidattionTranslation from './ValidattionTranslation';\r\n\r\nconst trans = (key,replacements = {}) => {\r\nlet translation = ValidattionTranslation[key] || key;\r\nfor (const [placeholder, value] of Object.entries(replacements)) {\r\n  translation = translation.replace(new RegExp(`\\\\$${placeholder}`, 'g'), value);\r\n}\r\nreturn translation;\r\n}\r\nconst emailRegix =\r\n  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nconst panNumRegex = new RegExp(/^[A-Z]{5}[0-9]{4}[A-Z]{1}$/);\r\nconst onlyDigitRegix = /^\\d+$/;\r\n\r\nconst isFieldValid = (formik, name) =>\r\n  !!(formik.touched[name] && formik.errors[name]);\r\n\r\nconst getFieldErrorMsg = (formik, name) => {\r\n  return (\r\n    isFieldValid(formik, name) && (\r\n      <small className=\"p-error\">{formik.errors[name]}</small>\r\n    )\r\n  );\r\n};\r\n\r\nconst digitsOnly = (value) => {\r\n  return onlyDigitRegix.test(value);\r\n};\r\n\r\nconst validateResponse = () => {\r\n  return { status: 401, msg_code: 401, msg: \"\", isValid: false, errors: null };\r\n};\r\n\r\nconst isBlank = (value) => {\r\n  return value === \"\" || false;\r\n};\r\n\r\nconst isNull = (value) => {\r\n  return value === null || false;\r\n};\r\n\r\nconst isNun = (value) => {\r\n  return Number.isNaN(value) || false;\r\n};\r\n\r\nconst isBlankOrNull = (value) => {\r\n  return value === undefined || isBlank(value) || isNull(value) || false;\r\n};\r\n\r\nconst validateMobile = (mobile) => {\r\n  if (mobile.length === 0) {\r\n    return {\r\n      isValid: false,\r\n      msg: trans(\"validations.fieldReq\").replace(\r\n        \"$FIELD\",\r\n        trans(\"label.mobileNum\")\r\n      ),\r\n    };\r\n  }\r\n  if (mobile.length < 10) {\r\n    return {\r\n      isValid: false,\r\n      msg: trans(\"validations.minLength\").replace(\"$1\", 10),\r\n    };\r\n  }\r\n  if (mobile.length > 10) {\r\n    return {\r\n      isValid: false,\r\n      msg: trans(\"validations.maxLength\").replace(\"$1\", 10),\r\n    };\r\n  }\r\n  return { isValid: true, msg: \"\" };\r\n};\r\n\r\nconst validateEmail = (email) => {\r\n  if (email.length === 0) {\r\n    return {\r\n      isValid: false,\r\n      msg: trans(\"validations.fieldReq\").replace(\r\n        \"$FIELD\",\r\n        trans(\"label.emailAddress\")\r\n      ),\r\n    };\r\n  }\r\n  if (!emailRegix.test(email)) {\r\n    return { isValid: false, msg: trans(\"validations.emailInvalid\") };\r\n  }\r\n  return { isValid: true, msg: \"\" };\r\n};\r\n\r\nconst validateSchema = async (schema, data) => {\r\n  const validateDataRes = validateResponse();\r\n  if (!schema) {\r\n    validateDataRes.msg_code = 401;\r\n    validateDataRes.msg = trans(\"validations.allFieldReq\");\r\n    return validateDataRes;\r\n  }\r\n\r\n  const result = await schema.isValid(data);\r\n  const errorsList = {};\r\n  if (!result) {\r\n    await schema.validate(data, { abortEarly: false }).catch((err) => {\r\n      const errors = err.inner.reduce((acc, error) => {\r\n        return (errorsList[error.path] = error.message);\r\n      }, {});\r\n    });\r\n    validateDataRes.errors = errorsList;\r\n    return validateDataRes;\r\n  }\r\n  validateDataRes.msg_code = 200;\r\n  validateDataRes.status = 200;\r\n  validateDataRes.isValid = true;\r\n  return validateDataRes;\r\n};\r\n\r\nconst validateAddBranch = async (body) => {\r\n  const validateDataRes = await validateSchema(\"addOrgBranchSchema\", body);\r\n  return validateDataRes;\r\n};\r\nconst validateAddOrganization = async (body) => {\r\n  const validateDataRes = await validateSchema(\"addOrganizationSchema\", body);\r\n  return validateDataRes;\r\n};\r\n\r\nconst validateOrgSettings = async (body) => {\r\n  const validateDataRes = await validateSchema(\"organizationSettingSchema\", body);\r\n  return validateDataRes;\r\n};\r\n\r\nconst validateAddInvoice = async (body) => {\r\n  const validateDataRes = await validateSchema(\"addInvoiceSchema\", body);\r\n  return validateDataRes;\r\n};\r\n\r\nconst validateField = (value, type, minLength = 3) => {\r\n  if (type === \"mobile\") {\r\n    if (value.length < 10) {\r\n      return trans(\"minLength\").replace(\"$1\", 10);\r\n    }\r\n    if (value.length > 10) {\r\n      return trans(\"maxLength\").replace(\"$1\", 10);\r\n    }\r\n    if(!onlyDigitRegix.test(value)){\r\n      return trans(\"onlyDigit\")\r\n    }\r\n    \r\n  } else if (type === \"email\") {\r\n    if (!emailRegix.test(value)) {\r\n      return trans(\"emailInvalid\");\r\n    }\r\n  } else if (type === \"string\") {\r\n    if (value.length < minLength) {\r\n      return trans(\"minLength\").replace(\"$1\", minLength);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport {\r\n  trans,\r\n  digitsOnly,\r\n  isFieldValid,\r\n  getFieldErrorMsg,\r\n  validateAddBranch,\r\n  validateMobile,\r\n  validateAddOrganization,\r\n  validateOrgSettings,\r\n  validateAddInvoice,\r\n  validateSchema,\r\n  validateField,\r\n};\r\n","import * as yup from \"yup\";\r\nimport { digitsOnly, trans ,validateField} from './ValidationHelper';\r\n\r\n// // Extend Yup with the combined custom validation method\r\nyup.addMethod(yup.string, \"validateField\", function (type, minLength = 3) {\r\n  return this.test(\"validate-field\", trans(\"invalid input\"), function (value) {\r\n    const { path, createError } = this;\r\n    const validationResponse = validateField(value, type, minLength);\r\n    return validationResponse === true || createError({ path, message: validationResponse });\r\n  });\r\n});\r\n\r\nconst employeeLoginSchema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .required(trans(\"validations.emailReq\"))\r\n    .email(trans(\"validations.invalidEmail\"))\r\n    .min(3, trans(\"validations.minLength\").replace(\"$1\", 3))\r\n    .max(50, trans(\"validations.maxLength\").replace(\"$1\", 50)),\r\n  password: yup\r\n    .string()\r\n    .required(trans(\"validations.passwordReq\"))\r\n    .min(8, trans(\"validations.minLength\").replace(\"$1\", 8))\r\n    .max(20, trans(\"validations.maxLength\").replace(\"$1\", 20)),\r\n\r\n});\r\nconst addEmployeeSchema = yup.object().shape({\r\n  first_name: yup\r\n    .string()\r\n    .required(trans(\"validations.firstnameReq\"))\r\n    .min(2, trans(\"validations.minLength\").replace(\"$1\", 2))\r\n    .max(20, trans(\"validations.maxLength\").replace(\"$1\", 20)),\r\n  last_name: yup\r\n    .string()\r\n    .required(trans(\"validations.lastnameReq\"))\r\n    .min(2, trans(\"validations.minLength\").replace(\"$1\", 2))\r\n    .max(20, trans(\"validations.maxLength\").replace(\"$1\", 20)),\r\n  email_id: yup\r\n    .string()\r\n    .required(trans(\"validations.emailReq\"))\r\n    .email(trans(\"validations.invalidEmail\"))\r\n    .min(2, trans(\"validations.minLength\").replace(\"$1\", 2))\r\n    .max(50, trans(\"validations.maxLength\").replace(\"$1\", 50)),\r\n  contact_number: yup\r\n    .string()\r\n    .required(trans(\"validations.contactNumberReq\"))\r\n    .min(10, trans(\"validations.minLength\").replace(\"$1\", 10))\r\n    .max(10, trans(\"validations.maxLength\").replace(\"$1\", 10)),\r\n  pan: yup\r\n    .string()\r\n    .required(trans(\"validations.panReq\"))\r\n    .min(5, trans(\"validations.minLength\").replace(\"$1\", 5))\r\n    .max(10, trans(\"validations.maxLength\").replace(\"$1\", 10)),\r\n  currency: yup\r\n    .string()\r\n    .required(trans(\"validations.currencyReq\")),\r\n  address_line_1: yup\r\n    .string()\r\n    .required(trans(\"validations.addressLine1Req\"))\r\n    .min(2, trans(\"validations.minLength\").replace(\"$1\", 2))\r\n    .max(50, trans(\"validations.maxLength\").replace(\"$1\", 50)),\r\n  address_line_2: yup\r\n    .string()\r\n    .required(trans(\"validations.addressLine2Req\"))\r\n    .min(2, trans(\"validations.minLength\").replace(\"$1\", 2))\r\n    .max(50, trans(\"validations.maxLength\").replace(\"$1\", 50)),\r\n  city: yup\r\n    .string()\r\n    .required(trans(\"validations.cityReq\"))\r\n    .min(4, trans(\"validations.minLength\").replace(\"$1\", 4))\r\n    .max(20, trans(\"validations.maxLength\").replace(\"$1\", 20)),\r\n  state: yup\r\n    .string().required(trans(\"validations.stateReq\"))\r\n    .max(50, trans(\"validations.maxLength\").replace(\"$1\", 50)),\r\n  country: yup\r\n    .string().required(trans(\"validations.countryReq\")),\r\n  postal_code: yup\r\n    .number()\r\n    .typeError(trans(\"validations.numberReq\"))\r\n    .required(trans(\"validations.postalCodeReq\"))\r\n    .min(100000, trans(\"validations.minPostalCodeLength\"))\r\n    .max(999999, trans(\"validations.maxPostalCodeLength\")),\r\n});\r\nconst addCountry = yup.object().shape({\r\n  country_name: yup.string().required(trans(\"validations.country_name\")),\r\n  country_code: yup\r\n    .string()\r\n    .required(trans(\"validations.country_code\"))\r\n    .max(3, trans(\"validations.maxLength\").replace(\"$1\", 3)),\r\n});\r\n\r\nconst addDepartmentSchema = yup.object().shape({\r\n  depName: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Department Name\"})),\r\n  \r\n  shortName: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Short Name\"}))\r\n});\r\n\r\n// Designation Schema\r\nconst addDesignationSchema = yup.object().shape({\r\n\r\n  departmentId: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Department Name\"})),\r\n\r\n  designationName: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Designation Name\"})),\r\n  \r\n  shortName: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Short Name\"}))\r\n});\r\n// mrf form schema\r\n\r\nconst MrfCreateSchema = yup.object().shape({\r\n  department: yup\r\n    .string()\r\n    .required(trans(\"department\")),\r\n  designation: yup\r\n    .string()\r\n    .required(trans(\"designation\")),\r\n\r\n  position: yup\r\n    .string()\r\n    .required(trans(\"position\")),\r\n  priority: yup\r\n    .string()\r\n    .required(trans(\"priority\")),\r\n  minQualififcation: yup\r\n    .string()\r\n    .required(trans(\"minQualififcation\")),\r\n\r\n  preferredQualification: yup\r\n    .string()\r\n    .optional(),\r\n\r\n  businessImpact: yup\r\n    .string()\r\n    .required(trans(\"businessImpact\")),\r\n  hiringFor: yup\r\n    .string()\r\n    .required(trans(\"hiringFor\")),\r\n  vacantPosition: yup\r\n    .string()\r\n    .required(trans(\"vacantPosition\")),\r\n  yearOfExperience: yup\r\n    .string()\r\n    .required(trans(\"yearOfExperience\")),\r\n  mrfJustification: yup\r\n    .string()\r\n    .required(trans(\"mrfJustification\")),\r\n});\r\n\r\nconst MrfJobDescSchema = yup.object().shape({\r\n  responsiblities: yup\r\n    .string()\r\n    .required(trans(\"reqField\",{REQUIREDFIELD:\"Responsiblities\"})),\r\n  domainKnowledge: yup\r\n    .string()\r\n    .required(trans(\"reqField\",{REQUIREDFIELD:\"Domain Knowledge\"})),\r\n\r\n  roleSummary: yup\r\n    .string()\r\n    .required(trans(\"reqField\",{REQUIREDFIELD:\"Role Summary\"})),\r\n\r\n  otherSkills: yup\r\n    .string()\r\n    .optional(),\r\n  trainingCertificates: yup\r\n    .string()\r\n    .optional(),\r\n});\r\nconst MrfInterviewSchema = yup.object().shape({\r\n  department: yup\r\n    .string()\r\n    .required(trans(\"reqField\",{REQUIREDFIELD:\"Department\"})),\r\n  designation: yup\r\n    .string()\r\n    .required(trans(\"reqField\",{REQUIREDFIELD:\"Designation\"})),\r\n\r\n  interviewStage: yup\r\n    .string()\r\n    .required(trans(\"reqField\",{REQUIREDFIELD:\"Interview Stage\"})),\r\n\r\n  interviewer: yup\r\n    .string()\r\n    .required(trans(\"reqField\",{REQUIREDFIELD:\"Interviewer\"})),\r\n  interviewType: yup\r\n    .string()\r\n    .required(trans(\"reqField\",{REQUIREDFIELD:\"Interview Type\"})),\r\n\r\n});\r\n\r\n\r\n// candidate form \r\nconst candidateSchema = yup.object().shape({\r\n  employeeName: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Employee Name\"})),\r\n\r\n  employeeEmail: yup.\r\n  string()\r\n  .validateField(\"email\")\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Employee Email\"})),\r\n\r\n  employeeMobile: yup\r\n  .string()\r\n  .validateField(\"mobile\")\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Employee Mobile\"})),\r\n\r\n  location: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Location\"})),\r\n\r\n  source: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Source\"})),\r\n\r\n  experience: yup\r\n  .string()\r\n  .required(trans(\"reqField\",{REQUIREDFIELD:\"Experience\"})),\r\n \r\n  address: yup\r\n  .string()\r\n  .optional(),\r\n\r\n  pincode: yup\r\n  .string()\r\n  .optional(),\r\n\r\n  skills: yup\r\n  .string()\r\n  .optional(),\r\n\r\n});\r\nexport {\r\n  employeeLoginSchema,\r\n  addEmployeeSchema,\r\n  addCountry,\r\n  addDepartmentSchema,\r\n  MrfCreateSchema,\r\n  MrfJobDescSchema,\r\n  MrfInterviewSchema,\r\n  candidateSchema,\r\n  addDesignationSchema\r\n};\r\n"],"names":["_ref","text","style","_jsx","_Fragment","children","className","props","onClickActive","setActiveValues","createMrfData","setCreateMrfData","errors","setErrors","useState","mrfFromData","setMrfFromData","handleFormData","async","name","value","e","target","_jsxs","src","alt","width","required","department","onChange","hidden","selected","CustomError","designation","position","priority","type","minQualififcation","id","placeholder","businessImpact","vacantPosition","yearOfExperience","learningDevelopmentCost","typeOfAppointment","hiringFor","preferredQualification","mrfJustification","display","justifyContent","Button","btnClassName","onClickFun","validationResponse","validateSchema","MrfCreateSchema","isValid","pre","console","log","onSubmitMrfForm","jobDescriptionFormData","setJobDescriptionFromData","jobDescriptionData","setJobDescriptionData","responsiblities","domainKnowledge","trainingCertificates","otherSkills","roleSummary","MrfJobDescSchema","onSubmitJobDescription","interviewData","setInterviewData","addInterviewerData","setAddInterviewerData","interviewStage","interviewType","interviewer","index","updatedInterviewerData","onAddInterviewrsform","item","MrfInterviewSchema","errorOccurred","prevErrors","updatedErrors","Array","isArray","prevData","isEditMode","map","interviewForm","_errors$index","_errors$index2","_errors$index3","_errors$index4","_errors$index5","disabled","length","updatedInterviewers","filter","_","i","onDeleteInterview","NewMrfProcess","isActive","setIsActive","activeValues","val","class","onClick","includes","CreateMrf","JobDescription","AddInterviewer","ReviewAndSubmit","trans","key","replacements","arguments","undefined","translation","ValidattionTranslation","Object","entries","replace","RegExp","concat","emailRegix","onlyDigitRegix","schema","data","validateDataRes","status","msg_code","msg","result","errorsList","validate","abortEarly","catch","err","inner","reduce","acc","error","path","message","validateField","minLength","test","yup","this","createError","shape","username","email","min","max","password","first_name","last_name","email_id","contact_number","pan","currency","address_line_1","address_line_2","city","state","country","postal_code","typeError","country_name","country_code","addDepartmentSchema","depName","REQUIREDFIELD","shortName","addDesignationSchema","departmentId","designationName","optional","candidateSchema","employeeName","employeeEmail","employeeMobile","location","source","experience","address","pincode","skills"],"sourceRoot":""}