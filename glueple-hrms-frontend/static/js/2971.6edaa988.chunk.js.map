{"version":3,"file":"static/js/2971.6edaa988.chunk.js","mappings":"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","sources":["components/setting/correctionSetting/CorrectionSetting.js","components/setting/correctionSetting/AddUpdateCorrectionSetting.js","components/setting/Setting.js"],"sourcesContent":["import React, { useMemo } from 'react'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { CustomButton } from '../../globalComponents'\r\nimport { CustomTable } from '../../reuseableComponents'\r\nimport { getBadgeColor } from '../../../utils/common'\r\nimport { Icon } from '../../commanComponent'\r\n\r\nconst CorrectionSetting = (props) => {\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        currentPage,\r\n        setCurrentPage,\r\n        correctionSettingData,\r\n        toggleAddUpdateModal,\r\n        isLoading,\r\n        handleCorrectionSettingDeleteModal\r\n    } = props\r\n\r\n    const scopedSlots = useMemo(() => ({\r\n        sn: (_, index) => (\r\n            <span>{index + 1}</span>\r\n        ),\r\n        is_active: item => (\r\n            <span\r\n              className={`badge ${getBadgeColor(item.is_active ? \"Active\" : \"Inactive\")}`}\r\n            >\r\n              {item.is_active ? \"Active\" : \"Inactive\"}\r\n            </span>\r\n          ),\r\n        action: item => (\r\n            <div className=\"btn-group actionDrp\">\r\n                <button type=\"button\" className=\"btn dropdown-toggle-split\"\r\n                    data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                </button>\r\n                <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => toggleAddUpdateModal(item)}\r\n                        >\r\n                        <Icon className={\"bi bi-pencil-square\"}/>    Update</span>\r\n                    </li>\r\n                    <li>    \r\n                        <span className=\"dropdown-item\"\r\n                            onClick={() => handleCorrectionSettingDeleteModal(item?.id)}\r\n                        >\r\n                           <Icon className={\"bi bi-trash\"}/> Delete</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }), [correctionSettingData, currentPage]);\r\n\r\n    const fields = [\r\n        { key: 'sn', label: 'S.N' },\r\n        { key: 'client_name', label: 'Client Name' },\r\n        { key: 'attendance_correction_days', label: 'Attendance Correction Days' },\r\n        { key: 'auto_logout_days', label: 'Auto Logout Days' },\r\n        { key: 'attendance_logs_days', label: 'Attendance Logs Days' },\r\n        { key: 'is_active', label: 'Status' },\r\n        { key: 'action', label: 'Action' },\r\n\r\n\r\n    ];\r\n    return (\r\n        <div>\r\n            <div className=' myRequest mb-3 employeeHistory'>\r\n                <div className=\"d-flex align-items-center justify-content-between gap-3\">\r\n                    <div className=\" d-flex\">\r\n                        {/* <img src=\"images/myrequest-icon.svg\" alt=\"\" width={35} /> */}\r\n                        <h3 className=\"ms-2 mt-2 underlineHead \" style={{ fontSize: \"18px\" }} >{t(\"headings.correctionSetting\")}</h3>\r\n                    </div>\r\n                    <CustomButton\r\n                        text={\"Add Correction Setting\"}\r\n                        classNames={\"btn btn-primary\"}\r\n                        handleClick={() => toggleAddUpdateModal()}\r\n                    />\r\n                </div>\r\n                <CustomTable\r\n                    data={correctionSettingData?.data}\r\n                    fields={fields}\r\n                    isLoading={isLoading}\r\n                    pagination={true}\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    totalPages={correctionSettingData?.totalPages}\r\n                    isHeader={false}\r\n                    tableStyle={{ padding: \"0px\", boxShadow: \"none\" }}\r\n                    scopedSlots={scopedSlots}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CorrectionSetting\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { validateSchema } from '../../../utils/ValidationHelper'\r\nimport { correctionSettingSchema } from '../../../utils/ValidationSchema'\r\nimport { CustCheckbox, Input, Label } from '../../commanComponent'\r\nimport { CustomButton, CustomError } from '../../globalComponents'\r\nimport { useCustomTranslation } from '../../../translation'\r\nimport { CommonCKEditor } from '../../reuseableComponents'\r\n\r\nconst AddUpdateCorrectionSetting = (props) => {\r\n  const { t } = useCustomTranslation()\r\n  const { updateClientPending, addClientPending } = useSelector(state => state.client)\r\n  const { createPermissionPending } = useSelector(state => state?.permission)\r\n  const {\r\n    openModel,\r\n    handleOpenClose,\r\n    handleAddUpdateCorrectionSetting,\r\n    selectedCorrectionSetting\r\n\r\n\r\n  } = props\r\n  const [errors, setErrors] = useState({})\r\n  const [correctionSettingFormData, setCorrectionSettingFormData] = useState({\r\n    clientCode: '',\r\n    port: '',\r\n    attendanceCorrectionDays: '',\r\n    clientName: '',\r\n    autoLogoutDays: '',\r\n    attendanceImageLogsDays: '',\r\n    attendanceLogsDays: '',\r\n    baseUrl: '',\r\n    isActive: false,\r\n    isAttendanceCorrectionNotification: false,\r\n    notificationText: ''\r\n  })\r\n  const [editorData,setEditorData]=useState('')\r\n  const [bodyData, setBodyData] = useState('')\r\n\r\n  const handleFromChange = (e, fieldName) => {\r\n    const name = fieldName || e.target?.name;\r\n    const { value, type, checked } = e.target ? e.target : { value: e };\r\n\r\n    setCorrectionSettingFormData(prevState => {\r\n      const updatedState = {\r\n        ...prevState,\r\n        [name]: type === 'checkbox' ? checked : value,\r\n      };\r\n      return updatedState;\r\n    });\r\n\r\n    // Reset error for this field\r\n    setErrors(prevErrors => ({\r\n      ...prevErrors,\r\n      [name]: undefined,\r\n    }));\r\n  };\r\n\r\n  const submitAddUpdateCorrectionSetting = async () => {\r\n    const validationResponse = await validateSchema(correctionSettingSchema, correctionSettingFormData);\r\n    if (validationResponse.isValid) {\r\n      const {\r\n        clientCode,\r\n        port,\r\n        attendanceCorrectionDays,\r\n        clientName,\r\n        autoLogoutDays,\r\n        attendanceImageLogsDays,\r\n        attendanceLogsDays,\r\n        baseUrl,\r\n        isActive,\r\n        notificationText,\r\n        isAttendanceCorrectionNotification\r\n      } = correctionSettingFormData\r\n      let params = {\r\n        code: clientCode,\r\n        client_name: clientName,\r\n        base_url: baseUrl,\r\n        port: port,\r\n        attendance_correction_days: attendanceCorrectionDays,\r\n        is_attendance_correction_notification: isAttendanceCorrectionNotification,\r\n        attendance_correction_notification: editorData,\r\n        auto_logout_days: autoLogoutDays,\r\n        attendance_image_logs_days: attendanceImageLogsDays,\r\n        attendance_logs_days: attendanceLogsDays,\r\n        is_active: isActive\r\n      }\r\n      params[\"_id\"] = selectedCorrectionSetting?.id\r\n      handleAddUpdateCorrectionSetting(params)\r\n    } else {\r\n      setErrors(validationResponse.errors);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return (() => {\r\n      resetForm()\r\n    })\r\n  }, [openModel])\r\n\r\n  const resetForm = () => {\r\n    setCorrectionSettingFormData({\r\n      clientCode: '',\r\n      port: '',\r\n      attendanceCorrectionDays: null,\r\n      clientName: '',\r\n      autoLogoutDays: null,\r\n      attendanceImageLogsDays: '',\r\n      attendanceLogsDays: '',\r\n      baseUrl: '',\r\n      isActive: false,\r\n      isAttendanceCorrectionNotification: false,\r\n      notificationText: ''\r\n    })\r\n    setErrors({})\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (selectedCorrectionSetting) {\r\n      setCorrectionSettingFormData({\r\n        clientCode: selectedCorrectionSetting?.code || '',\r\n        port: selectedCorrectionSetting?.port,\r\n        attendanceCorrectionDays: selectedCorrectionSetting?.attendance_correction_days,\r\n        clientName: selectedCorrectionSetting?.client_name,\r\n        autoLogoutDays: selectedCorrectionSetting?.auto_logout_days,\r\n        attendanceImageLogsDays: selectedCorrectionSetting?.attendance_image_logs_days,\r\n        attendanceLogsDays: selectedCorrectionSetting?.attendance_logs_days,\r\n        baseUrl: selectedCorrectionSetting?.base_url,\r\n        isActive: selectedCorrectionSetting?.is_active,\r\n       \r\n        isAttendanceCorrectionNotification: selectedCorrectionSetting?.is_attendance_correction_notification\r\n      })\r\n      setEditorData(selectedCorrectionSetting?.attendance_correction_notification)\r\n    }\r\n  }, [selectedCorrectionSetting])\r\n\r\n  return (\r\n    <>\r\n      <div className={`offcanvas offcanvas-end  ${openModel ? 'show' : ''}`}\r\n        tabIndex={-1}\r\n        style={{\r\n          visibility: openModel ? 'visible' : 'hidden',\r\n          width: \"800px\"\r\n        }}\r\n        id=\"interviewDetail\"\r\n      >\r\n        <div className=\"offcanvas-header\">\r\n          <h5 className=\"offcanvas-title  fs-5 fw-bold text-primary\">Correction Setting</h5>\r\n          <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"\r\n            onClick={() => handleOpenClose()}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"offcanvas-body myRequest \">\r\n          <div className=\"formPanel\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mb-2\">\r\n                  <Label text={t(\"labels.clientCode\")} required={true} />\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder={t(\"placeholders.clientCode\")}\r\n                    value={correctionSettingFormData?.clientCode}\r\n                    name=\"clientCode\"\r\n                    onChange={(e) => handleFromChange(e)}\r\n                  />\r\n                  {errors?.clientCode && (\r\n                    <CustomError text={errors.clientCode} />\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mb-2\">\r\n                  <Label text={t(\"labels.clientName\")} required={true} />\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder={t(\"placeholders.clientName\")}\r\n                    value={correctionSettingFormData?.clientName}\r\n                    name=\"clientName\"\r\n                    onChange={(e) => handleFromChange(e)}\r\n                  />\r\n                   {errors?.clientName && (\r\n                  <CustomError text={errors.clientName} />\r\n                )}\r\n                </div>\r\n               \r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mb-2\">\r\n                  <Label text={t(\"labels.baseUrl\")} required={true} />\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder={t(\"placeholders.baseUrl\")}\r\n                    value={correctionSettingFormData?.baseUrl}\r\n                    name=\"baseUrl\"\r\n                    onChange={(e) => handleFromChange(e)}\r\n                  />\r\n                  {errors?.baseUrl && (\r\n                  <CustomError text={errors.baseUrl} />\r\n                )}\r\n                </div>\r\n               \r\n              </div>\r\n\r\n\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mb-2\">\r\n                  <Label text={t(\"labels.port\")} required={true} />\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder={t(\"placeholders.port\")}\r\n                    value={correctionSettingFormData?.port}\r\n                    name=\"port\"\r\n                    onChange={(e) => handleFromChange(e)}\r\n                  />\r\n                  {errors?.port && (\r\n                  <CustomError text={errors.port} />\r\n                )}\r\n                </div>\r\n                \r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mb-2\">\r\n                  <Label text={t(\"labels.attendanceCorrectionDays\")} required={true} />\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder={t(\"placeholders.attendanceCorrectionDays\")}\r\n                    value={correctionSettingFormData?.attendanceCorrectionDays}\r\n                    name=\"attendanceCorrectionDays\"\r\n                    onChange={(e) => handleFromChange(e)}\r\n                  />\r\n                  {errors?.attendanceCorrectionDays && (\r\n                  <CustomError text={errors.attendanceCorrectionDays} />\r\n                )}\r\n                </div>\r\n                \r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mb-2\">\r\n                  <Label text={t(\"labels.autoLogoutDays\")} required={true} />\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder={t(\"placeholders.autoLogoutDays\")}\r\n                    value={correctionSettingFormData?.autoLogoutDays}\r\n                    name=\"autoLogoutDays\"\r\n                    onChange={(e) => handleFromChange(e)}\r\n                  />\r\n                </div>\r\n                {errors?.autoLogoutDays && (\r\n                  <CustomError text={errors.autoLogoutDays} />\r\n                )}\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mb-2\">\r\n                  <Label text={t(\"labels.attendanceImageLogsDays\")} />\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder={t(\"placeholders.attendanceImageLogsDays\")}\r\n                    value={correctionSettingFormData?.attendanceImageLogsDays}\r\n                    name=\"attendanceImageLogsDays\"\r\n                    onChange={(e) => handleFromChange(e)}\r\n                  />\r\n                  {errors?.attendanceImageLogsDays && (\r\n                  <CustomError text={errors.attendanceImageLogsDays} />\r\n                )}\r\n                </div>\r\n                \r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <div className=\"form-group mb-2\">\r\n                  <Label text={t(\"labels.attendanceLogsDays\")} />\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder={t(\"placeholders.attendanceLogsDays\")}\r\n                    value={correctionSettingFormData?.attendanceLogsDays}\r\n                    name=\"attendanceLogsDays\"\r\n                    onChange={(e) => handleFromChange(e)}\r\n                  />\r\n                  {errors?.attendanceLogsDays && (\r\n                  <CustomError text={errors.attendanceLogsDays} />\r\n                )}\r\n                </div>\r\n                \r\n              </div>\r\n              <div className=\"row col-md-12\">\r\n                <div className=\"col-md-3\">\r\n                  <div className=\"form-group mb-3\">\r\n                    <Label text={t(\"labels.isAttendanceCorrectionNotification\")} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-9\">\r\n                  <div className=\"form-group mb-3\">\r\n                    <CustCheckbox\r\n                      key={\"isAttendanceCorrectionNotification\"}\r\n                      id={`isAttendanceCorrectionNotification`}\r\n                      // label={\"Active\"}\r\n                      checked={correctionSettingFormData?.isAttendanceCorrectionNotification}\r\n                      handleChange={(e) => handleFromChange(e)}\r\n                      name={\"isAttendanceCorrectionNotification\"}\r\n                    />\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {<div className=\"row col-md-12\">\r\n                \r\n                  <div className=\"form-group mb-2\">\r\n                    <Label text={t(\"labels.notificationText\")} />\r\n                    <CommonCKEditor\r\n                      editorData={editorData}\r\n                      setEditorData={setEditorData}\r\n                      bodyData={bodyData}\r\n                      editorSize=\"sm\"\r\n                    />\r\n\r\n                    {/* <Input\r\n                      type=\"number\"\r\n                      placeholder={t(\"placeholders.notificationText\")}\r\n                      value={correctionSettingFormData?.notificationText}\r\n                      name=\"notificationText\"\r\n                      onChange={(e) => handleFromChange(e)}\r\n                    /> */}\r\n                  </div>\r\n               \r\n              </div>}\r\n              <div className=\"row col-md-12\">\r\n                <div className=\"col-md-3\">\r\n                  <div className=\"form-group mb-3\">\r\n                    <Label text={t(\"labels.isActive\")} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-9\">\r\n                  <div className=\"form-group mb-3\">\r\n                    <CustCheckbox\r\n                      key={\"isActive\"}\r\n                      id={`isActive`}\r\n                      // label={\"Active\"}\r\n                      checked={correctionSettingFormData?.isActive}\r\n                      handleChange={(e) => handleFromChange(e)}\r\n                      name={\"isActive\"}\r\n                    />\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"offcanvas-footer\">\r\n          <div className=\"d-flex align-items-center justify-content-end gap-3\">\r\n            <CustomButton\r\n              text={selectedCorrectionSetting ? t(\"btns.update\") : t(\"btns.submit\")}\r\n              classNames={\"btn btn-org-gradient\"}\r\n              handleClick={() => submitAddUpdateCorrectionSetting()}\r\n              isLoading={selectedCorrectionSetting ? updateClientPending : addClientPending}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {openModel && <div className=\"modal-backdrop fade show\"></div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddUpdateCorrectionSetting\r\n","import React, { useEffect, useState } from 'react'\r\nimport { CustomTabs } from '../reuseableComponents';\r\nimport CorrectionSetting from './correctionSetting/CorrectionSetting';\r\nimport AddUpdateCorrectionSetting from './correctionSetting/AddUpdateCorrectionSetting';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clientActions } from '../../core/resource/actions';\r\nimport { useCustomTranslation } from '../../translation';\r\nimport ApproveRejectModal from '../modal/ApproveRejectModal';\r\n\r\nconst Setting = () => {\r\n    const dispatch = useDispatch()\r\n    const { t } = useCustomTranslation()\r\n    const {\r\n        addClientPending,\r\n        addClientRes,\r\n        addClientError,\r\n\r\n        getAllClientPending,\r\n        getAllClientRes,\r\n        getAllClientError,\r\n\r\n        updateClientPending,\r\n        updateClientRes,\r\n        updateClientError,\r\n\r\n        deleteClientPending,\r\n        deleteClientRes,\r\n        deleteClientError,\r\n    } = useSelector(state => state.client)\r\n    const [isOpenCorrectionSetting, setIsOpenCorrectionSetting] = useState(false)\r\n    const [selectedCorrectionSetting, setSelectCorrectionSetting] = useState('')\r\n    const [deleteCorrectionSettingId, setDeleteCorrectionSettingId] = useState('')\r\n    const [isShowDeleteCorrectionSettingModal, setIsShowDeleteCorrectionSettingModal] = useState(false)\r\n    const settingTabs = [\r\n        // { name: \"Setting\", onClickFun: (id) => getSetting(id), id: \"setting\" },\r\n        { name: \"Correction Setting\", onClickFun: (id) => getSetting(id), id: \"correctionSetting\" },\r\n    ];\r\n    const [allClientData, setAllClientData] = useState('')\r\n    const toggleCorrectionSetting = (data) => {\r\n        if (data) {\r\n            setSelectCorrectionSetting(data)\r\n        } else {\r\n            setSelectCorrectionSetting('')\r\n        }\r\n        setIsOpenCorrectionSetting(!isOpenCorrectionSetting)\r\n    }\r\n    const getSetting = (type) => {\r\n        if (type === \"correctionSetting\") {\r\n            getAllClientData()\r\n        }\r\n\r\n    }\r\n\r\n    const getAllClientData = () => {\r\n        dispatch(clientActions.getAllClientRequest())\r\n    }\r\n    /* Get All Client Data  */\r\n    useEffect(() => {\r\n        if (!getAllClientPending) {\r\n            if (getAllClientError) {\r\n                return;\r\n            }\r\n            if (getAllClientRes) {\r\n                if (getAllClientRes?.code == 200) {\r\n                    setAllClientData(getAllClientRes?.data)\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        getAllClientPending,\r\n        getAllClientRes,\r\n        getAllClientError\r\n    ]);\r\n    const handleAddUpdateCorrectionSetting = (payload) => {\r\n        if (selectedCorrectionSetting) {\r\n            dispatch(clientActions.updateClientRequest(payload))\r\n        } else {\r\n            dispatch(clientActions.addClientRequest(payload))\r\n        }\r\n    }\r\n\r\n    /*Add Update Client */\r\n    useEffect(() => {\r\n        if (!addClientPending) {\r\n            if (addClientError) {\r\n                dispatch(clientActions.handleClearClientStore(\"HANDLE_CLEAR_ADD_CLIENT_STORE\"))\r\n                return;\r\n            }\r\n            if (addClientRes) {\r\n                if (addClientRes?.code == 200) {\r\n                    dispatch(clientActions.handleClearClientStore(\"HANDLE_CLEAR_ADD_CLIENT_STORE\"))\r\n                    dispatch(clientActions.handleClearClientStore(\"HANDLE_CLEAR_GET_ALL_CLIENT_STORE\"))\r\n                    toggleCorrectionSetting()\r\n                    getAllClientData()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        addClientPending,\r\n        addClientRes,\r\n        addClientError\r\n    ]);\r\n    useEffect(() => {\r\n        if (!updateClientPending) {\r\n            if (updateClientError) {\r\n                dispatch(clientActions.handleClearClientStore(\"HANDLE_CLEAR_UPDATE_CLIENT_STORE\"))\r\n                return;\r\n            }\r\n            if (updateClientRes) {\r\n                if (updateClientRes?.code == 200) {\r\n                    dispatch(clientActions.handleClearClientStore(\"HANDLE_CLEAR_GET_ALL_CLIENT_STORE\"))\r\n                    dispatch(clientActions.handleClearClientStore(\"HANDLE_CLEAR_UPDATE_CLIENT_STORE\"))\r\n                    toggleCorrectionSetting()\r\n                    getAllClientData()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        updateClientPending,\r\n        updateClientRes,\r\n        updateClientError\r\n    ]);\r\n\r\n    const handleCorrectionSettingDeleteModal = (id) => {\r\n        if (id) {\r\n            setDeleteCorrectionSettingId(id)\r\n        }\r\n        setIsShowDeleteCorrectionSettingModal(!isShowDeleteCorrectionSettingModal)\r\n    }\r\n\r\n    const handleDeleteCorrectionSetting = (type) => {\r\n        if (type) {\r\n            const params = {\r\n                _id: deleteCorrectionSettingId\r\n            }\r\n\r\n            dispatch(clientActions?.deleteClientRequest(params))\r\n\r\n        } else {\r\n            handleCorrectionSettingDeleteModal()\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!deleteClientPending) {\r\n            if (deleteClientError) {\r\n                dispatch(clientActions.handleClearClientStore(\"HANDLE_CLEAR_DELETE_CLIENT_STORE\"))\r\n                return;\r\n            }\r\n            if (deleteClientRes) {\r\n                if (deleteClientRes?.code == 200) {\r\n                    dispatch(clientActions.handleClearClientStore(\"HANDLE_CLEAR_DELETE_CLIENT_STORE\"))\r\n                    handleCorrectionSettingDeleteModal()\r\n                    getAllClientData()\r\n                }\r\n            }\r\n        }\r\n    }, [\r\n        deleteClientPending,\r\n        deleteClientRes,\r\n        deleteClientError\r\n    ]);\r\n\r\n    return (\r\n\r\n        <div className=\"cardBox myRequest mb-3\">\r\n            <div className=\"cardHead d-flex align-items-center\">\r\n                <img\r\n                    src=\"images/kpi-guidline.svg\"\r\n                    alt=\"\"\r\n                    width={40}\r\n                    className=\"me-2 fw-bold\"\r\n                />\r\n                <h3> Setting</h3>\r\n            </div>\r\n            <CustomTabs tabs={settingTabs} type={\"settingTabs\"} />\r\n            <div className=\"tab-content mykpiMain\">\r\n                <div className=\"tab-pane fade \" id=\"setting\">\r\n\r\n                </div>\r\n                <div className=\"tab-pane fade active show\" id=\"correctionSetting\">\r\n                    <CorrectionSetting\r\n                        toggleAddUpdateModal={toggleCorrectionSetting}\r\n                        correctionSettingData={allClientData}\r\n                        isLoading={getAllClientPending}\r\n                        handleCorrectionSettingDeleteModal={handleCorrectionSettingDeleteModal}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {isOpenCorrectionSetting && <AddUpdateCorrectionSetting\r\n                openModel={isOpenCorrectionSetting}\r\n                handleOpenClose={toggleCorrectionSetting}\r\n                handleAddUpdateCorrectionSetting={handleAddUpdateCorrectionSetting}\r\n                selectedCorrectionSetting={selectedCorrectionSetting}\r\n              \r\n\r\n            />}\r\n            {isShowDeleteCorrectionSettingModal && (\r\n                <ApproveRejectModal\r\n                    onApproveReject={handleDeleteCorrectionSetting}\r\n                    isShow={isShowDeleteCorrectionSettingModal}\r\n                    desc={t(\"alerts.deletePopup.desc\").replace('$1', \"Correction Setting\")}\r\n                    btnRightLoading={deleteClientPending}\r\n                    btnTextRight={t(\"btns.delete\")}\r\n                    btnTextLeft={t(\"btns.cancel\")}\r\n\r\n                />)\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Setting\r\n"],"names":["props","t","useCustomTranslation","currentPage","setCurrentPage","correctionSettingData","toggleAddUpdateModal","isLoading","handleCorrectionSettingDeleteModal","scopedSlots","useMemo","sn","_","index","_jsx","children","is_active","item","className","getBadgeColor","action","_jsxs","type","onClick","Icon","id","style","fontSize","CustomButton","text","classNames","handleClick","CustomTable","data","fields","key","label","pagination","totalPages","isHeader","tableStyle","padding","boxShadow","updateClientPending","addClientPending","useSelector","state","client","createPermissionPending","permission","openModel","handleOpenClose","handleAddUpdateCorrectionSetting","selectedCorrectionSetting","errors","setErrors","useState","correctionSettingFormData","setCorrectionSettingFormData","clientCode","port","attendanceCorrectionDays","clientName","autoLogoutDays","attendanceImageLogsDays","attendanceLogsDays","baseUrl","isActive","isAttendanceCorrectionNotification","notificationText","editorData","setEditorData","bodyData","setBodyData","handleFromChange","e","fieldName","_e$target","name","target","value","checked","prevState","prevErrors","undefined","useEffect","resetForm","code","attendance_correction_days","client_name","auto_logout_days","attendance_image_logs_days","attendance_logs_days","base_url","is_attendance_correction_notification","attendance_correction_notification","_Fragment","tabIndex","visibility","width","Label","required","Input","placeholder","onChange","CustomError","CustCheckbox","handleChange","CommonCKEditor","editorSize","async","validationResponse","validateSchema","correctionSettingSchema","isValid","params","submitAddUpdateCorrectionSetting","Setting","dispatch","useDispatch","addClientRes","addClientError","getAllClientPending","getAllClientRes","getAllClientError","updateClientRes","updateClientError","deleteClientPending","deleteClientRes","deleteClientError","isOpenCorrectionSetting","setIsOpenCorrectionSetting","setSelectCorrectionSetting","deleteCorrectionSettingId","setDeleteCorrectionSettingId","isShowDeleteCorrectionSettingModal","setIsShowDeleteCorrectionSettingModal","settingTabs","onClickFun","getSetting","allClientData","setAllClientData","toggleCorrectionSetting","getAllClientData","clientActions","getAllClientRequest","handleClearClientStore","src","alt","CustomTabs","tabs","CorrectionSetting","AddUpdateCorrectionSetting","payload","updateClientRequest","addClientRequest","ApproveRejectModal","onApproveReject","_id","deleteClientRequest","isShow","desc","replace","btnRightLoading","btnTextRight","btnTextLeft"],"sourceRoot":""}